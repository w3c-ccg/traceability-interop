{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "49742bd7-7a88-4625-a605-083f6d6ddf8e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b9fd85e3-4052-48a4-bdb8-e920052ae4f5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06e3e71a-a1d9-4fc7-9bfa-48bcd5eeea47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "92d0b81b-14cf-466f-9ab9-cdb4a44ccab0"
                }
              }
            ]
          },
          {
            "id": "925ef0dd-3f96-4565-872e-6c0e6094fbf7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4976d6d1-da3d-4e5c-b9db-ef0af3283ef1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5b95237-bcb2-4169-af40-f4a83e9ca383"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9660b8e4-01e2-4127-b6d3-84673d925d03",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a446d809-6a6c-45fb-a570-60e998a3fda2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c311a717-4877-4e10-91c6-0c89087d4a47",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e6aebb9-346c-4cfe-9259-c053c74a40f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e6bf6ff-f93a-4e17-9f7d-5ca33ad40c09"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "accae7fc-f457-4074-acc2-7cd84de734c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f12f7d2-5148-4f5f-9624-2ea17c124459"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5b06196-f3e5-4ec3-8397-7265255ff2ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7707add-409c-475e-922a-01f207f9aed9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2af21530-7452-4041-a25b-b77d84d4f669",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2afd823f-edb7-48c6-a7b2-790ed7250f6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3276367f-fe35-4253-999a-833e4a885556",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "200667b5-fd87-4ddd-94eb-345bcb85d55f"
            }
          }
        ]
      },
      {
        "id": "fd6780b1-99df-4baf-b3a7-a9d583f8a76b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "391b0618-cb2e-4e17-96f4-6eb78c9cecab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "810bbe52-abb8-4e4b-a40a-ddadbf589e7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbf86bde-747d-49e7-81c5-d67b80440566",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96604092-232c-461b-87da-75f41b3fa5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f6196ca-69e0-453f-8a1b-d1b9292ee816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9f0ba-2859-4a96-89c0-f05a2f88a841",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e29dd4-715f-43da-b46d-dac17380293b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5cdab59-f854-4223-a3b6-e7abede3de64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1967a673-286e-4bec-a79a-f02f7b447d2d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d6297-91b4-4459-930f-788c8e9bd4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a26c54e-348f-4462-9852-bbe4dc23f1e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "541fc75c-8020-4536-b000-04f5f5190c90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ebbba4f-4cd4-44f0-ba78-a7682927dea2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05b7aba-5bdb-4413-a772-a1c7caacd8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b73cea49-0c3e-4bd5-a61b-e5e0f1ebc090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e29ce8-508b-404c-a12d-1969a5b8787d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93092514-bfd4-4054-a22c-8c449eede48f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "703e9382-3995-4c31-95f5-7dbfbfd7af72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dcafa1e5-205a-4d46-8c9d-7ae4e84485a3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6112d94-627c-456c-8cc5-981065e8b504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d085855a-f6b8-4f21-aac3-63c495f83781"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72e241ac-02b2-4185-9243-6c21541deca4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ff186516-dd8a-43c1-a64f-344082ce5e8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "510f3745-5064-477c-b2c1-81076962b865",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95585290-4c18-4b32-9591-cb7b7f8545df"
            }
          }
        ]
      },
      {
        "id": "17575bee-91d6-467a-835f-0337b5607759",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "26437a27-a0dd-49da-8ec4-43f689a22bc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d706729-99ec-4e3d-8ed6-0d7954106b17",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d37c3227-99ea-4014-9f87-0c52fd4d6f42",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d8d5d8-64f8-4393-b87a-0658eb8a24dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f079514-8c95-44ab-92d5-d6528c87966f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17da3083-dc41-4ee2-bfff-4673671a26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726ab3e3-2c35-4b39-89f0-727eaffd341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf70d6b5-4ae7-4f22-8d54-59cc2ac9bc45",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4a8da1-78d6-478c-a3bd-8d93033167e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d445f937-083c-4c43-9ec8-2b7bcf7892cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412665c6-a17a-4cd4-887e-4e093466da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb913370-94ff-4edd-8379-8f3f74cde199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bdb4ca-a606-46c8-8a69-65ea30c300d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ddc5a7-6fca-401d-9517-9deca28f18e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182f0ab1-967e-4360-8f1e-865220d7f2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e22765a-c4d1-4ba5-831b-04ee96b21ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a25e7754-0e72-433f-9b0d-08c818b9d318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debf5847-036d-4e3b-9d99-37fc252fe1ce",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348bfef9-79c3-4538-9d08-bb4418e6be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cd690f-d0db-46d3-b08b-41dc926bc3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3902dcf-1456-48e3-9ca8-c4c8f1bedc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adfa163f-64de-4403-a323-7d7d957d5283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecc3c7b-2c01-4989-aeed-40937628bb5e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d20fb5c-2b3e-46ba-9abc-70b9ac2d0096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0e2308-dd78-451f-974d-83f309e84138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25542f0-824c-41e7-bf90-212e2d185bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3acc61cb-0f57-4bb6-8e48-114fb29ef5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cc56c4-723b-49a7-b946-f8a681bbd07c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df068cf0-ed8f-44cc-9376-939190b584e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf3b6cf-aebd-4816-ae18-558f371275b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e5f41b-7105-41c3-a948-4e38ca1ae157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2db01b32-b0c0-4041-a47a-200c6f446ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c703587-bca4-4df3-a01d-ca40b443a507",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d347eb48-e9c1-4386-9177-0df4ba532531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77716fbf-b674-44d5-8a5e-887563975ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271e4ea9-d352-49a8-943e-649e2b758cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2964e7-e58b-4beb-b227-0c97b4bad47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edcfc32-5fcc-4a08-a92b-dd91e7dd73fa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdf380e-91d6-4f15-bdd8-ade3249d5936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f705e2a7-74a0-4367-9eff-52bc9ae2c159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1eb504-11d5-4d28-8594-b737a9c12b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a06cc3c3-1a2c-426d-a221-6ac40da046a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3899704d-dd85-49bd-bce3-6964b6885ed5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4916d89-4173-4e2a-bd81-aa0e9c8bf6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea0d72a-04ea-40d7-9f0a-310e5501ac3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be75ef7-2c44-44ee-a391-cddc1c40b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "596adb06-e7d8-4f01-a905-d385b3fdfeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aa2943-cc8e-4b90-8c19-f27ec3b13851",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404ff10e-4f2e-4f8c-bd50-5c78e0abec6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02ee8a5-6deb-4276-8cca-52eaf2b574d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267aab0c-2c7f-47af-8001-23f0f4ec10e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877e40a1-cc15-4b16-9978-6c72d0cba8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca4b2ab-0a62-4b92-bdea-6a792840c641",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d3db90-6031-4004-a8f2-3a24679b9c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a519603-fe1e-4642-abdc-21d1fa0abc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf88419-01a8-4df0-9e87-d8df66735c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bef82bb2-07d7-419f-95a0-b9246e874c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0252385c-7ddc-4722-9451-9c22e0bf6bd6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6184471-aa6b-4d12-98a0-a04094e3eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f98474a-7164-46f9-b29d-9f1dd9bc7c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2751ea6a-0c03-4b10-9853-0c667b2c8d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7949f29-50e6-43d5-be19-8e234ace4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87010b87-df45-412b-a40f-3179e21678a8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac48e460-e85c-4e4b-93c2-3447347a4f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bed707-5cad-4fd7-ac43-c79f549a6409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfc6295-b6a3-4946-aa96-c43f7341874c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccb96a72-d12a-4322-9b3c-f734c971a089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36516cb1-b938-4346-b4f8-ecbbf78be816",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3d7ff9-b158-440a-b1dc-5564e07e5183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0087e9e5-70a3-46c8-b824-80c50960ab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00791fa5-566e-404c-8e35-791998bce722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40255e61-e1fe-4b2b-a257-7cebdcda4249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06251411-1a41-4d7b-a4cb-5dedc57c261e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7791aa-27b1-4a11-b9c6-34725df13f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7003ef-9782-4ce5-b406-3d92231c87d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a092c6-42a7-4f91-84e0-a8410c3f21a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab384e3-f468-47ee-90fd-fa1277de0571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340890a7-9575-4151-99ac-ff65189a8d0b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f7fc74-e309-4bed-89ec-4c17f6951a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ac4c7c-9111-4601-9cf7-8ccb7c646b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9bc06b-29b8-4e9a-a504-bbd6c2e57a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f171da0b-f4dd-4efe-90c2-c9d15aee9d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931fae69-2e9a-41d1-899a-39c03828ce76",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e72511-e551-45d2-8b69-b3f5563f18da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2dfac4-8c3b-4731-a47d-4222c8a1ee69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fbc464-22fc-4b4e-9c83-08412dfb3de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e01a4104-5307-4102-bbff-26c38598e2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a8f9b7-41a5-4f0a-bf75-adbaf984a8c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8465c288-42c9-4b50-ae69-394a8196d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f49556-3d25-4a80-a1fc-cc6f65603541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60486fc4-b670-48bf-a40b-8ad1f5d2c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "332e8e81-48e8-43fc-ac4d-2c171dd96fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eae48f-51c0-4aae-8436-dc3859369381",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538369ae-2c57-4957-93b9-772973e111cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4674b44e-ffea-4a04-9057-46e94285d6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f05001-14ff-48ef-8425-e69910f41625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eafe028-77c3-4057-83ba-152337845322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3bdda9-013d-4f45-927e-3aa1db6e894d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22a9e80-01a6-4e7d-a6f4-73f328ef1c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c387ef3-85f2-4d19-971b-3016a1221948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab411961-d1aa-4d87-b959-0c134a2ce149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d997e4a1-6820-4afe-86cd-b6f310c10b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01abd5bc-6e26-47cc-b9e6-54bf98f78881",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93059134-6027-400c-848a-86080edaa6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec14a0af-a751-495a-b2f9-f3335c131ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f068c945-8687-4507-9678-215e16cbdbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbf8057-42f2-464f-92ce-948a237dc252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afcba1e-c853-43c8-b1b9-3d4cdfceb1f7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecec3e86-ec36-42e9-8608-cbeb48fdf446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96eb432-7cfb-401d-af93-b7ad17f349e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b935ada-e906-44a0-ac4c-62f7214700aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55716624-7344-4bc2-91d6-a3eb9351b110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed2e4af-5770-499b-8945-604a9c45eac2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc392021-4ca4-485b-b3ea-f3241c980381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dae9cdf-a9ef-471b-9b1f-92a86c41eff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b318a99-f256-4a57-a46e-675d71db17d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5f3061-66e4-48e9-a79d-6c159651c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4860773-dc10-474a-88ae-3f7980f732c7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6627b2-fa1d-420c-b0bd-38cf0eff725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bf347c-2184-4a3a-919e-4d3d8bf67da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4a2e21-e99f-450c-b0fc-7395c800a49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a64aa25-2fbe-4dfb-b100-d768035b5279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec1131b-a947-4946-8355-dc660fc280ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d2e918-56c7-4708-aee3-a38546fea735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331ac169-2211-4e8a-8681-6260d2736ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95513b48-e523-4fc6-af07-4546f3191154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd472a2-dbb9-4329-b787-4dbb4828d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020b3c9f-1c1e-4b4d-af8a-2ab2f67d373b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4b5866-8f48-43dd-824e-94dce44e07c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b469d11-46ae-48c6-9618-84eb8c03e8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9227928a-fa72-43c9-a1b5-646906edd7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5b6f48-c3ac-4d42-91b3-c12d0d223be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258397ea-a6b6-47da-81f4-b153c7e40171",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4981692e-0502-4e53-850d-9af7802fba22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4809529-43ff-4d42-a1d8-3ec42c13a318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2905f28-bdaf-4665-aa47-59cf0062bb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e9b46e-0840-4c8b-924c-78a02d022a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40085279-b8ef-49b0-b35e-155d18ec331d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af2dec0-824c-4eab-b04d-6818ac402b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5138ec52-dec6-43d9-8a92-b04d6713305f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b38b79a-0254-49a7-ab97-c8130d195b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82bf91f-3b59-4aab-ad98-172f7a1841ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea5087b-5f94-43dc-b470-51ce253aa955",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c965354-18fd-448f-b570-dde99cb6eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1549976-dd61-4c1d-a453-5a3ec9fd7b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b036a7-0b3f-4706-8349-82611948dd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4274a511-b7f4-4b59-b6c0-aef3c1991e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da5855c-a620-431a-b5b5-ab304af9e558",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ec7a17-109d-4825-bbfc-e310d20276ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cefbed-6d5c-49fc-b2ba-09d6a77e8814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695506fc-884f-4aae-a191-286268f2efe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab953a36-6886-4ca6-95c1-053ca696d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8ac7a7-f211-404e-a11c-05f5d36a745a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44480be4-333f-4743-b895-8375912df1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da74abf7-fcef-4ec3-97ec-0c7b69ee271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76270309-0170-4f99-b6eb-3028dbe7995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d474665-be49-4267-b757-91a1f2acd982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474004b5-6f0f-4f42-8a89-0d6683c411d3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c622f9-89a5-469e-bffb-8f9f475b62fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b06dba-27b5-4c23-b70f-4dbbdec42e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6350d216-db23-470b-9bb1-653e911f6654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a715abdd-171b-4fb6-b8bd-28ed1959a5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4b1672-035b-460a-b981-931d0ccb22d1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a90a13-bcf5-48ce-99be-012eef3d4106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cb99ba-cd69-4b86-8dd8-9c36a344fb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c98507-01dc-4eba-85e1-de904b35b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f2cfff-1514-429c-a561-12ac2a5bda3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a5db63-aff2-4590-a1af-1cfc8c11fcfd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7607dd-654d-4201-b8ea-4e568950fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9828c1e9-a7a3-48b0-a543-dc5cdfba0192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d4ddae-a735-483a-a971-84e82cd78cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e50952-1b83-47f6-8570-276bfe7652a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb45eda-caf6-4666-ab57-6be8c26b1b96",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cc24b5-024a-499a-b5bb-9964b664e0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4ca84-cbe4-4e93-af44-d9452ca36350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aafb5a-d8ff-47af-b64e-8ad740b22efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cc143308-01dc-4d06-b8be-93156eb52114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464fae43-b556-45c5-b6b2-59b49644852a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c6948-37aa-4925-9714-498160da07d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcc31263-12e7-494f-94ce-fca159501d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e4f60b-b09e-4d10-a66c-fe25ec2c4d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "734a023d-7ccc-4c32-9d15-68a4c9ca8231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22672c24-8e85-43a5-834e-834aa76ef502",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa765b9-c3e4-4dd7-bb82-ab812cfd4e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411e7063-5795-4436-a64e-b7ab881c7c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416c107c-a203-4f73-8fd6-9c6e737b7765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5175bb1a-0675-4d34-84d8-f96506636000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832fd20d-8c66-4bf0-8e58-90953c90fd70",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4725cb-cc10-4942-a857-bb9584e1883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc896df-ce7a-4c5f-a535-44f17fd752f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353ae594-38cd-47de-a0ea-54172a9f5e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c6c777-945a-48c8-b703-c2ed025121c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a430b522-a53b-4af8-9048-71f4827f8d4c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d621ce8-ca97-40ba-ae73-b894a36d2175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167c4aa1-1e9d-4673-8e3b-ed9c4417c6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a82853b-346a-4474-84d9-fda78f515817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba21318-a759-446e-8880-0eca116b1c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0996b75-380d-4d4f-bce9-513f8f76b0f0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050da26d-f015-4570-a4e8-1365490e93eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aed49d-7d1d-432b-b838-9001581116cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be1f50b-210b-4b50-9276-1107f15aebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e944df83-7596-4fb9-b432-9dab01516169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a8a06e-c951-41a4-b74a-8fc53b41aa1f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eecd5a-f90d-47d2-8870-488f1476f389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1371127a-8d6a-4c63-9962-0f7924cc77d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451c6b63-d155-41a8-a0f0-bf9d200c9a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "295929c0-303a-4b9b-a3d3-e953624aef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113e7456-5810-482f-a304-1a8a6d0a4415",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae35fff6-a564-427d-9026-3f11988cc22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fbf427-7425-45b3-a8f0-d36a89f2da05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d49b95-6374-46f5-8fe6-1c03dfa9a074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4daafb-c2f0-4ad4-a757-96e1cdb18633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e727c64c-fb25-45ee-9b69-611221860271",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f85bd5f-2114-4764-8d8e-9cd99a3641be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ad8713-3531-4696-9dd7-934636bcbb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87154af-aa14-4a5c-94ff-b59a7e188440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "428c7661-28fd-4f8a-810e-fb36e7d69a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be48c07c-fcaf-480b-9ca2-e2bf72ec2c88",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdad243-955d-4e8c-83dd-7879a034b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b212608-0296-4567-a915-84d611226cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296693dc-8f8c-4162-adf2-a74b87da57cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "49f21cbe-fc11-430a-a7b5-41d8296faeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e865eb94-8bf1-4d35-9b00-d2c470b76229",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d3d638-91ad-463a-b07a-ee999282e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1008ebb8-7ba6-43a0-aabd-24fa889ef3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e82d34-213c-46bf-96d3-eaad39ab6ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "207fc360-5050-4edc-a937-5c07b0325f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4e3c7a-9f03-48ee-9352-532b2dc49e57",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7814a648-79b0-4e67-96fe-f8a0bc3f636e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544b4c4d-1416-4800-949d-e5742cb1bbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8863e182-1cab-46ac-9a0e-1b75d185b65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac1660e-9e7e-4690-a8c5-3ff279937682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d08954a-5fd8-47ea-8456-0ff5e4305c52",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f74c9e7-b9be-4ff8-9cfb-408c1fee5d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b39821-4d59-4b33-9900-481b114ad1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf97272-3193-48e6-abde-1e3491d5aede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8890ff61-b450-443b-8e7e-8364696c94f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f73764-f8e2-4bd5-bad4-c8388bf8e788",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbddbf8-de44-4420-9ab7-764d183ef2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5916401e-c5c7-40cc-850f-4949246fd1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d7878-2c25-4672-b9c9-46376b37cac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "478d6dc2-6eab-4c62-bfb3-ee4b141a3c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9df51ee-e30a-4ee7-853b-48ef9fd78f1e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61068ae9-a549-467b-ae3b-fc8c2cd0aba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080e1a97-7ba9-4919-99c0-26f52d17528a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6a4771-36f2-467b-9b3e-ad94fd7fa668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a86672b2-0760-49d0-9adb-0b849307f45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03f75b4-daf2-4304-b4b6-4230ea1ad13e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b5ed73-1263-414a-8633-e377acf00342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c492dee-971f-49cb-be70-dd0a165ae50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645741c0-98fc-4a6b-87e3-92fb71a19a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "526bb0b7-5805-4d0c-8f79-47cde36abef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ca167b-ea86-4bbe-91d6-73284bbd025c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68c8822-434a-4da4-a0d6-2cdf49a1e6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6597f24e-e731-447b-a991-3efc43f69235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95acad51-e9a7-4907-85b8-606a81a94d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "18574e48-6488-4677-b4a8-ec79fad36a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc29248-ff97-4f2a-85b6-df639c5a5422",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759687e6-224d-4be9-8de3-3cd042ec63ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc65683-e27c-4334-9fbb-f5edfd275d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a42511c-2d15-4f7e-b372-84bd7e7279fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f885d8d-e0d8-4e93-91ee-0f3d96f7e92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0683bd0-60b1-4396-8ca9-55a3b11b3614",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a18d4d-23ff-4dd0-9c9a-31fd1b36bd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284d9e7a-5147-40c9-a0e6-b348ecc36fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8319414-0a8d-41b6-ab2a-b199a38644ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e77f18-09cb-4db3-828f-bfeac3bf79c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e536da-2062-43bd-9bdc-f39fe414ea6f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10f5275-3236-416c-89d5-2c686e647719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc88ce5-2c91-4dd8-8159-33704618d60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb593cc-0636-4a94-b88f-74a92d8ff762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d8ca9e-7fea-469d-b5a3-2f4c61bc1e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d376051c-4e89-4a0d-b416-81fb4e3937c1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db0a9d8-be2b-46ce-8252-5be1531759f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7ac2bd-3997-4574-96f8-981ccbb2ad10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c5e7b5-2791-4bc4-8d85-4b1ffc086bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e93754b-1341-4689-b316-bb973b253e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025622d7-9794-4e94-9f45-c229c1ba2abb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed0139c-76de-404d-b762-34a088699ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fe95b9-1271-46d3-a8fe-8885b753f2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b81ce3-01eb-4f4b-858e-f6f17dfe397c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "917dff10-33d8-40c2-88e9-8ca92fc4b3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad52297-ba01-48da-8034-51ac7f8aa195",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4281c05-90cf-42e6-a201-90debf521ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4a60de-f92b-443a-b683-2c608ac08cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f176b62-e506-453e-bde8-efdc88063fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64038e36-2d44-48f0-93a1-8d2a00f484cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ec53a7-5db8-4896-9b31-96f3c23d0d61",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd504ce-bddd-43ed-851a-4c7455ec2311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09fee0e-6f5e-4d13-bfea-40692e6a6921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf9125-1b43-47ce-812e-5a9cc53e0a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0179de-ea69-49b3-bc71-d690e5e4dfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5796de23-9ff4-4e99-be60-106711b6b636",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690c4c46-10a4-4df4-9106-930faf57dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d60b71-5bad-4283-9ea4-f1348711b56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8352fead-5dca-4d43-a3a8-04f1709ccd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9304767-e8ea-4662-bf5c-033c7ab21e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5a092c-a6f5-474f-a961-9ccccae0e1de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efef632b-e7bc-49d1-9a0d-99e1df103d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be2816b-b9f7-4090-a96e-0fd446cf3a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419a72e6-451f-4940-a4e2-f4d20b0c99c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e017684-b323-4387-b748-eb13768710bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c62641-c98b-49bd-a638-5c0276815a93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab8002f-e4b2-44cc-bd20-1a5357296421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c161e2aa-d1a7-40fc-abb4-8d3d4dba8ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f734dbd-0d75-41c8-9540-cf82f28348e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f63357-a24f-4d35-b4d1-718f0d6eeda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be886553-1212-40d8-b084-51d374193158",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0d0eb3-3a03-448f-92c5-e27b2ce07b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d79d77-683e-4fa8-954a-acad65b55c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b6dd37-47d0-4435-93ae-9e34e082603c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "81735e78-89be-46d1-bc62-520c7a298a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b408edb9-c07d-4703-b0f1-a8320013372c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b31201-0d6b-444d-8282-c6b9cecc94a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1871ef37-e8b5-474c-8c44-8416ec848c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abc1b10-7ff9-4d5a-b258-56f4bc3c8765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8872bb67-36fa-4bb5-8b9e-88799d84e17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cc4fb8-236a-46f3-85b7-7cc25e135927",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09004a8e-2b83-46eb-8a47-95b66caad234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d54927-a3f1-47bf-bccc-262fa7abcc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2c40e3-f5cd-4ef7-8c8d-99283bab94af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb41031a-5783-45fb-9ebc-be8ebeafb692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faed25dd-b681-4248-bd70-4f17f475d5b1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8fc0c-dc18-44d2-8610-b998a58f52b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cb49ba-45fb-468a-8e15-e1ee09509dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12a7102-b119-4c40-bbc2-ed7a9383e084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79716cf-c1ce-434d-9ff1-d688014c2ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb3832f-d779-41c4-9d74-23fd9fdb4dae",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bdc76f-24e8-4b6d-9909-6a1ea1ada29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11530bbf-ad60-4510-8a5b-54c50caab95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd8b5cb-33db-4128-bb5b-27fe58ebff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf2464e-ad6f-405d-8d64-cd8693afc03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63acadb-6f8f-4de5-a450-7a3ea56099b2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8539e0-343a-4fd6-b785-ae33b42dbdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fafc611-5f9d-4e96-86c2-8fec7638e02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461b5dd9-0ffa-4dbb-a7e1-4b73f593a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0516dd-bc12-470a-b1eb-132c9a7da2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1b24d9-9ecf-4213-be59-51a4fc984f30",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079e86ff-3fae-455e-83a6-c373118b0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7673a87-59f9-4bd8-b928-7c9fb7e8ec48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717452c1-a41a-47d8-9e88-0181daa94c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "163a1171-63ff-480d-b43e-dfdb7d9ddc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7f5e4c-9653-452c-ac41-4c338e5ed593",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fc409d-33cf-4e9c-80e3-b53d2d193973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e61dfd2-7ffa-48af-8e53-5e0ce37a0086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b6c245-df88-43f1-9a31-b8deb97ec86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f42b2c2-8ade-48c9-9088-42daa5d1050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35662ada-8a8a-41ba-97e4-4ae7cdb318db",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07069d04-7194-4a08-b1cc-68bdd0f24123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304beced-429d-48d6-94ff-197bdbd53df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6648b9b6-e7df-441a-bedb-1d0fdb28284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be58cbeb-313d-4dc5-ba53-1a6daad51f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2b29ec-835c-409d-ae65-5764d7f3308e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caa3b6e-6d64-4a74-8585-11ec0fe03b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15927a0-b8cb-4915-b139-51d5f35e01dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f1577c-5514-47b3-87f0-53790bd16e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ac8b15-76c9-49c5-9f50-7dd93ff55884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be1b2cf-9923-4c4f-82a4-d7559c3b3a51",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e125ef-14cd-4758-ae5a-8613fc74197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7bd9ba-0f22-40d2-8309-9f9c20bb408d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e57491-4ee0-4273-82e5-60447a799cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a766e67f-45e3-4c31-9910-4c828cc2710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2271b8-61be-48cc-8baf-be923b8ddd4f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3888a044-a2e6-4094-8c50-a6d5165787e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbab9c0-ab83-475b-a81d-ea8e13fbb435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922c257e-e240-4273-83ff-c81a36665e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e156fe-0c10-4c85-bc17-bab4b4ffc526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40f3ef7-9abe-4332-87fb-7fc87b24f519",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5deb127-b064-4314-82e4-78dbff50e297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b3a8f2-c359-49c7-b42e-0e9b911dedf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae880b4-74fe-426b-b40a-181f46d3ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6667d5-f80b-4189-9c8f-bf361eef5554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ff3004-7fdc-45a2-aa54-8ec494411d95",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfbc42f-30f9-4b66-8ce3-1ea6c7128c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e1f57e-e7ea-4bb4-a4b3-f302c4d132a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9de1ac-8463-47a9-bd86-e3c761660add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd649bf3-cc31-4201-9298-c7594e7ea0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2238e75c-cda8-4642-afd5-8568d58c9ad5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75b2ef1-6048-4cf4-bf9b-cea5bc649a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdba67c-dde4-405f-80db-dae96551cbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c8eb0b-9c47-408e-ab55-d7556f82c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5440e76d-6dcb-4f34-923c-e24d712e7998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad41bfb-bd47-44ee-a2f4-f1958570cadf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e05cc40-1d8c-4488-a06d-91477e1f45e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba39044-f4c3-4ec9-9226-b7880a44ff5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8da1e4-b61c-4ab1-b2df-72f55686445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547b44c4-b9da-4a02-9f75-46fdab7791a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919bf5a6-e186-493b-add5-34577d399415",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5fa843-c2ac-4eef-9da9-e84f42fe6f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9292070-ab48-4d82-882c-5b33753cad70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e513294-48a8-4620-9547-c22a2b07deba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb984ed1-fb35-409f-b68b-473da2e92a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761e6677-7892-4548-92ef-bb9fb808b7e3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4410aa87-cf36-4fee-b91c-d08b8385d9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c189520-b7e6-4f76-b3d7-1d6657be2eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcd0197-b481-4f24-b218-2dbbe0c9733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcb602f-75fa-42ba-9c1c-b2e7f300bc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92eecea-744c-460b-b401-34b7d22e666c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b2909e-6075-4d8a-b86d-6335b3c095c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1b98b1-4e82-4eb0-9613-47ef6834581e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab53936-5931-4739-aa6e-966cb154c287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5d802e-1597-4289-95e6-34d28994df8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f8f55f-c9ee-46b4-b52f-27f1f2fb080f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334f68ff-1b21-4694-801e-794133689001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750861b4-bdae-42a2-b1a6-5f6e8b0e9e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b25269b-5ace-475e-b167-27ba7c422df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd18d5fd-d83d-4b63-a14d-31948d524609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b85e020-2465-4794-9f00-0f2174e72cc8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ab266c-6df8-41ac-bb94-1ffece642c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bf2b00-d910-4032-a388-58250425ae8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601ca4a8-b837-43e7-a969-88c4be5d1839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4b90c5-776b-45b0-9646-5d93f1465d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7230644e-c464-41d8-a66c-eaade3dc739c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a759eab-73e2-458f-8626-f5b0e29340d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411c21f6-c4e7-4716-a28d-cb7bb24a6bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f1d527-0a7f-432c-8643-4cee24b79e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e28d4ae-cc23-4a1d-afad-977582cd6c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2e2a63-940b-4c8d-aee3-09ae3c2e6022",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb60d05-2368-46fa-be30-1304289d873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dcd4d0-b01e-4430-88b3-f84697290fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea11c44f-da7b-4e9d-89dc-4ad32cf688c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4683c1-80cf-464b-bf45-46fc2e0a93d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a458ae95-3e95-40ca-8430-662ad47151be",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93212d55-e1a0-493d-86a1-8234c5292e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0884e164-67ca-42b3-a8fa-8705aa698b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96412784-16c6-436b-84f6-7d6cb3c6493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd22c90-d432-4464-9638-b618aad4006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604971df-b74e-449a-9c91-00026b55e7da",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb7f85f-d3ec-4361-a394-cb86508c89ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2e6793-2596-49c2-ac83-acdf496a8198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bc835b-8cb5-4eda-aa37-25f8844024a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "504c1ec6-9dbd-4daf-a2b1-33a116cdf1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33454bfa-94d5-4972-9f42-15fa7f740679",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf28aaf-8060-4b79-b7d5-0c84d6416a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e36c836-2bf7-48f2-ae9c-bdf5333ba9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de58ec6-65d7-4420-b944-8159ba800239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0101230-38b6-4d0a-b030-f9d5fe004ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b799aa-b6f6-4887-98cd-3a92f733b272",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6276b81-1e2a-4e89-953f-80b34616b86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea59bd2-c6bf-44f1-bb2f-e7f0599ba6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48f98f1-9614-4191-a6fc-dcdaacb060a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "baf47ae4-f4a8-4ac4-a904-502886659e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb8fcac-7d27-475f-8476-519a77b1a056",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8040027b-62de-4d7b-88a6-3ca35d963492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62af421-596f-42aa-9934-594ddf5d7ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc70448-8938-4739-b890-955b65c4a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a756136-ca45-42d2-bd3a-4a1771e2be7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4de6066-cd00-4542-a5bd-d2f2d4bf55c5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6ee24f-2639-46b8-b85c-84918b811c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80488b7f-ecc6-41c4-9c3d-8569bb2df090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24894586-533f-46a1-b716-a223f6255b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "919f2160-787c-42a7-aba3-0f008e314db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b942d9-3692-426f-82e7-27e1330558a1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857b215d-cc46-421c-885f-6aa38aa4ec65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfeda32-df08-4c6e-a4c3-68d3d9321920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38450c8a-5e7d-455a-962f-0029dbc6ffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c0d9bb-c463-4214-b7ea-066256853d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3744971f-e203-4c73-87c8-dbd3c47da209",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a58053-65d4-470a-a875-7ecad2dc3680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "defaa19d-e841-41b2-a87e-3ab808a3b583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d889ea23-443b-4024-ba5e-07a7a02f3b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9044dfb1-c9a4-44ca-92a5-12f7fefabdac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fbc3b8d8-ac82-452d-9c2b-e00ea1729456",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8513e36-b78f-4836-a9b3-019fd342f586",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3073b02-b474-45ab-ac02-282c4747e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cec67c8-2d90-4c74-8e0a-278f811ccc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d52737-8d29-4a77-9a81-6df40aa61aca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9be49003-3858-42d6-a933-036542ff72cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3048285-3541-41a8-a705-29621f89e554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3738763c-4f89-4557-879a-14bdbba5d406"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "264a6071-c27a-4f28-97b9-00d4020f9197",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24cd17f4-7ef3-45eb-b3b1-798bc3f82f60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3a6e8cf-9cdf-4963-996b-40934b8f1a27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "583e75d4-4fd3-433d-96df-201c3ad6d3a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0bc4a59-64e6-4c0a-8244-4c183822dcc3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c282b46c-1859-4cbf-a49a-eb3d522861c3"
                }
              }
            ]
          },
          {
            "id": "30daf5dd-f72e-49e1-ad5b-bb9813d3a946",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2eee28ff-99e6-4def-afa4-6e71264e4318",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "904a319a-d56e-4abb-b863-a293f0ae09e7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5f3960-a9e7-4b5b-ad97-5c3b1a062ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "89041059-536c-4e42-aca2-0b51efb163f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5306025f-e5fa-4a51-b88c-64e9a9885870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28e5afb-007f-4b9c-8581-1fbb601a4003"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91e8b174-5e81-4410-8d88-8b73a75302d4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1622968-ed8b-4383-bb34-988f64a9c55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c664231-cbf4-4b3f-93f9-caf3a9aa07c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bfa7cf0-0831-49fb-b170-115a70fab8a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77f4482e-8428-4cc4-a9a3-effbc4129afb"
                    }
                  }
                ]
              },
              {
                "id": "d35c5950-4f6c-4920-8c51-89167f998ec3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a6c1986-1aa0-4ec6-a99b-26af46211e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4454f2df-d752-48b9-8748-0494a6e72f58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eee0a919-c0db-46ae-a31e-10d55738050d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c2e2a4b-9b51-4cb1-a1b3-a3cb9f1e1049"
                    }
                  }
                ]
              },
              {
                "id": "7f795466-50fa-48f5-b9df-d2ba19e6b3a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "474fa926-00be-4500-a613-8f5ffad99bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64bb3bf6-01aa-487b-899d-e25a5f86d8b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ce21d1-00ea-44e3-8671-ad6d0867cbcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14bd1030-26ca-4ecd-9b90-2e0c01c28f8a"
                    }
                  }
                ]
              },
              {
                "id": "0fa6bf83-9694-498f-ad50-efeb5b1d936a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "497735f2-9323-46c3-8695-45ffee8a1d06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b54bd8b-f363-49aa-bfa6-f155362d09a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28943601-4668-43a2-b5a4-8ea74ee3eac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c3cd1aa1-fcd8-4841-b10d-8daf9fc6a65e"
                    }
                  }
                ]
              },
              {
                "id": "b7f6f6b1-e177-493d-a1ed-822f1dce703f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbd643d6-50ad-417f-9719-6cdfb3893a33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f9a0583-b4b0-4c5f-bf3d-a4189c07e1a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1df9db2d-a2c8-4d8b-ba87-7387614ad3eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5debf3f1-525c-42d7-8970-6b8b2e5b9b1c"
                    }
                  }
                ]
              },
              {
                "id": "eb94fae4-fea4-4fd1-96f5-634155f9bf8e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4270f954-222a-4786-9db1-82cf416c265c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "220fbe26-fe3b-4ea9-bce3-4c059bc0c081"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d92b1cfd-9f67-48a0-a85a-c28aa292bfaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4112e175-3a50-4b8b-a3d0-525a8efb369a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9514cb29-e693-4323-880f-c68474ebdddb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "101b3b6e-89cc-473d-950d-d0318f514781"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c1e8d6f-4a58-403e-91e7-b6c84b3ef5db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97f49157-eb1e-4a27-92d5-31bd9bde4954"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d89cda95-60af-4178-9651-1b5135bee55f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9846ede9-6ab5-4bd6-8b45-d1f020caf56a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f465fd-f4d8-411c-9df2-c1790214157b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76e0b838-1ac7-49f9-b6f5-8a35a5bdae24"
            }
          }
        ]
      },
      {
        "id": "7c865845-b3b2-4bd7-9f72-ab13c435144f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c38d422c-07e8-4d1e-81c3-84dfec2341d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f37ac60-ae5e-4a92-b6c8-cbcb0d9fa670",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce20f368-7e87-43ca-a0cc-5b489a77909d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faeddc1-435c-4c72-bf32-cb95a0c345ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ee7243-713d-4f80-b5c8-52d55a689adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce248065-13cd-4fc0-96b8-892547d15ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98509e8b-c62a-4e1f-a595-5e8098743a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6053e0-67b9-4da1-a771-4efad726c35d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904fdf24-5e24-4d51-97a0-41c6c3a5dc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846fe0b2-5d44-4c25-ac91-b0d9215a0e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5567cc6e-a099-450a-ba9e-025f7234349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0cc3ef-641a-417b-ad09-4345a2cb5f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8568c0b-029b-41f4-b031-f85a62118166",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b6203d-6f21-4467-8a5b-4a2ede32d57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dd0316-199d-438b-8380-f630b8d1568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c44157-2705-4584-b45b-6883b6a55464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91bc5743-7324-4c84-bf41-3e5af3e7848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24483a84-0dc9-400a-9eb8-23214c09da67",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacaa8d5-60ba-48c5-ab45-bef7e4bfe46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1601f10a-4dfb-4290-aa6c-628b17dd2a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca67fe17-4e50-4091-8bf2-c4749949ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6cac9f-5b79-4865-ae4f-0d08c76284d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89804e4d-691c-4178-b878-d3ee22dbf365",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518b6d03-65ea-4d87-89d1-9d62caf738d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d086a89b-a0c2-40ca-a91e-502c2271b05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9326e73-b3ee-4ad7-b29c-ac091c2f80ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a0a357-1b1f-4126-a1d0-e262e09e3b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9f4d30-ccee-481a-858c-7e4a80c83b4c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fd08c7-9d84-4e20-a66e-594dd913f513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de853f8-bdf6-4d5b-9fc5-4f93ef8218f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169bb5d4-1089-4d83-924d-9585fa23ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d076159-4002-4253-9569-d179603c8b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67e4fec-6906-4c1a-ba9d-dcfc2e7e348e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e06a16-6e55-4dc7-bab4-e0ada56a9964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3db8891-94b5-4154-911d-e6ad91701fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f410d-a0e2-4308-9295-ac6d057bc6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "997e6fd6-030c-4ff5-934f-71dc75375e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1030652-6938-48a2-bb42-386d4a3d1ce4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbd6daf-e62b-4d29-ab79-a3bba41df89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ccc906-bdc7-4db9-8c7b-8868cf16e6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45242d60-fc95-42d6-b728-526e30b04027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c3d661-ead2-4416-9648-45a4a08c215a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927c2444-f85c-4372-9536-be1731f66fe6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4949d631-ae74-495c-96d0-d4065d30f462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde29f32-22fb-40e9-abd7-2ae82ee4bdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9927915-f5b5-419e-9a02-c60d1302704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df171f5-28a7-406b-89c8-b2be7dc567a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168c1469-65e4-435e-a2cf-71f02b40c26c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70275ffe-4d53-4fc0-8afc-003ed48b46d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933729a5-b44a-415b-a6c6-22bda3b8d3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e39f5be-d520-4674-8c7e-1181182cd55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5abb0f3-c0c2-46ca-a1d8-1479cdb9519e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e2092f-47ab-4327-9e88-c93f7b8e2a78",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf5dd84-9561-4c5c-baca-feca5bb9602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db290cfc-816c-48d6-8258-94ad2d932a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875db88a-6d20-48b0-87c7-e455c8803147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95c70955-7c7e-424c-9163-6dce9e642592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e2855c-37be-490e-b5f4-8037f04800c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57535248-1e63-4dd6-be08-07f681b9df17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815bd6a6-cb52-4ba6-a8f9-174a4d2fe661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3a95df-ec31-4f9b-bbaf-e5adf8c78cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "485ee1a0-d9fe-4d10-b9d1-0f7508c12485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdd0530-7aaa-48fd-8d27-05f94eda3273",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba240ba-6946-4d59-9d19-e238057fcb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e512b483-822c-431c-9a1e-ba71bb4ff6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc7b419-f0d0-4280-9068-990d80a2b267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b8e535-198f-40d5-bda9-a454c76c623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96f4f21-f0e9-40ba-a2af-f0799d550a65",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00b2ab6-640b-402f-82a1-958b7b709585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b848d642-7e06-4478-9ae8-61b73900534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811e59f8-8fb3-4e6c-bfa3-68e76f25f76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a8c938-b886-4119-8554-c80805c87311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96387e1-5891-4537-b4df-f763987dcd27",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea98cd4b-1300-4a01-8523-a0331363925b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ca2536-bc1f-4dbe-ba1a-cb6f0a1508fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6605b0-e4c2-4c8b-bbf3-f69e9c6c6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8ed772-408b-4a74-aacc-c8b009c13f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79577c49-d347-482e-9db0-b5bbab05b840",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b092b428-32ef-4034-9e35-6de98ed969a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8129008-d276-4a1c-aeab-675bfa706133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d84d50-cdb3-432e-b57a-ef933f37c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51d78035-22c5-4174-b6b5-1424ec1a3f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47afcfd9-bbef-45c9-8249-df7e1bded9d1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c7599-e607-4ea1-a403-98e9d2e935af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3096dba-23b3-4462-ad6b-8d50ef2f6020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab85e4a6-86a3-4545-8ff7-4002832ca4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "804f8c52-4878-466c-8f79-edb48a181a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96963704-ddb1-46d4-9449-d5265146ecf0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495b0c14-2710-4078-872f-9ac252bc7269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54ae373-5f7f-4cda-97b5-dfc66a648707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee124b7d-331c-4e86-8a93-95dee0f7da5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e97e66-85a1-45a6-9ec9-10756ac43045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9a2a00-a78a-4641-b0b7-d974f3c3c638",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd359e-759b-4761-904e-96f5461191db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5c1e94-f2fe-4862-a40d-5343fb030123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee64d10d-cff0-4a79-be34-c5604e4d71f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d97fbb-b5cc-4bbe-9c69-27a6801c6ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed885e7-0ebc-4e92-9510-d00dfd4401de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f7285f-b72a-4b41-8336-03a1d5de773c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc33da7-7c7c-4ce3-a163-db90b08112fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704c85f-2979-47c2-b2c5-a4ec39b62813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07ab2e6-47ba-48e8-8eb3-002583612675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6c2fb1-e9a0-41a6-8485-ec55a75350dd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e3f926-7f9c-4f89-a898-0eafe10f3342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17f3ee3-e215-497f-8b5b-b50c359ccaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38198ab9-2594-4df4-a3c4-0cdc3bf47480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07252458-26f2-4b7b-84c4-490972b15c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff52df-31af-44af-8ebb-271343e71728",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5bd966-bd98-4bc2-a7d5-f1f61170fce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cf887a-403e-40f6-be91-f478d8543a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37433e37-2298-4718-bcce-0080c22537b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f62b8019-f2e0-47ef-aaf8-cb3049732fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976574c6-b73c-43be-ba1f-0447c8df3129",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639b3bb4-2cfc-4397-a761-e115a81fc833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd282f2-ea8d-4c7e-a965-b574cbeaba89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51b0f66-7517-4e83-bc06-790c47c8d639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "270b2f7b-b857-47fb-b89f-7e1c1f1fb417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176667d1-1c03-4334-a2d5-08bb561d24d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f682e646-e2cf-4be1-8ad1-ed750939e22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672b0988-e685-42de-98a9-24fb4ed00dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bac9e58-43f7-46a1-855b-0d6bd43fadbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5279fa6f-7bfe-445f-929e-804f8dd25298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38275294-339b-4492-8e72-bec8941bdda4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aab3c85-3f2e-44f9-a730-df53e478b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4d2aa8-da8e-4924-9277-5f20dd7921bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3968a4-e410-4eee-8885-8d12a5c70ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b54f3388-d310-41cf-ab34-c2243931d86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241dc982-016d-45dd-b5aa-68a5a474fb93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c823435-dc62-4cf3-b437-97f9f38fe558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8306c253-785a-47c0-8307-f7aa84effcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db5e815-23de-4dfc-8cd6-4dc1b0db4a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e462da-d32d-447c-8c1f-204671f864b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e2609-a779-4330-b844-0401a682d2f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863936e5-915e-4ae8-aa49-21c217868632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7e6eff-4a6e-4f9b-a7bd-6b70e4a197f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff46c932-a5aa-461e-b6ac-9b58c288a97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6babdf48-2382-4a5a-b8fe-96bc9f23c7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac89566-ac0c-4543-aa2d-fe8135942f24",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf17fbeb-b1ad-4f1a-b28b-77c8666914b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52c17b9-a4a7-47eb-b89f-532b06f364e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914866da-9c39-44f5-a59d-b4c6968034b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c819258e-1f91-404b-b680-9f1857d2ec1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653988b-ca38-4481-b3e9-9df4c8cc2df9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4642049-4fac-4562-9186-07aabba1fcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e06cc4-5a8c-4ace-9632-1570568c3a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6205efb-33bd-43f5-b22f-841a7427166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af42cd06-7b54-40d9-bdee-541ee9ec886e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc51302-a10c-4071-b499-017e3fbc2e58",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9500f22-ad7e-4fc1-8d9e-9cb94b607605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46def2f1-061b-47af-98a6-bdc2a67cb806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2e5c6f-1f69-41dc-b835-448670b63920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f4fe4d-65e5-4c94-94c4-7af153a32550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2460910f-de1a-448a-b390-c01916d1aec7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b668c674-24fe-4907-91e6-3510877f84a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c0cdcb-7242-403e-8727-34a89575cd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f99475-4de8-4b0a-b641-9efdf530e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "858d2efb-f82c-4948-bc3d-3c9e9067525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab303c3e-9478-4d5b-81a7-8d9bca1d13ad",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d32fc-7330-44f4-a6f1-846db52d212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c166afa-60f9-4cb1-9144-61582b6edc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba99b4d-6b84-4d1c-906e-a464a597b781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c340d2-7a38-40b4-b9ce-87cf72a1a6b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "615504f3-24dc-40c1-9e72-36793e6a1c66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86242a97-7689-409b-aa7a-0c83010c5df9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932106dd-07eb-4666-9af3-943af18895d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "589425cb-64f1-447e-ba60-02f812c62886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4010b31-396c-43df-a19d-3226e24ceec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edc1031d-7be1-417c-b05a-0dec857bc748"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3df301c-1e33-44fd-960f-104fe8c3269e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5779bb33-42ad-4578-acb5-3d464aec2274"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b9b6848-5064-4e0f-a657-7a9cc4eea43c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5623393e-3dab-4515-bf45-c5f9871451a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2d58614-fa67-4a15-9fb3-9a37d6f02128",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0067e1b4-0947-4ff5-a788-d756626b0d8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b66ac5c-8c98-45aa-a745-3d809c249fef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "718027f8-10a0-4803-9f00-4843e5684afe"
            }
          }
        ]
      },
      {
        "id": "48fa7881-d1bc-454b-86b7-2a6975d2f11e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bad4bafe-1353-48de-9a57-d042a7f2f26f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cbb53e0-0e14-4ddb-afc9-fa679ff2765f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c823da3-b0ab-4094-8460-f52a3ba5e513",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b5dd3-83ee-4e00-b7bf-43a0fe8abe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ec6ed4-bf2c-4601-94a1-8a22709bcece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734ca261-7b52-4d95-ad0e-2b6934633e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e400e2-ce62-46a3-a46b-4f7f6399cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d071a4f0-016d-4d97-a7f6-ca987c46595a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac384fd-a00c-4776-b0d4-444784933903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e348f-cb3c-4ce1-817a-44c47ffde764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba075c8-afe7-42ee-9167-3149af1f3131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3eedb1-a548-4c8c-8b2e-5d9a7ffded4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5630a1c3-dd2c-4514-b36d-23fb9acb5701",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca42135f-4d76-4151-8b1e-ae66c14cb1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300dfa60-87dd-4ed6-b273-f78df02799dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be35d5b-6c16-4fad-9225-d3f332630d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b11a64fc-0c92-4802-b147-a02ec22ec841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23bf60a-7c81-434a-a972-7d4ab4922617",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c31b8ee-3973-46b3-8634-5ae9d7265eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dfe489-37da-4b62-b122-199781796c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06827fd7-d16c-4007-abdd-96980ee7d405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0ed112-697c-4152-950b-05a3bd487da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7ea7aa-33d4-43bc-8710-97e4b87c3142",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223b2715-31bd-48e2-b39d-9dbfacb7a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422a20f2-5a5b-412f-88e7-123b26efed96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4ae9bf-9c7e-4b4a-aece-dc01dc44338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd1ddb0-c049-4ebb-b553-e0e27815cb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cb9cd6-453c-4db8-b5dc-e20c3ef1ddde",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3e4a10-23ba-4eb2-8257-df05f84dbcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14360ad8-b716-44e2-93ac-dfad80c6af40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba50fb9-d8cb-4b14-b3f1-b61dccd93671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9101c411-af51-49c7-8ddb-aa7f9da92121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033442c9-4b51-4955-80a9-171e57724a4d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3743e76-d294-491a-bbb0-f384160ba466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd062fb-c99b-43a7-9925-ca8aa271a5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75d9c45-71f9-47a4-9049-5b4ec49617d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea03b03b-9be1-4f63-aaff-648c930cde56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c9526-7708-441a-a44c-95fc7d4d3ebf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00e8667-681a-414b-8cc6-9692ea72b191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c154983-f345-4caa-903f-7169b368c149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3b050d-22c7-48d2-9fc0-67c604c67c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f279b2-615b-4065-b3a4-1957a1005f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd212ae6-7cb7-4521-bd61-700c7e5cae4f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558802f2-9bad-4c46-b6d4-bbe07f61386a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7ce41e-e388-474e-b7ac-1dad9827b6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40227713-c3cb-4dec-84ac-b499d3750a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3803366-f3ab-48be-aa0f-eeb608da6aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8ecd70-5057-40ef-9ed4-cefb4dd33bca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed1d942-3d9b-49d7-864a-e8d2cfe52825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10392201-cb6e-4532-9ff9-069546e7ceea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36259cee-a3c3-41a0-b2e1-e9753eb83a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7667bf-f7c9-4c0f-91b1-48251a1d3489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c572aa61-912d-4991-9486-f56879086fd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8276f3ab-a83e-4b51-b455-0fd67a3a9980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1b2998-baea-4014-9624-457cca5349bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a999f3e9-0105-411b-9081-0c64a207bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30d6d09c-70b3-44a1-9e5d-2d56e7e4cf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681b034c-0a2c-4b32-b62f-35cd2ee4c7d7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da40e904-c9c8-41f8-a539-96892b6d5c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b427508d-abdd-43c8-a531-9f9d7c3bfb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a46a88-bb52-46bb-a9b2-772a2dc9bc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c278e842-e65d-4c43-8c83-b7aef05c11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cd2139-ece3-468e-a52c-f26de34a0fdb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1522ac-0640-4e29-add3-ec403d3f9a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfaf633-708a-494f-bf9e-d51c0e86a113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc25694-317e-4bfc-9e95-4e446b34c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a58362-7eae-42d4-bd30-6c86ffb96da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d5d1e-355b-4d92-8675-8c2d2ab3f145",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230145ba-3864-4b83-ab2c-2f1c99d68928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a5b161-1858-45ce-b866-436b418b2fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7308b07d-21f2-47c2-968f-8fff513b90c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfb825a-3983-429c-80f0-e37b448925ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e78ce78-648f-4b1a-9c0b-9a4b6950df24",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2662aa-5890-4087-ada6-9917813747a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893adcde-ac96-4d59-a70c-e63ae469df77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096d15c2-8303-449e-99ad-9e73d6878dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c515cf5-3b0e-41df-bbd6-8581e4e10997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b47d6-d44d-422d-9ba8-9d21be136c2d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dbf4b2-ab55-46ac-a47a-5614bd00a008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d751ec40-4231-4f07-8c22-8e842907311d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cc0653-56f0-45ff-b7d0-651191ac60b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54120d8-21f8-4363-b8a5-c63e45bc37d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52b0913-7147-4479-ac0d-fb5f9bdc7f4a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd0905a-5e36-4e7f-8dc1-233796a06add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d21bea-6820-497d-896d-2c6c085df1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1f1fb9-5005-49fc-b610-2cc090d7c23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68df7bf-596a-41af-9604-80a2083a2456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b4d4ba-406a-4419-a6ce-bbc65daf58ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc78f4a-cea1-4a9d-8117-77e3c5f511c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69b6d5a-ed2d-423b-9692-e7b11e6a72ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f17048-7734-4659-8dc0-83cfef296e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "debcc27e-8569-481c-be36-c43f4b490247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6be16c3-b326-4bd6-b43f-b715261c4977",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07346b2c-0ce9-4fed-aaee-701a49810213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75e65bf-27af-4520-a10a-9826c857236b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5267fc91-0cfb-40d8-bf7f-a0d4aa3ccffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e844be-c120-40af-887f-13de8e677b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c78988-c57c-4847-8791-09b8d8757e0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c0660-3e54-4d51-9e36-f49b093b4b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d794ff-9a83-4835-bc9f-4a967a0ef7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5510d153-7ecb-47fa-981b-5aa13ee5d44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf1bfab-5a92-43d4-bf99-abfa04762f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc9828b-e076-46c7-badd-bb8d698f757c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723aceeb-7efa-4e91-8232-d320cc02a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c349e8c-bbde-426f-87eb-81a28f6812b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3241845-5ac0-4750-90bb-9fbec0ade53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7302d0-73b2-4ed7-9381-eb9f478c99ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bb8ef2-8919-40ba-8a22-9d182dd15c7b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd738201-04be-4176-bc7c-7a11b23b0f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6e58d2-0aa1-4de9-94b8-a6b69ab89ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45814a6c-856d-490a-82a3-9b880bead8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a575ab54-ec41-420c-8d0e-4a1b7795319a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea709b32-948a-43f2-8848-3d723fa9cd9b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d39a25a-4b32-403e-bd55-ece11448472f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62845f5b-6093-4e03-82f6-0c93cc4b8396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47238bc5-8c65-42f5-bb48-930727568e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f241c3-1255-48d3-a4ff-dc27d0fbb8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63586ffa-ab01-4f19-85d7-83dbce348ee0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5ce840-5df6-45cb-9d33-16b09ce22235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ede22f-5e4e-4221-97df-59edcf5e33ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b347aad-e3e2-4604-86c7-040e3065a7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f66eea1-a07b-455a-8d76-a9ac7d764ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9d2c9-f964-4556-b4a8-4df199994f91",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f003df03-ce7c-4786-95b5-f866814b1b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b71935-860c-4c55-a116-8ea519ffdf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915e9233-be62-426f-a324-04772b2046cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee155fd-c0ef-4303-a1ee-1494410b585a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8dcac2-4c50-4df1-9555-14409230b3bc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a42b99-0087-436c-a53c-57c069d7575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d174e563-613d-4e89-b093-6d4f173dd539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd06597-2862-4f46-9cd8-35a09f7b3eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b790d84-6d74-4e50-9e10-906a7ebd28bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74131c3-eb71-4305-8eb6-6a1bc827283d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded08cec-cf99-4351-b718-8b24d535876c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fc194c-59f9-4d83-9f7f-5086bd8b1585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed1b0d7-371c-401f-bf7d-d52f01cb2858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9fb59c-311f-4470-94a1-41af71d1bd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dbdc47-38aa-4fe6-9c80-e598592f8049",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d8cd9e-b71b-4d58-a723-9bc7e9c60d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11705e36-b318-4f45-bf34-1bec65354d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283d4cd2-5c90-4183-b6e6-74b077ee58c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ef9798-c39e-4b13-a98f-d19e8cf855be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a08a853-2e4f-489c-bd41-dc8fbb8a5873",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c378e205-1704-49ff-8516-aa7416bad3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d53db4d-bf08-4e30-93a2-6ea865c2e7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9063717f-b278-4f51-b347-32b8c01e9d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5edd888-5bb5-43a1-bfc4-a784ed3b93ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497bce4c-3fcb-4728-9049-58a080c227cf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d9aaeb-46e5-4bc6-b677-49ed3435995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a2e61e-4460-4905-9961-337877bb60c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bcce7f-403a-4f2a-9c8b-2d457ecf469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9769e45e-9661-4ff9-86d2-238be9539bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8d5527-57ef-4039-9b57-3ebb397440a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff69ae0-87b7-4721-ac4c-3edf6d7cdbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f04014-3f19-42f0-8f14-e6d252200d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec1fc47-6a9b-45f6-b23c-56a58f2973e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fd78e4-502a-4f73-beaf-cf2e725452c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e89c42c-5280-4127-b0f5-fe6193a6f48c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8902ec52-f2bd-4c93-84a3-aa8107e0193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33c029f-c2fc-44ae-ad76-d2273b1674c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7200e46-3619-43c3-beab-5539386fcd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6947ce2c-ca62-42ff-8f28-5a126f07bc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bab6997-dde9-4be8-941a-9316325b79bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4524695-94bf-48fd-88e0-8877e67eafb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab99dd3-01ee-45c6-9ee3-51c08b2038db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580054c0-e6dc-41e6-87da-0d42e5f4271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1f8a12-598f-4477-b3ec-5d11dc9d3913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a684cb-2bff-4cc4-b8c0-0c1f7cba7d55",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b12d9d2-6e67-4650-bce5-cd8fa324c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ce01bc-7e75-485b-8e36-dca8a8e33605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769aedb8-3b1e-4eef-bacb-b2200efc127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cb3ea9-b065-42ab-b066-946a1d7398e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdca5fbc-b06e-4d7b-aafd-affd78ad74df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f9e76e-9fea-4310-99a4-1592a5e050b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8d9b57-33ee-4a30-ad04-1e900c60a586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac90a4e-045f-4ee1-8ce4-6efa9793c708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31932acd-167b-40a9-acd3-256170aa75a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d04e4ee-9c09-46d8-bf98-d0f5fec118ad",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1ed835-21a3-4655-9635-e58d07d1ce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70435b80-74aa-427f-8dbb-0e3969d9c058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af8cef6-774f-4892-83ba-17c0ca517b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed12a98d-9569-453d-9efb-480e8e171717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2953ed-725d-45c7-b0c3-5c4d04cd9a53",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1904548c-2f9a-46cc-a5e4-00a8ef618800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5573b1-83aa-458e-b6b6-10ec4df90662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b68189-70b6-4a5b-9c3f-07b5400eca72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b463ff3c-5b58-484d-93af-451bd3927d0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "914aabac-3c09-41b9-ad08-fae2707fd925",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "773b1c3c-3a79-4f1e-ac32-0f87d0e79813",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eb903d-1fad-4088-ad79-b0433ced11cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7472207d-1dfb-4449-ad87-ff5399b7a60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22b96c3-4fa0-45d6-9a18-69bf8954bcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af83263-190c-4cc9-9840-abfe62ea19f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee30b4bf-23e9-42c4-9796-0cbcce893fe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7b30acf-dcfb-4baf-be84-29da65c8c303"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6294b38-d4bf-4182-8ea9-d22cc81fbe24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6a9208b-690e-4500-80d7-4655b72f242f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfb03785-1786-48f3-b05c-efa0e06cc350",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49d34e32-c0f3-43a5-a150-438dd9f3bd9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95d55de3-b0f9-4bfa-b8f4-f2013cf0032d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7a82956-b161-41ed-856e-4f87dbc3fc30"
            }
          }
        ]
      },
      {
        "id": "ce51a48f-c827-4781-9b7c-a463596509d6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a98d118-29a0-4811-8d8e-8793752d5945",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d1ede85-86a7-4df9-ad73-5c875669649e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b753582-91b6-4465-ba67-c968355ac2de",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3df1bf-f8c3-4a32-bcd3-5e5e1c324aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9db8c8-0098-47f7-bea7-9a890ecead02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d65032-1a8d-4534-9ff1-0288d453be08",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be8cee1-e69c-4ec8-b6dc-247a2c1657a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd1d62f-8776-4c8a-b4be-2c4efa4dda28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08363a9a-3c3d-4e76-957f-079f20fbf6b5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d819889-9718-484d-a16b-ed0e82456458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7af064c-2143-402e-ad35-a2d5179f60ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a35711a-63fb-47fc-8f0f-e50af67036e8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef138921-e72d-4dfd-99b6-f744144dbe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab1174-8edc-4c1f-9e22-eb8031255519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fad1f51-3fdb-425d-b41c-4996819e28dc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023c9cf7-5bde-4956-a03a-89ae5de42c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e3dc6f-0023-4dcb-92d5-02a2c74ef78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189b664c-9ae6-476b-aa10-b99e4654a783",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcddc0c-b258-49a4-8fde-19f973c0212a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61e0fc3-c8c3-441c-9842-0519b0d9f04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f153af43-e18b-48d7-a0fd-785421e7ce99",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603b9c9f-d607-4bf2-a99f-e614bee6065d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16908a9b-2951-4515-b0ff-495ff7b0f798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df503c4d-96f6-4c36-b66a-ac3681ecd78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09e21c5-308d-4667-94cb-da34e111ba06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea948b1-3919-49c7-babc-d7efd045bb25",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a1fa28-3439-4c8d-a7a5-a7003b259049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8810cae6-220f-46ae-a50f-d95ea0838f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77563ab-163e-4025-ba18-3100e71d80e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e7db13-8837-406d-8444-c83a1c1ff55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3257a490-d42b-44c6-82d9-4476f2fce05d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b2655f-ef5f-4a05-ad09-66a5075740c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81341186-ecb6-4d73-af8c-32ff0b32bbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ceed0-5276-4fc0-a7f8-cfdcd140eade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c178867-3034-4c3a-a3d9-f3dcee7f06bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c0cd26-fd68-4681-a516-275e079b132f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfaea7f-9dd8-4183-95c8-03fffa3f7132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3584c7c-dbe0-458c-85d3-f9179099acfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a74e0e-68c3-4acc-9fbf-715147634d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758fa65e-e29f-46ac-8f21-a597b2e6d018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be67696c-430f-4107-a36c-1bc9bf0a9012",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b2566a-6b60-4cd7-93de-130c0ad154a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5751f537-b15e-40a9-8244-d58e39ef35ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fb4569-5bb6-4857-887b-25953c66c5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b72eb71-7094-40ce-856d-d8c5cdea8741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166bea03-a57d-486a-b33f-45ea239464b4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01a34c3-8a47-4a87-81b6-81ef80493d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30204a6-05fc-489b-9e4c-faf256697585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b714f0a0-1c0e-4490-8672-8e2993a421fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4ff98f-0dd7-482a-81f3-338fbddc5726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73155178-cbac-45ff-bba8-ba0db65c65ff",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cfee01-4a3c-41f5-849f-58e34aa1dc4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32674996-79c4-44fd-a320-5db950ebf0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26688d2f-ddd7-4b0a-a510-521b276fa945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd087a9-fa87-49d2-94a2-823df417bb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a9d8dd-c75b-4685-a096-e3430a01e4ec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6481351d-9c78-43a7-9d63-8e95c73bca32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f8798c-a648-49a0-b9ef-46a4cc979bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6461b90b-8021-460d-832e-8f47dd588a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9594d8b7-8cf9-4ed1-a1fd-d9619777bc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255919a-5e1f-4d9f-a163-8271ede10b78",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c477d0f-ad44-487b-9fce-e608ebcdff30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79730555-4048-4518-97b3-c3f1af37a328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c20c4f-fb9e-42ac-8689-bff9e6d0e161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cabd35-d741-43ef-85f4-b5f5d0201f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52519571-d096-456f-99f7-13b31de4b61c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fe95ab-7e51-4857-a8f1-5256dcfe6bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6ccc16-d3ba-431f-9005-cd3612b60335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb585bea-4a8d-4081-a365-6e024090f6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b30b7f-8356-46df-8a40-8d7a74f4653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb3e94a-e658-4bae-b98e-197f6e189b65",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7ebf54-6392-4002-b7a4-49333cff0287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4582ba4a-3fff-43f0-b4e6-b229a049dd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d762409b-3515-4f83-a666-0464ab33a29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f471c18-8417-4b52-96e1-ae56370d7ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbb0f8a-36cc-4423-ad1f-918727b8eab8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b5ae4c-19ee-4b2a-912d-d346a3f566f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dd4b4e-1c1c-4d7a-8acf-d989204548ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd22134-3dd6-4a32-a12f-e09759151baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77802419-2915-4a27-8193-e118e0cc16a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a59ccb-a41d-4b37-ae13-c433760a077d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c890dda1-5c6b-4f96-bc79-5ff514b51b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c99b0c1-68fc-44f6-a0ce-c43437f2dc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec3355a-d2b6-414c-a371-e8d5a3bafd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d8f4c8-7a74-408d-ac0e-3d326dbb5339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccc4042-650a-4534-9f43-b4d4e52671ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce9ef16-fcd9-4b0c-8d24-2af86eb7457b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24f2668-1c9b-4896-b442-4729943ca7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11897bb5-5999-406c-a063-7f676c54ad8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abc50df-16f4-4e33-8742-d6a1ac715503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af40982-e640-4399-b408-a6168e1dc703",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3e51ca-bf5d-4a8d-a0fb-138ecfc6ebcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc95fa0-7539-4fc1-bfc4-e03a325a0d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b51518-b9d8-4a7e-9fa0-0fc6766a1c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa91d51-e005-47ec-b89e-3d4d36935de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3d905e-d4e2-4962-9cdb-6a37c8b7840c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d5cd5c-179d-4233-8c32-33f1e6156f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83ecd38-5eae-4e27-aab2-072bed807180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fe7263-2b43-4ab6-b051-6864730840f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c59b3e-2e40-443b-bfde-d531633f60b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acd2cf7-ae09-4ba3-86f2-3a75c50d0139",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4631a8-2672-40b6-a780-d39d8f260927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec98ffd6-2628-4e5b-99ca-f49327933974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7358a5c3-8362-4f4d-a692-96e1ea345d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c19e8e4-5dc1-48f7-b99e-4652caff9063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f575ccd-f2aa-4cbf-a5ad-7ae4923f4801",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b75ea-5bbd-4269-936b-4142fe1035fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507db0e5-ea8d-4d32-bdfb-9a279d02b52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dfb286-3dca-4a93-8d94-b3347d1f1776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3f7775-3be1-4092-850a-e89ab7ac5574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a69b6de-b536-4c13-a029-552561eec82f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23b7aad-3db3-44a1-8e96-ebcaea267bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0588abc7-78a1-446e-ab9e-40678be5f0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd179e-1142-4f68-8203-91719e59f2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2692b355-cdeb-499c-9a6d-d94bd047b9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcbf295-b1c7-4d86-9f5a-12f33bfd2a62",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4053c65-1395-4c91-8825-c8aca1b64056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1274b7-4627-4a8e-a5c9-d84449090eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc48ff2-10f0-4bcc-b948-5060f7ff6551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ece9bd-26d1-4a0e-888c-6f27307e978b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634ebe30-3f4f-426e-a3d2-062f9d47851f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd34583-e09d-46fb-b897-57e6be11cb68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cc964a-bfdb-4bc8-82c4-28e6fa7d9b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4879d31f-ca0b-4ee9-920d-06e33be409dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a53092-c5ec-4883-aba3-dc2cd72c0028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b031bfd-0866-4fa5-9707-15f20d892065",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc38b507-6cff-464c-9406-bac90ff04057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34214bf-8db7-4d78-a906-334172189c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05096cc-2890-4740-a6d2-71de8ac7c6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7bc2c7-8d7d-4816-8c37-8718cbb98562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fd419c-ab67-41e3-9f7e-903c4a1ad18d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda5c165-bb5d-4790-a464-1bbb38a35b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb81b38-5b28-4e04-9eff-88625cf49c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d756c3b6-21b5-4b5c-ad38-cf0716e5b927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3263cc8-3079-47c2-825e-4097187341ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72797ab9-ccdc-4ec2-9e24-ec66d7183308",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66e92d1-d129-4f20-9f9a-336c8bf092fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b52081-f24f-4391-9d49-5529f8907900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607ae74b-a603-4474-beab-6c99bce4194c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f80812f-38a4-4f3f-a0c7-f0810fc1b012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caf98de-fcde-4c8f-b23d-89ce6583856f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d77325d-010a-4942-8fd8-f51ff7054a9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36d2053-0a38-4ac0-a1e0-29adeb7cf311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b82cf10-4872-4f89-94be-549a83888226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b12c116-ef14-482e-8711-b43063a340cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5c37a0-c7eb-44d9-87e1-40d86e738d97",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6e492c-aa74-4fac-8582-5379de80427a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243fe8c8-c79e-4997-a65d-03ea8af30394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87122ac2-aa20-49ff-ad59-9c5540f82df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de71775f-bdf2-4cf1-9ff6-71eb32ff966e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10504ba4-3d78-4050-866b-f3bc46a213a2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54138ce6-ca91-404a-9cd9-ffc07cf0e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc20f829-0333-4bd1-9969-c413cd4f5bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d449ba2a-6cce-4833-82e2-d7f2325f77df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9473f829-3972-42c4-890d-93f4b70d9200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c634b0e-bb21-4a2c-b7a0-c511fb9a24c2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaf7d75-c989-4e55-bcb6-5c681effb367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ccb4c5-ea56-4aa5-8bad-bf44119712c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff2c7c6-99a1-4d67-8b46-83c9a99b9e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e145d1a3-4105-4008-b65d-805d1f87fd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe465e0-5bb2-40b6-b779-f087d65b3ab8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb33d2c-8f0b-4bd5-8b02-282041c3d5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb1ffed-fd1e-4789-9ecd-0695c4cc1a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0add35e-8aea-46b7-98c2-b7a30c07f8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb1f924-7bd8-421b-8bd9-e684e6853f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd57daf8-c59a-4ec7-a650-f84f212d2adc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7107c8-679a-4997-a2b0-2294273c0f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac9174d-3aec-4804-baef-6e16b809c0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1206b6f8-bd7c-463a-a2bc-51908f63cb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28846ec-1618-493d-8140-8ba6333310d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5530f2-90f4-4409-a7a1-12b7baac89e3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04f65a9-2dd4-4baf-895d-59373c034b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23c481d-2327-48d1-98b9-7494c5bd9022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0e301-750b-4d3a-ad4a-2ff4ff229505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc5c933-005b-4f8a-86ed-02224e4a0a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a11e0e-a688-42a6-b6ae-155aa4b4eb73",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e01aa76-f5bc-4d3c-ae73-a82be0244203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e82b1c-1e76-410a-acce-7a45c375dc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad660f4-b41c-4d2c-aef1-9789352b0cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3424430f-9054-4b9c-94f8-369774feb784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d17b2a-0ef3-4341-b89b-b1ee7f957c9c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c98d77-c357-46ec-b5bf-2e76d3cce456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6640566-ceae-449f-893e-70dfb1ef69de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4f9ed7-57e0-4146-926f-f119a63d36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed0547d-2e0a-4105-899d-5ebedd1a8109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d46afd-0146-45b8-8abd-b0fc87b772ce",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8683a87c-9fa3-42e2-ba90-61c3c378c151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0218361c-2a11-428b-a46f-6cc68f768390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47be2582-19e9-4a8b-85ca-91181a2dd3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97311905-1dcf-49ac-bdf6-8daa7f76b411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03abc8fa-2bec-4de8-861a-91bf001887b2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f827611a-d8e0-4809-bc44-67c66f1dbfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d66c11-3141-4225-8aea-e652e2da6fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431da346-ce3c-4384-990a-0a63c2688e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0e934e-d3eb-41db-902a-ab13a742f34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd721b3f-4caa-4381-8e88-2d9bcbec1f57",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef99cbd1-bac8-4ff5-8b66-78ed0b4483fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb74273-3fb3-4dd1-8a02-2007e5bf2a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5442513-dd35-458d-bdcb-6a59dbcf2615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d15e395-ec7d-487e-8393-9559504fe717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79db87-c7ba-465e-ad49-feeba688dd37",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0a54d5-40e0-4386-963a-d9a0fbeda58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9f6bcb-4121-449a-a005-86f1a5caf9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93165a69-a2cc-469d-9ee7-39835093bee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db8ed33-8a24-4be7-aacc-fb382edc3080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2b3396-dc15-463f-be99-4e1ca2c479ef",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52859acd-24ae-429f-8238-9504acfcb907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd9abbf-7c42-40df-8d12-bb0017c51d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdbe3f2-5a95-45af-85ff-ca6b13ee3859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d660ec-32cc-462a-bf71-1800b602f34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f0d7fd-6ab8-4c4b-af37-eeac13ebacdc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30209ae-c805-4072-9ccc-0ab2269b68c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbf6eea-3645-4b29-8d38-6c18ac22f7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9fde9e-d21c-4ac6-8049-0f769dc2d6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85444298-f9d8-453e-8836-5b77035d44a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ecdbf2-ff9c-4c3f-af1a-3e5560d47ab4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df956379-05f9-454f-bfe5-4511370c92ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20c17ac-e139-4a22-a4c0-312647e388a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d72b521-26a2-4ad2-96b9-803ac6590a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8b359f-5cbf-4dcc-b17e-7157be2e85e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b1eb14-156f-4a73-8cd4-6d8f8f0cc4cc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb9493f-f164-4b59-baa8-170ff0926ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c06cc87-bed1-4d49-bf23-f9bfdb7f7991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d28de-b594-4476-88bd-c7624880ea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a7f69b-d902-4b0f-bbce-3fb1c0d6f91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ee7aec-2b25-41cc-9c17-561e17a01f80",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a9f60e-ce51-4d00-aacc-fecf3be0e838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c104795f-b656-4ff9-979f-661e5231dca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d6e847-5353-4986-a1f6-a318c81e822e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2569bce9-b71f-4e2b-8eab-72f41f88de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c486d4d-6fb8-40ac-9061-0d41c0d5e1bc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba516a0-df9c-4d36-95b6-4f7a4dc37656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76da84ce-8b21-4574-81f8-5729afe6971a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d532227-c1a2-4c4f-bb8c-21569d0d0b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fbdb46-4906-431b-a7e0-4577eb6224e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e28d91-afbc-4f02-89c7-e0e061f698d4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bb27f7-1347-41b9-a6c4-dddba013a1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9be7d3a-b234-42e3-a2ed-cde5d185bc34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6145b05-b509-4ac6-8628-d7737379b972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42df9d1-f7cd-4763-90d0-6f0268ddaacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdafa3fc-9ba5-4201-8427-b00286b8560d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b80a796-eab0-4682-9b89-adf94678a17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2476b6cc-a8aa-47a3-84a7-c0eb89830133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94df37e-83a0-4b7d-89db-82aee7518893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24b962d-8f16-4d60-bf08-3272e3c6a8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a88457f-2777-46df-8460-92f535fc77d0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd92f63e-677a-4c05-a9ba-6b3aa537eadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492c4ad0-469d-4e4d-8417-db9c2725d46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2501b132-2ea9-41a0-bc31-57d14994717e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67481282-8fcc-4030-a658-04db0244a1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744cb742-4093-4cd7-95a6-9d37d71e4719",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090f4f15-c392-45bd-bad5-d0c9f4405710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef9745d-39bb-42cc-8a0b-760e0101be62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5889e69d-cbc1-430f-9046-cc5021582f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653afb2c-70d0-44a5-9dee-908be74821be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e36689-c868-404b-97fe-4fe5344bd42b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f003c964-b68a-4dac-9a33-8ef599a422d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9858e7e9-1b46-44d5-a5bd-54cab565cb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fcd39f-b3be-43af-a152-99ec445095f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8c7832-f47b-4f96-9305-446198215c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84681076-05f3-44ae-85bd-4a99deee27c0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6430ca-57dc-4d88-9e1f-1cca17707bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1c2a5e-5d0b-4edd-858a-3e721ce8a0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f3cda5-92de-41ad-a6b2-242ae44602b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff63fa8-baf2-4ac4-be13-a7ca57c45f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af966ec-8796-469e-9ffa-f052f99bdef5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3182e08-9e44-4228-b22f-c1ffeb48b240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91829d0-48fe-4408-97ac-bd6173bc067b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5348662f-4277-4dc0-977b-9876dd71363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac3478a-0ed1-4cd5-b36b-52e41042f2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d3a422-e3ea-48b8-b2d3-2d7121b564ab",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6baf87f-9aff-457c-993b-1149a6677acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b657e41-67b9-431e-a14e-5e51c7efb367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78704ef6-f18b-426e-bfad-019399404cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990cf0c4-c5a4-4f5d-9bb1-cac722f75494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99a6755-e414-4eb9-b3b6-347f4b79a64d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09234188-4200-4915-976e-4f0573317f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c72bca-6469-461b-9ab2-2be86b9008ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c8cea-7356-4038-b303-ca80d2f67e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75362596-15eb-4182-aee6-03cbf393fc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f6f87-59d4-4cf4-9559-6e21190fda27",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe82280-fca2-4d28-b826-c741d1bbf419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442091d5-199e-4b37-81c4-a680d09d73ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674e997b-5b95-43ea-9f03-7cae074cb610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fc58a1-95ca-42ba-9d7e-cee9b589c691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a33dd90-118b-4404-b3c8-a317b0860307",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e1de0c-aa46-4559-8a5c-95b79adcd4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa173a1-179d-4600-b199-b13c275a22fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff9429-659e-47f3-b015-db39de407adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85ed0b7-08ce-461f-be4f-81e11c1b6bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdaab0c-7a22-4efd-8f22-0a93031c1d16",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81517e46-b8e4-4174-bbbf-cd3bd48cd7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8334a627-a3ad-4d98-be05-a1044502e7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d312147-90ad-43b2-87af-efeaa4989a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d0a7f4-84d5-4ada-8af5-feef3e192463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b93951-d799-4f3a-88b9-89f0e786d3c7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5534c3f1-ceee-41af-bf9a-ea4037ff8d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d359b81c-e886-4031-bd0e-aef901bf101e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80bbbe3-0c3c-447a-8830-40e1351924a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c00571f-1d10-4eda-ab13-9af826c476d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6381fb6d-bfcd-4350-900b-fa863afe28f9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e8634-bc57-4a93-acb2-463b2a972f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc0a228-5c7a-4594-bf4b-fd01768dc413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ec4298-cd33-45ed-93ae-6ade3ee654ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75147c-56d5-4559-ab93-4d852a3ae28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eb0519-ca43-48fa-b6ec-192879ee0814",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97224045-3ed2-4cd1-9c9e-e174b3ab2a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37c27b9-a74b-4da1-a909-e0aa4e64cabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f6894d-cc7c-47c1-b973-494f0bcd60df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009eac11-2b62-4297-ba85-a3803e632ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51d2dc4-0577-48fb-8861-0576bf9ba3a2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2685c4f8-22be-444e-9679-2f77e283ab2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801a4f3e-b17a-4f5b-9436-a1857e395110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8fb8ed-5766-4f36-8bab-2b2496f749ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de25acb-1535-4fda-b3cc-a0abc797d5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c093e20-7ddd-4e31-9841-f51c5f234365",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f743133a-faae-49f8-bc07-4a0eb16cc0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f73d46-08d3-4263-b32c-1a981d93273f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7630b00e-aa40-46d4-8a6a-6fa1b2cc9929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d87ba04-5cde-499a-9e64-ad2561ad6fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d55f609-6117-42cc-ba99-013a2ad089c8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b55ab2-c688-41ce-8a41-d43027aa5325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690ff7e7-6fc5-4c40-bb1f-4aa1b12f55b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5aefca2-a9e5-4db4-9312-3b8e76bf75db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a8e01a-5662-4e59-96f4-904bec13bc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f32f89-c16b-4e34-b5a5-a7e774de0710",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3297574-a711-4a27-a5cb-126b3ce3e5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfda814f-29ce-4b11-9a89-55b66a95ca76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda7c6d5-5845-4871-b9ae-f1acad1e4af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab62d36-3849-4129-a885-518941483c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994c2cc9-23c9-45af-82f5-2284c5562856",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5238ee7-4e80-4079-b768-749c4e76cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49c4031-4048-460e-9667-2fb636ea6437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d630e1-8f5e-4703-afe0-8ffc11ebfbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512cc44f-19ae-43c5-b6d0-51625198ce33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d052dd6a-2d72-4514-9710-d142b2c50eff",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c63ceaf-c18a-46d9-b3f0-688b2039b522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b141c7b9-8842-496c-a42c-b655eed09ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c2de6-b09b-41aa-9edf-b1ffcd48f0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afb509c-4657-41ba-a395-166d726a9f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ec7f47-6e8f-411d-bff5-cd6b67ded891",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca124f3d-9339-4fa7-97bc-d4e8a0b5a088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc38a1d-83db-4499-b227-0506fdf7e276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b09ff-658b-4986-b2e2-a35c151ec1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd3019-e824-4f84-b667-c8c2f7e5b97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ec3da1-097d-4d8f-8e13-bf96a9cc82e3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a858c66e-b394-4060-a09f-c41f21d54dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806157e7-3773-4ef6-8de0-a795e8d7d4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ca14e5-bee0-4b78-9d72-a331b402c550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57e43a5-b7a5-4c4a-b962-2610c0b08e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d76922-5db8-454c-abcc-1ed1cff650d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9669b9-8d86-432f-8637-961d5b4479d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e96844d-d5e1-47b4-823f-92854928180c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b746dfe-bb28-4061-9d37-b79787eb13b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5169dd-c89c-46ed-bd88-b7d05c166a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf3328f-6039-4fd3-863d-61c8128abfe7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290a3af6-3082-4d52-83d8-8bd493ba7481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5bf62aa-ad14-4fa4-acbf-4fc2632640bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815d2ff2-8b46-499b-8d7d-40fab31c3104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9aed8f-76ac-4198-b989-cdcf1ac7b2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b680ffc6-9c94-41e8-ac2e-ac6698e73dea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2b9188-b2a4-4932-8cae-bcf2386666d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd6dba2-4c75-4ccf-a592-beae45255718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53db0b6-34b6-4ed5-808c-4e381c0a5aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75244cfb-5717-4f6b-af8a-19b8e1d101a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e35934-6d8c-496f-8ae1-71f34a73b1a0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c3ab9c-be3c-4b76-889a-c5e82aabe13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f53751f-3f7b-4048-a2fe-5c3ac0d55ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963b8079-7db7-4cd8-81ff-70313bf41eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5003436f-7b80-4ff6-ab60-e69a45adc70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df80945-04bb-4a8b-9729-b189b15db085",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355a1839-cf48-4125-b836-8d272efa69f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a34e70c-9254-4d84-990b-ba2bea4e53a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a754c1-f3d2-4af1-8208-f8d8a262ba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75de5bea-cfba-4ced-a8a5-6394eb897817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef72243-81d3-4365-abe2-fdc72094520e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3846f7-3558-4673-ac64-31552bdb940b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2870c3-6a1c-49a2-8817-effd0ce8bf5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ff5513-a96a-4ecd-8599-e0bf6a46221c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b686867-aa2e-46e8-a380-c4d474672f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1e5745-6a4f-44b7-8212-085243d245f0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986fdaa5-792a-43a5-b2ab-5f6c3822de3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdec952-ae5f-44ff-94eb-83380ecae4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0a60cd-97f9-4916-b848-ace79be0dbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5d66d1-f57d-4667-8748-d0394a8e8a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fd3463-82ea-4238-8192-80774f38d1c8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c333cc7-35ab-48ee-b9c4-857460c43b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8122a9-bcfc-460c-87c0-d21f38c66278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c07f8a1-cfc9-42ae-a642-084e06b9f1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1280cd8-974d-4ff8-ae12-9c5215a55cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ed5457-5894-4b42-b640-b76d34cdf313",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036303c7-db57-4856-85a3-92121cec873f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9e7ad84-9fad-471d-a924-c39ab2be6cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa1aa1-4fe4-41bc-9698-69494703f208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419bb56b-aa3c-442b-8614-a959bd701491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d6b53-ca8d-48de-ac88-10f2651a08f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb7e3b5-0ade-4789-a2d4-31972f307ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1025dd93-3983-40ac-9af7-d7058ed866d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ae1a29-585a-4c3b-b82d-cbd946733f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1749d0a9-ee98-4d8b-842f-f443f089565c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a3b6f4-5e93-4e48-bf83-2a6113350988",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d058196-0580-44f9-b8e0-7ca678fddd14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7ab1a8-dc22-4ab0-8355-1629a68c1784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5d489-6a98-4ac2-b65c-d15955f85c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa811ea-ac43-4567-bb21-98c139507019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d7e60f-4cc2-4d2a-8b15-76f81e4b68be",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702a3469-d153-4590-9ef5-a1d5d5db2ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "488a0c4c-8079-4254-a99b-9e9e291cb0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35673c76-8936-4b9e-a68f-fe29a5a7ee30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b714b6-6c72-4698-9e99-82aa01b044a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2668f4cf-1b2d-4e7b-bfdc-509ffce9ae36",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2563e881-7907-4c73-ac9a-017bb3ba995a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf9ea18-0e5b-4bf3-a200-a664c6f90f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26712af5-a4a9-46bc-a867-c7639edfdedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71b33c7-a719-496d-ad93-4fe220c29f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfa0c54-57ad-423b-94ea-23c24cfcbc07",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aff63b-be00-4782-8cba-d69560d5a632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f106754-42f6-4002-a733-0ee0172b349f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278fde58-aa50-4683-afea-af5e2602e767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604954dc-8c66-4255-83bd-839d0b73591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf8f623-6f45-461c-90d0-3337b5ec4539",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd34c46-5489-41ea-a100-eecb6972fe24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdfb1556-8b7c-4099-81ba-137a1851f4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200236f3-d840-4980-9031-9e813d1400dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c26becb-6577-493c-b484-b80b6b5788de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8be061-9e91-433f-916b-6196ad6da945",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5664e3f-1366-4b08-abfe-4fb38ab1c164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6f599b-507a-4717-abb5-14507fce980f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4cca3-1bdb-4e60-8b01-29353274fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7642d7-5c6e-4e0e-86ce-390d470c5130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9e60c7-a92c-47a0-b30a-c37aaa1474d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a002492-1967-4dba-819d-8a8d8f3a222f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc11a542-249f-4422-9acd-6566300954ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7e411c-089e-46cc-8739-90b6463366b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3a2ae5-c906-427b-bbbc-6e0552925fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f49f11-92e8-4917-9fdf-399bdde89352",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0606d077-59d0-414f-8a18-a13ce06a69f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fcddaef-af33-420e-b5ee-ebac4b820840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f0c97-09e2-4e87-925a-61ffead6c308",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e9a631-1362-4c73-895e-f5c59fc43aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0715a3-2c99-4990-8f01-354df8ce698f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff4ae4a-fc0c-4682-9060-764abf6d9d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7b8f51-c017-4933-a78d-7700560b24b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1410d227-72c8-4f84-9854-5e431fc011e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41efbf1b-dcab-4524-8589-f06690adead4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5464e2-6aaa-48a1-8a87-63ce7be7bb2b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecf6057-43e9-4031-afab-171ddca0cb41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a943cd13-0a06-4c00-8fba-7c1f7b03440e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395be14f-251c-4611-a394-feb02cb4c3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af4a76f-0d42-48ef-a06a-e489d12a39bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776a8dba-8166-4431-a33a-f5c1a1a7c925",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba394596-73f6-44a4-aa6c-d88f161af592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3185466f-8750-4ab2-8896-e3bec85bc43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a51f8b8-bbad-4c06-ae16-b56633f0692c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdb678e-3e97-4f1f-aa3a-c7060a1725d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b3e047-a57c-4c86-854c-67c9e7de46fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf30fd18-d1bb-4de1-bc9e-fcf3b5f7be40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78584328-02fc-49ba-a71d-12ae8db5ee0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba47cf1-01e3-4512-95e8-17510bab715f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70ecaf3-70c6-44dd-863f-4b9ac9bbc700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4337c-751a-4026-8204-b8aaaa115dae",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b1aee-63eb-462b-a373-a6096af0a3e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e02af7-075f-44cf-a7fe-f6db4490a36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e78c525-7417-424b-bbd6-f965bf805268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a12724-aac6-4971-8c45-4ef8ea310f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2972432-10f3-4b31-91ef-de0acc7fc3e4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ab1a81-5a41-45f5-9234-6570ab502763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d14cbdf-c7a1-40aa-a8e1-3ce561537bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338ab888-be64-40cc-8842-ce11b411b264",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26703ff7-be71-4437-810f-21b4ce75837d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879dbcca-ccd9-4473-87ff-016e23869caf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0fb1f8-f087-44f5-b5cf-1c5085c9b671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5225d4d4-cef9-4b24-81f8-450de0d31b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa47f1e-92cc-4e9a-add0-866827d6d961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246509d0-8758-4fc3-bbaa-a847c38db4b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be4da499-2939-4a4e-bf36-161a0dd6d99d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7b6453b-733c-4e97-b2f7-666e0f6f8d47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37ea7018-f6cf-4356-9c3b-69cc4d2ddd40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d6ed0d1-7ce1-466f-af72-69dbadd71592"
                    }
                  }
                ]
              },
              {
                "id": "42f575ac-1e1d-4294-83d7-a2d2a5bee73e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2570e81-9d27-459b-bfaa-d22e96b302f6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab73583-e08c-48f8-b943-56a953699995",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc520d8a-1a0c-4960-aa2b-85c48ca8a15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1b3f9d-5521-4910-b58d-719ba871a3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29db24c2-e43e-4f46-a407-ba1f4bf8fd74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86429cd2-bab1-4920-a039-b74c94e70ee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9715483e-dca8-48c4-a8a8-78d978ab2f31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47e9286c-fd26-4be5-8f18-3245e7e1c960",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c088712-a170-4e5f-9a58-17d80330c97c"
                    }
                  }
                ]
              },
              {
                "id": "17cef938-6bb8-4319-8b4a-0b84e6451c0b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6848a9e2-c12f-4907-9798-0114cab6423f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5695fb28-e6ee-4b53-9b26-52ea06ea3c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "14540a30-2f11-4b89-a6c5-02a9467f7fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057292ac-9b46-4fd6-bacc-7892c95404b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6dea6b-3415-40ff-9bde-2172b005264f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4421d25d-7990-4d09-84df-bae2fb194764",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87e79bfa-57c3-400b-ac46-c3669e5d9fbb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "410aa9e1-0fee-4491-ab49-0ce9232a9e76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f2f54706-1ab6-4179-b56b-d81da7d57e5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a951a8-ce5b-44c4-a5ec-08a7ddd7a247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ce0bc2e-bf66-4139-9da5-b8e7dd60fa4f"
                    }
                  }
                ]
              },
              {
                "id": "987efc8e-bfdf-42e2-ac05-2782ba037d5f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1ebfd5b-3167-4a3c-9e17-fc63dcd90d1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eac0bc23-fb7c-4362-a775-a8e2b2a2b62e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "392d34e1-0dae-40bb-9951-6bac55324d2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bea68715-2cd5-4d43-a483-5237364eec26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16d0dac8-1e7f-4dc9-b78d-de45f6becd1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "93ef80b8-eb62-41ee-87b1-5f64451b7a26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2841a4b7-baa9-485d-bf47-e2668423fc48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22e2ee03-67c9-4e9d-ae66-48f2deaccda1"
            }
          }
        ]
      },
      {
        "id": "d168a096-e277-48b5-8fe9-4a5d32fd4b4d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1dd171c2-5bd6-4da3-948c-71562d54c842",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b39c61fd-f3f4-4ef1-b743-ccbc99c20a9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4623e6e-5f64-45f6-92ef-dda9120573d3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e66236-fbe9-4d96-828e-6af85e21477d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "90ea3218-531d-44c9-b2e2-2ea7ecf221ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7aa309-c9dc-4e93-a376-85f4d9380ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5420337-8b86-4de9-88d4-df6734f4e1f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc4dff94-364c-4ec4-a192-1fc248497e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f82c4fab-c0ca-4473-98b3-1a286fc2acc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03cb2e6e-1e58-4b38-850b-61b584dc3b96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f78348f-ac96-411d-b6c6-e5742ca41370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f08a94d9-5a47-483c-8cb9-920094d8d20c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5e60c54a-59ee-443e-a9af-247bf65997fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1ec1272-0bce-4c22-b0cc-3b545a285eb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0612881d-fc28-4615-9ea2-bc6022259b9c"
            }
          }
        ]
      },
      {
        "id": "02f8fcbd-1fe4-44f5-95e3-cc8c22d4573e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4f3c292c-672b-44ad-9466-62810c1368ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bd2f274-d1e5-41f1-a4b6-2ce7d65e9e7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff4445b9-fb1a-4957-92f7-a69903742cd2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020576d-d8d9-4d49-a503-44d5c03c43f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a30fda2-0a09-4f25-9bc1-3857e240eed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eac4eb-dcee-42f6-abb0-a4f73f640f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "913788db-009f-4a57-b0a4-921d15b18467"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d40a936d-63ad-4c40-a35e-ce48742f51dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49112e2c-8a73-4e0f-8e9e-7a775bc5e146"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53da2ca9-0440-419e-a68d-f091bfcc73a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "978ecff3-b739-49ec-a325-e4e2b0808277"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecdb9ff9-5cfe-4ca8-8cd4-b80e7458647f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e42f4561-8ee1-44c8-9be7-f4c32cd4d981"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "842d0c79-ab13-4dd9-b487-a7b49fc16359",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4f3cdbe-432a-4cd4-84a0-d08e0dffa361"
            }
          }
        ]
      },
      {
        "id": "4d472ce5-945a-4e04-aa0e-ddf45ec6a464",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0b608359-7036-47e6-8290-bfc964fa7516",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28392382-ed4d-4ce5-aa29-e00774e25c42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e79f29a-b800-432f-8fe7-e23dfc0562ac",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a251eb6-ae79-4480-b37f-92a40dfd85e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bac8912-55d2-4dfb-b613-4412d5e41eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d771ec-15cd-49eb-a2bf-81171f79e1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abc31887-03d9-4571-891e-32929ca99e4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "860663c3-058d-40ea-a16b-be699535c63c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "711323d7-843e-4469-aed5-1d14e45aa995"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "504c1256-6a20-4ca7-b46d-0a8a76528e11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddf7fd83-eee8-4ea0-bc15-62366e0f7f0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d282ad26-0391-4e3a-a9c2-aba984ad2a5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b39923d9-69f5-4c12-bee7-9b18d1e916bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "142aee92-6886-46d1-8fdc-254073b581a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1d6e909-c7b8-4db1-9cfe-bf6c28637b22"
            }
          }
        ]
      },
      {
        "id": "63465007-a4fc-4216-b2cb-157d55dc722b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3c82d9d-f46a-45bb-adc0-170c3d727904",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d51f3ac9-4428-47f5-ac33-5d39b5fde4de",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fd0659aa-6566-438f-916c-54d4cccbf952",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d167a69-efc2-4b9f-abe4-9cec3bdd83bc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d27e2bf2-b598-4bc7-ae2b-0a2c3c551cbf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.51929824561404,
      "responseMin": 15,
      "responseMax": 4692,
      "responseSd": 451.9191246690194,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704674237888,
      "completed": 1704674282468
    },
    "executions": [
      {
        "id": "b9fd85e3-4052-48a4-bdb8-e920052ae4f5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b966cb06-5c70-4c49-8624-2fcb8881b79b",
          "httpRequestId": "c8ee9ce9-816e-41b6-8743-629670536f35"
        },
        "item": {
          "id": "b9fd85e3-4052-48a4-bdb8-e920052ae4f5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b30cdff7-803a-47a2-b6f2-d1d4d34f6f8a",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "925ef0dd-3f96-4565-872e-6c0e6094fbf7",
        "cursor": {
          "ref": "108457f3-39d1-49ae-af5d-6776f8062f25",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ce662d8-8fc1-403b-a799-b0c08a5f6077"
        },
        "item": {
          "id": "925ef0dd-3f96-4565-872e-6c0e6094fbf7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e368faeb-a83a-4687-ad58-9040f56ef36b",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "c311a717-4877-4e10-91c6-0c89087d4a47",
        "cursor": {
          "ref": "8155a2c5-c26b-4758-97c8-0aecbc400566",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6d9c0dfc-502a-4a9f-8168-b371997059a4"
        },
        "item": {
          "id": "c311a717-4877-4e10-91c6-0c89087d4a47",
          "name": "did_json"
        },
        "response": {
          "id": "b2cd9325-9eb2-4694-9c63-299b92a59a12",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf86bde-747d-49e7-81c5-d67b80440566",
        "cursor": {
          "ref": "dfccf454-bb94-4da0-85e0-d40c051683c0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2cfb308-0b86-4f39-8964-ea06a2fd5fc4"
        },
        "item": {
          "id": "cbf86bde-747d-49e7-81c5-d67b80440566",
          "name": "did:invalid"
        },
        "response": {
          "id": "23afc292-d00c-496d-b1a4-763b6b24de7a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 762,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf86bde-747d-49e7-81c5-d67b80440566",
        "cursor": {
          "ref": "dfccf454-bb94-4da0-85e0-d40c051683c0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2cfb308-0b86-4f39-8964-ea06a2fd5fc4"
        },
        "item": {
          "id": "cbf86bde-747d-49e7-81c5-d67b80440566",
          "name": "did:invalid"
        },
        "response": {
          "id": "23afc292-d00c-496d-b1a4-763b6b24de7a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 762,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9f0ba-2859-4a96-89c0-f05a2f88a841",
        "cursor": {
          "ref": "c30f45e3-a84e-40ed-b17f-732b43fd4935",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "98f1e894-2cf7-4162-910a-09be4415bf44"
        },
        "item": {
          "id": "86b9f0ba-2859-4a96-89c0-f05a2f88a841",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3ef750f6-12fd-4ab5-9cf0-37a15426fd6d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1967a673-286e-4bec-a79a-f02f7b447d2d",
        "cursor": {
          "ref": "f7d2e637-31fa-4b70-a893-892a2ce95828",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "85270629-84e2-4b69-bd97-d6b7199d91ca"
        },
        "item": {
          "id": "1967a673-286e-4bec-a79a-f02f7b447d2d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9bc7c73b-15ed-479c-8dda-50338d89eec9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebbba4f-4cd4-44f0-ba78-a7682927dea2",
        "cursor": {
          "ref": "bfc30ce6-4170-454c-8cbb-fd329117cdce",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a029b1ea-0263-43d5-a8f1-bdd8d0b8647b"
        },
        "item": {
          "id": "7ebbba4f-4cd4-44f0-ba78-a7682927dea2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2caeba65-d9d8-40f3-b59f-8e657278be86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcafa1e5-205a-4d46-8c9d-7ae4e84485a3",
        "cursor": {
          "ref": "0c052ccc-6435-448b-bf8e-a9117cecc51b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4c528d03-5bbe-4273-962e-3f46048e8dd1"
        },
        "item": {
          "id": "dcafa1e5-205a-4d46-8c9d-7ae4e84485a3",
          "name": "identifiers"
        },
        "response": {
          "id": "49cd3ce9-a421-490f-943f-39097f8723a9",
          "status": "OK",
          "code": 200,
          "responseTime": 705,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37c3227-99ea-4014-9f87-0c52fd4d6f42",
        "cursor": {
          "ref": "5e23a9db-4d1e-4cd2-af42-02f8b7c7829c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d6755ef0-1faa-446e-b1a6-1844437fe57f"
        },
        "item": {
          "id": "d37c3227-99ea-4014-9f87-0c52fd4d6f42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d6104192-1e51-446e-a6b1-9c103b2a0a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf70d6b5-4ae7-4f22-8d54-59cc2ac9bc45",
        "cursor": {
          "ref": "fc46dd60-e5bc-4443-b1a2-1e9827f5e8c3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7b52d56c-966f-4eb1-87c4-1ad1af2e7d53"
        },
        "item": {
          "id": "bf70d6b5-4ae7-4f22-8d54-59cc2ac9bc45",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "90d8ea2c-7555-4235-b720-f1247aed2b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bdb4ca-a606-46c8-8a69-65ea30c300d9",
        "cursor": {
          "ref": "21bdf164-13a5-4df5-8a6d-485ccc200874",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa86993c-e6e6-4ea6-ab3f-6b11634c6893"
        },
        "item": {
          "id": "23bdb4ca-a606-46c8-8a69-65ea30c300d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "74317987-7008-48a8-9ef5-5ba1d10812ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debf5847-036d-4e3b-9d99-37fc252fe1ce",
        "cursor": {
          "ref": "52e8852b-bb8a-4558-8bce-1f6869c6ef81",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "49235fa3-5419-4bd2-b548-af00099b808f"
        },
        "item": {
          "id": "debf5847-036d-4e3b-9d99-37fc252fe1ce",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cae0e337-6682-4a68-81fd-1a170ef620f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecc3c7b-2c01-4989-aeed-40937628bb5e",
        "cursor": {
          "ref": "bd4a8212-0551-4e56-88ee-fb1123410508",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bcf4d77c-dc8c-4f8d-9e1e-d26b5fa86282"
        },
        "item": {
          "id": "4ecc3c7b-2c01-4989-aeed-40937628bb5e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f25ec57-7b65-47f3-b7b3-a79efac438df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cc56c4-723b-49a7-b946-f8a681bbd07c",
        "cursor": {
          "ref": "52fe46d0-314e-4c02-9f7d-c6085b1688e3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "35d621fe-f2db-4479-8fc6-3fff222dc121"
        },
        "item": {
          "id": "26cc56c4-723b-49a7-b946-f8a681bbd07c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e2bef739-9065-4222-b0b5-d2412492ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c703587-bca4-4df3-a01d-ca40b443a507",
        "cursor": {
          "ref": "f5bb6b2b-6355-4447-86a7-263c7e848152",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e720822a-e0cf-439e-91c6-79963947c9ff"
        },
        "item": {
          "id": "6c703587-bca4-4df3-a01d-ca40b443a507",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4d34fe69-a337-40fb-9781-2165e5517d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edcfc32-5fcc-4a08-a92b-dd91e7dd73fa",
        "cursor": {
          "ref": "170d8254-2d45-450a-8c5a-db21a118a8cb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "490ca264-1f81-4968-a632-59177ae9fb3e"
        },
        "item": {
          "id": "4edcfc32-5fcc-4a08-a92b-dd91e7dd73fa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ea0c6d58-714c-44f6-a6c3-47d877410a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3899704d-dd85-49bd-bce3-6964b6885ed5",
        "cursor": {
          "ref": "4325af99-898e-4038-aef1-3ae5dfeb3d53",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e7ab951c-b1dd-4eaa-9168-9f3115952c71"
        },
        "item": {
          "id": "3899704d-dd85-49bd-bce3-6964b6885ed5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f38c4a85-4ad1-4730-a749-e024e9228b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aa2943-cc8e-4b90-8c19-f27ec3b13851",
        "cursor": {
          "ref": "5fd654c4-ae59-4a45-a577-290fccbea527",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b15e8930-f603-407f-9347-33276a2cf625"
        },
        "item": {
          "id": "86aa2943-cc8e-4b90-8c19-f27ec3b13851",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2bdea510-ea82-4d8f-94a0-05991cb90330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca4b2ab-0a62-4b92-bdea-6a792840c641",
        "cursor": {
          "ref": "e53f8f3e-6a53-431b-ba9d-75fb96e78e2b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3fd01808-6627-41bf-bd0b-f3f6bed1631e"
        },
        "item": {
          "id": "6ca4b2ab-0a62-4b92-bdea-6a792840c641",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "94a66233-6eed-474d-9673-29610c27d8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0252385c-7ddc-4722-9451-9c22e0bf6bd6",
        "cursor": {
          "ref": "07015ac1-a77e-4c6b-9e7a-f5e41a928e99",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7f925cfb-33fb-4d10-ba71-f13c616c9f2a"
        },
        "item": {
          "id": "0252385c-7ddc-4722-9451-9c22e0bf6bd6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2081e4ad-8216-466e-a1be-db3ce2b31c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87010b87-df45-412b-a40f-3179e21678a8",
        "cursor": {
          "ref": "fafcd70f-0cec-475b-b2da-2b1cf09eb08a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "21491db8-a9c7-42bf-ab3b-f2c0bf11aebc"
        },
        "item": {
          "id": "87010b87-df45-412b-a40f-3179e21678a8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6849d99d-d5a3-4c96-babb-b7f0078c504a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36516cb1-b938-4346-b4f8-ecbbf78be816",
        "cursor": {
          "ref": "1bfddbf9-9517-4829-be72-6eb67b2f953f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1b5695de-05ee-4896-b6c3-71d05f8eee9a"
        },
        "item": {
          "id": "36516cb1-b938-4346-b4f8-ecbbf78be816",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "332c442d-2d79-4f60-84b0-38f1698c8588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06251411-1a41-4d7b-a4cb-5dedc57c261e",
        "cursor": {
          "ref": "494eb82f-4e48-4f43-b6b5-f8661938d256",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "13259276-ebd2-4106-813a-638104565139"
        },
        "item": {
          "id": "06251411-1a41-4d7b-a4cb-5dedc57c261e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ac67f672-3d73-4d19-ad83-a3d46945cdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340890a7-9575-4151-99ac-ff65189a8d0b",
        "cursor": {
          "ref": "f90c6310-57e9-4394-b1be-dfe907303427",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "163a27fe-bdf1-4f10-bdf7-33b680dc1e05"
        },
        "item": {
          "id": "340890a7-9575-4151-99ac-ff65189a8d0b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0d8eaa07-26a5-47a2-98ec-08f89ab919c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931fae69-2e9a-41d1-899a-39c03828ce76",
        "cursor": {
          "ref": "ca8fda0e-a3b9-4b59-bc12-06fb1ad94ee6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "75691351-4caa-4998-96ca-d8c6f6380af3"
        },
        "item": {
          "id": "931fae69-2e9a-41d1-899a-39c03828ce76",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3e5a328f-710b-49ed-8ee7-d184f9098c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a8f9b7-41a5-4f0a-bf75-adbaf984a8c5",
        "cursor": {
          "ref": "edc7bbd4-165c-4947-93f6-a4c496bfecc9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de6726f2-77c7-4286-be47-d02c1b301f17"
        },
        "item": {
          "id": "a1a8f9b7-41a5-4f0a-bf75-adbaf984a8c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "473e8bf7-2467-4085-b2db-eb20505d67bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eae48f-51c0-4aae-8436-dc3859369381",
        "cursor": {
          "ref": "1a576fdc-477e-402e-9bc4-117dd6d16915",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "77808f8f-55fa-4d7f-abac-380caa41b0cb"
        },
        "item": {
          "id": "52eae48f-51c0-4aae-8436-dc3859369381",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aff726fd-a0e1-4615-839b-436906520b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3bdda9-013d-4f45-927e-3aa1db6e894d",
        "cursor": {
          "ref": "2dc8daaa-f296-4d5f-85f6-18987e56882e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "792a1d4f-9b93-43b8-99b9-922cd8c00a5f"
        },
        "item": {
          "id": "1f3bdda9-013d-4f45-927e-3aa1db6e894d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "15ac5082-2912-47c5-b57a-fac65189dd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01abd5bc-6e26-47cc-b9e6-54bf98f78881",
        "cursor": {
          "ref": "a757cd17-6d21-4437-8364-110f4db30d65",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0833c16c-e74c-4cb0-9467-f144f9320406"
        },
        "item": {
          "id": "01abd5bc-6e26-47cc-b9e6-54bf98f78881",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1c20b6d-59bd-49f9-81ae-d85a30733db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afcba1e-c853-43c8-b1b9-3d4cdfceb1f7",
        "cursor": {
          "ref": "963e630a-7780-46e3-9d63-683e21f11317",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5ba0defa-8da3-43ec-8e80-dedae318de0a"
        },
        "item": {
          "id": "7afcba1e-c853-43c8-b1b9-3d4cdfceb1f7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7adf08b1-f9ab-4d98-a911-786d3ecc26bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2e4af-5770-499b-8945-604a9c45eac2",
        "cursor": {
          "ref": "801815dc-f646-4c00-be2c-0fd2555c41e4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c4ed5fde-efb8-4d2f-8550-c4f420d7ced0"
        },
        "item": {
          "id": "5ed2e4af-5770-499b-8945-604a9c45eac2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "887bca28-567f-4286-b144-4a978a687ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4860773-dc10-474a-88ae-3f7980f732c7",
        "cursor": {
          "ref": "73c272e6-08b8-41ba-8e52-96bc252ee222",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5fe6a52f-fafe-464d-ba4e-4631661bb73f"
        },
        "item": {
          "id": "e4860773-dc10-474a-88ae-3f7980f732c7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3c0b68d2-1a55-4233-b170-fdf22191c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec1131b-a947-4946-8355-dc660fc280ac",
        "cursor": {
          "ref": "8ea8e36b-0b72-428d-9dce-742265cf77de",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b053e665-141a-4c53-aff4-d640c2d59cd9"
        },
        "item": {
          "id": "8ec1131b-a947-4946-8355-dc660fc280ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7d9a280a-eec2-42ff-a4d8-4a2dafe0a1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020b3c9f-1c1e-4b4d-af8a-2ab2f67d373b",
        "cursor": {
          "ref": "8ce88dd7-d291-4700-a62a-53c189a9220b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "44c6b7eb-b06e-4879-9dd7-a7f3034fc1fe"
        },
        "item": {
          "id": "020b3c9f-1c1e-4b4d-af8a-2ab2f67d373b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2beddc1d-f078-4e53-bd4c-50be1b60717d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258397ea-a6b6-47da-81f4-b153c7e40171",
        "cursor": {
          "ref": "e053b25b-d133-4eff-a28b-b04b5150b5d5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db9fefc2-cd22-4a31-9064-3ef4718679fa"
        },
        "item": {
          "id": "258397ea-a6b6-47da-81f4-b153c7e40171",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "733bc374-9e23-4914-bc81-36f8378d6110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40085279-b8ef-49b0-b35e-155d18ec331d",
        "cursor": {
          "ref": "b59f54dc-3c33-47d8-8207-07552eb39036",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3cb7a551-23f7-4e4c-8bff-d01463a496f9"
        },
        "item": {
          "id": "40085279-b8ef-49b0-b35e-155d18ec331d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2407bbc1-4fba-403e-b84a-ab9eb07bafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5087b-5f94-43dc-b470-51ce253aa955",
        "cursor": {
          "ref": "3d0a4358-cb67-43ba-bd14-3ea835364618",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b534f813-9472-4867-9303-885a211b4022"
        },
        "item": {
          "id": "cea5087b-5f94-43dc-b470-51ce253aa955",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "535e82c6-f71a-4e7a-aae7-57d60cf92d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da5855c-a620-431a-b5b5-ab304af9e558",
        "cursor": {
          "ref": "97d379eb-9727-4ca5-8fe5-235c7d1b785c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56c0f6ef-6e13-47e1-94f8-d642b4bef606"
        },
        "item": {
          "id": "7da5855c-a620-431a-b5b5-ab304af9e558",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "090490ea-68a5-4f53-aa3a-cc228185e07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8ac7a7-f211-404e-a11c-05f5d36a745a",
        "cursor": {
          "ref": "1676cac4-a8c5-417d-aae6-3920cf35f7e2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b9808348-3ad6-4c13-98a4-1b594bf3710f"
        },
        "item": {
          "id": "7d8ac7a7-f211-404e-a11c-05f5d36a745a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6afd617d-a947-4cb5-ad48-c1e4c334884b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474004b5-6f0f-4f42-8a89-0d6683c411d3",
        "cursor": {
          "ref": "93f4bced-0904-4cf8-aa5b-f7ae1dbf07f9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c56a3d63-0470-4334-a279-001afe8cebee"
        },
        "item": {
          "id": "474004b5-6f0f-4f42-8a89-0d6683c411d3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8deae93a-5362-4277-8fd8-836b79cc03b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4b1672-035b-460a-b981-931d0ccb22d1",
        "cursor": {
          "ref": "7530c4c9-aac3-4437-b260-e9249992b8c8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3c12533b-4317-4625-ae54-0c11623281a9"
        },
        "item": {
          "id": "5f4b1672-035b-460a-b981-931d0ccb22d1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "80968161-3fad-48cc-9fd2-aee7257a2a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a5db63-aff2-4590-a1af-1cfc8c11fcfd",
        "cursor": {
          "ref": "d58a2f0d-2063-4c5e-b0fd-eeb1da621300",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bce67467-35b6-4e73-9665-7bab66d7fbaa"
        },
        "item": {
          "id": "c8a5db63-aff2-4590-a1af-1cfc8c11fcfd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c425d71-08cf-4ee2-9f32-b5c2fba51ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb45eda-caf6-4666-ab57-6be8c26b1b96",
        "cursor": {
          "ref": "d74d88a8-5547-4fd1-9e09-85bd0eae6fa4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9281ee2-a566-4f5a-92d7-94316c88a08a"
        },
        "item": {
          "id": "bbb45eda-caf6-4666-ab57-6be8c26b1b96",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1fd80f5e-ba76-4cfa-b7c5-ce205485ff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464fae43-b556-45c5-b6b2-59b49644852a",
        "cursor": {
          "ref": "003627cb-8d0a-4d7b-8fdd-c3853850934a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "613de53e-e29b-4363-8772-d95e9bd43afb"
        },
        "item": {
          "id": "464fae43-b556-45c5-b6b2-59b49644852a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "19bcd05e-a36c-4b17-964e-8b10b55d03b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22672c24-8e85-43a5-834e-834aa76ef502",
        "cursor": {
          "ref": "621f9cef-203f-4020-baee-1be24e1ca24d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "407b97fd-8e3a-4003-9652-30abaa666d04"
        },
        "item": {
          "id": "22672c24-8e85-43a5-834e-834aa76ef502",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c5ededbc-0df6-43cd-a143-e615c63e68ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832fd20d-8c66-4bf0-8e58-90953c90fd70",
        "cursor": {
          "ref": "4ce6f945-bd87-4b82-9472-3c38c5a7d390",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ee856fb9-2cf7-4cd8-8c48-d0ab7bfd061a"
        },
        "item": {
          "id": "832fd20d-8c66-4bf0-8e58-90953c90fd70",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c76b6f1a-7fd5-49df-b108-7206f53a2025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a430b522-a53b-4af8-9048-71f4827f8d4c",
        "cursor": {
          "ref": "fd536bf1-ad61-4195-8e34-24e347c62dad",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b00dd7cf-e533-4775-bf24-b411f73817f3"
        },
        "item": {
          "id": "a430b522-a53b-4af8-9048-71f4827f8d4c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "266eea73-624c-4782-93ce-6655de60ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0996b75-380d-4d4f-bce9-513f8f76b0f0",
        "cursor": {
          "ref": "7590b935-e400-4d03-82ef-aa7b32c1dbeb",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e632a76a-2da2-4e87-b5df-b5955928853a"
        },
        "item": {
          "id": "e0996b75-380d-4d4f-bce9-513f8f76b0f0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d5fe3d95-cb8a-42ca-b290-7a13d003d8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a8a06e-c951-41a4-b74a-8fc53b41aa1f",
        "cursor": {
          "ref": "99a4ea4d-deb9-46ce-96cb-2c134969fc10",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b668edc0-78cc-48a1-8d0c-345b2f5acf80"
        },
        "item": {
          "id": "35a8a06e-c951-41a4-b74a-8fc53b41aa1f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0d3c2ee2-4ee4-477f-bfb6-1be982863e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113e7456-5810-482f-a304-1a8a6d0a4415",
        "cursor": {
          "ref": "e9578177-b41c-4b2b-b5b1-fcca81185858",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b60388a8-f698-4aef-90bf-10fdf7a2dff9"
        },
        "item": {
          "id": "113e7456-5810-482f-a304-1a8a6d0a4415",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fd3e65df-88d2-432b-b4af-6a7b78cc995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727c64c-fb25-45ee-9b69-611221860271",
        "cursor": {
          "ref": "fa63b0d5-6e82-427c-beb9-ac4e10238ba9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b528824d-5361-4eda-a4ce-8a4d804c6ed4"
        },
        "item": {
          "id": "e727c64c-fb25-45ee-9b69-611221860271",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7550bc58-39be-4eae-b549-f913395d6854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be48c07c-fcaf-480b-9ca2-e2bf72ec2c88",
        "cursor": {
          "ref": "83e2a255-1e56-4451-90c7-104709f3cfce",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "46156879-dea3-4dc5-a6c4-e19080f0575b"
        },
        "item": {
          "id": "be48c07c-fcaf-480b-9ca2-e2bf72ec2c88",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce6f6022-e49b-4e2a-a1e4-236896e04573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e865eb94-8bf1-4d35-9b00-d2c470b76229",
        "cursor": {
          "ref": "7be9ed9a-c0ce-4839-ac47-f6536002e258",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ef2dd844-8d80-4b36-88e1-ac12a598a5c2"
        },
        "item": {
          "id": "e865eb94-8bf1-4d35-9b00-d2c470b76229",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "452c0dde-4c9a-4949-adae-55f676817854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4e3c7a-9f03-48ee-9352-532b2dc49e57",
        "cursor": {
          "ref": "13043eb2-38e4-44d5-8e13-5967b5c3f8b2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "674219f2-7e46-475a-a34c-2b1b60def086"
        },
        "item": {
          "id": "cf4e3c7a-9f03-48ee-9352-532b2dc49e57",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d3f0819f-4b09-407b-8f8e-860ef5402005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d08954a-5fd8-47ea-8456-0ff5e4305c52",
        "cursor": {
          "ref": "c5f15e4b-6960-4720-8a90-55d6a0366828",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "925e3a24-a00a-45a5-867e-69a03ef62aaa"
        },
        "item": {
          "id": "6d08954a-5fd8-47ea-8456-0ff5e4305c52",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7f9686ba-046f-4233-a611-6e12795f66ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f73764-f8e2-4bd5-bad4-c8388bf8e788",
        "cursor": {
          "ref": "dc2157c7-9150-4a78-95ff-2a9f39861720",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "613f5ab1-dcdc-4015-ad14-dbac00a47c13"
        },
        "item": {
          "id": "b3f73764-f8e2-4bd5-bad4-c8388bf8e788",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1382dc96-1075-47b6-b380-02cd8f2efc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9df51ee-e30a-4ee7-853b-48ef9fd78f1e",
        "cursor": {
          "ref": "caf340b2-6775-43b3-b743-fed9a6f06d6f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "76cd387e-b5a8-40bf-bb39-09da878fde95"
        },
        "item": {
          "id": "e9df51ee-e30a-4ee7-853b-48ef9fd78f1e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5c51420d-faf6-4fba-b99a-72d506c6c02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03f75b4-daf2-4304-b4b6-4230ea1ad13e",
        "cursor": {
          "ref": "2545d3ed-b9d8-4467-b822-1779a9e4f7ea",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6d59fbfe-119e-40c8-965a-44fe54fa169f"
        },
        "item": {
          "id": "b03f75b4-daf2-4304-b4b6-4230ea1ad13e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e3bddf9e-b50d-45c9-9537-247c3b612b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ca167b-ea86-4bbe-91d6-73284bbd025c",
        "cursor": {
          "ref": "5aa98a90-ab76-421f-a46e-6c8f2ccb574c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7a5dc75f-c1b1-4127-b1c6-c3956890d701"
        },
        "item": {
          "id": "11ca167b-ea86-4bbe-91d6-73284bbd025c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9ac9bcd-fc08-4fc2-a956-2e71c3541cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc29248-ff97-4f2a-85b6-df639c5a5422",
        "cursor": {
          "ref": "9e309cac-5522-4968-90a1-a358c95f029b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "07b3d91f-6015-4fc6-a3a9-9d227e224012"
        },
        "item": {
          "id": "bdc29248-ff97-4f2a-85b6-df639c5a5422",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "191edb17-a84f-416c-acea-ea4e9dea6c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0683bd0-60b1-4396-8ca9-55a3b11b3614",
        "cursor": {
          "ref": "3958d566-4e74-45ad-b500-e782ebf691e8",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "49cfbdc7-7a6b-443e-93fc-c9844f401491"
        },
        "item": {
          "id": "c0683bd0-60b1-4396-8ca9-55a3b11b3614",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ec21cee3-f961-4e1e-93b7-2763fef461c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e536da-2062-43bd-9bdc-f39fe414ea6f",
        "cursor": {
          "ref": "c4ec1494-6fd8-4ac3-ae1c-3e81fbbcd848",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "21300959-3d71-4ba2-b6ea-ef6b8dfeeed2"
        },
        "item": {
          "id": "28e536da-2062-43bd-9bdc-f39fe414ea6f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7f0649ac-d9de-492c-b997-9acefd16767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d376051c-4e89-4a0d-b416-81fb4e3937c1",
        "cursor": {
          "ref": "87d24415-dda4-412d-a186-6895e32117bd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5efb04a7-fc78-411c-b1bc-967d9afc25c6"
        },
        "item": {
          "id": "d376051c-4e89-4a0d-b416-81fb4e3937c1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1235f138-ad81-415b-bfa1-2a3eb1c10199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025622d7-9794-4e94-9f45-c229c1ba2abb",
        "cursor": {
          "ref": "d8718d37-9168-48ad-8961-8f9cf77276d7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5ec3cd0e-accb-4e5b-9c42-9b766fc153c7"
        },
        "item": {
          "id": "025622d7-9794-4e94-9f45-c229c1ba2abb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9c073816-7b5e-4689-b09c-bc996cb42a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad52297-ba01-48da-8034-51ac7f8aa195",
        "cursor": {
          "ref": "9b799ac0-ceb8-4f60-a078-699af4a97b8c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "99084dfe-184e-44ca-9e74-253ee18f9f6a"
        },
        "item": {
          "id": "2ad52297-ba01-48da-8034-51ac7f8aa195",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f226adee-6198-4a56-b9cb-f663f08f36f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ec53a7-5db8-4896-9b31-96f3c23d0d61",
        "cursor": {
          "ref": "e4a0d091-c84f-4a56-8ef3-efe6aca163e0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3662b9ce-b63c-4627-8dd6-7e3f4c4c643f"
        },
        "item": {
          "id": "45ec53a7-5db8-4896-9b31-96f3c23d0d61",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a99533a-04cb-4a72-9dde-258e4539dc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5796de23-9ff4-4e99-be60-106711b6b636",
        "cursor": {
          "ref": "8d138ffd-079b-43a9-a885-0b297616f269",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "82245184-3df5-4bd8-8572-d04c72d4cad3"
        },
        "item": {
          "id": "5796de23-9ff4-4e99-be60-106711b6b636",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e73c490d-0c58-4369-95b7-777138392487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5a092c-a6f5-474f-a961-9ccccae0e1de",
        "cursor": {
          "ref": "a2ea548e-60e8-4469-acbe-62aaaac0f551",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "865ad1f5-a149-4260-8629-d8f666075618"
        },
        "item": {
          "id": "4f5a092c-a6f5-474f-a961-9ccccae0e1de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "882e53e1-5b21-4aab-9d4f-6a8e61b03ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c62641-c98b-49bd-a638-5c0276815a93",
        "cursor": {
          "ref": "ae5c2d56-e78a-4a33-90c1-61bd1d42d991",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "56e91a12-d1b8-40be-a060-0f857acec7ac"
        },
        "item": {
          "id": "53c62641-c98b-49bd-a638-5c0276815a93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dcc675e7-b191-41e5-8d20-9d685906d697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be886553-1212-40d8-b084-51d374193158",
        "cursor": {
          "ref": "356364ab-74c5-4b20-b928-b5cacb2229a4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b442e9e8-acab-41f4-b194-c3ea28c79001"
        },
        "item": {
          "id": "be886553-1212-40d8-b084-51d374193158",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cee9b1cd-f0cf-44de-a966-58a7baef1c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b408edb9-c07d-4703-b0f1-a8320013372c",
        "cursor": {
          "ref": "2d86bb16-f36d-4895-beb6-31b1770a73f6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea0852de-340a-4eae-a5fc-b88c9b6ff11f"
        },
        "item": {
          "id": "b408edb9-c07d-4703-b0f1-a8320013372c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "be977011-c971-451b-9a52-d49d04cb09bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cc4fb8-236a-46f3-85b7-7cc25e135927",
        "cursor": {
          "ref": "6ebf5907-7336-4016-be86-bbdb9ae203ec",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6c19468e-aa59-4c8b-9597-acf4f4793b03"
        },
        "item": {
          "id": "f1cc4fb8-236a-46f3-85b7-7cc25e135927",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3b79e27f-7650-429f-8c27-19180c751fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faed25dd-b681-4248-bd70-4f17f475d5b1",
        "cursor": {
          "ref": "c1602d28-8a33-47f0-8f2f-a5d2d2e2e122",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8815a6eb-f97d-41c8-8645-9363807ab137"
        },
        "item": {
          "id": "faed25dd-b681-4248-bd70-4f17f475d5b1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d466fb6b-485a-4898-879b-f578c92299f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb3832f-d779-41c4-9d74-23fd9fdb4dae",
        "cursor": {
          "ref": "376de4d6-6579-426c-8ff7-c5f302b10e6c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2e94721a-036c-4abd-9a97-c7fb0d57844e"
        },
        "item": {
          "id": "8cb3832f-d779-41c4-9d74-23fd9fdb4dae",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d3ed9464-e3ce-41ed-be29-1361ecb11443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63acadb-6f8f-4de5-a450-7a3ea56099b2",
        "cursor": {
          "ref": "080fb14d-796b-4ff3-8e88-43ea36ad4543",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6972f2f3-012d-4465-9d1b-ffb91e741cab"
        },
        "item": {
          "id": "d63acadb-6f8f-4de5-a450-7a3ea56099b2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a1a4f909-6601-4e16-b669-f84975a660f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1b24d9-9ecf-4213-be59-51a4fc984f30",
        "cursor": {
          "ref": "9b507787-075a-4b03-8197-60b910a21e60",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9b4d03a7-c2dd-4242-a6ed-bc466170091e"
        },
        "item": {
          "id": "8b1b24d9-9ecf-4213-be59-51a4fc984f30",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3b7cb6b7-7a28-45ac-8e48-e2e42bdcb2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7f5e4c-9653-452c-ac41-4c338e5ed593",
        "cursor": {
          "ref": "6ccd5f8c-c62a-43a7-926a-6e1b03f58ce6",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6daac943-a2fc-48cc-a465-ecb69636e73d"
        },
        "item": {
          "id": "0c7f5e4c-9653-452c-ac41-4c338e5ed593",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3d4ecd79-5132-4b77-a03a-4b6914a51dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35662ada-8a8a-41ba-97e4-4ae7cdb318db",
        "cursor": {
          "ref": "c53b98de-9919-4637-a723-b4f84aa4ce06",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3c295f4-c12b-4749-999e-6231169aed77"
        },
        "item": {
          "id": "35662ada-8a8a-41ba-97e4-4ae7cdb318db",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "825f2ef9-a2b9-40a4-b711-983078cafbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2b29ec-835c-409d-ae65-5764d7f3308e",
        "cursor": {
          "ref": "ec713f88-f80c-4268-9b43-8a3da60395ee",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc20645b-dad1-42d3-afd8-81dad8d10a21"
        },
        "item": {
          "id": "9d2b29ec-835c-409d-ae65-5764d7f3308e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "95b73a16-8764-48a8-a2dc-ad5b8bd83880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be1b2cf-9923-4c4f-82a4-d7559c3b3a51",
        "cursor": {
          "ref": "3fec488a-f592-4d2b-bbc6-2e61fb348c8b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "837d667d-2e06-4eab-a644-f0d55889260e"
        },
        "item": {
          "id": "9be1b2cf-9923-4c4f-82a4-d7559c3b3a51",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "382fd0d2-36e0-4d98-ab91-59f64754bf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2271b8-61be-48cc-8baf-be923b8ddd4f",
        "cursor": {
          "ref": "6e8cd790-fdbf-4743-a6e5-69de70e7cdf4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "768ef91c-7c46-450e-ac90-e96c70d9d37c"
        },
        "item": {
          "id": "dd2271b8-61be-48cc-8baf-be923b8ddd4f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "37231a24-2584-450a-bd06-99de6a32ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40f3ef7-9abe-4332-87fb-7fc87b24f519",
        "cursor": {
          "ref": "1616c44f-bea3-413f-af24-6a9fe9d4cb31",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "93088f49-9ffb-4aef-af47-93463bf02a4d"
        },
        "item": {
          "id": "e40f3ef7-9abe-4332-87fb-7fc87b24f519",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4ae69fe3-1c00-444a-8c22-0748921726ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ff3004-7fdc-45a2-aa54-8ec494411d95",
        "cursor": {
          "ref": "5a8a0c68-ba05-4650-bfb4-55c0ded20aee",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1c83d6f0-49ac-42d4-8f14-81b7474675fe"
        },
        "item": {
          "id": "11ff3004-7fdc-45a2-aa54-8ec494411d95",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c478cf3-5bed-40af-b07d-8035259fba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2238e75c-cda8-4642-afd5-8568d58c9ad5",
        "cursor": {
          "ref": "1f4f615c-f039-4c12-941c-416f6ceb8509",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cdf53ea7-37e9-46bb-8776-1343394f943c"
        },
        "item": {
          "id": "2238e75c-cda8-4642-afd5-8568d58c9ad5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ba3e032-4055-4b18-bcf4-6bfa7512ed52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad41bfb-bd47-44ee-a2f4-f1958570cadf",
        "cursor": {
          "ref": "c38fce1e-8ff5-4bb8-bc8d-1e4b41759644",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "86cd8df2-659d-4b57-bc83-dea04dc285c5"
        },
        "item": {
          "id": "dad41bfb-bd47-44ee-a2f4-f1958570cadf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "18ad2bee-06c3-4737-b1f7-ea345034ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919bf5a6-e186-493b-add5-34577d399415",
        "cursor": {
          "ref": "0d133220-fe99-4fda-9fac-a42d9071194a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dedd26ee-9250-45bb-bd21-c80a983226bf"
        },
        "item": {
          "id": "919bf5a6-e186-493b-add5-34577d399415",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "30080260-3289-4f24-9617-c7650911e825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761e6677-7892-4548-92ef-bb9fb808b7e3",
        "cursor": {
          "ref": "9772068c-68b1-4619-b3c1-d0b7b9d04886",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bb0317ce-fc95-4e29-b756-0fcd38f53663"
        },
        "item": {
          "id": "761e6677-7892-4548-92ef-bb9fb808b7e3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3ce44cd1-cf70-45a7-a729-c9aa9e616ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92eecea-744c-460b-b401-34b7d22e666c",
        "cursor": {
          "ref": "8bec50cd-9635-417c-8b24-f10e0a0d8771",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e214600-4058-4308-abcd-944189b1d88f"
        },
        "item": {
          "id": "a92eecea-744c-460b-b401-34b7d22e666c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "058fffa1-efb3-4540-905d-00e265dd0222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f8f55f-c9ee-46b4-b52f-27f1f2fb080f",
        "cursor": {
          "ref": "1c73e56a-824f-47c1-9abd-c8c87dbdd88e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "17f6044d-852e-4f42-9ea5-3eec52d9399c"
        },
        "item": {
          "id": "03f8f55f-c9ee-46b4-b52f-27f1f2fb080f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "96efbefc-5dda-49e3-bde8-f785eeb392e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b85e020-2465-4794-9f00-0f2174e72cc8",
        "cursor": {
          "ref": "3466cb10-f243-4130-9f41-ef21c0ceaabd",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac931e5d-a75f-4657-805c-c47569bfee63"
        },
        "item": {
          "id": "4b85e020-2465-4794-9f00-0f2174e72cc8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6708c5d0-3dec-48c8-be93-acc7babba068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7230644e-c464-41d8-a66c-eaade3dc739c",
        "cursor": {
          "ref": "434d873c-a6c3-4994-8819-e7762d244ebc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e18aba4b-66d4-407b-82c7-b1728e87302e"
        },
        "item": {
          "id": "7230644e-c464-41d8-a66c-eaade3dc739c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "36a65554-b98a-4ad7-8e36-3a9ccf915ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2e2a63-940b-4c8d-aee3-09ae3c2e6022",
        "cursor": {
          "ref": "b6112e9e-8055-4788-9956-04a8b0a2eb6c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "da4386d1-2bba-4bf4-b0da-20972bb5e4b5"
        },
        "item": {
          "id": "bc2e2a63-940b-4c8d-aee3-09ae3c2e6022",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1d0145c8-737f-40e6-b454-610c223708a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a458ae95-3e95-40ca-8430-662ad47151be",
        "cursor": {
          "ref": "ceb5468c-c5c2-4b36-b0af-cd14e2535214",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6957f847-f4d0-431e-96c6-93de17742e8f"
        },
        "item": {
          "id": "a458ae95-3e95-40ca-8430-662ad47151be",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f2498119-009f-4bfd-9286-13c749b3d961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604971df-b74e-449a-9c91-00026b55e7da",
        "cursor": {
          "ref": "819b0a16-2883-4f5d-93a4-f52d6880f6fa",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f1869c62-7074-4389-91f6-d3aef749678f"
        },
        "item": {
          "id": "604971df-b74e-449a-9c91-00026b55e7da",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2aff45a7-c924-4497-810d-fbbbb122cc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33454bfa-94d5-4972-9f42-15fa7f740679",
        "cursor": {
          "ref": "9e9a74cd-053a-4190-9e10-c8f42ed3c53f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b7ba2924-6a79-4ec2-b48e-d21d0e867113"
        },
        "item": {
          "id": "33454bfa-94d5-4972-9f42-15fa7f740679",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "16e85f65-833d-4d98-ab5b-28ae46ec28dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b799aa-b6f6-4887-98cd-3a92f733b272",
        "cursor": {
          "ref": "b3aae890-38e6-4192-83b7-0cd7a8fca16a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "220107f0-b409-4abe-81f6-f870deb48fba"
        },
        "item": {
          "id": "78b799aa-b6f6-4887-98cd-3a92f733b272",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ee7598c1-b2f0-49c5-b459-9c1773e9730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb8fcac-7d27-475f-8476-519a77b1a056",
        "cursor": {
          "ref": "167fc2e8-0661-4d2d-884f-78ccea2bcc3f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cc0e82c8-946b-48f0-b744-29ef47e52c47"
        },
        "item": {
          "id": "5bb8fcac-7d27-475f-8476-519a77b1a056",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "91613e03-6d30-46d1-98c8-ff1988c142f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4de6066-cd00-4542-a5bd-d2f2d4bf55c5",
        "cursor": {
          "ref": "4efa6e6b-7476-481d-a36a-4c2d9368f3bb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "03e716d9-e209-4005-9df8-4682e210c99b"
        },
        "item": {
          "id": "d4de6066-cd00-4542-a5bd-d2f2d4bf55c5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9dfe2e98-be7b-4310-9420-6910fac69276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b942d9-3692-426f-82e7-27e1330558a1",
        "cursor": {
          "ref": "d4eeb9c6-aea6-4d7a-bfa4-6bb599febd96",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "55f7a7f0-b3c5-478a-99f5-184e94456b90"
        },
        "item": {
          "id": "99b942d9-3692-426f-82e7-27e1330558a1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b11198d0-8fdf-4ab3-88aa-3cdc3d394ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3744971f-e203-4c73-87c8-dbd3c47da209",
        "cursor": {
          "ref": "b596e668-59e7-4133-be72-aacae2ccf5a3",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "393a221c-eb1e-49e6-8b3b-fe8eeae8a257"
        },
        "item": {
          "id": "3744971f-e203-4c73-87c8-dbd3c47da209",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8f7d79ee-9671-4414-8b14-0859c723ed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8513e36-b78f-4836-a9b3-019fd342f586",
        "cursor": {
          "ref": "be16ed7d-f67f-4226-9c5d-684b215e749d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "834edd56-3182-4a98-98bc-f5a5773738d2"
        },
        "item": {
          "id": "c8513e36-b78f-4836-a9b3-019fd342f586",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c543a59a-9c97-409f-819c-bcb1df1c503e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904a319a-d56e-4abb-b863-a293f0ae09e7",
        "cursor": {
          "ref": "d582b445-018e-48c3-9c24-ce9d3fe548a7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "59c27f1e-35a2-478d-b8ab-f6f95af5924e"
        },
        "item": {
          "id": "904a319a-d56e-4abb-b863-a293f0ae09e7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ef024351-ec9a-4e12-810c-24392dd501e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "91e8b174-5e81-4410-8d88-8b73a75302d4",
        "cursor": {
          "ref": "12a3a838-78a9-4ce7-aab3-e894370e4410",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eb5a976f-8c15-47f3-80fe-cd6b7069f3d5"
        },
        "item": {
          "id": "91e8b174-5e81-4410-8d88-8b73a75302d4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cb3f542c-77e8-466d-bf63-621849862411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d35c5950-4f6c-4920-8c51-89167f998ec3",
        "cursor": {
          "ref": "e5cac833-a10d-457e-be22-c72be7e1845f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5b8f447d-9a1e-471b-b090-c0e27d8a6850"
        },
        "item": {
          "id": "d35c5950-4f6c-4920-8c51-89167f998ec3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d964a1e9-a8dd-411c-b938-ef5f44d2671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7f795466-50fa-48f5-b9df-d2ba19e6b3a6",
        "cursor": {
          "ref": "0538b3d7-33cc-423a-ab22-737cae99675c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4b1daad5-0204-4de5-b122-55060c1a30e4"
        },
        "item": {
          "id": "7f795466-50fa-48f5-b9df-d2ba19e6b3a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "53338525-4739-48c2-9f16-ac55511499be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0fa6bf83-9694-498f-ad50-efeb5b1d936a",
        "cursor": {
          "ref": "f0ce372c-845c-43c7-85c2-9fe67d8b4f59",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4e83191c-d100-46e6-954f-3ec13b8f28b5"
        },
        "item": {
          "id": "0fa6bf83-9694-498f-ad50-efeb5b1d936a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e244b64f-6d76-4f8c-a66c-76f26ce98e4e",
          "status": "Created",
          "code": 201,
          "responseTime": 4692,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f6f6b1-e177-493d-a1ed-822f1dce703f",
        "cursor": {
          "ref": "ee47296d-50d0-4a25-8eaf-e5943efe8011",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5bb420d5-b178-4e0b-9f9d-2a9f571a0d19"
        },
        "item": {
          "id": "b7f6f6b1-e177-493d-a1ed-822f1dce703f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "56485f04-1896-4307-9adf-3f48998573fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "eb94fae4-fea4-4fd1-96f5-634155f9bf8e",
        "cursor": {
          "ref": "f41b72b7-1e44-4a81-a6e7-0fe5b340b866",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f09aa255-77fc-43b6-8605-c283a7c0f19f"
        },
        "item": {
          "id": "eb94fae4-fea4-4fd1-96f5-634155f9bf8e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "721e0b76-bb0d-41c9-87ff-56733777d05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ce20f368-7e87-43ca-a0cc-5b489a77909d",
        "cursor": {
          "ref": "2600d377-a797-4620-b47b-b8755e115903",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ab2ea49b-d1a4-467e-8c9e-4238c9ddd104"
        },
        "item": {
          "id": "ce20f368-7e87-43ca-a0cc-5b489a77909d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d44cdac-56e6-48f7-b9e0-3a8820155680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6053e0-67b9-4da1-a771-4efad726c35d",
        "cursor": {
          "ref": "34546080-0af2-4b7e-afd2-b8738cb7d588",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c85e8e12-47a3-4fc9-8624-443e58aa62c2"
        },
        "item": {
          "id": "0a6053e0-67b9-4da1-a771-4efad726c35d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "add70c95-6f26-4313-82c2-d28522e6a3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8568c0b-029b-41f4-b031-f85a62118166",
        "cursor": {
          "ref": "65d303dc-5c9c-45d3-9200-85c076871f80",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1a75d476-eae5-4120-bdf4-44f23d593cc1"
        },
        "item": {
          "id": "b8568c0b-029b-41f4-b031-f85a62118166",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c1fdf1a3-ed75-46d6-aa00-f731bad3d911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24483a84-0dc9-400a-9eb8-23214c09da67",
        "cursor": {
          "ref": "58399b2b-f43a-4556-95ed-b71594cfe85b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e5b1b800-1082-4a3a-be36-5da269df4d15"
        },
        "item": {
          "id": "24483a84-0dc9-400a-9eb8-23214c09da67",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "de653e46-935f-461a-b500-43b954735898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89804e4d-691c-4178-b878-d3ee22dbf365",
        "cursor": {
          "ref": "97438866-b4e0-4b42-9001-0701451cef7e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2f9f006a-d97a-4f8d-bbd9-6ba41943e379"
        },
        "item": {
          "id": "89804e4d-691c-4178-b878-d3ee22dbf365",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6fa97b67-133e-4a37-aaba-cdf5be674944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9f4d30-ccee-481a-858c-7e4a80c83b4c",
        "cursor": {
          "ref": "3c2ab3e6-5be9-4cf8-a20a-ace4cce64286",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "56cc60a2-fed8-4185-801e-4344d9234d27"
        },
        "item": {
          "id": "aa9f4d30-ccee-481a-858c-7e4a80c83b4c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebe63cb0-1476-4781-8096-8b207ff1a90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67e4fec-6906-4c1a-ba9d-dcfc2e7e348e",
        "cursor": {
          "ref": "09e4d494-517d-4d2d-babb-4c95b3469a0d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "95e0790f-6414-4e80-a6ce-05364a8692c7"
        },
        "item": {
          "id": "d67e4fec-6906-4c1a-ba9d-dcfc2e7e348e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f24ef164-cf2f-464b-b19a-d012b72097ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1030652-6938-48a2-bb42-386d4a3d1ce4",
        "cursor": {
          "ref": "b98c76de-3391-4c92-b3c8-900cdd38923f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "152a0dd7-5d27-4177-8455-38be4f884dcf"
        },
        "item": {
          "id": "f1030652-6938-48a2-bb42-386d4a3d1ce4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b0fab435-c3e9-4ba2-a101-f89aef3db516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927c2444-f85c-4372-9536-be1731f66fe6",
        "cursor": {
          "ref": "7a648293-1e6d-4e0e-833a-5693e7b2611c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0a8f94eb-1727-45a4-b118-1a2c52fb40b9"
        },
        "item": {
          "id": "927c2444-f85c-4372-9536-be1731f66fe6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "46c87596-5a0b-42b6-8dbc-c79753b7c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c1469-65e4-435e-a2cf-71f02b40c26c",
        "cursor": {
          "ref": "887473d3-2854-4814-a68b-ca2e17bf68fb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a913b7d6-4d96-4a93-9bd8-d2d535fdd584"
        },
        "item": {
          "id": "168c1469-65e4-435e-a2cf-71f02b40c26c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1273fc74-a6db-443f-8315-1781b60146a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e2092f-47ab-4327-9e88-c93f7b8e2a78",
        "cursor": {
          "ref": "b1ec67b3-74f4-4e75-b2fd-75afa4064e8d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fec6d87f-21dd-4230-a447-131f72e2a3a8"
        },
        "item": {
          "id": "57e2092f-47ab-4327-9e88-c93f7b8e2a78",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2ca0a668-bafa-4c97-9082-2b66cf46d79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e2855c-37be-490e-b5f4-8037f04800c9",
        "cursor": {
          "ref": "88163173-3dc5-482d-b83e-b7c1f6269977",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "74f54a9b-7c39-4d40-b0be-4ed376037e97"
        },
        "item": {
          "id": "21e2855c-37be-490e-b5f4-8037f04800c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "860cad87-ea8d-4af6-b78b-86f99150a88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdd0530-7aaa-48fd-8d27-05f94eda3273",
        "cursor": {
          "ref": "2b682a99-43a8-49e5-bc72-4e437836cf3a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f4cbe087-562a-40d9-bf15-35b29ad67fc6"
        },
        "item": {
          "id": "bcdd0530-7aaa-48fd-8d27-05f94eda3273",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aab4637a-69e9-4edb-b982-a05bba9fa5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96f4f21-f0e9-40ba-a2af-f0799d550a65",
        "cursor": {
          "ref": "e0fe7700-ea85-4bdc-a909-7e145ac23ad7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "96744f83-bdf9-49e3-aca1-be1be8df219f"
        },
        "item": {
          "id": "f96f4f21-f0e9-40ba-a2af-f0799d550a65",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2e85a11d-5d82-4b20-bc2a-bc7bbee09974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96387e1-5891-4537-b4df-f763987dcd27",
        "cursor": {
          "ref": "03f3d71c-248b-406f-b211-175ee5a4312c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a4240e0b-574f-4250-8c0d-a69f2086137e"
        },
        "item": {
          "id": "b96387e1-5891-4537-b4df-f763987dcd27",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "af305fd9-9d9b-419a-8cac-beb6de4b7262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79577c49-d347-482e-9db0-b5bbab05b840",
        "cursor": {
          "ref": "b0bc63a4-cdf1-403a-b17e-a6c0affb2a1a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "afc8ae94-cb05-4104-8255-2b0df3b6015a"
        },
        "item": {
          "id": "79577c49-d347-482e-9db0-b5bbab05b840",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "418613dd-8052-4a37-a05b-321359783e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47afcfd9-bbef-45c9-8249-df7e1bded9d1",
        "cursor": {
          "ref": "0eead0af-eedc-4d0c-980d-da0147d4ca41",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6f6a568e-e767-45ad-8e1b-dc9ca27d6098"
        },
        "item": {
          "id": "47afcfd9-bbef-45c9-8249-df7e1bded9d1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59044c89-9b9d-46cb-b612-0baf662c0d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96963704-ddb1-46d4-9449-d5265146ecf0",
        "cursor": {
          "ref": "234dd299-22ce-4696-8cc5-9462c2293f21",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88aae585-a21d-45cb-8027-f2b9240955ce"
        },
        "item": {
          "id": "96963704-ddb1-46d4-9449-d5265146ecf0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "138f8a7b-9e15-4da8-b887-836c876cc58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9a2a00-a78a-4641-b0b7-d974f3c3c638",
        "cursor": {
          "ref": "57103c0b-31d4-445f-822b-84ee60af4a4d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "de20ed0d-3f81-43df-b5f1-55c7dbbbb36c"
        },
        "item": {
          "id": "7a9a2a00-a78a-4641-b0b7-d974f3c3c638",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d8aaaf80-8394-4c8b-8638-0bbd694e1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed885e7-0ebc-4e92-9510-d00dfd4401de",
        "cursor": {
          "ref": "9db3d1f6-de97-49e1-8f13-c4c231793ae6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b1daccac-9ec1-433d-9810-29d95ba4d395"
        },
        "item": {
          "id": "7ed885e7-0ebc-4e92-9510-d00dfd4401de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "57cf12c3-bb69-454a-8a96-10920d9d2e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6c2fb1-e9a0-41a6-8485-ec55a75350dd",
        "cursor": {
          "ref": "93a4de4a-db55-4240-8841-0c409bb75a3c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "90d9c1b8-3971-4cd3-af20-0f04b7ff4afe"
        },
        "item": {
          "id": "cb6c2fb1-e9a0-41a6-8485-ec55a75350dd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "273d9e69-c5e5-4a57-8b06-e16d02d02bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff52df-31af-44af-8ebb-271343e71728",
        "cursor": {
          "ref": "5e79e378-4f01-4742-960f-bd6e283704ca",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c1f89d1e-e7c7-47d3-9f2c-7c6c2ea07039"
        },
        "item": {
          "id": "92ff52df-31af-44af-8ebb-271343e71728",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fa582777-7ce6-4610-84e7-94be7d3233ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976574c6-b73c-43be-ba1f-0447c8df3129",
        "cursor": {
          "ref": "7955a0a9-574e-4a42-b4a1-3ee23600ba4f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7b4ce8da-af29-4088-b13b-5aa9a6675569"
        },
        "item": {
          "id": "976574c6-b73c-43be-ba1f-0447c8df3129",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c450e1a5-26fd-47c2-bc46-f036cebc930e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176667d1-1c03-4334-a2d5-08bb561d24d5",
        "cursor": {
          "ref": "d2507767-f938-4bb6-832a-595e8d31b0fe",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "242d9cf5-b92a-4a37-a00c-9d94cd451841"
        },
        "item": {
          "id": "176667d1-1c03-4334-a2d5-08bb561d24d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7aee2028-fc11-45b7-8f37-fd4b5e09d03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38275294-339b-4492-8e72-bec8941bdda4",
        "cursor": {
          "ref": "d1118a5b-213d-4379-bf9b-31f263437462",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee0c3e7e-d035-4854-9711-e9272cbbf988"
        },
        "item": {
          "id": "38275294-339b-4492-8e72-bec8941bdda4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f47fefff-dbc4-4a66-ba9b-dd88d6a0fff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241dc982-016d-45dd-b5aa-68a5a474fb93",
        "cursor": {
          "ref": "ffe6202e-f487-406e-b12c-1f97d0f5fb61",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "057fb113-8ca6-42e3-ae70-b6e71f8da9b8"
        },
        "item": {
          "id": "241dc982-016d-45dd-b5aa-68a5a474fb93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e7c01d9b-ef0a-49b5-8586-1a5f1c378b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e2609-a779-4330-b844-0401a682d2f3",
        "cursor": {
          "ref": "9090f189-21df-4e38-aab1-e1b11b157552",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3f10d1bc-bc1d-4b7b-be21-dbfab929632e"
        },
        "item": {
          "id": "630e2609-a779-4330-b844-0401a682d2f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6332bd3f-7c8d-4051-8509-698087002e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac89566-ac0c-4543-aa2d-fe8135942f24",
        "cursor": {
          "ref": "25bc86f2-1d67-476f-a5be-774bb0867de4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "40dd27d3-5b96-4aa6-afe5-7aec2b907275"
        },
        "item": {
          "id": "cac89566-ac0c-4543-aa2d-fe8135942f24",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f7e1d867-ca49-4a1e-aef2-98f15a030ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653988b-ca38-4481-b3e9-9df4c8cc2df9",
        "cursor": {
          "ref": "f530b2ef-8cad-4aab-91f4-a8998ceb77d0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "65d19a81-dc0c-47a3-bab5-da611c0b7a60"
        },
        "item": {
          "id": "6653988b-ca38-4481-b3e9-9df4c8cc2df9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "998483f5-0c41-4c42-b94f-3b122b6db8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc51302-a10c-4071-b499-017e3fbc2e58",
        "cursor": {
          "ref": "5f3f6a2b-721c-4cd4-8b7e-266935648dfc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2b16bd74-00c9-40dd-ad47-dfcc1a27b9fe"
        },
        "item": {
          "id": "0bc51302-a10c-4071-b499-017e3fbc2e58",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c49f613-15a5-465a-92f3-3401b4237781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2460910f-de1a-448a-b390-c01916d1aec7",
        "cursor": {
          "ref": "f4982655-7d94-49fd-9caa-d1eac0d012fb",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "67ce8097-bdf5-4116-af51-39cbc62b6225"
        },
        "item": {
          "id": "2460910f-de1a-448a-b390-c01916d1aec7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2da89219-b36b-42c5-9ce1-91b21e7f48d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab303c3e-9478-4d5b-81a7-8d9bca1d13ad",
        "cursor": {
          "ref": "773b0bd0-1e08-41ca-b4d2-4d7f7840283e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e2210ac-7c57-452d-bde5-d79a4dc46074"
        },
        "item": {
          "id": "ab303c3e-9478-4d5b-81a7-8d9bca1d13ad",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d554d893-0e0d-4616-8b98-acd82ca59bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86242a97-7689-409b-aa7a-0c83010c5df9",
        "cursor": {
          "ref": "c444504b-cc93-4341-9aab-073a0e1df00e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "294b59d4-988a-4ff0-a81f-52d21a14925e"
        },
        "item": {
          "id": "86242a97-7689-409b-aa7a-0c83010c5df9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c25da9ec-cc8f-4880-9987-504e174539e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c823da3-b0ab-4094-8460-f52a3ba5e513",
        "cursor": {
          "ref": "09a94c47-6b1f-4c2f-9166-d74299026408",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f80afaba-0586-44ba-8cc6-c8da591cc256"
        },
        "item": {
          "id": "2c823da3-b0ab-4094-8460-f52a3ba5e513",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee54858d-af51-495a-ab64-d20062764999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d071a4f0-016d-4d97-a7f6-ca987c46595a",
        "cursor": {
          "ref": "94830e25-a4be-4420-8ab7-30a325832a79",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "04966694-58e9-4f63-92c4-d2a090050500"
        },
        "item": {
          "id": "d071a4f0-016d-4d97-a7f6-ca987c46595a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d3e0d304-91ea-45d3-b100-563fb8e1a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5630a1c3-dd2c-4514-b36d-23fb9acb5701",
        "cursor": {
          "ref": "d0bfd5ec-bf5f-4a08-9413-6612f5c3acfc",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a515c767-fc76-4890-822e-380230ae1910"
        },
        "item": {
          "id": "5630a1c3-dd2c-4514-b36d-23fb9acb5701",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93f6c049-6bfc-441e-be0c-5e34e1d5f9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23bf60a-7c81-434a-a972-7d4ab4922617",
        "cursor": {
          "ref": "f45d9fe7-3ae9-4771-a157-cae17653c0b3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "23e2537f-d3aa-4123-8d4b-2e48da20419f"
        },
        "item": {
          "id": "b23bf60a-7c81-434a-a972-7d4ab4922617",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cfea2ce8-aeae-45c2-8f72-5bd6ea3075ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7ea7aa-33d4-43bc-8710-97e4b87c3142",
        "cursor": {
          "ref": "7441eadd-4463-4cc7-8ddc-a876907fc4e5",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "37342b92-ff80-4d3b-97fd-6364e44674cc"
        },
        "item": {
          "id": "9f7ea7aa-33d4-43bc-8710-97e4b87c3142",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "73d69fa9-b29c-438c-a497-5e8ecbc99ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cb9cd6-453c-4db8-b5dc-e20c3ef1ddde",
        "cursor": {
          "ref": "fef45e9c-b320-40de-ab4f-787520066610",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "430208dc-94af-45ed-9b4f-094d4de103d2"
        },
        "item": {
          "id": "88cb9cd6-453c-4db8-b5dc-e20c3ef1ddde",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f7565c24-5db0-476a-b0e3-3c4ce6c07d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033442c9-4b51-4955-80a9-171e57724a4d",
        "cursor": {
          "ref": "17d3fcc9-dbc8-439d-a06f-d0381a5a056c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1d5a6cf6-167b-4b30-814a-f12ef6e7e4fc"
        },
        "item": {
          "id": "033442c9-4b51-4955-80a9-171e57724a4d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "53544f77-a242-4af1-831b-150b240e5fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c9526-7708-441a-a44c-95fc7d4d3ebf",
        "cursor": {
          "ref": "097d404e-9208-4b25-917d-bc0761cca495",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b8ec49bd-b38d-461f-9767-ffe66c663e6a"
        },
        "item": {
          "id": "f04c9526-7708-441a-a44c-95fc7d4d3ebf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ab0cfcd4-675d-42de-8ded-696fe7d30690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd212ae6-7cb7-4521-bd61-700c7e5cae4f",
        "cursor": {
          "ref": "0e1e9c68-544f-402f-99a4-86b13b7eb5aa",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "583a07eb-a353-4409-98ac-65010f5b4811"
        },
        "item": {
          "id": "dd212ae6-7cb7-4521-bd61-700c7e5cae4f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1bdf885b-943d-415d-b3f0-2b9c89e4ac7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8ecd70-5057-40ef-9ed4-cefb4dd33bca",
        "cursor": {
          "ref": "71578842-77ac-4b85-98d1-2fdf6c962260",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "98b007ea-888f-4613-a1f2-21f5427e9583"
        },
        "item": {
          "id": "6c8ecd70-5057-40ef-9ed4-cefb4dd33bca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3a47e9a0-fdde-4856-96c0-ad04af393951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c572aa61-912d-4991-9486-f56879086fd1",
        "cursor": {
          "ref": "5e1364a3-9889-4e56-b1f5-83d0cf804167",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6943430a-e5f1-4867-b80b-bb1eae562abf"
        },
        "item": {
          "id": "c572aa61-912d-4991-9486-f56879086fd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "908d8201-60e1-45a7-81e0-9ab91dc83e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681b034c-0a2c-4b32-b62f-35cd2ee4c7d7",
        "cursor": {
          "ref": "9ce3a3f6-8a04-40b8-aab3-e8a802becc18",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5dabd867-7a4d-4ad6-ab6b-ac678c27c72c"
        },
        "item": {
          "id": "681b034c-0a2c-4b32-b62f-35cd2ee4c7d7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "86dc564e-da08-49e3-b886-18c165a5b176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cd2139-ece3-468e-a52c-f26de34a0fdb",
        "cursor": {
          "ref": "170e0c69-dec7-41dc-8968-76a1d0408255",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f029f1d7-0519-4b14-9b10-1903cc0557a6"
        },
        "item": {
          "id": "83cd2139-ece3-468e-a52c-f26de34a0fdb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f7e3b0c4-13f1-4399-ab64-84a96c07d47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d5d1e-355b-4d92-8675-8c2d2ab3f145",
        "cursor": {
          "ref": "00b2376d-167d-44d7-8135-dee8b9d52fb3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "12c45710-c610-410e-b3fc-910afa33b4a3"
        },
        "item": {
          "id": "328d5d1e-355b-4d92-8675-8c2d2ab3f145",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4bdd5002-0ec3-4ee0-b42e-33dd38d117d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e78ce78-648f-4b1a-9c0b-9a4b6950df24",
        "cursor": {
          "ref": "3a5143f5-209f-406c-9fab-9d770dec2f3f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1c05fe02-1a45-4644-b653-d099ca548ee0"
        },
        "item": {
          "id": "9e78ce78-648f-4b1a-9c0b-9a4b6950df24",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "464a8036-49a6-41a2-85b1-091c400952bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b47d6-d44d-422d-9ba8-9d21be136c2d",
        "cursor": {
          "ref": "464523c6-6647-4e37-83e3-5d25bf27fbee",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6fdbea84-4296-4a98-ba58-1c347bf827f8"
        },
        "item": {
          "id": "060b47d6-d44d-422d-9ba8-9d21be136c2d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2cf07162-839c-42cf-b578-cca9143a3d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52b0913-7147-4479-ac0d-fb5f9bdc7f4a",
        "cursor": {
          "ref": "f6b14cbb-d3b8-4c05-89ff-8efccf5ea173",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "15444736-69e8-4bba-8d9b-13e130737f66"
        },
        "item": {
          "id": "b52b0913-7147-4479-ac0d-fb5f9bdc7f4a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5245d81c-7741-4fd4-a2de-1683ee9ebb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b4d4ba-406a-4419-a6ce-bbc65daf58ae",
        "cursor": {
          "ref": "dab72bd3-9273-456c-8af0-36805f35de19",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c35028a0-6c20-4246-9ff1-2758f24be31a"
        },
        "item": {
          "id": "a7b4d4ba-406a-4419-a6ce-bbc65daf58ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5d5a8cb8-6075-4b74-bf2e-455d650d1262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6be16c3-b326-4bd6-b43f-b715261c4977",
        "cursor": {
          "ref": "9e5b7ad9-8c97-471d-a5ca-cf2e409f3e92",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e381f52a-1319-4d6d-9a67-46105205aac3"
        },
        "item": {
          "id": "e6be16c3-b326-4bd6-b43f-b715261c4977",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e5300fff-5b17-4d91-9d7f-f4715fee4fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c78988-c57c-4847-8791-09b8d8757e0e",
        "cursor": {
          "ref": "6313e055-ef91-4205-84bc-02e472e2bc75",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eef44e83-1afc-4e0b-a7e5-75a819ccac23"
        },
        "item": {
          "id": "e3c78988-c57c-4847-8791-09b8d8757e0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b3c72b61-099a-40fc-af7f-61abf0f0ccfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc9828b-e076-46c7-badd-bb8d698f757c",
        "cursor": {
          "ref": "ebed32b8-8bb3-491b-9e1e-b2909d1a3258",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a352ac8d-e1ed-4aad-bac3-30b13962e715"
        },
        "item": {
          "id": "1bc9828b-e076-46c7-badd-bb8d698f757c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "436219d9-22eb-4c89-bc3f-bc9cfcef2426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bb8ef2-8919-40ba-8a22-9d182dd15c7b",
        "cursor": {
          "ref": "b6133c37-50ae-4611-828a-bf48472cf2cd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a61dd85c-6246-4849-b737-8264906548e8"
        },
        "item": {
          "id": "f1bb8ef2-8919-40ba-8a22-9d182dd15c7b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "53943d05-1349-4a9b-9820-02ba8b73f377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea709b32-948a-43f2-8848-3d723fa9cd9b",
        "cursor": {
          "ref": "90e2b87b-69f6-4f6b-9549-d5fe207c9b75",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c85396e3-fd5a-4b6e-83ef-6f6132f52ff0"
        },
        "item": {
          "id": "ea709b32-948a-43f2-8848-3d723fa9cd9b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1c5d546-0c26-4ca7-adde-6b46728aa8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63586ffa-ab01-4f19-85d7-83dbce348ee0",
        "cursor": {
          "ref": "9e02365d-f45c-4da7-8abc-b39f4577efd4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7eaba857-c042-46c4-ba9e-298841ab278a"
        },
        "item": {
          "id": "63586ffa-ab01-4f19-85d7-83dbce348ee0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "70ddc054-d983-4616-8dcb-0b25a343fbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9d2c9-f964-4556-b4a8-4df199994f91",
        "cursor": {
          "ref": "2d75980d-2696-4160-b300-607bac40ab1c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f4067907-ea62-45d9-a566-90d27c0364a0"
        },
        "item": {
          "id": "6af9d2c9-f964-4556-b4a8-4df199994f91",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9944b09b-7fb3-4e54-b46e-7ae2759dc3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8dcac2-4c50-4df1-9555-14409230b3bc",
        "cursor": {
          "ref": "87aab93b-2dfb-48ce-b19d-03ef916a74b9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "133f1394-3bf4-4f51-8738-fa3c607d2e5b"
        },
        "item": {
          "id": "ab8dcac2-4c50-4df1-9555-14409230b3bc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e09cef90-6bde-4d6e-bd63-8e130cd0a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74131c3-eb71-4305-8eb6-6a1bc827283d",
        "cursor": {
          "ref": "17eb1f42-d541-497e-ae79-3c99d03883df",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "78897c41-d91a-46cb-a4bc-966a3b28f526"
        },
        "item": {
          "id": "c74131c3-eb71-4305-8eb6-6a1bc827283d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "685cea98-951e-418f-addc-41daa2f37383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dbdc47-38aa-4fe6-9c80-e598592f8049",
        "cursor": {
          "ref": "3d1c753e-e194-47a5-aad4-4c7bf813533b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "76d37e72-ea15-487a-b79b-fd32859970d7"
        },
        "item": {
          "id": "73dbdc47-38aa-4fe6-9c80-e598592f8049",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8dc6f616-15e2-4b1d-bd1b-ad80aac7d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a08a853-2e4f-489c-bd41-dc8fbb8a5873",
        "cursor": {
          "ref": "b1090fa6-4776-4bdc-a94b-7a12b79fb5ad",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9ca2d983-5aeb-4668-8b59-6f170b8d3f5d"
        },
        "item": {
          "id": "7a08a853-2e4f-489c-bd41-dc8fbb8a5873",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d81b6307-83a6-4c25-bda6-070b28d1e24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497bce4c-3fcb-4728-9049-58a080c227cf",
        "cursor": {
          "ref": "f340b3f0-2f0b-4e67-bd59-e77a941c5b2c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "87a25fa6-5e6c-426b-89e9-0c85eb7dab4c"
        },
        "item": {
          "id": "497bce4c-3fcb-4728-9049-58a080c227cf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "46313ff1-a6b4-4df4-a514-90cf1e3df68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8d5527-57ef-4039-9b57-3ebb397440a9",
        "cursor": {
          "ref": "6335e9a3-d221-48e8-be42-7d13af5d717b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9c8d3a39-fe74-4dbe-a695-c3f45f06a288"
        },
        "item": {
          "id": "5b8d5527-57ef-4039-9b57-3ebb397440a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "12c6acfd-5d21-40d9-b6c9-b41474b316eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e89c42c-5280-4127-b0f5-fe6193a6f48c",
        "cursor": {
          "ref": "f1f24fdc-75e0-4b0f-97f3-eb1d9b954be7",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "92c2206c-bdab-49cf-bb65-95d1cc35d8f7"
        },
        "item": {
          "id": "3e89c42c-5280-4127-b0f5-fe6193a6f48c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4f038826-0fd6-41a0-8016-35f297f18ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bab6997-dde9-4be8-941a-9316325b79bd",
        "cursor": {
          "ref": "34345153-0749-47e9-a7ad-bef08e5792d5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e839e702-5857-4620-b889-a89d4db673fd"
        },
        "item": {
          "id": "1bab6997-dde9-4be8-941a-9316325b79bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "90d34371-73d7-4e2a-99fa-2c6a23bdb8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a684cb-2bff-4cc4-b8c0-0c1f7cba7d55",
        "cursor": {
          "ref": "ca6a23d7-6a65-41ee-8e15-2f862e0d9d68",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "17354ae3-7e3c-4a76-af37-4fba6ad3cd8a"
        },
        "item": {
          "id": "f4a684cb-2bff-4cc4-b8c0-0c1f7cba7d55",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "db709040-a108-4afd-b85e-b7fd5925f079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdca5fbc-b06e-4d7b-aafd-affd78ad74df",
        "cursor": {
          "ref": "1089d4fc-81e9-41a6-ba48-6fe31aaab4e3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "622ca1b9-e932-4711-9541-cead6b0a82f6"
        },
        "item": {
          "id": "fdca5fbc-b06e-4d7b-aafd-affd78ad74df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8c251588-5f50-46b7-bb09-15bf955cdda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d04e4ee-9c09-46d8-bf98-d0f5fec118ad",
        "cursor": {
          "ref": "210304e6-2e27-41c4-92a1-b04d4733d3a1",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8ebd007f-473b-4347-96d2-714fbb2d09ee"
        },
        "item": {
          "id": "7d04e4ee-9c09-46d8-bf98-d0f5fec118ad",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a5712445-a34b-4f2d-8e74-4d782f249ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2953ed-725d-45c7-b0c3-5c4d04cd9a53",
        "cursor": {
          "ref": "fbaa7c80-01f6-4206-bbe4-3f169bd558a8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fa82bcbc-67d3-4acb-a2e2-78d43fa802f3"
        },
        "item": {
          "id": "1c2953ed-725d-45c7-b0c3-5c4d04cd9a53",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e8a9a965-6446-41f4-8c73-6426c2bd5f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773b1c3c-3a79-4f1e-ac32-0f87d0e79813",
        "cursor": {
          "ref": "8e5bb7ee-60ec-49e8-8ee8-8dbc87133ab7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "96148ed5-ab85-48d9-9d56-afdc36899fab"
        },
        "item": {
          "id": "773b1c3c-3a79-4f1e-ac32-0f87d0e79813",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "723a2971-665d-444d-8ba3-503b61310c98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b753582-91b6-4465-ba67-c968355ac2de",
        "cursor": {
          "ref": "08b49058-4ff8-47df-a3cc-2346ac35a2b4",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e9e82e2-8047-41a4-bca2-7e2b5bfc9859"
        },
        "item": {
          "id": "9b753582-91b6-4465-ba67-c968355ac2de",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d16cc3d9-531d-4753-b4c8-180da8d6b6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d65032-1a8d-4534-9ff1-0288d453be08",
        "cursor": {
          "ref": "14bfd262-7a45-4912-81bf-3e2fde3ffd54",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a42e4210-0e50-4846-a793-041a2a245092"
        },
        "item": {
          "id": "a4d65032-1a8d-4534-9ff1-0288d453be08",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7356d071-4e61-4b1c-ace0-ae2043ca318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08363a9a-3c3d-4e76-957f-079f20fbf6b5",
        "cursor": {
          "ref": "95dbd529-f695-40b1-b215-9c7c9196dd8a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c314d337-3a7b-47c7-bd1e-84a1a13d3939"
        },
        "item": {
          "id": "08363a9a-3c3d-4e76-957f-079f20fbf6b5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "54bf05a5-d332-40b5-a0b7-cda8b80cfd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a35711a-63fb-47fc-8f0f-e50af67036e8",
        "cursor": {
          "ref": "fde78889-8bd5-4a31-85c7-51c6805a06e8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "11f32587-c942-4804-b310-7e5481e4b69e"
        },
        "item": {
          "id": "4a35711a-63fb-47fc-8f0f-e50af67036e8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "64ac8072-3957-4ae4-9aff-84085f020d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fad1f51-3fdb-425d-b41c-4996819e28dc",
        "cursor": {
          "ref": "ef5227c0-d29c-40d7-8367-c7ffbe02b230",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8f755a32-f13f-412a-b687-628e7e4f4761"
        },
        "item": {
          "id": "9fad1f51-3fdb-425d-b41c-4996819e28dc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "47c08ed7-7610-4658-9316-4976694b60c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189b664c-9ae6-476b-aa10-b99e4654a783",
        "cursor": {
          "ref": "96e71b0d-a545-48a7-ae9d-ce9830cc85f3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a8a7a418-dc80-4b5b-badd-f361a2122ea5"
        },
        "item": {
          "id": "189b664c-9ae6-476b-aa10-b99e4654a783",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c087f925-1314-482b-bc55-ee6c6bcbebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f153af43-e18b-48d7-a0fd-785421e7ce99",
        "cursor": {
          "ref": "a71cc18f-bf5d-4f09-9f5f-71124fd83cf8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9e070c28-b3e0-4f26-b7a6-793a6deaba5e"
        },
        "item": {
          "id": "f153af43-e18b-48d7-a0fd-785421e7ce99",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "348d355c-cfd4-4c61-8c73-ffea8a22ba98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea948b1-3919-49c7-babc-d7efd045bb25",
        "cursor": {
          "ref": "737aa070-c94d-413c-8add-66919c899134",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "db56de8f-474e-4d77-be16-ef4031c9aa7d"
        },
        "item": {
          "id": "7ea948b1-3919-49c7-babc-d7efd045bb25",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e9e0b6f4-fd48-4af8-961b-495d90251862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3257a490-d42b-44c6-82d9-4476f2fce05d",
        "cursor": {
          "ref": "5c8299f5-99dd-496d-a7e6-3e5ecac80137",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "42f056e1-b8a6-4181-bbb0-dcdb1bf0a655"
        },
        "item": {
          "id": "3257a490-d42b-44c6-82d9-4476f2fce05d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7b8d6660-130e-4665-84ed-e31837ddec5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c0cd26-fd68-4681-a516-275e079b132f",
        "cursor": {
          "ref": "8090e28e-b4d8-4851-b436-4a06286dbe3f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "02605100-e2e0-48c6-966a-7886a95653dd"
        },
        "item": {
          "id": "61c0cd26-fd68-4681-a516-275e079b132f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bc0565c6-a11f-405c-925a-7154a1645ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be67696c-430f-4107-a36c-1bc9bf0a9012",
        "cursor": {
          "ref": "8cd12bc0-2e09-4a53-b512-b6cd05920c4b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "334964ce-21ee-4293-afa8-853525420626"
        },
        "item": {
          "id": "be67696c-430f-4107-a36c-1bc9bf0a9012",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "889f8720-8ec9-40bb-ab35-47a4e30b2b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166bea03-a57d-486a-b33f-45ea239464b4",
        "cursor": {
          "ref": "acfd21de-a6fd-4341-af24-72ee9772bea3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "213bf72b-fe02-4b2b-b8cc-998063be80cd"
        },
        "item": {
          "id": "166bea03-a57d-486a-b33f-45ea239464b4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "782fc005-cb94-4839-a9fe-6c119cc10e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73155178-cbac-45ff-bba8-ba0db65c65ff",
        "cursor": {
          "ref": "cd67fe75-9777-450b-bcac-d5d9059861a7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "121deccd-52e0-434d-b6cb-f979ce8533c6"
        },
        "item": {
          "id": "73155178-cbac-45ff-bba8-ba0db65c65ff",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cf021786-13f3-4b24-871b-a5ca4ceb419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a9d8dd-c75b-4685-a096-e3430a01e4ec",
        "cursor": {
          "ref": "39a9c709-2797-4b91-8963-8d807b130aba",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7611f6e3-f7cd-4954-a420-4b896998defb"
        },
        "item": {
          "id": "61a9d8dd-c75b-4685-a096-e3430a01e4ec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "43971a04-f832-4eae-ab05-02d1066ea81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255919a-5e1f-4d9f-a163-8271ede10b78",
        "cursor": {
          "ref": "3dfa17b3-9055-49fb-b7ee-9a75992e14b0",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b698b2ed-c33a-459f-8ede-3a878088dc0d"
        },
        "item": {
          "id": "c255919a-5e1f-4d9f-a163-8271ede10b78",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58eeacfd-cec1-4490-98fc-d8d1bab7e74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52519571-d096-456f-99f7-13b31de4b61c",
        "cursor": {
          "ref": "5e4484dd-aaa1-4e5e-b5e0-a7ede3aed5a6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7285d74-2431-4bf3-a57c-cb68549685f8"
        },
        "item": {
          "id": "52519571-d096-456f-99f7-13b31de4b61c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "080af45d-9a44-42a4-abde-a3e4d84c6430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb3e94a-e658-4bae-b98e-197f6e189b65",
        "cursor": {
          "ref": "0826f67d-1a22-4f24-adda-e7c4ef82f821",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d3a76769-5849-4106-9fb8-9721da7a71af"
        },
        "item": {
          "id": "5cb3e94a-e658-4bae-b98e-197f6e189b65",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "61e2f775-3616-4ea8-aa96-3cac4134b014",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "9bbb0f8a-36cc-4423-ad1f-918727b8eab8",
        "cursor": {
          "ref": "2efd16e4-3dec-413f-8f97-e45ab54098c0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "44621488-a56f-4767-8309-be38892eba6e"
        },
        "item": {
          "id": "9bbb0f8a-36cc-4423-ad1f-918727b8eab8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e54b491e-1643-47d5-bbaa-ca87f19a845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a59ccb-a41d-4b37-ae13-c433760a077d",
        "cursor": {
          "ref": "06c6dc7f-f66a-4321-bdbd-0cad3acb7d5d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "499f07c3-03c7-42c3-89e1-7eacdb785a22"
        },
        "item": {
          "id": "79a59ccb-a41d-4b37-ae13-c433760a077d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9135eafb-3980-470c-96ad-3a8ef13e460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccc4042-650a-4534-9f43-b4d4e52671ff",
        "cursor": {
          "ref": "80267ebe-a5f7-45d5-a959-ba49ac32906b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "372fe015-a004-4814-8985-62184eb050fb"
        },
        "item": {
          "id": "1ccc4042-650a-4534-9f43-b4d4e52671ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d84e7a94-6f59-41a5-8d14-9dabc873b853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af40982-e640-4399-b408-a6168e1dc703",
        "cursor": {
          "ref": "b512aaab-2536-4fe7-9fab-95f956216a88",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "01255ce0-6260-485b-a52d-efca091f2deb"
        },
        "item": {
          "id": "2af40982-e640-4399-b408-a6168e1dc703",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4444ef21-2478-4753-832a-1d6e8ae1a36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3d905e-d4e2-4962-9cdb-6a37c8b7840c",
        "cursor": {
          "ref": "a7056628-3f03-4661-a8bb-738fbc54d375",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "97fe1cac-a5a2-4b3d-8ec6-7ae172d0484e"
        },
        "item": {
          "id": "1f3d905e-d4e2-4962-9cdb-6a37c8b7840c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b094a7b-3a53-4047-a771-1f8010c9e314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acd2cf7-ae09-4ba3-86f2-3a75c50d0139",
        "cursor": {
          "ref": "ea7f49d3-80ef-4486-86ce-8d9d85c38b7e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "04d2b15b-1471-4385-9165-cd762e927cab"
        },
        "item": {
          "id": "3acd2cf7-ae09-4ba3-86f2-3a75c50d0139",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b6552959-332f-43bd-8c50-b05027697b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f575ccd-f2aa-4cbf-a5ad-7ae4923f4801",
        "cursor": {
          "ref": "188fe928-eb8d-4551-b609-5730eeda7a50",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cb926f3e-04a7-47e0-b7c6-6ecad73df05f"
        },
        "item": {
          "id": "6f575ccd-f2aa-4cbf-a5ad-7ae4923f4801",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "efd307dc-46cb-410a-bb6a-b5d281e207cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a69b6de-b536-4c13-a029-552561eec82f",
        "cursor": {
          "ref": "362d26eb-fcb3-4f37-96cc-6ceeba5e7c58",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5b0fd24a-1a8f-4acc-bea6-151933471d59"
        },
        "item": {
          "id": "9a69b6de-b536-4c13-a029-552561eec82f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ca729ba-1938-4b3f-afe3-0647b58472bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcbf295-b1c7-4d86-9f5a-12f33bfd2a62",
        "cursor": {
          "ref": "aa06ab47-5c06-4ab5-8abe-e235721b0a31",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bb996e80-7130-4c79-b62a-6ef20cf35b17"
        },
        "item": {
          "id": "7fcbf295-b1c7-4d86-9f5a-12f33bfd2a62",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "12f716d3-087d-4636-bbd3-b0599fc4973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634ebe30-3f4f-426e-a3d2-062f9d47851f",
        "cursor": {
          "ref": "8238a83f-9e46-436e-adb1-f0a145ec504c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c582fe23-4122-426c-bc34-2b4253b27631"
        },
        "item": {
          "id": "634ebe30-3f4f-426e-a3d2-062f9d47851f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bd5baa78-b5b3-41d7-81dc-4e92e66b6bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b031bfd-0866-4fa5-9707-15f20d892065",
        "cursor": {
          "ref": "6669ced2-49a0-446d-9dcf-a68f3558de93",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cbad39db-0410-4ebb-810f-48bf655b091d"
        },
        "item": {
          "id": "3b031bfd-0866-4fa5-9707-15f20d892065",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17998659-076b-4087-ad6e-9781d9de4202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd419c-ab67-41e3-9f7e-903c4a1ad18d",
        "cursor": {
          "ref": "6c0848e8-6cb1-4057-b248-f6b7034d1933",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "afc8f06b-abb6-4d9d-9e4b-b2c2e9e46b5f"
        },
        "item": {
          "id": "f0fd419c-ab67-41e3-9f7e-903c4a1ad18d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "30dd3a8b-d4cd-410d-b35a-0b4ce99a738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72797ab9-ccdc-4ec2-9e24-ec66d7183308",
        "cursor": {
          "ref": "48000866-5710-4b26-8021-a771cfd5262b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1f7d9019-6ba5-4d73-baf9-cbcb1116b9e7"
        },
        "item": {
          "id": "72797ab9-ccdc-4ec2-9e24-ec66d7183308",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a75bd124-34e2-4075-a36b-153ca7ffaf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caf98de-fcde-4c8f-b23d-89ce6583856f",
        "cursor": {
          "ref": "204e6d1f-eab1-4894-811d-f6dc14cf455c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1798d905-8b09-47a7-9a46-6617de1684cf"
        },
        "item": {
          "id": "1caf98de-fcde-4c8f-b23d-89ce6583856f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1c57205a-52a0-45c6-bde2-7d99a4b51997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5c37a0-c7eb-44d9-87e1-40d86e738d97",
        "cursor": {
          "ref": "85a3e0a7-2c2a-473c-9fc4-2ae8501ba823",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a346c2aa-dc74-466e-aaa0-8e72bacac622"
        },
        "item": {
          "id": "ee5c37a0-c7eb-44d9-87e1-40d86e738d97",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3e402a8a-5c42-4746-93f9-4fe3481a6da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10504ba4-3d78-4050-866b-f3bc46a213a2",
        "cursor": {
          "ref": "81dfbc15-2ff2-4513-9148-720a07388758",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e9a615e6-8730-448a-863b-46543ad85318"
        },
        "item": {
          "id": "10504ba4-3d78-4050-866b-f3bc46a213a2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a23c89c2-c309-45c4-939b-e0441d674079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c634b0e-bb21-4a2c-b7a0-c511fb9a24c2",
        "cursor": {
          "ref": "ac556787-910b-470c-8348-6b7a55876161",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5f8da331-48a1-441f-a86d-e63f3750b02d"
        },
        "item": {
          "id": "0c634b0e-bb21-4a2c-b7a0-c511fb9a24c2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "df092789-250d-45e4-9905-7f08d7b81f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe465e0-5bb2-40b6-b779-f087d65b3ab8",
        "cursor": {
          "ref": "0f31b6ce-36b2-426e-8361-f1f090ad57d3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ea547c54-7f54-4504-92dd-de52cc3bc5ad"
        },
        "item": {
          "id": "bbe465e0-5bb2-40b6-b779-f087d65b3ab8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a8cf62fb-50b0-4925-8992-dc8e032aa2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd57daf8-c59a-4ec7-a650-f84f212d2adc",
        "cursor": {
          "ref": "0c9032bb-a2e2-422e-9949-ded8eac5a82e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "07e9b0fa-8011-49c7-b194-555acee0f2b5"
        },
        "item": {
          "id": "cd57daf8-c59a-4ec7-a650-f84f212d2adc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d48d07c8-fcec-47b0-9949-0b0fa6e6215f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5530f2-90f4-4409-a7a1-12b7baac89e3",
        "cursor": {
          "ref": "5402d4ba-74fe-4280-bc9f-b37f072d229c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "55ddfa45-9529-4ea7-9ae3-372ffe0f165e"
        },
        "item": {
          "id": "cf5530f2-90f4-4409-a7a1-12b7baac89e3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4db4d05a-a661-4267-97e2-1fc325c9c378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a11e0e-a688-42a6-b6ae-155aa4b4eb73",
        "cursor": {
          "ref": "1fe97a91-90ff-41a1-b267-9472c36e0bd7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f2db8e0-8ed8-4911-a089-2e7a9e7d819d"
        },
        "item": {
          "id": "33a11e0e-a688-42a6-b6ae-155aa4b4eb73",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23971669-1b10-4c1f-aa6f-c3815356739e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d17b2a-0ef3-4341-b89b-b1ee7f957c9c",
        "cursor": {
          "ref": "d915a643-3ea1-47c6-b45a-6737be9cc9a3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e5671094-3071-43a5-ab41-44911ed4e743"
        },
        "item": {
          "id": "f6d17b2a-0ef3-4341-b89b-b1ee7f957c9c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "41ec6527-6991-45f3-866b-a44750926b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d46afd-0146-45b8-8abd-b0fc87b772ce",
        "cursor": {
          "ref": "31f05921-5991-43fd-addc-898e163c6781",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "498e7fc1-3adc-4676-a8be-d32191de2464"
        },
        "item": {
          "id": "72d46afd-0146-45b8-8abd-b0fc87b772ce",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8086b39d-16b9-4e5d-a09b-4fbdfeda4a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03abc8fa-2bec-4de8-861a-91bf001887b2",
        "cursor": {
          "ref": "21f4e571-3484-49ae-a21d-d93c032d45ab",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7e1212c1-7e38-4f53-92dd-458b1d0e85f6"
        },
        "item": {
          "id": "03abc8fa-2bec-4de8-861a-91bf001887b2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c841e24f-9568-4e91-bb5c-b60521c78cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd721b3f-4caa-4381-8e88-2d9bcbec1f57",
        "cursor": {
          "ref": "83dac5c0-43eb-4ad9-ae5d-1494b779cd04",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1c258d6b-d6bc-49d0-b3e6-7e2e13258cee"
        },
        "item": {
          "id": "fd721b3f-4caa-4381-8e88-2d9bcbec1f57",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6bf5e840-f50a-4efe-9268-c407b2bd6544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79db87-c7ba-465e-ad49-feeba688dd37",
        "cursor": {
          "ref": "9f0b571c-6ccf-4302-bb09-660c8bc7fc20",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "710eadc2-d4d1-4c6d-acfb-a44e6955478a"
        },
        "item": {
          "id": "9d79db87-c7ba-465e-ad49-feeba688dd37",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0e039a27-8edb-403e-97b8-90698f2c10e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2b3396-dc15-463f-be99-4e1ca2c479ef",
        "cursor": {
          "ref": "4e57c1f8-cfa8-465c-94cc-4893256fd48c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa07bc6f-9cff-4a4a-a2f3-3008707eebb2"
        },
        "item": {
          "id": "6e2b3396-dc15-463f-be99-4e1ca2c479ef",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "427862d5-4366-44f2-ba05-68ddc267f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f0d7fd-6ab8-4c4b-af37-eeac13ebacdc",
        "cursor": {
          "ref": "61340683-421b-4ddf-af50-76e795f23270",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "109e3e45-3969-4a79-b45f-c8dc80dbfae3"
        },
        "item": {
          "id": "b9f0d7fd-6ab8-4c4b-af37-eeac13ebacdc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "01fbf4cb-ae0e-4132-8912-eae50652931f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ecdbf2-ff9c-4c3f-af1a-3e5560d47ab4",
        "cursor": {
          "ref": "73ee0c5e-acb8-4253-8f15-e85a82c4e2cf",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "77eeb4ba-cad0-450d-ae81-8a43505fb7d4"
        },
        "item": {
          "id": "97ecdbf2-ff9c-4c3f-af1a-3e5560d47ab4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1ae3ccc2-b18e-43ba-ace9-ab94ae224cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b1eb14-156f-4a73-8cd4-6d8f8f0cc4cc",
        "cursor": {
          "ref": "6b1a3219-9148-49e0-9cf7-c46b6536fff0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5c1791d3-19f2-4d35-b4c1-4f213a1c3345"
        },
        "item": {
          "id": "65b1eb14-156f-4a73-8cd4-6d8f8f0cc4cc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f231e346-2c32-4b19-b44f-304c67d51a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ee7aec-2b25-41cc-9c17-561e17a01f80",
        "cursor": {
          "ref": "b151f3c9-2bbe-4258-84a7-f9b74e8141bf",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "771a0ef8-3cbe-4171-b599-455bb14bef04"
        },
        "item": {
          "id": "17ee7aec-2b25-41cc-9c17-561e17a01f80",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5726b00c-543b-4b95-9b64-24197bf5d98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c486d4d-6fb8-40ac-9061-0d41c0d5e1bc",
        "cursor": {
          "ref": "41d5f64d-17f7-4282-afc6-2a4e6241a0a9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c84ed1d0-dbfa-4a85-a6eb-5193aeb5053d"
        },
        "item": {
          "id": "8c486d4d-6fb8-40ac-9061-0d41c0d5e1bc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e7b5df4-cc82-4eeb-a2ca-d85f088d15a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e28d91-afbc-4f02-89c7-e0e061f698d4",
        "cursor": {
          "ref": "9399bee5-3f0d-4b39-a82d-901907c26094",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2e2f9e7f-98c1-4d91-9dac-3914ba0e60f9"
        },
        "item": {
          "id": "67e28d91-afbc-4f02-89c7-e0e061f698d4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "25b62ec8-2f1f-4f90-8202-7c32e9dfd4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdafa3fc-9ba5-4201-8427-b00286b8560d",
        "cursor": {
          "ref": "cf1dbb94-082e-4142-bdca-8195c477795b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ecad7944-98ce-4703-bfe1-621d50a65418"
        },
        "item": {
          "id": "bdafa3fc-9ba5-4201-8427-b00286b8560d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "66f1d432-97c2-4adc-a610-116515d1564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a88457f-2777-46df-8460-92f535fc77d0",
        "cursor": {
          "ref": "75c33c99-1854-4983-9417-99aaea6c7506",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "53c6ab5e-3e8b-4d74-b2b0-27f66b005ee3"
        },
        "item": {
          "id": "0a88457f-2777-46df-8460-92f535fc77d0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b006b36e-10ee-4735-af3c-de18ca4628e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744cb742-4093-4cd7-95a6-9d37d71e4719",
        "cursor": {
          "ref": "b6b4fde6-95fd-4192-8375-d48591367dbf",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b14f92a7-150d-482e-afb3-42167b6306c7"
        },
        "item": {
          "id": "744cb742-4093-4cd7-95a6-9d37d71e4719",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eb5ded3d-f483-452d-b526-168fbfad288c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e36689-c868-404b-97fe-4fe5344bd42b",
        "cursor": {
          "ref": "f21b4025-c7cc-4774-b52e-01938208f80f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2906369f-2bc4-4b3c-b4cd-c9964bd9af47"
        },
        "item": {
          "id": "e8e36689-c868-404b-97fe-4fe5344bd42b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0ee9b206-a09e-45ff-8204-4f42b61cd323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84681076-05f3-44ae-85bd-4a99deee27c0",
        "cursor": {
          "ref": "7840bad6-9f9c-4ba4-83a8-dbdefaabd2d1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a2515443-39ac-46a9-82ff-23417e79309e"
        },
        "item": {
          "id": "84681076-05f3-44ae-85bd-4a99deee27c0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "31394ae1-8c40-4d74-a13f-237b176b1377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af966ec-8796-469e-9ffa-f052f99bdef5",
        "cursor": {
          "ref": "ab703139-bea2-48e4-ac1c-5f8920f7559a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8ec148bd-794d-48e9-a699-9e3dd92c3526"
        },
        "item": {
          "id": "6af966ec-8796-469e-9ffa-f052f99bdef5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "89ed6814-2c37-4a77-a2bf-e0fb1c46e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d3a422-e3ea-48b8-b2d3-2d7121b564ab",
        "cursor": {
          "ref": "ed140ce1-911b-4a32-b573-37587d6528e9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2fbbcc1b-9e1d-445c-8915-2a1a28516cd2"
        },
        "item": {
          "id": "d6d3a422-e3ea-48b8-b2d3-2d7121b564ab",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a9f4087-e348-4a56-982b-445fbac05267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a6755-e414-4eb9-b3b6-347f4b79a64d",
        "cursor": {
          "ref": "1565de0f-8c69-4c26-95a9-2271e8440d1f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "647c9c25-8a9e-4cbc-8ce0-19b67aebb63b"
        },
        "item": {
          "id": "b99a6755-e414-4eb9-b3b6-347f4b79a64d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "00394ab4-6795-41a8-bb17-e6b9f8113605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f6f87-59d4-4cf4-9559-6e21190fda27",
        "cursor": {
          "ref": "d0536aa8-c89c-4fd7-b709-ec037ee0d016",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "43cdb183-1ee4-4163-9ac8-c6708348a8a5"
        },
        "item": {
          "id": "5f0f6f87-59d4-4cf4-9559-6e21190fda27",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "33f07a2d-4be9-409d-8930-d16672a7987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a33dd90-118b-4404-b3c8-a317b0860307",
        "cursor": {
          "ref": "3d6414b4-edaa-4ce0-8d9f-07a36c6e04f5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e704803a-a9bf-4725-be96-73cf9a18e805"
        },
        "item": {
          "id": "9a33dd90-118b-4404-b3c8-a317b0860307",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "25562dc3-b4d6-4dd0-a7a7-1c66c819d49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdaab0c-7a22-4efd-8f22-0a93031c1d16",
        "cursor": {
          "ref": "2cd16dad-1584-4b48-81cf-6e4ead332104",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "afca4b8e-0e4c-4c3d-8bbd-4cc16bb816a8"
        },
        "item": {
          "id": "acdaab0c-7a22-4efd-8f22-0a93031c1d16",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c4f1e842-6643-437a-b5f4-2286c75d416b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b93951-d799-4f3a-88b9-89f0e786d3c7",
        "cursor": {
          "ref": "41b04c77-d012-45e6-b683-65e8af7fccbf",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cb122773-83d1-4088-a3ac-9621ee9fdf9b"
        },
        "item": {
          "id": "03b93951-d799-4f3a-88b9-89f0e786d3c7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "956a40e2-0649-4a69-bb10-7cd611473015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6381fb6d-bfcd-4350-900b-fa863afe28f9",
        "cursor": {
          "ref": "0e4fc8c8-8c7f-428d-baaf-e523b7f3d590",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37766d94-d3f4-4fd4-a08e-28a0b3bae61f"
        },
        "item": {
          "id": "6381fb6d-bfcd-4350-900b-fa863afe28f9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "48e01e2e-1a93-49b4-b9dc-8d94cca0b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eb0519-ca43-48fa-b6ec-192879ee0814",
        "cursor": {
          "ref": "e3bc459f-c385-4f71-8262-e9c0ec64ffb9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b55c8f6d-9487-4aaa-af56-e9e6268121b1"
        },
        "item": {
          "id": "63eb0519-ca43-48fa-b6ec-192879ee0814",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "98845e0c-e5c0-4f19-bd08-e3f0939bd5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51d2dc4-0577-48fb-8861-0576bf9ba3a2",
        "cursor": {
          "ref": "e278cb0b-4348-400d-beba-c4d7b013ed01",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9f8f5c13-41ac-4bfd-8ffa-037694361975"
        },
        "item": {
          "id": "a51d2dc4-0577-48fb-8861-0576bf9ba3a2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "abd3e7f3-5440-4029-b088-ba2791472282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c093e20-7ddd-4e31-9841-f51c5f234365",
        "cursor": {
          "ref": "7caec7a1-4538-4eb4-82d3-176483bc61b8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6bba70fc-fb58-410c-a464-8e172f55e71d"
        },
        "item": {
          "id": "5c093e20-7ddd-4e31-9841-f51c5f234365",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1bb4d83e-a960-445f-a2fe-aed9510dcb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d55f609-6117-42cc-ba99-013a2ad089c8",
        "cursor": {
          "ref": "ffc4c243-d830-4a3c-a71b-221daa3b57f6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "44ec4a29-9546-453d-8e6b-2f94ef52cec6"
        },
        "item": {
          "id": "2d55f609-6117-42cc-ba99-013a2ad089c8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d5721cc7-1aab-45e4-8e06-35446ae1ce4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f32f89-c16b-4e34-b5a5-a7e774de0710",
        "cursor": {
          "ref": "2796058d-23af-4c89-8fd8-7dcb36dbd859",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "00727f17-226f-41a8-aa85-cb5b18ff40d0"
        },
        "item": {
          "id": "78f32f89-c16b-4e34-b5a5-a7e774de0710",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "50f8d3ed-29db-4005-8b1a-a289554c9784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994c2cc9-23c9-45af-82f5-2284c5562856",
        "cursor": {
          "ref": "e8f0cfef-9fb5-4805-be3f-a22f1b08f204",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b2bcde90-8dc7-425a-988f-478fb6a33ff3"
        },
        "item": {
          "id": "994c2cc9-23c9-45af-82f5-2284c5562856",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c968f138-c06f-44a0-977d-988ab62ac783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d052dd6a-2d72-4514-9710-d142b2c50eff",
        "cursor": {
          "ref": "8c109b1f-9f20-44bf-9e5c-0943ab3703c7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d609fa71-b763-4a3b-b211-51f5da15c4a7"
        },
        "item": {
          "id": "d052dd6a-2d72-4514-9710-d142b2c50eff",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2a2e3de3-c31b-46a6-aa14-d763576356d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ec7f47-6e8f-411d-bff5-cd6b67ded891",
        "cursor": {
          "ref": "d083b4b3-7b70-42d6-8f75-bd6bea4a5184",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c8f0697b-9072-4f63-a5ca-33d45f7e7020"
        },
        "item": {
          "id": "61ec7f47-6e8f-411d-bff5-cd6b67ded891",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0b50aa20-98f8-496d-b112-9dec4ceff026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ec3da1-097d-4d8f-8e13-bf96a9cc82e3",
        "cursor": {
          "ref": "d409b529-2a39-44c1-ad57-37f07cd7271c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "eb85e04e-d2eb-4fd6-aa80-c89316d37a46"
        },
        "item": {
          "id": "e9ec3da1-097d-4d8f-8e13-bf96a9cc82e3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1be76321-fd2b-44d2-a2fb-b36d597ea5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d76922-5db8-454c-abcc-1ed1cff650d1",
        "cursor": {
          "ref": "ecaa1bea-3da0-415b-bd4c-6ab696857580",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fe36a609-fb57-42ec-a326-a70b88cd8e8a"
        },
        "item": {
          "id": "51d76922-5db8-454c-abcc-1ed1cff650d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "119eaa69-fd78-427b-9af3-df677a7a4ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf3328f-6039-4fd3-863d-61c8128abfe7",
        "cursor": {
          "ref": "290d6a85-ddac-4e61-bb18-049b14b60ab1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c1053972-1079-4aef-965a-c5fe64731176"
        },
        "item": {
          "id": "8bf3328f-6039-4fd3-863d-61c8128abfe7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "caff08be-0505-4d08-a4f2-f4abcc18a7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b680ffc6-9c94-41e8-ac2e-ac6698e73dea",
        "cursor": {
          "ref": "a1df37cd-d5c7-4fb2-b360-6e5762c959b0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "01c6582d-a17c-4e40-9cfc-f72d149a8761"
        },
        "item": {
          "id": "b680ffc6-9c94-41e8-ac2e-ac6698e73dea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d59dd58-18cd-459e-8344-0263f6e12aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e35934-6d8c-496f-8ae1-71f34a73b1a0",
        "cursor": {
          "ref": "7c715153-18be-46e8-9fc2-c526d3b3eba8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6a9ef43c-e8cf-44a8-a103-92216b7053aa"
        },
        "item": {
          "id": "46e35934-6d8c-496f-8ae1-71f34a73b1a0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7677b2a5-9bbf-49f1-8f5d-bcd81529efe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df80945-04bb-4a8b-9729-b189b15db085",
        "cursor": {
          "ref": "b79442b6-7728-4d57-b7e6-73298a2ddea6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5d453bac-b3a8-48e9-839f-8041de3fccda"
        },
        "item": {
          "id": "2df80945-04bb-4a8b-9729-b189b15db085",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "77f8d5bd-3eb7-47f1-8c84-c829ea92776d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef72243-81d3-4365-abe2-fdc72094520e",
        "cursor": {
          "ref": "8ddf691b-63ca-4392-b0d0-304ce475ef15",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "978e727e-7bf1-4e69-af32-84d01c5c434a"
        },
        "item": {
          "id": "cef72243-81d3-4365-abe2-fdc72094520e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1ec729b1-afb5-4618-8eae-b89d817217c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1e5745-6a4f-44b7-8212-085243d245f0",
        "cursor": {
          "ref": "ff572efa-d270-43a1-9c70-dd2b6a86a951",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f82a1b07-c752-4011-83e8-e10989d11ed5"
        },
        "item": {
          "id": "0a1e5745-6a4f-44b7-8212-085243d245f0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6429d5a-d6e9-4834-a964-ab844497b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fd3463-82ea-4238-8192-80774f38d1c8",
        "cursor": {
          "ref": "59d1da1c-c3b7-4854-82f4-7f39899fb2ec",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "40989921-39ef-42ab-9d1d-6b7beb7142e6"
        },
        "item": {
          "id": "94fd3463-82ea-4238-8192-80774f38d1c8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a2000177-b1c2-4efd-9079-d588f2377f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ed5457-5894-4b42-b640-b76d34cdf313",
        "cursor": {
          "ref": "a98686a5-a417-4501-8c76-8712cc86149c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ec37b7cd-57ef-467f-9d83-e0a00c99d5e3"
        },
        "item": {
          "id": "d1ed5457-5894-4b42-b640-b76d34cdf313",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "19ae8406-13eb-46ec-a862-f098bafcda62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d6b53-ca8d-48de-ac88-10f2651a08f5",
        "cursor": {
          "ref": "7de66a6b-21e8-448c-8cdc-18685a622070",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "57bb604e-700b-4d60-abc0-785b90566bab"
        },
        "item": {
          "id": "070d6b53-ca8d-48de-ac88-10f2651a08f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5dd6c451-a122-4dc6-9215-cb8e84dfbe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a3b6f4-5e93-4e48-bf83-2a6113350988",
        "cursor": {
          "ref": "0ce0d822-448e-424a-9eff-b032351385cb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d9a0da13-c84f-4151-8f01-d5aa3064d796"
        },
        "item": {
          "id": "16a3b6f4-5e93-4e48-bf83-2a6113350988",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b80683e6-a321-46f6-a8d3-b7108d20ad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d7e60f-4cc2-4d2a-8b15-76f81e4b68be",
        "cursor": {
          "ref": "ee308e25-87b2-4dd3-bc5c-a8759d8d6d32",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e5f90f76-5d00-4da4-83f5-2444e3d26b70"
        },
        "item": {
          "id": "a3d7e60f-4cc2-4d2a-8b15-76f81e4b68be",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d906d6d4-6b30-451a-85a6-55644566475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2668f4cf-1b2d-4e7b-bfdc-509ffce9ae36",
        "cursor": {
          "ref": "00ab4d59-6cd9-4464-8508-66f6c19b18db",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f8065392-3824-463b-870d-4b44333535fb"
        },
        "item": {
          "id": "2668f4cf-1b2d-4e7b-bfdc-509ffce9ae36",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "08eccab9-d7b6-48c6-9eb1-690bb0b38a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfa0c54-57ad-423b-94ea-23c24cfcbc07",
        "cursor": {
          "ref": "a5b8eecb-ec11-4e91-a70f-2efd3fe551cd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e5f2e3d3-7c86-40ff-a27c-11b95d5a11d9"
        },
        "item": {
          "id": "0bfa0c54-57ad-423b-94ea-23c24cfcbc07",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "59f38ad2-1e55-4b06-8fe3-70d13e343b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf8f623-6f45-461c-90d0-3337b5ec4539",
        "cursor": {
          "ref": "af2f6a69-d207-4ba1-b2fb-68d4e6cbd85e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "879b5e45-8895-4a75-8f15-a265d8cc70ee"
        },
        "item": {
          "id": "5bf8f623-6f45-461c-90d0-3337b5ec4539",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52357c82-0a58-4530-81ac-1fb431edd0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8be061-9e91-433f-916b-6196ad6da945",
        "cursor": {
          "ref": "9415452a-075b-4fcb-9497-b7ca62dfd3a0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "666e129c-9d17-4f48-8e12-8f3aee72a6c1"
        },
        "item": {
          "id": "5a8be061-9e91-433f-916b-6196ad6da945",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2ae0426b-f9ee-449d-8ab5-afb826d9cbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9e60c7-a92c-47a0-b30a-c37aaa1474d8",
        "cursor": {
          "ref": "bbcd547c-bc17-4e8d-8dd5-19b55f383de8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a1154979-52cb-4f24-be5d-8d0b31391dd7"
        },
        "item": {
          "id": "cb9e60c7-a92c-47a0-b30a-c37aaa1474d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80c6205f-ebc8-4276-9da3-1e4a4066e573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f49f11-92e8-4917-9fdf-399bdde89352",
        "cursor": {
          "ref": "6f5c189a-8b75-4797-bc92-3c7633d92c44",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d4869439-5a94-4f12-885f-746afac456da"
        },
        "item": {
          "id": "14f49f11-92e8-4917-9fdf-399bdde89352",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2147f14a-9e6d-45d1-ba95-e7b4148620fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0715a3-2c99-4990-8f01-354df8ce698f",
        "cursor": {
          "ref": "8143e7fb-f620-4e7a-8f18-88a2b084634c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a6dcfefd-b356-4a94-8572-336f44006d52"
        },
        "item": {
          "id": "fb0715a3-2c99-4990-8f01-354df8ce698f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d5fa850a-dc52-4529-b0a6-70665b4e0cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5464e2-6aaa-48a1-8a87-63ce7be7bb2b",
        "cursor": {
          "ref": "81a4f587-9313-4b35-be1f-1bbd348efbd0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4f92e818-2bf7-41ea-9d08-dab18f386e8f"
        },
        "item": {
          "id": "7a5464e2-6aaa-48a1-8a87-63ce7be7bb2b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c0683575-571f-4783-bb87-d7aa8648b1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776a8dba-8166-4431-a33a-f5c1a1a7c925",
        "cursor": {
          "ref": "7068cd76-87ad-4768-ab2e-c4b885513735",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "197e7c92-e89a-4fff-9449-2ea4c2151b3b"
        },
        "item": {
          "id": "776a8dba-8166-4431-a33a-f5c1a1a7c925",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8cf49343-77b9-4a30-9c43-a2f946d9c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b3e047-a57c-4c86-854c-67c9e7de46fd",
        "cursor": {
          "ref": "e35c956a-8162-4c68-aa6b-576246dca855",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "59f3d6ca-a9f6-48a5-9cf4-6778ca1a6f8f"
        },
        "item": {
          "id": "40b3e047-a57c-4c86-854c-67c9e7de46fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d7cc4bbd-14cb-47cb-8af6-71ae83a270c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4337c-751a-4026-8204-b8aaaa115dae",
        "cursor": {
          "ref": "b9b76a45-76d7-4f69-b8bb-c95ca4d8cb02",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8dc360d3-ccbf-4291-bbcb-b3f199180b46"
        },
        "item": {
          "id": "7fe4337c-751a-4026-8204-b8aaaa115dae",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4df5c26f-37af-439c-ae2c-023d3fe88cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2972432-10f3-4b31-91ef-de0acc7fc3e4",
        "cursor": {
          "ref": "7fafe22a-dc65-48f4-991d-808b6de7dd2f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1e9795d2-48cb-4bb3-8bd9-3be60b022ed4"
        },
        "item": {
          "id": "b2972432-10f3-4b31-91ef-de0acc7fc3e4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9e9caa11-fb34-4075-8015-125049396b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879dbcca-ccd9-4473-87ff-016e23869caf",
        "cursor": {
          "ref": "c95ad82a-8a5d-4c0c-8ef3-dbfc8a561174",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "28267773-edd9-4286-be66-3fa75dbe4004"
        },
        "item": {
          "id": "879dbcca-ccd9-4473-87ff-016e23869caf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "25379d7f-e3c5-4cad-9d12-e772193e75be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2570e81-9d27-459b-bfaa-d22e96b302f6",
        "cursor": {
          "ref": "d0b35ae2-4db5-4e16-a75b-682f8bdc9010",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0819f2f2-bb25-4f1b-ba6b-a47bba381ff2"
        },
        "item": {
          "id": "e2570e81-9d27-459b-bfaa-d22e96b302f6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c82b2abd-3149-463d-94c5-29e2d231424a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6848a9e2-c12f-4907-9798-0114cab6423f",
        "cursor": {
          "ref": "9c590e43-b457-4a05-a288-27a6e67aa415",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cab83301-655d-4bb5-b546-52068e518fda"
        },
        "item": {
          "id": "6848a9e2-c12f-4907-9798-0114cab6423f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "29744105-0837-4e2f-a099-c64df83e2427",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e79bfa-57c3-400b-ac46-c3669e5d9fbb",
        "cursor": {
          "ref": "2def033a-3b92-4116-beaf-11ef4d533187",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8fc71724-9e8c-4e11-bcb9-9a3295ce9b08"
        },
        "item": {
          "id": "87e79bfa-57c3-400b-ac46-c3669e5d9fbb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7565c89e-3b00-4346-a068-13db2b2ee63a",
          "status": "OK",
          "code": 200,
          "responseTime": 4504,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "987efc8e-bfdf-42e2-ac05-2782ba037d5f",
        "cursor": {
          "ref": "58e512ee-1762-4178-aa0d-8404c78a8b88",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9d894d60-37bd-42fe-8211-fa66e8146d95"
        },
        "item": {
          "id": "987efc8e-bfdf-42e2-ac05-2782ba037d5f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d8cc1910-43e6-4d71-b8ca-e0aaddcae2fe",
          "status": "OK",
          "code": 200,
          "responseTime": 2942,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4623e6e-5f64-45f6-92ef-dda9120573d3",
        "cursor": {
          "ref": "14dc5c2a-de1c-4e95-9e05-a46caa37ce1f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a93b59ac-3e18-4159-b121-601f25fbc7c1"
        },
        "item": {
          "id": "d4623e6e-5f64-45f6-92ef-dda9120573d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3da4877-a00d-49e7-b23b-160b3860043f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4623e6e-5f64-45f6-92ef-dda9120573d3",
        "cursor": {
          "ref": "14dc5c2a-de1c-4e95-9e05-a46caa37ce1f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a93b59ac-3e18-4159-b121-601f25fbc7c1"
        },
        "item": {
          "id": "d4623e6e-5f64-45f6-92ef-dda9120573d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3da4877-a00d-49e7-b23b-160b3860043f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4445b9-fb1a-4957-92f7-a69903742cd2",
        "cursor": {
          "ref": "4b1d76c6-5a38-486e-9722-e8b9df66acdb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4de5a7cd-f6a9-40c9-9bd8-24495b4665d0"
        },
        "item": {
          "id": "ff4445b9-fb1a-4957-92f7-a69903742cd2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a7016ee2-dbc9-4620-8a10-2d73c908156e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e79f29a-b800-432f-8fe7-e23dfc0562ac",
        "cursor": {
          "ref": "5e42e096-dc42-4a96-bb8a-e8fb1212d75e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "30c7dcdf-ec17-4e20-a1fc-21ce35bb0d38"
        },
        "item": {
          "id": "2e79f29a-b800-432f-8fe7-e23dfc0562ac",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c123ba9a-cd7f-4932-95b0-066a151d0169",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}