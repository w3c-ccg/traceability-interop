{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1fd5402f-a50e-496c-8dbb-d6790b6359e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "03a69609-68f7-4ce1-9be9-a9d59748da16",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba837d2e-5955-4957-8713-c6ba51e075df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9ea5aa4-5d04-4b6c-98a9-a3017b124ccf"
                }
              }
            ]
          },
          {
            "id": "37e21787-f2b1-4757-b432-0d3df8565548",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54e633ac-1fe6-4050-a867-1d6ea0267e76",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e70e55c9-6c68-454d-a548-64334a37bd42"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2fbbf647-b739-44a9-8297-c5c0d0ab5aa9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17932efd-0c37-4436-8942-10fc1fb7c5cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3064701-28e4-469c-967d-dee139b3712c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4562ec0f-62de-47a2-b8e5-47de7ac39045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0db4e28-d026-4c73-a8d3-7c82667199a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0fea459-ac04-4e8e-a083-ca56267fdd7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62b1c918-b01f-4dfa-99f4-aad585e4a378"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13156444-e402-4731-a554-84b88246e96f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a090a44d-7ba7-4417-9459-c2c2e7e8587b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ece56050-250e-4eb2-be45-8a391ce57988",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1fa22abf-b78e-407d-b244-3d8304f01d37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8d621d5-a4e7-479c-ac3b-5bf0d7063ecc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ee88375-0edf-40dd-9f47-a6772f2576da"
            }
          }
        ]
      },
      {
        "id": "59e0e064-87dd-41fd-8235-f51e13551b2f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "51829b8a-40f3-49be-b211-ce6160db51cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2034898a-3c03-438c-93d7-33b85af954b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee75a302-a0c4-4ebd-ac84-7bf88dbf532d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e852b774-4bc3-4eb1-8b7c-7889bd276af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2cf8e40-7dfb-4588-835e-7e5efeef07f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b3e918-8919-4c15-8374-1d54c020c38a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d705a-7be3-42a5-8a66-725eabadfef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9248cfc-062a-461a-96ed-d69a67d64fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5e141e-2a57-4322-b019-59f162ea1db7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd8e726-4332-4b45-a4d7-22d895dd5756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee4cf148-0d5c-46ae-ad87-a6107317e428"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fd3f5e7-2c94-4730-8cd6-77ff99a41aa0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcab80a9-cf0a-48c5-b59b-65eba4c84f65",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de912767-0e62-490e-9cad-4f3f644e3d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b91736c2-8611-448a-94b0-8005072c230f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b6375b-550f-46e8-87d5-dceaa624af75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f73f84d-5f26-4c40-aca0-d7ef8aae2929"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dc33a9d-a4e8-447c-b093-57cc67d78fb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b27fb426-d706-4c00-a46a-cae637e83742",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9616d6f6-c4cc-4cd1-bd90-3efa5f230acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dec87721-f595-45b9-97da-af9addb23fb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "068052d9-bc24-42c1-b27b-6d1ca1294689",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c952ce50-a8a8-48a6-8e25-ea2b859cb77a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3a795c1-0e7a-408d-964d-26613bd053ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c9341ca-2dbf-4df0-a75b-b94057ad9629"
            }
          }
        ]
      },
      {
        "id": "88c2f0be-a49d-426e-847f-d725d38e3c0b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5f169713-e428-491e-bb10-9dab50ae8065",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78818c6a-f139-4a6e-91f1-f679aabd7a9c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25e7f17e-f175-43c7-b79a-62b3091a92b9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6e2700-c1a0-4014-bbda-2475905c25a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c6fc43-d705-4c2e-9919-04e42c223d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c71672-93e3-435c-8e55-9a9727ad4752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57066a1c-d9c8-4581-a507-4b40f30d9799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad0292-aff2-4cba-ad2d-c42a1da89d54",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13f7380-0bcf-4d28-88f3-97b023c4208c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37d3311-3c39-4cf9-a7cc-1777ef4f5087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2e99a7-12f8-4080-8890-08dbf1178e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "515440bd-5d6d-4459-8aeb-daf8467209df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278b4e18-252f-42f4-99fc-7f2880cb7b8a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1988b407-d7fb-46cc-bbbe-a6fae0287f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5e0bc0-1eda-415c-a7e8-43be98d3ee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b72b675-f40e-43c1-a88e-e37c19a297c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84c458ff-5f39-4044-aed8-a1fa0343371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a06529-619f-4230-8633-9bdd7933c794",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b514ad-a658-4989-a62c-4735993f7e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b27137c-ec02-4a50-b0c8-f8af53e3df20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53de3683-01ef-4c19-8ec0-b1028e8462cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b4c25c1-9346-459b-9f2e-1105d3be31c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632275e5-90b3-4892-bb45-5c63db041f29",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6885d6-034c-4621-9f8b-673ffa549e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8781dfd-f1c6-4d12-be40-25b72fc2fa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94382b58-9196-41a2-af96-bccc2f1cdda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae59c893-1198-4b0c-ab0f-0ff85a21e049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3776e71-b83c-4234-bfa7-7f571e08a97b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf942bf0-4ea0-4350-bc36-6d6098ef8512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84939db5-bc9f-4a6c-bb99-e1f93d87269b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdccc3f-ca35-476d-8219-fcbc1504b44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a8e778b-0a27-48ad-b028-43fe0080cb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2deef08-5240-4f2a-8268-1d277ca9d851",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffc5761-eb1e-4213-8ce3-a759145de905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ead9b9f-0b9a-4867-80ce-dae5f4214c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4232b-27cb-40be-9139-0d04e9ca0483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "142b54f1-68e4-4db9-9435-8749e9660c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f8c6d8-0b35-4907-a741-b28a7650c799",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a53a19-80d7-4d0e-b7f1-b20e1cf567f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a84016d-b4d9-4adb-9955-829a64ea8c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3816b5-d31e-4793-a40c-93017a907077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98654a0e-db9d-4c7c-862c-bee5663ac75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84b43c6-3f60-4423-af37-4eb77373f279",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ae6651-a491-45b9-9c57-2896f7537066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7976dc41-9366-45e3-a7fe-3229aee6eab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf4d224-45e4-4d76-86dd-d30fb3867206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4860380-5033-4eee-a760-1327c25bdb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb3c25-a90a-4a2f-bf4e-39b345978386",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048ca638-c301-4b6b-aed8-484d516d5b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb40cdd-23fb-4a84-b7c6-95c027728f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af25cef0-99d8-4f49-bb92-1aab349e0209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2583968-cbaa-455e-a909-f7be636414c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50b8327-63e8-4060-9e0a-d458fcfb8908",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cb3178-aa44-4cc0-bfb5-e0a4514c5e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e888a4c5-7b09-41fe-8ee1-1fec437542c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149bc16f-15a0-49e2-aa29-408d15223cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0a84f44-dc11-450e-9987-23de4288dd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314d0983-c2d6-45dc-ab4a-aac0212e9c81",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfb2322-9e2d-4113-9ce8-442cc4c6b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43336659-9fe5-4765-a0c6-29e665d730c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87b6248-7e75-47f8-ae0f-25282e2f9ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83bb4685-7dc0-4b93-97f0-3b67c4bac6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ca8725-fcd9-4a84-bbdb-c47d12ec1876",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7ac41f-c6d8-43c9-bfa6-febac4c058e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857d32f7-e228-41ce-8871-c6ffb5f36079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e6b08d-41dc-4fc7-a977-875212ee5402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaecba36-5371-4ee7-a7e1-2632c6d3d249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7e1a1d-3b37-45f8-ab8a-f795fa82d880",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f040b5-5c89-401d-86b6-bd11ec9699b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0ed0dd-8709-4e6d-994f-4f4779aac0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582200ca-eda3-4b98-a225-c366e5a4a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "303439eb-4c5f-4510-bbc8-2e9bb3f2095e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1722e85f-e9c5-47db-873c-e4b53fe2b0c4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c1f89c-100e-4705-a207-342e4714eafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2c190e-0980-43ab-902b-93aa64d0c558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4d3c7a-b7ec-4f5e-a2d3-1d40de39b1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5feee6ef-776e-40e0-b7c0-2a1aa0db8947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a347273e-8f95-4b86-a9a7-b00799bfd68d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f46d0-55f9-432d-930f-0701d3dc0dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a731ce-2394-4013-9bd4-b381bf1ddc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab0d03d-f34c-4621-9140-179aa377dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "217ab071-c22f-4eb0-96d6-e5d4638607c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b18799-dcc5-4e18-896a-5f8deb0b590c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c82c935-e16f-451a-8548-a5523210dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d8aca1-a416-437b-9450-b7ecdb3f8573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537a7dd4-4dd0-4be5-8682-67ef69f5dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b08b1ef8-9f9a-4858-b76e-bc0ae74e2fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e488a6e6-65ae-4108-b6d4-3fba869b3b4b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c794c1ea-1b7a-4e62-9005-6f1995c55286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af3cec9-7f5b-4d73-831e-88165069f16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9101a4-9d50-4f63-b7cc-6c384220af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a74624-22f5-4b01-9613-1601706ac390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceedce0-8854-4d38-b6ed-68cfbdb0ec71",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143e8a43-1c13-4633-a50e-54c340d7c436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a6db50-9888-475c-9cbd-6606a0007cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f88d3f3-c1f9-4e9f-a508-f6e62c6d5646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbba392a-0469-4290-a557-1ce093f0c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbd3148-dbaf-4c4a-ba84-93895444ce23",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ed76bf-ca1d-42e7-9e59-bbdf1e53a626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cf14ac-8871-446c-8d6f-76a48481a8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58704070-2eda-40f1-9db3-8e5f8bcacb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "187b0545-798e-45a3-ac6c-fff7cc941a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a126c8-2584-42fb-95c1-c18ae5e132f3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11282922-0f24-419d-83b3-b9811edc0ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f53e6c2-7447-4b5c-a784-38a2bf1647a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2ed49f-7d6f-45f2-8137-d3d15739e03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ec639b-6acb-4705-af6a-8e69eea5a311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82bcf00-ad90-43c0-8dd3-9b39e923d5a0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73195bdc-86e9-47ce-b6f8-2f3ae79fe2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aef56dd-09e4-4795-8795-48b4d2eba503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6199dd41-4107-4672-9df7-5907854fddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cf6ae2-2aa8-47de-a9ee-db0d17292f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89722748-2620-472f-a152-15f8ce56525a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445864c-db12-402f-bec6-598fa7c59e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540c73f7-dc01-4342-b70a-63d96213958e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012ce2c6-af80-4fe3-ad3b-40e2db357205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d81589b4-5bda-4fc9-b0d5-116ef9df50a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f68677-f395-4ff9-85c6-aee3d71f16f7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c87e403-01d5-4bd9-89bb-96e7cbc4d558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677ce58a-d2f3-47ea-a324-2fc06d79ab86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d09e475-4c63-4b15-af01-eb98aa91c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b9d78b-d4eb-4486-be46-904672ea7030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a0699d-6629-4952-ae0f-8132c7c75b61",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660de1ee-17e1-40b7-beaa-48c3579de2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c13379-0a61-4560-9aef-9b9fc81a0fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3938b7-7cb2-4e72-8b6a-f006de95f1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b35830-6f6a-4995-91d1-e746d3756b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5fbedd-6513-4958-bd8c-fdba38e55c8d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe5b694-54a3-4618-bfce-e8b1782fb859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e613a8-2322-4415-9f68-2273a8d955f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac11c1c-9ef4-47bb-af05-d721ce9cfc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ab4d2b-84e2-4819-b63f-32aa87ddecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06ee34d-f7aa-421f-a7e9-e7a0d1f5a73d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22813e04-6a40-49e8-b07b-2287482be056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d633a1c1-279d-40e8-b74f-11f6cb8a3fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f15968-ed43-444e-b8ca-88e9a4231bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "583831ed-46e3-494b-9ae4-24b39b78b361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722b3ecb-9e3a-41cc-922f-a65fa5a0c89a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a167fcd2-77cf-45a7-87a0-5b6093a35329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ad1669-a7b8-429b-967e-c43d788c1ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd18045-0671-41b5-b005-94491988878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c59c2a-db0f-45e2-8fbf-96afff1de50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e59b8b-360f-4b4c-b4dc-d4d89cfe2c40",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aebdd15-28b0-416e-a679-b321fbf6eb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53692007-6eca-48f2-89b5-9a1479706ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ae7f68-7b67-449a-9fff-bc57f9f4636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "933f15b4-3adc-40c4-a1a7-0e03b64043cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfb0ce2-afde-4feb-98cd-e69a5d24a45a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4383b429-5041-478e-95fc-680f98da4508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7e4685-238f-4735-b27b-fd960fa9762a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda10b08-7ac4-4e0c-a6b1-678f7dfb6a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7b65b8-edc2-4eee-be2e-d5690992d942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6039da9e-fd12-403e-9314-cadc49483143",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bc3bb2-2dde-4345-a77c-6cf2d8a3b69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b863aade-85d7-4f84-86da-251bc27d9e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474741d7-59ce-4dd9-900a-e7ecf06f7cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9ed219-cf56-4c00-8bae-c2beb87a1244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b49f04e-6cc2-4533-bf61-8357f8d56502",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07e6651-deab-4831-a9ea-2cc10ee79fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f24465-7728-4d02-aec8-76ca973ba693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efc0a35-c712-41e6-ac0b-6a3026345849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5e2cdb-3f71-4dff-bfe4-0219e0efe692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c29a07b-467c-4fa4-86a9-c9efeea4d2e4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea22f80-0193-4778-ac2f-4650e8d252d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a74f5d7-5aa2-45ac-904b-17751fc56846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0342081a-2c41-418e-9de5-b653fb0e7c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "993ee659-68d5-428d-a1ad-f991e904bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab28bc8-2ac7-4fd7-a877-95a53c0bf568",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a703583-8d79-4051-9063-fecb4a2d9211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e216ff6-6b74-4636-9511-6409e5e5d5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa9c215-5ec8-4d3e-8ff3-01a8d99ed137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ca68a2-b5b7-4eee-acf2-b61f434c20f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0663ae-b623-4b9a-a205-c6b16bd5a53f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29734ed9-3931-428e-8b34-58365d829c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa07ae3-7ad0-455c-b93c-7227f9b2893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76b94aa-ff5d-4b4b-b487-093763128108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "72e29724-54ca-4ed5-af64-0fc58ad9e78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d81831d-e114-428c-9d9a-b8336b7d064b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106682fc-524c-440b-8b8d-243b207c79fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6991a243-0ed6-47cc-95d5-f0fac011a787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fff67f7-2f66-4f70-86f6-dba4f1581b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "401501d5-640e-4672-8fd7-98362947d42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0d8ca5-febb-4b36-b5a5-5087027d9fe2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8271f0b5-2114-44ab-a955-3afa08823ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9469f090-345d-40c7-b94c-f68d612b0a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6464bc-07cc-4f51-965d-43eab1b01468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d40d0734-9095-4850-a49a-145fdd9514b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e818d8-1fb4-4264-8e77-f12f6b76c952",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f565b4-0295-4602-8ff8-15f7a6d0e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d570b1-1419-4c8a-9263-8c4931523396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebec16b-89b8-49b3-ac65-380f01468439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4a1ffb-4d5c-4e79-bacb-482202588069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cfa74e-2d5b-4a58-97f1-086a9b4bbc7a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0af118b-4994-4d30-9cd2-88b162e0abd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05dc7e2-d8ad-4efd-b260-8823a8747c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f8468a-cfe0-4821-9750-fe22596a97a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "714d1699-524e-4946-9c95-b29a3c596447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415210e-60ff-43b9-a1fb-3bdaec3339cd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c7a681-57ec-42db-bc1e-d337a35b409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5766b2f-4085-4785-be13-6ae6661ff233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56a9b60-f648-4345-a073-4d299691b006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e556590-2538-4fee-80ec-259512244126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4f73e2-686f-4f4f-b65d-bc52b01a5c79",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63135a6-112a-4977-b05c-b1b24473e044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafea496-f351-4764-827c-24f09611aa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b24a519-f71d-4fa1-990f-882bb67e723e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a53d23-aff1-492e-b4b7-56ca7f8e5c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770db332-211e-48c0-8c7e-736c16f4c2ae",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c55e405-f221-4909-83b2-f50a3ad8b0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1be936c-fde4-447a-9968-a9c1c25b7194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7e8e14-432b-451d-b9b8-2d94057807c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "742aaed2-3dda-4538-8cc2-bc3c72ee2e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc34983-e5a6-45f2-a136-23aa1c7110da",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0b001d-0acf-4a50-a66c-d3244e39cb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0aa8a29-9d48-4c60-8f7a-29a8ffacce0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8825f3b-b0bf-4310-8b0b-082a63f378be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a624e61-e6ee-4b8d-87ba-5af4ec5696f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ea7b5c-2116-47d6-8f30-47081dd9aed1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4795db65-c3b1-4297-8ccd-6456f55b47bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d329c4-7b15-4d02-ae68-c72ba7e5b012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c4790-3238-442a-8f1c-4c2ebc272df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ec5fc0-e986-48c7-adac-bfddf7ac3d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d2df29-a0de-434d-a000-0ec16f5a19ab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41961415-8179-411c-9e2c-479abca594c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6e6494-ff9a-43a9-96c4-8f93cdc86da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e6a922-c5b3-4086-b63b-f155dbb6a029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "909297b3-587d-4083-9e77-b692929e751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deabfdd3-04c1-42d5-8948-30b561a4616e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8b48eb-2ea9-4d2e-822b-6a4d5c16fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69b52f8-f04f-441d-b597-d10213901c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72d1f9a-e4e6-433d-b4bd-e61ac10b2fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5e9d6e-0ec2-4c8d-b7f7-39913c9b1fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18bf93-a92a-4070-81f6-46a0933817c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107ab978-6875-4229-9619-9466c93476fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a8ba31-7baf-41f1-936a-2bb3cae5e630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538215e8-c309-4c48-ae88-d327d5a10190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6145d2e1-bcc9-459f-905d-0593bc71073d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0d055-460c-4dd1-8814-8514980f4e62",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968d248-41df-4649-a781-712b98577016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7488a9d-fac0-40eb-ad8d-481ccad5ffd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699a2bef-d623-4d59-b739-1de4d48140c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "687f3e4c-81d7-417c-8939-fc2eec533fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef55b06-bd67-489a-9090-d4e7115f7a86",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c46973e-b41b-4415-ba6f-e819678f0b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39e9577-f962-4550-a7ad-57a64be585c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20be47de-3467-4ddd-ac53-be99f508baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b55331-9d6d-4de0-bff3-8e6f15733b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397864f1-62db-42ae-af67-8c4ea9e41989",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2aca8-1312-4ea5-840e-3c08a6c604a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b286c69-0e33-403f-9891-07886662a0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f44c269-dd11-4650-84a0-7fa223369e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1658524e-ea7e-45e5-a5ea-6d60cdccf448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6528677e-2ea6-46f0-b1ce-06856277e0c3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6764b86c-0e00-4341-9736-5b86ea88d498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caf31cb-5107-45c5-b3a5-6b8663094548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded49b52-c159-4369-84c9-e5d284d23447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed87aada-66c7-420c-90c0-d1f62d08ac26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27f8da5-5194-44d3-84ee-4178746946ea",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2caa91-3be4-4ee7-a0fa-d614a5821eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dbb3e3-1086-4243-8207-c6c061bafcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86326b4c-40f8-40dc-800b-3062ed5d17f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87921522-96c2-4596-9912-fc0dda68d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f661495e-ad78-4097-8ca4-b85d40d77035",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013389e2-f598-40fa-8bbf-3fc52a7898b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b241ea98-421c-4f0f-b2fe-e461a806f1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b30dc-c223-4db0-95c7-6b9a75b26bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b44e1274-f329-4c5c-b7ed-db2b04478740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e4b5dc-3be3-4f32-b85e-0514ba0bb587",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb04a366-7e6a-43c4-b39f-be0afec3630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca41071c-046c-43ad-901b-18065a051f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82eb74e-3718-4119-9397-eeb5c17fb011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "809acfce-d0ac-4a77-8745-1a327471c418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c167db1-3135-46ec-8407-f63043fee6e8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279be34b-7ce7-4c49-803d-aecabfababd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077e72f2-37f5-47ac-9122-d334882fb641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f52a60b-aec5-487d-a237-9bc212c4799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48cfd10-403b-49d5-a871-f90eb79553db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f299c2-0c9c-45ce-86df-14dee5112b7c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7ccfe0-0ac8-4e60-9431-87d6be3ae0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22acb484-77c9-4b67-9028-29e89eec00c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a997463-5c93-4e42-a29f-cbbab24fd21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "752dd933-81f3-4e9f-aa94-50cdf0c2e81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef46030f-979d-4058-8c22-febb496876a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a694fdc-9fe6-4e0e-b1ca-c8acf35229ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a480cd3-a0f1-42d9-98b7-85cfafdd549f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee7c87f-30f7-4e89-98b1-e76449ecd48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2031db-9d55-4ee8-9016-ce16c0434843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f664b2-c0a9-4b0c-8b13-1a7fdce267ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf57f55-fff9-4c9d-abf8-9f52f3125106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706b3ed1-2581-40ed-b495-a7f9f6a4dd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d8d45d-2bd9-4123-befd-99411b21b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61432255-93d1-4f36-b881-8c0044d37930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7472f7-4ae6-4226-9cda-401250577ce6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ae3b33-6484-46f5-a630-ccd14a21abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22118f17-4d3c-4d91-a7b2-0e234e603dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1354ae-4129-42bd-b0ba-fa0b6187dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d56d92-033e-4f8b-a39c-0723d40ced6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aa08d6-6f97-4875-97ee-d1fb7ebbe589",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abe1eee-71c3-4ce6-ad09-dc7c400a832c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ec33c5-a35a-4c67-a5d5-50163bc1b620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56e8684-1820-45af-a21c-7c136de6109a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac152f8-6d30-408b-b0cb-0c9ba5075038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eac0668-7a36-4b3f-8d6a-497c5d8ba52b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2907670a-64c8-460c-b2c8-9dcdcbc14fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5177794-4c76-4374-ba19-438024ff9fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d88168-4070-41f1-b71b-8a58ab072957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b36429c-ae99-484f-8ecc-06b3c6514d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f249c19-e437-4e72-adc4-6e11a575b223",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65861c69-8463-4e96-ad06-0393ec43615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e3c009-0c8a-4223-a1e9-a7fdf5195fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8810e908-ca77-41ef-9717-cccd0f8a1924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd79f06-954d-4d18-9e83-d742f246069d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9ebec7-2bee-4cac-b107-65caad5dc837",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3b874-9388-4e29-958b-b4ca240ad773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f801543a-e67a-4e0f-993e-4f0e83516b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2952825c-d500-4d1e-ab13-5eb1bdb1e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "792f8eee-5e95-43bb-96b9-64e55cc62c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3c1049-ed06-43a4-8f52-9e76a9bc5b57",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c101f-3792-461f-9587-840def96b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c81df7a-7cd6-4f50-90a2-2aed99cf489e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c0ffa-ea5e-466c-a181-6d174a0841e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d22c1d-6d73-4f80-a130-4ada0e82fd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3c9a25-3baf-4cfe-85f9-06931ce658e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f3a646-56fc-4688-ae71-801f2e0684d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637ed1eb-c5db-4d1a-84db-cc7e8ef861b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c0029c-02d1-4971-ab7d-cc9f925c2a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e15f6f-8489-4aad-8013-70b169eb5ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4647bafc-a23f-4337-b1ec-5f27cebf0baa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd54117-8b3a-4b9a-9958-da94285aa537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4467820b-e366-407d-96d5-8378a199bb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e501d094-88ff-4c21-96e9-27c6f07d1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b078b0-ee73-4655-992f-b812e36f8e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9715cc4-fb38-469d-836b-fde009fbd9cc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8b036d-5aad-43b7-8e8c-058804d4b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e24195-9a63-4224-9d0b-4a389f822adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902ac901-e23b-4bd7-91b7-f1553797e5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9958ea61-1e06-4f79-9beb-4448121e86da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a5f528-14f7-4a0d-a8b3-19ee1e908158",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0b96fb-5846-42c7-a4a1-a83b59eb9c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e823fbd-068d-4c47-9ae0-ee3e975a6dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ea20d-ba32-4e25-8a7c-4d7e1371a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33f2b1e-5511-45fb-ae0d-6801403c06dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e1d657-a960-4038-863e-17640aaaeffc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f4151b-ba92-46e1-9293-181bc2650137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d5c515-3457-4fe1-9f4c-02c5b31d43a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2c7821-efc2-4d04-8c5a-df9dcbc8935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "354eead8-60ad-4622-a7e7-b7253e5043f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b99988-a90c-4725-99b7-bd31696f8046",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b679b0-5b52-4837-9c3c-976f2cbfe6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3bc0e3-c85c-414f-a2d1-690de25a71e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833e0593-4812-4ea3-842a-0eba19d6143a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7c6c58-f1eb-4ba4-a740-72983766a0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53df809-404c-4980-9c84-f480ddf97c74",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62831a80-1f2f-4d9e-8800-86de041fdf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129f1986-fd40-49c6-b064-11b3b681a792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7a7a16-5932-4134-a67b-54d84a29b877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce01aea-b6f8-4fe1-9015-36661bb4cb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c288efa5-a4c6-4c37-a697-aa2b2003d641",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7f63e7-b6a0-4efe-913f-8d0e90b27369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b38cd40-e5b7-49a8-8944-a410ac3d7f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa7f80a-f503-46a4-a90d-f10478aaeaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e1e371-0ddc-4a73-b0e7-b8658246226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f54e9a5-0c57-44e7-85b3-a1c1f0fef4b4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747951d3-c5da-4fc0-82e6-74ee3d580783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbccee6-2743-4845-8889-150325ac52ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e64c669-67cd-4f22-831e-ba9fd9580b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "345912f7-ce7a-4f15-be4d-d1eeba5e7a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684a26a8-157e-4060-8504-55076c3168a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e371290a-7b44-43f9-b337-9156b7234fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170ad9ff-151c-48bf-baa5-61b42028d589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad07148-16ed-4f6b-92ff-b7333573b98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3befd6-c15f-4517-a156-23612bfc4371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901cddfe-488f-446d-ada7-b1ace9567763",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a010cc2-c21b-46fa-9892-0e59bea249c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa42426-1ff9-4a2e-b62c-fe8f4dcfa1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd2a9cc-535b-4233-9dba-10c0a1f7cc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e817ec5-0818-4153-9719-ff5d579bf147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f9447-4256-4a42-9e82-658e6747abe0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fc547d-f5a8-45d8-a6d0-7e6aa1b19ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95904051-9f2f-4180-9a02-328d2fa81815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce0ea84-6313-4119-82ac-b53ad2ee912c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b599675a-a728-42e1-926a-ae369c34307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cbc4ca-cd97-443d-9d15-5adfe3b8d24d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d9c46a-3ed9-48bf-a4fa-519880d50d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a0853a-e6fe-4ffe-a0a5-3aa09199531b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2dcf98-f048-4b47-b898-6c28c17424e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8cd189-d934-47e7-b67c-8c9673115d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dc6ab0-2155-4af2-8cd9-0115f599f47a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c65ee5-56ca-4abc-8aff-9aec7a073823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40384867-6987-49e7-ac0d-6763aaecec2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4a351d-2220-4972-aadf-17c06eb41e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c321dc3c-2cd3-441c-9d75-2d0f3213339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42da84c-8f3d-4c07-8b09-f2264d3441d0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38f89f4-b9ac-43be-9796-7c0359e74cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0750d5-7d43-4648-a71e-9a8d9165eb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536dc5c2-afce-4566-8866-fda6a4f1c550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8794c6ca-86b6-47b1-bd32-9361cd7dcb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3266b3a9-f27c-4df7-81f4-e0e4b81264bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374a7f33-3d3e-4e4f-b786-f365407d30af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a00db1-2dbd-4b70-9510-421fd1ae1b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8b794f-1099-4abc-8426-0c0d60fbba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5effb373-4799-4611-9504-00530207ba07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ff931c-d40a-4b0f-93ab-cf4e735c64d9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc661059-4b9d-4455-bcb4-cc915d1f5142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487a34d0-33e4-4890-9786-f77adb58c7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0895ea-5abb-4e29-8559-59c9a805a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb11d76d-c1d5-4dd5-a1a1-dccc621f7599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa85c6c-8d50-4b96-b574-ffa6c7f56e34",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca67c5df-1909-472c-91d1-6448c63aaf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9552d649-15ae-43cf-a6fb-50b4fca31d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9886745d-bb98-4920-a3ab-4aafa3701795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d5f54c-e21d-4025-81a2-eef66524e24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d439e615-0890-4711-a9b7-8327749d469d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fe60eb-7047-4744-a31c-48db30f05a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbebea8-ad89-4ba7-bcc7-21ebec6dc618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49fad7e-4bf9-4a19-9bb7-55c55a28c5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f992a9-e0d9-4516-8239-75b70d827be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c08b1b6-7533-4c56-bf5c-836198745d46",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e654dc0-4017-4ac0-9f53-d43ebcad76f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db49027-9558-4840-be10-7f8d155a7fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48681ce5-09a5-4df9-9a72-72aff7c4bd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb27fcf1-d131-42d1-8367-88a4371b46a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad48603e-1b5e-4e0f-a624-13a38be908d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb603528-072d-450e-af2a-14fe019ad272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d52ea4-5b0a-4bf0-a7e6-f255c59b8397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb41bde1-6b5f-4d73-bf94-b1c5d6d4edd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "787bbf78-8cd2-4133-a7bd-e0a54817d0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61188ef9-e3e4-4762-9177-33d16f5d5c59",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175a3bac-c86b-4100-903f-c0ba4ae5393b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fb5360-2922-4ff7-80b9-6809705e2ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a17600-d5de-4a4c-a227-41424353ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ef5363-737a-4ee1-b1fa-b7dcb7b01bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e405d0-7262-4205-bff6-57d8140fb6a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2d8f52-c1c8-44a1-9a09-75e0b37377ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293256ca-c45c-4c5e-b599-2c5c97210852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70ef23a-ed6f-4681-8819-2a87890e0084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f43a614a-cb02-44f9-a892-692806cbb10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43e6aaa-04a3-46f7-831f-fd508159a175",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa3ab99-fcea-468f-80d4-7d34d6ba9339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6569b5d-d431-42b0-9075-9c0f9ca564d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79652174-e0cd-4113-9e5f-db89319943cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a0624b-a4cb-4eab-8a50-5dadf73c0008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2f77f5-8b03-41ee-90e1-d73eef311cec",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb491b25-0598-40cc-a80c-f64393b55e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89abde1e-3883-4858-9149-77182e495180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b43159-bc01-4a7b-bdb9-c3b06c839ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9235dd31-e1a5-4f00-bd32-fe4e2910c398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b662760-cadf-457f-96de-6deb7de73b8a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8a0b28-f834-46c2-a682-d2bc2bcd3a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314adc88-f5be-4e7c-80ae-ee912af6edf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858e74d8-005a-44e6-af4c-2ebf7320531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9139fa2d-cd48-4e88-9e44-3ead36ce5aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa8a03-513e-4ebd-b745-abad84de1f20",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15236953-6102-4024-babc-e0cbd3a65e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dc185d-b0cb-4c53-8107-218ade2a88f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe9ee7c-f536-43cc-9d62-b7bab4123f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4edd0010-794f-40f1-ba83-ea000688ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5672d6-e679-4528-8f16-c1e34ea18d11",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1848958b-0f08-4104-aa28-969ad0fe2bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16b1aa87-fb4e-43f5-b783-bf6f87a8f81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821e637f-2f77-44cb-aaeb-fce0cd4490c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1a0c14-3ae6-4840-98e4-8473c5d4eef6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b569050a-75f3-411b-a9a9-8d73e4f1fa9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9ccb73a-4616-4885-8fc8-cec9e415ec6a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd9fcf2-e412-4541-b8a5-f1c0a4ef6362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0934e4c1-a577-4b58-8b56-5e62d81707be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a7529c-8c5c-4b8f-8a99-cf04fcc9c637",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ec263c3-3b07-4725-9f41-6a6aa7bd0604"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cf5cdd9-b32c-4102-a0f1-b314113973b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd428113-d5e2-4862-bec5-0c568df83aac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae89ffcf-91a7-4dd0-8742-b1a0060dd559",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "821c75d7-f910-4963-88f2-f825647edab4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb4766f0-e2df-454e-b23a-ed0674aaf7b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b17f72de-b86e-4b0f-bfe8-30197f57b1df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2cc4b92-b9b8-45d4-a669-aefb8751b5be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "199fce88-a99b-46aa-a6c7-3b43b7b7ad28"
                }
              }
            ]
          },
          {
            "id": "b85bfb89-1038-472f-8a84-b24fbc7d4603",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9724e80-4399-4d8c-9002-e82e49d64429",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40f9e074-d9ae-42bf-9a39-0415fec15cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "469aee1a-c44a-4005-97df-9de7e261939b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72f524d3-2f02-45a4-8589-629eea56d021",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3e626e5-495b-4113-8d6b-a0bc2be4c0a6"
                    }
                  }
                ]
              },
              {
                "id": "20fdf3fa-86a9-4761-aadd-280041635f49",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03f2b65d-e910-4957-aed9-01255a1976e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33e98d58-a0d2-4e3b-b053-d537244a4149"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "601d68c4-b383-4371-a748-8a98dac07e4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0ebccaa-fc50-49e7-9585-a01566bdcd68"
                    }
                  }
                ]
              },
              {
                "id": "2f1667ca-fbec-48f0-b861-9337d2727ab5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dce85df-6bc2-4418-b2dd-482b2c00b489",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d1f1de2-7f31-486e-8d97-d9f3fc4b22e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47478446-9149-43e9-b59d-def64defa41e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0dac69a-5950-4d81-a27f-71ef17141c31"
                    }
                  }
                ]
              },
              {
                "id": "f339cfc4-08bb-4c70-96de-19448f6ba7ab",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e58dcfb-b69e-4bab-9bd2-46118ad1afbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9bd2bd4-e32e-42d2-83ce-d60686a95baa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83631c00-0a95-4fdf-a683-977e0e92ce6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aca39e27-25c9-4b38-b84c-3a2c97d5c61c"
                    }
                  }
                ]
              },
              {
                "id": "c600ffdb-3090-4e63-af15-941fcbd11b76",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd478007-d7c3-463c-b00b-f952b4b991c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f610884-1850-4854-b44f-d03246995ec7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ddc64a3-8c97-4fbc-9931-4b0579efc5c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7dcc21b6-d246-4959-ab90-06e2f9351043"
                    }
                  }
                ]
              },
              {
                "id": "f6826b96-761e-4836-9601-5d59a024ca0e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43083a71-38b3-45e4-a6ec-d172694ac8bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e7fc253-c734-4998-836e-09cf7e1ae7a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ac1a6a2-8a5a-43f7-8ea5-cf1c7339aa2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19886b0f-e006-4b5a-8ba1-f82092206e3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55848d9f-0464-45c2-8972-baf8e10408f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "943679ea-1e89-4393-a165-16239c293ade"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2c8b656-2e4f-44ff-b106-103b2a9b42be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41295f95-4e17-40e8-a84b-57b77ac08be0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49519f0d-9773-4aea-a685-fe2eae6b155a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bd7349d9-168f-4801-bf04-3f5d00a18687"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dac5798-6709-429b-9e37-6dd39a6c53eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69766d9c-066f-4228-a549-05d24fc3ce4c"
            }
          }
        ]
      },
      {
        "id": "18fdf935-9dcf-4852-9ee2-cb59cf5dac37",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1a710a41-9faa-42be-a14c-c465cd87375a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6eaa8474-3ee6-47c0-a67e-b13739bb5bee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db0f75d0-1c3d-4ea4-97e6-e9cae8891dcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacdee20-b145-451c-832d-c3fb32bf8e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0783038-73fa-4865-ae66-7136ddee150f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650af48b-74d6-4cda-96a7-042a2844c262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d976a9-7167-47af-94c4-88aacb4ff689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd05dfac-3cf3-4ffa-a2c1-7e80225ad54e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a1029e-f429-4aa3-a110-a55d5d691c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373bc93a-42ab-4b5a-a3f8-fd1640a74123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7596cc-0ddc-4a79-843b-f2cafb381f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de78ffa-cfff-439b-80af-e6878d0d2348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c825e35-c48a-4b0a-b8c0-72a21aba92a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b24c57-385f-40d0-9ab6-7005b1d9d275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e85bfc2-b2b8-432e-91b1-e8ef13ada7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd0e6cb-2e4e-469d-8a53-7cdbecf04236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "502b7227-b4ed-4803-b35b-23fd61ac0d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f25860f-d16f-4281-aa1b-e8da18689dd3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09af48c9-1440-449f-ac91-5168a7cd261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d6fee2-9473-47ae-8a0c-4865489b9f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df042985-e439-4c0f-a77f-b5ee49a7fe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae098a78-c05a-4854-9592-35d132366fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054e519e-47ea-4d99-85c1-150c31f3347d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be199ff7-2d7a-4baf-83dc-02612fd5e810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8b4f89-7f14-47a4-9d2a-5aa2bcbaab75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479e2ac4-d2a4-458a-94d6-7e00bd81e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8938a872-55d2-4731-918b-88dab6480ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb30746-eb8c-45de-be36-1a410a7cd894",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d05c71-25e9-434d-95bd-63a92197eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d450f1-506c-4f19-8596-06f4d05e054e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913a620e-445a-4b3d-8912-2c055efa71c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0b0b16-c3cb-4620-bebb-53414d5263d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9e4831-74f7-4b89-b38f-e56fcbc7a87f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541e6345-a618-4d0c-91b4-d38d1d4908e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff5a33-88fc-4f2f-bf94-9c0a7f025934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f730c20c-300c-43c4-b376-400b22caf202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "21bd69ce-a0b2-468b-b37b-dd5dd5205041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e639757-6aaf-4043-a2fd-6f3d61370c0e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142c839d-beb0-4b83-a076-77f8ad4cf4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3093d7ea-cdde-4aa1-bf54-f5362adbf874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32462229-e4c2-4888-b901-7a04ba8f484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d932e2f-03e5-410e-951e-22e846168c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a01b5c-04f5-47da-96d0-93a2574d7317",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4107505-8725-4471-966c-4e0c6cf9ff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49d7822-9dd6-4c07-8403-ab60e9db9e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ab57c1-07e6-4222-853c-76f8ebb0f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c186a3c-8997-4917-ae52-126e4d1f1783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ba9f8e-6824-44f7-98f9-64314de70fb0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0fbe05-31a7-4e9f-9b07-05c0cc6e1bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d58b42-b954-4210-a46f-3c286d570626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38568db8-7340-49d0-83fd-a6d7653d4aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c133d68a-072a-426c-8a29-668b33d93c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaef881-9a5b-4654-bb4d-9ad60df47a32",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720cdc02-1cca-4bcd-88be-38d475d571b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb6ac57-75ce-41c0-b37c-90fae59113f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70ff3b7-9453-4d13-b356-3a69a4c911cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f818ba95-5397-45e7-8b8f-16a69160537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332aec00-c0f9-40ab-bedf-27b60e58a9c7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a9c7ab-77df-4b24-ad5f-263dad2f8eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d30709-2e33-417e-a588-f3d671352c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6365c61c-c444-4b94-bf04-b726991c827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14916e0d-12ac-485c-a677-4198d191b8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850637a5-d4d6-430d-b3af-8901cac14428",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ab3004-7fe4-42d2-bf5c-f5ebde79f32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc54cbf2-9bb6-41ed-b72b-90e26a8306d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9cec93-642c-4f59-b84f-f4e8d98a78fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd98d4b0-2b75-4879-bc96-324be462477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893acb59-42dc-42d5-b203-28e5ac3ce860",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e69b47-feef-407f-9211-63ff688d6849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad44b0e7-4074-45a9-8640-8ba5eb77a619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dd10b5-e4ff-44d2-ba11-891a23bb256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0bccb6-59a7-45e3-ab9e-576ee9b1a289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f2bc61-c739-45f9-8620-af183eebfc8a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2d4a57-0acd-461b-b9a9-b5496c4af94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fbd9ab-ce7b-4b04-88b0-30928a514fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6491ea1b-c4ec-4d0e-89fc-06cf9e93cd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13a4032-eecb-4905-8d0e-2bfd2ac5f0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb68dd6-d0fb-4f94-8cdc-025489659362",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64e7e08-35e3-4836-a1f3-913f8c4d5aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f56cee-bfca-459b-8bee-1134cf58d528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35899d09-6df4-4017-be2f-4c0095bfa870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b702768-8d9a-4c53-80a3-0b264cd5f4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda25291-bbf1-47c1-aa75-8e41e5af1f3a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1216f8-ab75-479b-b0d1-b84cd64b7b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75397544-ab6e-49d7-a1a1-55b67bda5286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd041504-bf3c-47ef-abde-991e7217efc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f823a92-6268-4aee-a2f1-ca99d6146a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b5ab40-581b-4b33-8b0a-b53dabb43dc0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec5af07-20bb-4f53-8e43-d12bb51b2f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1db32b8-9013-4a0f-a1f4-838320fedfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcde4826-a6e7-4b30-bb73-2e5c9a0b746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "059ceb3f-51b9-441d-98f1-c070a8fdd8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc93ab9d-a5a7-4018-8630-47dd452371e2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caa64be-969d-4af2-bd4b-b6ccfdd0b59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccc34f7-e134-43ec-9ac0-2559206da847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59711fc-b593-49c0-8bab-bf2b3eceafaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4833b02e-1ec9-41a0-9fb5-17f4a810cfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ea1bee-0bc6-4e01-abf4-41c40ecfc2a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdebd74-a094-40a7-85fd-e16cfbdd6170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891e2774-b43e-49df-a2eb-da0595b62d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1545c56-5759-4614-b160-62630fb1cb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c7993b-a461-41c3-bbd6-80d920ab3e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dfcd59-171b-406d-b5e3-143c208b3078",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe27fd8a-6f48-48e1-9ff7-15685df802d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5430677c-a48a-4666-a46b-7fef3c496218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f3311c-8d0a-4a7c-a125-bf3948a0bf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a7c3cf-ab94-4bb0-afcf-9f79524ea19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbb8126-f421-4909-81e5-911b8be6066a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e3b28a-e6b4-463e-b100-83a4d4c34303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79637bc3-788d-402c-b295-717cf71df8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8baeb4b-c4ed-478b-8aba-13ff35b390eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d46c6f-3472-4115-bf9d-dd2025eae17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f8632-93b2-4c50-96b2-9064a26c91ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e751d0-936e-4124-ae2d-0159bad263cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead3b3cb-8159-4f6f-ae06-99ed1240a929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f4388a-2379-4f2b-aff7-2001e65907fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511162b3-58a8-4a8c-bc0f-e315f5b3cb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbf4e0e-caf5-4ecb-ae42-735b1f1c5144",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4807e03-e45d-40d0-8cb3-d90236025543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449575ea-d8ae-4478-b0c6-f9a3afd9490a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91c2af4-5370-4e9e-ace9-6210e364a8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5979f82d-d557-4433-b1cc-1b541c2a2560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e954b345-f27b-4318-a74a-5dd650906093",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6a5253-e60a-4d9e-90a5-9dc2481b102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f97bc32-5308-400e-a352-d23eb01955b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3871cbf7-89b1-4da5-8e3f-76cad2fa4607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6463ca4a-04b4-439a-b6e9-625216f8c5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9472fef-0d05-4de9-b73f-7e9ed19f371c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e5848e-5c17-4743-8684-65082c4281bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c723e2-12dc-48aa-872f-d4bac186de1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012de8df-4f53-4542-99ed-ce7c7767f973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5706f3df-690d-4b28-8ca5-972b4e85a8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60c9aa3-087d-4ff0-8f36-6dce6c3d864a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de5cc17-baec-4919-b8cc-cb85c03a4eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c09ef34-cbda-4dcd-ac0d-9595a7fe1604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe7264-d7fb-4b10-bddc-5fff66e90c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f40b9e-3067-4c20-909b-630debe63bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469b6062-e102-429b-b4f3-07b136ff60b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13164d3a-3fed-49b0-8519-1ed7e91c4409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e9b988-3054-4e1c-a449-fa2c68c9bb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddd06f7-e965-4c3a-ab06-c3ec42b75b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b68a3b-6a80-48e3-a8f1-5c8e967b275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc5d49-b335-4ec6-9948-c97c5ed01ed5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a75fdb-0a7c-44e3-b0aa-82a8b2b69a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7962c91e-878c-410a-b9a4-d7d1bbc2674e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eadddd-5641-4d27-a08a-6b8d87eb184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4900f9f8-a17f-443b-b558-77be4b6cc895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1903039-0e3d-4583-9da4-ce2f5aec55fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c0648-a0a1-43c9-9c04-36e69adf7c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1d3885-71d4-407a-9f91-e87786f799f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5761aa4-ac63-4ceb-b650-6056901a7274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e769d24-f29f-46c2-8949-1470061c41a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42be882-eb9f-429a-b7dc-e1f744341c1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541c0e99-2f27-4992-9984-cb70fe0aac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87435c84-33bc-4e2a-a1bf-d31d2bf54eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ade27a-ac09-4d86-a28a-f6eafca3ceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "829c3a7b-602a-4206-a842-1db59406fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eae0399-922c-4a1a-a27d-0b85a5d9e545",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fd33f5-c9a5-4505-a705-6f0ec68809fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d670c977-f179-494c-9e6b-bb9247e5fb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c4abb8-1b21-44ca-b522-9d35970640e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fad0f5f-f143-429d-85ef-bc390b535361"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "317c816e-a7be-482a-a0ea-30fc978362d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2cd3bf4-1e93-499b-984b-3e6fe02ec24e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ab257c-de41-4fda-b439-fbbcf3c2dfec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2992a3-3aec-4463-96a4-e4b45c7f9fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a867adfd-6c51-4b74-a6c8-bdd581d86efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2b62105-6438-4241-b7d9-dea9140879c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a57c4ea1-f025-4741-9189-0a62921766fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcd4bb5d-2956-4c3e-8be3-6dc0f5781ede"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0a3ff24-7fa8-406f-98a7-c2f57a6fe34f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11e0b9a4-6a2f-4e42-aed7-e15b04654d28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "472c1e69-9a1b-4929-8a23-1c77269ce696",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6310183e-e252-47ce-8df3-eabb53551615"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84220a17-8058-45e8-9151-5fef64701c5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea9b666d-dfb7-42b5-ac4e-dda747d66e4e"
            }
          }
        ]
      },
      {
        "id": "10c1ea35-5c3b-4086-865a-47b3857f0329",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6ae85a59-4299-419c-814c-5864ecf8c00c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de35d403-9a4a-4809-8fb6-c68788222c06",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30f47931-bd71-48e0-a2fa-1b3029ec935f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242bc4f4-dae3-48f5-b142-b6aa9405d936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57e1d28-a061-4d03-bb24-61879069a6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e026b9-1799-47da-a20d-f7d1eac762a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1527bd0-a7cd-4c80-b1fe-680af5f6b211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eaccd1-4e09-4c98-9b4a-27fc9dc339ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebce2e4-2e89-495d-aedf-413bfc6fbda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc589cc-1c87-4815-8c5a-e7f8e4048dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5404a8fd-6086-4642-a3f8-ce9f4557eddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e324cc8a-27e3-4e10-9379-6a1bd16353c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28807b83-a233-45ba-b93f-1151473be6e7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a3d49c-5ec5-4d50-a9be-6413137b8298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205c1281-8708-4a85-855c-08db22e979b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ee294c-174e-4d21-9bdc-17be07230874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80714d3a-7c8a-488b-be7b-b1e4af9206d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c1b68d-55d7-4ca4-a926-f984f7678c4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554f0e07-d614-44e1-ad19-9953696f66d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d12ca5-b5dc-4d83-86b8-630ed63d56d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bb3674-052e-447b-afc1-b487b74eae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c3a14e-5ebf-41be-a41a-95149515311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc2c054-4c0d-426a-941e-9237fdb474b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c0f818-8f0a-4542-88ce-37c4fa46b5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98da1ada-0bc2-462d-b8c7-efa0fe24dd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c536c63-1f52-4303-b96b-a66c86345ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40c9016-709d-470c-a599-e71c7351cf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce45e17-4dd3-49e6-8591-a8b53a0b19e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435b1171-12a9-4064-a94a-4536cc7cc53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46bda60-f888-48be-a2ad-d7f440028d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ce4b02-bfd9-41c2-ab6c-32d4882f3187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "725ccf73-7e32-46c3-81f2-f9d45d05da0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5182ebc6-d100-4300-81d8-e4bc7e93b8fd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e4dede-0d5d-4372-9068-12edb6b69476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00efccf-a5ec-4e6d-aa0f-afd04d179d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbee7459-477f-405b-a3a4-bd3615023de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f4e335-8def-4ab7-b8e3-940d40c60ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea03ca4-6c30-47b3-b775-c4a174c6dff5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93778627-dcd6-46a8-b197-3402808cef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6548ae-ade5-4423-adbe-24e4ca5f9c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9476b7-d326-4116-9238-967ef70bbb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfc3ab0-b9c5-496d-b100-adb37b963a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243647b0-4297-4284-81cd-1ea5a6d14181",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26226ca6-add9-45e7-abcc-1cf11bbf768e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a040eb75-f57a-4970-8cf8-0e6c52a0c244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df866f88-e318-47a9-9a4c-e0b5761bc0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bb853a-826c-48bf-b241-744ba4292c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccfb63c-f757-4bdf-95e0-7443622395b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eafdcdf-b1df-44ce-8b27-9e0eb9105164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75636724-c5b6-4c66-b365-d24fff838827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb5799e-5aad-4657-80ac-6103be9b8ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb0cec7-9fdb-4da9-ba2e-2a25ee381dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce0a56-0d78-4661-88c7-90ee3c537ea8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb849942-7f1a-4455-8ea9-bc0c99877f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e876f72e-a718-49ca-b518-eed43885cad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57f2426-8d50-4a84-b3ed-d8b12c9bd999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "40786884-e2ae-4d77-b4b7-2cd95b6705b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683125b3-b34f-4cf9-a28b-bfeeba41ba73",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f47f34-16d4-45fe-9606-dccf900c4ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0198255-b198-42fa-9b74-f6be38c7e311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e721fab-6177-4291-9a36-219bd938469a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8371eb6f-f39d-4c38-a2aa-614d4a02aab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e958d794-7963-43c2-ac46-84d13e089957",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73318429-eaae-4efb-ac0f-faaa0df6529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfa4b02-7f84-4acd-8f5e-48649345a285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c8e606-aaa7-4b74-a9f3-9d86c24acf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd536cf-4258-44fe-8c91-120797ace9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc68ca0e-d50f-42ed-abc7-1c839f096c32",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2714944d-e337-408e-8eae-71f78482e24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01de5052-8681-44c1-ade4-16641982a8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a488d-84c9-41ab-90c3-7465b4e87553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbd56d5-f8c4-4edb-a60b-8233959355c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0940c01a-69a7-42b2-b529-d26186522870",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8f6142-69b2-4fa3-9c7b-47fe20c5ef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae771654-18a5-4f44-93ce-c59327464f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67eb8e8-a83d-4d3e-a680-e219d83126e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e06143b-0acb-4b7a-90a1-05536126f505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bed6bd-d550-4f81-925d-442930adddbd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a068720-004f-4ac7-831a-f0a002717aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8146a797-bb5b-44f7-a4f2-0e3c54a2152d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875f7dab-434c-4908-8b35-b6425b32f734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed888f20-7056-4994-9d19-5f563cac1e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b19b832-f2e9-41e6-8dd6-467cac5e029b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb41374-71be-4eea-b203-07f7cf2f3bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73262891-4321-454c-9b87-2a5ab77ed2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d5cc67-613c-472e-99e0-19207e6dc869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "921da459-a941-415b-a8c3-17b5bcf1f9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29bbb24-1d99-49cc-be40-7345e4054d31",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6366411-7fee-429f-b03f-020123f2aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba61a02-5524-4600-a341-0e86fa6a24e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29116b8d-d227-4151-8aa4-afe098a0ff4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc9842f-b7b0-4c2e-b7d7-3df69763d56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1826d02c-8275-4cd2-9054-05de81f4613a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe68b36d-f345-4bdb-a98c-274082669a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fd3b00-3367-4671-aeb2-c9918cd18a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef81a80-6500-4466-9a18-381a6056696a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe3b827-97d1-4249-99d6-c90ff9478f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea46c78-b7c7-4e2f-97dd-87d79fc6dfe5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc94c9d-91e0-4c31-bc20-893fb5dccfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40482802-21e4-4434-a0fb-60569396f20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d2091-1d99-4267-9d5f-303c46e0dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f1b770-ac6b-4dd2-bb7f-e41c519d8f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9142cfd-aad8-49d8-b6ed-7a07a1ba1f86",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cd4eef-7b5d-424c-bc62-6480cd8384be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16abae56-9587-452d-a738-18b90442c78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebaa931-8ed4-48e4-8717-2d9fc782542d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45fdf164-e647-4a83-b625-099732f02220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5907b0a-bb13-4695-9558-2598796528bd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7584ba5-8d63-4b63-a1dd-705ee0b4ec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54f3a78-5b97-4fde-abc4-0116d3a40a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b178a4c3-05fe-4c5d-bfce-0e83aee23b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482d3f0a-826f-4728-b2ad-7b4808593332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d64e4bf-5f7a-4259-9937-e7a5a1d8f6d5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa2f6f-2afa-4ad1-b855-2e5cc94b62a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6331034c-f62a-4e27-a961-36b41e0979b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9c0972-c3c6-4f90-a06c-42f7cfe09830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5502f9e6-4054-469a-972a-be652be083e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da8dd56-0ca3-429b-bd8e-780aed81fd2e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a2404f-c955-4225-a5a5-9100157363b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4770eb3e-8ce8-4e72-b6fe-cabd21d839eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99622c5-2806-4ffb-96b6-1c1af1766079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398e3ea2-e6ea-4a77-9af7-a9ddb5dffb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc09168-796e-4f11-8346-b99e1ec1b045",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12c485f-682f-4ed6-b682-d382c4b6e442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cf6dd2-c42c-40dd-a063-ff765adfccc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ea0966-841c-464e-a840-1c2d9a14ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be61c27-e0cd-41bb-b336-94451afafb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11a0a54-539c-451d-b46c-e47dee29e2e3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1601ed3-0c5b-4012-ac58-22ab38385dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6f849f-f866-4457-a9ed-cfe0dc9af1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d02f30-a9a8-45ae-b20d-5d94dffd0529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4f75e4-34bd-4f32-a2be-adee9e81b723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc87422-9fd6-407b-80c2-14d1a9cde8dd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaee9756-af0b-46e7-84b2-8aee1891a42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ec5873-42fc-461b-820a-47740a7fff06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abef332-2348-4a04-9b89-c31d24065ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "749973ae-d7b5-434e-8c1b-6668f1e0c477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2fe494-4274-4175-bc77-e21d30d381ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bf9500-2f6c-4c74-9668-5d3369d45699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe3d2b7-a602-4c7f-b576-3f4640c934ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7670b5af-b930-4c00-a775-ea6b8f61d850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cff1920-f67e-44c3-95cd-bc6302eb3759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf8328b-7a32-4591-9ab0-9a7dd4bd4d3b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce17ab9-be19-40ec-a299-d4bd838b6698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a06c9bb-7422-4416-a2fb-f59d48896644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54256c16-3631-4039-bb96-7523747e50b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b58a110-a1a3-43f5-af23-1d618d32095b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd05a55b-f3d6-42aa-8fb8-112fa874c0c5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66bf41c-46b1-4525-afa0-9c9c0b063c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51424ff-8d28-4d9e-b832-da31fcfaa65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c7ad9d-d0b0-420a-bc28-79566611903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3378f5ac-1b81-457a-a85c-e787ecab62f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5145b449-dfe5-4f8b-a3b2-86bae1f4d5e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8897f6-22e8-47ed-b2a2-f7278f9d42d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d19e59-2c7a-42dc-b5d6-92cf85186ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f61ae1-66c4-4786-a7c7-716bc6a63863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b45dcdd-7d97-40b0-99e0-d699d4bf2952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25628ba2-dd63-4677-9b41-621d943d4dee",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e6a8bc-de32-4359-89d0-90694761008e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02472b2c-2d60-4ecb-a27c-b733b125f33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b251c7d-f728-4489-9af6-c87debe19bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5911909-10cf-42a5-9f08-cf9847bcf3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dfdd5a-e6f8-4bf8-93a0-6a98b73bb1f2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec16e0-c828-48fa-aece-86f9f93226be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ece60a-50d1-4d87-9103-7de7f76f7810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e8a4a7-e200-436c-8d48-76560f66e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908a3a04-c2c1-4c21-92f0-b53bd98b991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4795f4-3953-409f-b258-7b640f9d6d3c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8aeb04-b840-43ed-a50e-c14bf9b2bf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f5a623-044b-46b1-93d2-aee29f2112ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d241441-4e04-4f5b-aa5c-c926bf6bb7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b707e3-d893-4e32-867f-02c6338eaa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7069dbe-e01d-438f-b714-6ce66b6610fe",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0264fc4c-9091-477d-abca-c473167b8cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0d107d-68ad-4aea-bc00-5b7ac703b4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d294aa4e-9598-4149-add8-b3fd26c3d483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a89a35e-2b39-433e-8bc5-becd9a6133f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb0f1f6-0eb1-4ba1-99e1-ade32c4cb94f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7588c0de-4afb-469c-b6a8-003f2a783da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106bdcb0-831c-40b3-9b25-37a374a9099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e218ce-193b-416b-97f7-41a02dfe443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7854d468-7a29-435b-b252-8d4242249730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01f0b5f-1f56-45c7-aed2-e090c4d9b4e2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5686e081-9a56-462f-b5e0-b653b7f66a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e06584-c24a-4852-863e-8f6f315a749e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4218fc-8cd9-472b-aa4b-c477042e39f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a40184-9176-4c1f-aef0-7cdfa389b915"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4409a42a-7cf9-48e3-b292-9f03b44e94c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12c33942-9c30-47b3-b4e0-6a9b3a756354",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb55c940-2442-4211-b7e5-2b1c198b2d21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34b95bf3-2fe7-4d02-874d-dd8ec33116c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571cf7d4-5b85-4a9b-9bbb-596c0052021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be45fca1-3111-47b7-85f4-847368d32760"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19a2e534-c941-44e5-9510-c7c993fd3922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08cb45f1-50a6-4345-aadd-28ffc66dcd78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "103afed6-6518-4cda-8015-f63683e76a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82e6b93d-0a32-429e-af20-6899bc9e8d21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7846048-1275-446f-b4a4-10e5422eeefd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd9f13ae-e116-4726-82e4-a04a24ea7eb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "921b3780-b44e-43ab-b504-c40687edec1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf097adf-9135-492f-86dc-c7d716c53eb3"
            }
          }
        ]
      },
      {
        "id": "1b540fed-3300-4cbe-82da-8b843fbd386f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "294a0b5c-906b-4b1b-954f-263ee9f0ba2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cebd441a-28c1-4f7a-9a69-eb45db2b44de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "adf1dc18-7f4e-469b-8272-ca4d7a5777ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d40ade-5578-40c3-ac0e-1c7c2a8eb6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5bf19b-c2ef-4651-8dca-ed21f92076d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd01db25-8c3a-44d5-afaf-6acc4a13746b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718ebd97-b0aa-429e-bcfa-cdb68b74e50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5282c7b8-d02c-4868-8d6d-dd778028bd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3f3d09-3ff7-4ee7-a33c-c6b9b10e8975",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96252c0-654d-4944-b8fc-756700536143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d8e2d9-39ac-4769-8bc8-4e916c7102b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae27a192-2d2c-4013-947c-7daa533b9585",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72059b5-52b1-414e-8365-b48c22471458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f025156-20d9-42fe-a03b-9967183d120e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb015e6d-7a18-4189-a044-353265799da2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62160a97-def8-42d6-8245-be6f755ec594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fdf1a5-e6a1-468f-b55a-b209c9ae0202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9131ac-9d3b-4488-b626-4c5abffa0a7c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc97590-eb0e-45d4-97ff-5a73b755b7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba45b42-74dd-4b99-8e91-bb887ea470eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c966e7-a36e-4344-be3c-1d53849d0681",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddb6f6b-a561-4317-b34e-7398005b812f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa366c90-319e-4c97-9626-3743f2b40fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0855ddb9-bfe8-4d36-8798-bca63fe1b6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9714e2-d951-450b-85de-b6218ef397fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf5bc5b-09f1-4703-9feb-00b920a4a0a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af31c938-fd60-4446-bd6a-35b506c3e387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd28e0f-2006-4795-853c-31e714f146bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415d2074-94db-4d7a-aa78-3df126f7ad86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2afdc2-495a-43fe-a075-25ee089c6ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148310fa-b1a0-4d6c-a380-392a7dadbf46",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc88442-db25-4d45-9273-14ee3ef66775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a87811e-6eb1-4b5a-9034-ace8c0badbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a84006-b8de-45ee-bb4d-216518ecd0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ddf7c7-1e00-4de4-b768-da22351f8772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae77a8bb-5719-4b02-97f6-6d2ba1c6b876",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422327a2-e230-4499-b5d5-1de24266171e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f128c36-41b8-4900-abc2-a7f2daf85383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19293a2b-23b6-4521-8a14-8dcd894d3759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807d44cd-b6f8-492e-99c3-49f573ecc288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949961bd-05e0-4d67-9b32-b60cf3b637a3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31286c9-03dc-4d43-83d7-5bde598bf438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1ff6cd-817d-4579-9db4-81d5ae440554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd33768-a6b2-4600-bfed-b4a1d4215a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c022570a-6709-42fc-8b68-09ee51df16c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b73790-200a-400d-a857-cd7ea7ed2d10",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bdb319-d27a-4c6d-92b9-b575feba8966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eed2594-b9ef-4dfb-a87b-78196d250a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a4fbca-8cc8-4c7a-bb36-6d97972a2272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deafb05e-181b-4f6e-af53-ddc8f879dcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb24d36-16ed-4686-829b-d68a2c47fcc6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe9ff26-564c-4022-a703-7e4d514b7891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603ddb3a-4041-400d-8a64-3a09efb7f26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e6a5a2-ce03-4bdb-917e-b2b1c58b011d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965842ad-e9be-415b-8531-6eda134ba74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40577857-9caa-476d-99e7-3d9217704046",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb919d39-d834-4076-ab1f-aa14145919f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799799d4-22a2-4bab-88d5-281cce842129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996eb81-e21b-4f15-b50a-e821506212fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b07fcc-36d5-4f24-b31a-66fe71356ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d96e3a-7fcb-4825-85ca-ef049725b143",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8406d8b-c4c8-4dab-9a6e-451439e17b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf21509-3044-4cc7-92c3-540b1fa285b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1231491-c007-49a4-b0b3-9080118e07b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e16e67a-2c46-4229-9c67-2bd20bf91c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810e829b-0124-4f0e-bc88-ecb214cd8724",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb99ada-3208-4872-a64c-1e3f2b430d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41969d52-3ccb-46f5-9d50-e0b65da0c61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9d67c9-9476-459c-bf7a-7f6ecb6d8ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3f26b3-ffdf-431e-bf16-435fffd5f3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5d6df6-4075-44d0-ac90-75eaa900961c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096ba8ed-e167-4b78-84b9-4f76213eb3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42f94aa-05b8-4119-b876-d75a0a89db69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba7b74b-476b-4a05-8f90-f5535205ceda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e5656a-c3cb-47cc-8e76-cd1da148c39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4af0536-9d32-4d91-b781-9ee945e041cd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06dd965-79f7-4e7b-a420-686c99563114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effa7c9a-cb6b-4a40-a2e4-1c37c70357f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f496ca-41a8-478b-8574-db236177abfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c312e6d-ff1e-4476-8c40-ce08d4de7e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121eeb56-9e19-4920-bf99-d3f65ae6810a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78acab8-4715-41e4-bbe5-eda746b53cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef567cb2-1deb-4bcc-b0b7-a9de6f931ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f0755-04e8-4dc2-8bea-a01a60137269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4c9509-43e1-44ba-b006-1558d8a789a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21aa55d2-b24b-4403-9a67-d8391c780d57",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edb200d-88c4-41b5-b905-5971763b5f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef51608-5013-4848-982d-2e82a415e1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26972eb8-9878-45a5-a56a-a1dbdcf00afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a576fa1f-36bb-4c9a-b98e-764e4919f57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202fb0c9-ef9b-404d-87ac-f24a479db551",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a58aa0-04c4-4c20-8144-3828f79aaa70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1040fe8-7a79-44eb-8fe8-dad1651ad7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd9c2e-4f41-4f50-bb98-c75cf84e28ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0397d73f-374e-47ce-bcb8-56f7812b9437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f31329a-4473-4328-a66d-fb43ffbee59b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf78048-8993-4001-8dc4-58a017290853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea91fb5-bd77-496c-a83d-dd189eb3b9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3a72c6-bf23-4971-9924-ab48ce7c5fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff88069-a165-40fd-98f0-5abb751c2baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d9bea5-d475-4abd-899a-188da1945ea6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b4afa7-66fa-4584-9638-8158939ee722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270a28f0-7062-4868-9745-aa5c87ff144f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19463ebc-fbe7-4c4d-9fad-4190369ddc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16684e6-efcf-467a-b23e-89157b0fe7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87483e6a-f61f-4878-951e-6cc654a2b9c5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572f2afb-2bc8-42c0-8bfe-23795460df70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c899df11-4060-4526-a002-df1450ec9293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7387ee38-4638-42d5-92e0-d9e90df62df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd39d94-7bd2-4a11-a6ed-8236dd437394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e438a086-2293-471b-875a-023164ac9453",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e7106e-e094-4194-a0be-94511840fa85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34fed0f-66d6-4c0d-b88a-10d246c7435b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e902d904-0119-442f-9be6-2a46fde5ccaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22acdf3c-ffd5-4249-a03d-202a9454fa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6091a1a-1cdd-4507-a26f-9b77140753e5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e15369e-c47b-48c6-8ae8-8dbcb3ef8bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21d5db3-86e5-46e8-8edc-70f653ec085f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f235c3-1687-4578-a8c9-88946e60dd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cff7e1d-070a-4fa9-b205-e33a5cc927e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46124eb9-1dfa-46a0-97f7-797506903a69",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04d4643-3b00-4c8a-940f-975b2e38ba0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc4a3bfe-f4d5-45b2-b4a4-c8e699f37755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace4825e-53e9-4447-9f05-e9f597a9fb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9194b31-8f4a-429e-96c6-2edf86a87c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc9a5e6-354b-45eb-8a0f-4226c3db41ab",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5913ea5-f3e6-4563-8acd-65b4690f3d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fe6e0a-9f01-4f78-bf58-639448708dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0766475e-fe35-42ac-9e00-8f9ff8c981cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1211f9f4-fe86-4ce9-b5b9-e1b5a1b5edb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9af2b6-c310-4ebc-b779-16034b40a8a1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a03e86-9e0a-4cda-a4aa-26341d9ecb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d223aa7-11be-4fa2-a3f7-4500ce922f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3015b111-8574-4eaf-a15b-c3e582b99db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610e0790-9729-4047-ad78-e601ccf9a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac9a8ad-2e62-4de9-b025-26dae80a27b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb525b0-f023-4afb-a35d-76a21243c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f24dca7-8c82-4e2b-a67f-fce55657046b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1df0e13-34ef-4526-8940-968d5925ca9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0d959e-c296-4153-837e-e0bf08bbd959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80db5dfb-a41a-4c3f-8da9-13083972c9b2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9724dc7c-e4f8-4e88-8512-0eaebf5c518a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df6ab92-b6e6-4bb5-9d74-b03ff759fbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48e2f9e-b961-41b0-ab9c-91f48495f322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32209d82-f6d4-4b85-8671-9560576d17d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c712ef8-8755-49d6-995f-5ca1290c6bd4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69203cfc-7352-49b9-8e48-c33dc2d2b16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b842a7f3-9d6d-452d-be34-55a25338755c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d56c08d-a9cb-4d26-a37b-754a891fe88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527c715d-2367-4c66-a0a5-8bdec490978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f404be0-7b51-471f-b563-4277a3e35113",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e611f21-4349-47d1-b786-0ac5b7138465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2ae41f-9ba1-46b3-b82b-85a5f67086d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b767ca5-bb22-4f77-9c01-3aa0929c1322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fd7468-44f2-406c-beb8-a4ca9c444976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edf7744-4aa8-45b5-b742-8fce3543cb48",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afcc94e-1548-45ab-b38a-937bcecdb2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c484e19-2fd9-4397-a9ca-d23d59ac7c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48d6774-3bcf-4d2c-acea-3094c55db25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eece3340-db3b-489c-b450-27ad8b872322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee19ee38-60a8-4317-bb6d-0ccead1930bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db151a4-76a4-4e0c-ac2f-f3e29dc44e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd19ba-fe3a-480a-a18e-b2c4422665d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad4ebcd-c484-4f23-8835-25ee68c9eb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afa0069-d6ff-4d16-bc04-9f42da19f74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251cb527-edee-416c-917f-57951eefb2ff",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc0593b-9011-4949-b55e-02b41bd35209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e3c5bb-9923-4370-9726-37c0a37444a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b875ff5-d000-4fb1-9138-63b5efceee44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71819ee0-ff53-4ead-9df4-e95d98de059b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc23d7f-f5c9-4ad4-916a-e6cdaac15028",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afd0397-8e18-4f6a-ab74-9ec2c496e2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7af75a-372c-4b45-b435-e4db7174c480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad37980d-b1e4-4542-84d6-20b33bd7643f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db08b785-68d2-46b1-94a4-1e782899b702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c921ee-ab43-47ad-89a5-b65ed5d82657",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cc905d-7c50-4681-94de-a73fc74dddb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241afd32-c726-4350-9d07-4ef7d119d40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ca47b6-19a7-47a9-a9c7-e141e6b40d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde4fd55-f2ac-4403-894b-fc00c1b0b6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ef21ee-6de8-4fd7-8f2a-bd55c527023d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a619221-26a7-4cf0-a2a2-b67c95dc5ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d84318-ce65-468f-995c-f66aa8a71a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fd534b-e52d-4410-a8a9-cfb0d3869119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621c60a6-ecd1-4a73-a3f7-f947b7f095f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ef8a8-b807-4dfc-b30d-1e1757f65f9f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc96f1dd-7abc-4654-8cb2-fa6ac3b5c686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ed4d45-6b03-4069-9414-612c9ff37be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1caa54a-4153-450c-8430-35fcb471912b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a675413-1518-4ea7-ae02-6842df3eede7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1127cc-9271-4892-8099-4b1895407e65",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44871967-c6b4-486e-b2fb-175d2215163d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a656dc-012d-4a32-9030-32f33d2406ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a75e2d9-919c-4b7e-b9e6-976f702af65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bcaf14-b6ea-4945-8121-81c01eeef888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d790c9b-c6d1-4bdc-b35d-3a0d067cf85d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bb361d-825f-4630-a8e3-9a7d8756355c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500183d5-d2e2-46a8-8277-ac2aba2f071a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03256a7-2994-4821-95dc-92f85b40e2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3460a8aa-a020-4485-bd1d-35a597a3262a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536bf328-b680-4b5c-96f9-f3cac457512c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60513fdd-a8ba-429f-b491-bbfcbb90eeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dc9f9f-5bfd-4efc-b4e6-b25d1a0562d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2f2e3f-a139-4af8-9c07-db0b1b27882f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d29523-62c4-426d-a3e4-f9e15286bf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c5a144-d306-4069-9786-71480854375b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96c07c8-4023-405a-b464-a16017cce1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c837f171-7755-4341-829a-8ee3f3c56918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb03e91-df86-452f-896f-ce4b71b0793e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae280cba-69ba-40be-9a18-c3d986842d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b9f044-19df-4cb0-ad0d-d482f40114d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39858160-3fdb-4595-bcee-45fbb206b002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3431fd9-3bfb-4cb0-8e45-d3d446e9e3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59ab8c3-45c0-4f25-ad86-147946c9f750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c45dfad-0c20-4cee-9c80-77e12eb51067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cefad1-0bf8-4d4e-9402-d5e67c2e6cb8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3685ce43-1f25-4f9a-8255-998e748909e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a5cc6a-787c-4100-a33d-38a0c05f7dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3180186b-177f-4ffc-a530-7397c1c159c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebed54f-b7f0-4d06-b66f-1f9330007218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d76bfb-9a49-494a-a766-44159b67c1bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e70537-1982-487b-82f5-b77df731640e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c421840-4dc1-4fdb-b9c0-ce3f8a69f387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc117a01-a1df-460a-8768-500871d8c2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7308302c-1934-4e4c-b4a0-a3538d4f8d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3aed11-cff4-4066-bce9-4a359d7a1c56",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33cab7a-f9bf-4190-be9c-1a556de1b72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68089cd8-30a7-4631-88e4-4dbc86a08b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0671cc06-40bb-42ba-897a-ee83632aac9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcbcdf5-75d1-4d02-a6f9-8295a85d4cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6421e954-a328-4022-8ba3-5961de0f093a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251c6f32-d7ae-4897-8074-3a09fe60a942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cea0bf-26f3-430b-bac3-131c16a2514e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1716f03d-9c71-472c-9a6c-2ecb3545b6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aa1602-4294-42ac-becc-881704626982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80d2808-d5fa-4ad7-99f2-799146692475",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3a159d-bedd-45eb-b2c0-598f3d928c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe4c772-792e-43c2-9bd3-8f42d86b5843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c6e210-9714-43cc-93fb-42eec6d79f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a155372-bf9b-4238-8a6a-b6bfa873ce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f363f3e-835b-4f8f-bbe0-a6165f3d3b73",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370a2740-d289-46a2-bc96-3d198381d71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a25017-eacb-4e00-bcc0-d69d6778611c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2e9bbd-9d4d-4f8f-abc9-550f2f1b0762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2be1b4-d0de-4a80-a3c8-f7323a5fbc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65693e07-e39d-442d-b0bf-af8333e7c9b0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cbcb3b-235b-4efe-b9cd-25bd330cdebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe44604-0005-4fe0-a9b7-55150f6ca8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7ca4c9-71b2-4a44-90db-320c1832641c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4962ec92-e39e-449f-99a1-811b8f0b739e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7d7bbb-a824-4e9c-811b-ce89efe649bb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b63417-9c97-494d-9834-9fa3cb2dcc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f96f69-33be-4900-9539-2e129bf6a72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5653227-a7ef-49e6-af60-c8875246b732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb99e3c-95bb-47a2-8c94-65941a8fdd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb09b16e-33c8-4bdf-b7a8-c59ccd532821",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc1daf0-9cf6-4bdd-9ec5-a4e9517ebec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f6bb19-228c-4756-bf58-73b0e7c50490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed62a85b-41bb-477d-88d4-6ab7f4d30043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea28ac7c-be65-4a90-ac88-bab990cc632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045eaa94-a4ed-4f30-b4d8-ff203eb05576",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255bfc3b-0b53-49ba-9144-dfcf3611a13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e68b661-a3e5-484a-b499-78b56bf30355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca18767-8dda-4476-8b38-511c12eead4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82f63de-fb3a-4a24-828a-b2d4ec3ebacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7c2fb7-5d90-4f40-90d8-93731e59724d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca46371-4cdb-4b47-adfa-ad853a5ef107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74470138-3cfc-433b-a24e-c3e14e5684f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817a07ff-8982-482e-963e-d80d4e781c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2460e8ec-a247-4d56-bf30-8872f290001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5622c3-bd79-49c3-9480-c1696ba49e85",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d3c44b-4d28-4471-bfe8-74966ac4fb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e32cc7-a243-4214-9ef6-2561b3aa7435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2baa172-28e6-40f7-bab6-73dc57f952c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf41e97d-2dd3-4da9-893e-f57f7aa1d9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ab43d4-249f-4430-a54d-7d93bf7b9b0d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed54a8-4080-4320-9666-bfbec8009786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27460864-d068-426a-9732-d2842d7c43d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04b86f4-c810-46da-a8d8-83067650adcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ec364d-ee24-4f12-b830-65fe3260670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8c4732-6272-44bd-aba4-1ad528f82560",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6183f140-8e07-49b3-9260-94c24c3befe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f668436-4cd1-44d1-a030-0cf29046832a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e8bf5-4439-454d-b7aa-dcd25d9063fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4789e7-3cb7-40af-9967-63e292a48e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874d1754-9991-4e5e-b29e-dfc8299899a9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c153cbd2-5018-4e6b-ba72-615fe36e9ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdfff69-4c21-4f60-9073-0655e6cb1198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d5cc76-c70c-4d9f-96c1-3f5c3f92d800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4d7107-8bd7-4e07-b400-12b518591a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86df4de6-1507-4a60-aaad-ecd780281aa3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c912b3-c891-4bac-9514-98272dcc3f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0e0164-6bcb-4e2f-8394-5b84549697a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb6d7d3-7229-425d-b388-9f5e07959107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7e3bbd-beb3-498f-8504-5fd0ad0d57d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc49ee3-d0c1-40e8-9b5e-63b8f4bc8b00",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6b3f53-db5f-4e65-a20c-e76de8b095ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39cdd6a-3298-4f65-9b72-c87c64ae07c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e703b-a97b-4b42-b9d4-4f9c7c7123b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ca65f9-6297-43b1-8552-d2cb91f7ba4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f7519b-c65d-47d1-a088-a2ca9b78a463",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ccfefe-09b0-4072-8854-cbece49159dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6d66aa-157b-439f-bb7d-93940221f1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12a470b-1ff1-4147-86c4-fbd41e11b953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9856d2-4ada-495a-9bc3-3ff93b2972e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8112db-c517-483f-a976-21b13926dc53",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ba2a95-3415-4aad-94f9-f63e8544fed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29179c0b-3b6d-4a51-b7b0-979416d06162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c246c6-1c1f-4f15-8cce-41b438588d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a3fd39-adc5-40d3-8b55-09bbc696aa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96963fa-33e5-4380-8812-ffb0cf43bd49",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaa10cb-44ba-43a4-98d2-6d0398a39974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a5b36d-6d87-4036-892a-ccaba977bffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dddb600-169c-4703-b647-65b51ce9ac39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6018c87e-8777-4bab-812d-fff2b9e8e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb4924f-21b4-477e-9a80-7020c88a2360",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8713c031-8219-4377-9fdc-ee909adbc748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a7c60a-f28f-49bb-99a9-ec20a3a326cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707f12cd-7d7c-4954-928c-31a0a894d30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8993bd-dba4-44c1-bbbc-84acc5eeffad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25be845b-7e06-4347-b420-dbd00b4e251d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f724f7-5a84-46a6-8897-a3ac243f5b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47039412-38d3-4eab-8b3d-378766a280ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be780b16-023c-4cf5-bfef-eabf83f821ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cf3bcc-f7d1-4aae-8fd5-e05ac879bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e33148-a08d-4234-a019-f1363bea8bd4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccee26c3-2f4b-4039-bd1d-b8b1afe65e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1aecc95-e126-406a-8b9d-13e947f9b67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2496da29-e9ee-4a5e-9d85-4896fb481772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1103abd0-4952-4f4b-bd3e-2a5c5455bf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4cb8c5-367d-4b09-9738-8f5f1ea427f9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb580c0-6f3e-45b3-9350-61be97c89cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babbdd77-7406-43b0-86f9-f37c7bdf60d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ae31dd-fad8-42fe-9d53-c53769d5a90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806c5a63-6000-4634-a7d0-e3075084d3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97033ca7-2776-4868-8cbe-071867e02b93",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189de52f-a859-4015-84e5-531a72551310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c073ec1f-71dc-463d-8dae-4db16dceebea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c8221a-3b4b-4ef5-88d0-86816853cb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe4ba1b-af67-4e4d-be05-2b860d08d011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05105f7e-a788-42aa-b63c-fe9dff05534b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b75fd-7509-43e3-8442-1488197cab41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87dc55c8-90d2-4f11-91ed-f6223bc4959e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3f6c66-5fb3-4477-86bd-d4cc7d243e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be69206-f79c-4f06-9582-48a7f3228854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e63ac5-ab5d-46b7-97f7-db46975bc8f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c86e84-0d18-4e09-a9d7-7436977fff16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967a8ea0-f952-45d8-b705-45bd9c9ea09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dd3b5e-6e81-4337-b2ab-e5eed454067a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d51f342-c758-408f-8fd0-8e7710231c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d55dcc-e0c8-47f6-9bbe-5cc06ccf3efc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e139a2c-9533-4d65-863d-05978a68dc3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bf310c-b3eb-4fe1-8f23-1c6213d76a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec79c693-f473-4a08-815f-6284ad5b4eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8114233d-b09d-47ed-a130-aa103e75597e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c49d58f-e999-488c-9918-6501da3945a4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986883dc-d171-49e1-8f6e-232df057dd04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d1ec2c-093e-4643-ad6d-09c8bff508f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d3081a-c720-4823-8396-1e8f8fedecf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315e317b-aa04-4ab6-895a-93e9c40f7b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2344e1b4-23b8-4d52-8679-a68ec656055e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece843a4-05c8-488a-8d3c-1769fb628a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f7cc3c-d30a-4b00-bad4-95a31258169d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cc652d-4a78-4cb3-a90c-9b0749b55d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db33c468-9f00-43b0-b677-e4e01e7566fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e4eabb-4905-4cf2-9b29-ec55b003867a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e21ba8-6088-4aa9-9004-7c604731a0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7164df9d-3b6e-4ab4-98ab-9cca3ebb33d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2febf9-d543-4a59-9a89-6f4908c4c08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e166f5d0-eca4-4c3c-9a3e-0d08679eeaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040899cb-0779-4ac7-af69-4601ea0c4468",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b7cd1-7df0-4611-b252-f14be61a68b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffa5ff8-bc80-489c-a56b-ca705c919174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62dbc88-132d-4057-8a2d-dbbdc9e9d4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e66353a-a6ed-4479-9bbc-eec739fe56b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bfd7a8-cdec-43c4-9fe4-fa58aa3ec70f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91089208-0b0e-471f-b06e-95533f5e5230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aed25f6-a635-41c7-a91f-ffc07b66a313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e42dff-a6c2-4716-aa63-8bf680c03b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a9806e-886e-4a4c-af9c-88023a368f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c3882-cbfd-4be0-ac53-48878cdae0a3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66101ccd-b5cc-4933-9cc1-db412e3d869b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5594b43-da95-4b01-8522-7611a8d21057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa73b88-66bd-4d62-a12f-c5e80613e15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fa4744-69f7-4e2d-a491-813d9c873f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa4614f-2ee8-42a7-9957-f9bcd93b6612",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1298433f-734c-4214-ad64-5140e75cb7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "813f5339-6d62-4e46-ac10-4e0c666950ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d54ce1-1989-4f68-823d-4258655244dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2303f530-f572-4ceb-aec8-68ae85e945b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eb37ee-f8c8-43fb-a5d3-968299f86318",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1588f220-db21-4b45-9571-8db315ba8afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df833d79-52f8-4560-a604-2b9fdeaa47b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e85b4c-90c8-4a59-945f-a1db717c5a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802678fa-6ec6-47dc-b55c-e23da0e1a1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ef12dc-cd4e-4964-b98d-2606628b7009",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c058438-59be-4204-b275-ed84fa55836f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abaa5f3-3d06-4b85-94ca-c0da7a1ffe9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d6254a-bc42-443d-9495-0a4c97173d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499d68de-40b7-4801-9d03-f50f63818988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06246273-b441-40b0-9405-fac23f3cf0e2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17199049-65b7-41f4-9f0e-79e58dc679d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a136ecbe-b89d-400d-832b-7d95be2ce7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e63548-2d11-4f3e-90e3-df45751b15d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf3e35c-b629-4dad-b7c4-7ac104e3e0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca3d718-7a95-4497-a74b-55a780d52ab4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5728f5e6-5f0b-4ad6-af1c-17387b70a058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a802fb5-6817-4847-a926-086154ef5686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6030f33b-6c73-4f31-9fe3-e82ecf52269d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c98f093-7afb-49da-af8f-f3067ebb7cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa70b3c-4cc5-4d7b-a567-67f40e4bea6c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d954623-7626-47be-8583-cfb404b8de69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bcb864-1bbd-4376-8da5-ec87396522ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d315a90c-88c9-4ff7-a206-e854c6c44e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c25f05c-c7ec-4a05-8745-42dcff1187b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe155744-9e39-4ca1-b6bf-d45c20eaa808",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50db3e2-a032-4626-ba92-b0e07f61dbaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6acdee-7c71-45a0-ae81-023df3641f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfeebad-d259-4c77-ae05-6f4a038a4a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1da7fc8-de7e-4d16-80a9-842d6f43f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61457aef-09dc-4856-b6fa-13c64c97ec3e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9577f72e-6883-4ba0-8106-3d1c3801b23e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e87708-4f07-44a3-8159-c0b224bb83d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b17c93e-4434-4c33-b888-e4675c89d8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0043933-d836-4ee1-b2ec-40270b8ad3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c666dc20-df45-4a62-8e1a-95346103044b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6960ed0e-04a1-49cf-9dcd-f5e68327ed1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91db5989-a04b-4f13-95ae-056f618252e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cae4d90-7af6-4db8-9160-6420f44a5ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe560f5-d7fb-4e48-b54d-db9886f81f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a93bfc4-e168-4f6e-a13f-e130bf68709a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6450d0f2-1b7c-408a-a4f0-d58854096fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c691dcb7-f3df-402d-b634-4dc1163aa07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d14bff3-20d3-4219-ac02-2121baa1cd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc01cb6-e522-405d-b68a-e8b9c799ab06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3424f54c-ec98-4a73-8df9-a5bc32b0d304",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc03a8d-a34c-49b8-9c9e-3858f784a227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e68656-5ab7-4bf4-a3ae-ef8ab25432fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31fc13e-7dc4-4df2-86c7-a561a7262b27",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0ed25a-c9da-47c7-a21a-d93da9e5367b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07de72ca-b350-4e14-953a-a0530b60601a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63196e8-b794-4496-b0a1-91f5850fbaf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da41dab9-a3bc-42a1-8805-d462a13e1879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55c57f1-fd12-4cf0-9edd-672243abf39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d806ca43-9ce2-422e-acfa-4edd4c2253b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eed54a7-cbb8-4d3b-ac13-6b8d9a8e5484",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93effe37-4d74-4c62-ae10-c7f20180bb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508515b6-f2c0-4915-99a7-f5cae3197872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916b6390-2a43-4abf-be1a-e693bb8eb659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0ad61c-1bdb-4337-8a86-6e7318b6f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecbdd1b-5123-424d-9ac0-8f70fdf66e58",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0573908a-bc33-405c-99ce-26bacfbec84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf908c1f-ab15-4a87-8360-160388d7bce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d234555-8cf5-4172-819a-e30d6efac805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce9670c-e145-4f7f-a470-a97c7ada573c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102894ec-08f1-4677-bcba-a789077b16ed",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f40604-4c65-468b-9649-91c3235e9fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60ae1a4-34f6-4b63-bf0d-43e1abbc1beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5187fc04-199d-44e9-ae73-2b109fbdcd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df4d3ad-55b0-4692-a7b9-2303c88fccc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5972a2f-c0f0-47aa-ac40-6157879c3ed0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410d818d-d7e9-4da1-80d6-8d697b6d5cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b72aec-b0fa-4dd1-a546-7ebfabb14cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a94dc1-8e62-4994-82ae-cd35fa902021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86964c9a-864b-4769-8465-9313d47c9178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b5dfc-3ad3-4295-8075-58689d0f11e8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78161d1-dac6-40e0-9fee-6edeaa73a7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54c82da-fed3-455f-98d9-7e319f356ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a79d42-c8c8-40db-8e9d-a6824905211d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117bb30d-b148-48da-aa18-9d61e0d6e19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a63e7d-f0d9-4987-b572-fa249a7b3f03",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ab821c-d05f-4085-b01d-5dd04b4d2757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d5bb52-adad-45e3-b2a7-35d83c1d3e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b790e949-248d-46fc-ac2b-5730ba129da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebdcca3-9454-4da2-8516-aedf18dc112b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c34a9f8d-3536-4db9-8c43-014c8ab03bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa132403-1bf3-4a63-9b6f-c842cf69a15a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dce47fa6-42cb-44bf-ad76-f113465949a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "060b1c47-09ef-4098-9d39-a689fb5c4d96"
                    }
                  }
                ]
              },
              {
                "id": "fb6921ef-0b6a-4933-aef3-fecddf4a121f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a764bf3-46e5-4d2f-8284-a895843a2f83",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd8d2e7-1f93-445a-b3aa-2724853a8f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c7a2826a-33bb-4202-92ae-47592e5119c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc973e52-518e-4767-976a-4a8bb4071244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f35fd19-580b-403c-8774-c0a815b0f29f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f83fe39-883f-4f5a-8d8b-14e639e9192e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c628a011-d961-4e4d-9565-a3f5aac50e93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56c2d164-997e-4297-9727-7e3aaab95c1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d66c5679-c304-484f-b7f0-5a16bd1f2267"
                    }
                  }
                ]
              },
              {
                "id": "52275d01-62d9-44f5-8d21-2fa1c4c0fb3e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "05480393-021d-4bcf-ba42-dd61052f7cbf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e729944a-850a-403a-b7c8-104bd8d04296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "40e0d992-592b-40e8-b8d6-ec117cc090dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74befc14-a5ab-470a-8f07-88b1b5736226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0266b3d-83ed-4e75-9220-a53246786b65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "185ac662-322f-4734-9182-a308f2b84388",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1f524a3-ca18-4968-827b-6e5081254233",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85f2db5f-cd50-4f4d-9135-95f60c799639",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ef15e770-6d53-458a-9652-2250669cf012"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaa525b0-339a-486b-afe6-05e7f46876e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e35cd2b5-a81d-479a-bfa9-91930e0c31fb"
                    }
                  }
                ]
              },
              {
                "id": "09fe2026-5147-4f1d-bf6e-a56cd9f4dde4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f561ae26-b85d-406a-90f9-882e0c79f1ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86763d20-4aef-49ad-af35-022641b0c178"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f78f215-df01-48b3-ab31-807b398c51f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0039474f-7553-410b-a6fe-256fd062f73d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ada55f5-a9a5-4004-b88e-0830a0a9eca8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0e86d0a-2143-44e7-ba1c-24df66bb2699"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e91a2e2e-266c-4d08-80fb-c00f4f228055",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75cb10ac-4c8a-4f6c-be07-71162951c6b5"
            }
          }
        ]
      },
      {
        "id": "7004140a-c7c8-4e2a-914d-2094596862bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "96e65019-5803-4706-9c86-3e1998d6d347",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87712ef6-42e9-488c-aada-bb1bfede82b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a1b1f25-1b81-4f3b-b9cc-481f4dc04883",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe1c304-3532-44b6-9261-9ab386b293e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6765818a-1ff3-4993-b25f-5a0eac77c2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a9d6d0-4ad8-44f5-b6ab-199af663eba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7de4cf67-7aa0-4ed3-b88a-27512136c828"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc3d1dd-c090-457a-90b4-928030c27270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bde86142-6a6a-458a-8d94-4c822683be0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d63a4e56-8932-490f-82b3-81fe9bb97b22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98b495c2-a367-43a9-b5b3-bd7a3032eaad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8e6899e-c57f-469d-ada5-d69911a8cd9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "83a02f41-1e32-4cb5-8827-5f95b8d98675"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7c6f08a-8da2-4b8c-a549-b39c4346295d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52aacc40-9ba0-4eed-b13f-9c350b12e144"
            }
          }
        ]
      },
      {
        "id": "35df8701-9156-416e-930d-1cd2221a8110",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6e6ed61d-b68f-4404-8519-0790fab198ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "470acf53-212f-40c9-bacd-c1bf0516e58a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79a129d7-9145-4b6a-8c3d-f7bd068c6da1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0987efb-a4c4-4ed7-942c-a63f8b539492",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75fab24a-92bf-4b85-99c5-f83612459f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dcc096-cf48-4076-9434-794670d6e919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e77c6cc5-6361-4c82-bcef-5b2939ca134e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2886388f-7ece-4d78-bd39-44acd98980dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e50a6160-3509-4204-b7af-d031e5bb1842"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05d0ef22-a5bf-4592-b622-cd4f70d654a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94171928-05c9-4bc8-a6e2-921f9e8b64cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3515c84f-5b53-40d9-a5e6-1e7ee8d85c47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "abc7c1e0-d3a9-47b8-8e72-eb2406b48afc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca7eecb7-3d3d-45e4-af35-f787bc424172",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec60063f-4719-491d-bf88-6d6c9c6de499"
            }
          }
        ]
      },
      {
        "id": "f0c1ebbc-c501-4dd4-80e3-5ffe542e1e0f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1fba910c-efa0-4a4a-8a35-3be25c9519a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "091ae136-e037-49d4-98c8-17839370a7c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcf67491-3dd6-4ca1-8934-eeb9bff3c15e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a53fad-38e6-4960-ae57-041997ccb41e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "739e35f8-98f3-45ce-af1e-0ef14a8ab802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85449f88-b32e-45b2-b5f8-95ed7c7a209b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "568ba051-86f7-41a2-a224-0c1ff4b62b34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "039d919a-9af5-45e7-8ad6-430882cb5aa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40b6e92d-9035-4f8c-acf6-dea20f2d309e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f52c46a-6ded-4ac0-8f11-8657083d3982",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ba05618-5672-43e3-a82c-712e9ba06921"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c198b13-307c-444d-97cb-6376ebcc960d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b03924a-5712-4736-bc77-028da25a1bff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000c8271-079c-4f56-afac-acad18ee7e35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56c8905c-9fe4-4e50-a83a-617fe77c11e9"
            }
          }
        ]
      },
      {
        "id": "d9277f82-16f2-48f9-baa2-65b531f634c5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "483e5bff-e357-4112-beea-41ab76f03b77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "673057c1-d54a-43d6-8d72-e7210dbce576",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8e432e70-7db0-4a32-9d24-e98065d2c91a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bad9221e-8932-4f88-851f-80129f9eadfd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "499ac76b-dbce-430b-ac97-a715f7618b8b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.183098591549298,
      "responseMin": 7,
      "responseMax": 333,
      "responseSd": 27.680170285214093,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696984402664,
      "completed": 1696984418135
    },
    "executions": [
      {
        "id": "03a69609-68f7-4ce1-9be9-a9d59748da16",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "24339aac-f17f-4743-aa9d-74d2c82e8f18",
          "httpRequestId": "5071106a-3b19-4a21-b25c-9acc22222fae"
        },
        "item": {
          "id": "03a69609-68f7-4ce1-9be9-a9d59748da16",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89f0ed99-72ad-4a8b-b5e6-df22aac4dfc8",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "37e21787-f2b1-4757-b432-0d3df8565548",
        "cursor": {
          "ref": "22f0bea6-b754-4edd-a9a8-97e19e4b450c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e234aab1-3de3-4573-91e2-aad86ceea686"
        },
        "item": {
          "id": "37e21787-f2b1-4757-b432-0d3df8565548",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e0858ebd-a198-4aeb-b4a3-ecdb4652be97",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a3064701-28e4-469c-967d-dee139b3712c",
        "cursor": {
          "ref": "4e12b8d6-2fea-4e33-8b95-72a6426bc987",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "372e1385-5c07-4785-b920-92dc5f567678"
        },
        "item": {
          "id": "a3064701-28e4-469c-967d-dee139b3712c",
          "name": "did_json"
        },
        "response": {
          "id": "ca0d8c38-647c-4890-945d-dd79b98bf134",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee75a302-a0c4-4ebd-ac84-7bf88dbf532d",
        "cursor": {
          "ref": "8183b7b8-ff36-4825-a618-5e2907e921e3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc2b90a1-ad99-4acd-a2b8-56241a398473"
        },
        "item": {
          "id": "ee75a302-a0c4-4ebd-ac84-7bf88dbf532d",
          "name": "did:invalid"
        },
        "response": {
          "id": "59ecd748-2849-4bfe-84cf-fcd1446906bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee75a302-a0c4-4ebd-ac84-7bf88dbf532d",
        "cursor": {
          "ref": "8183b7b8-ff36-4825-a618-5e2907e921e3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc2b90a1-ad99-4acd-a2b8-56241a398473"
        },
        "item": {
          "id": "ee75a302-a0c4-4ebd-ac84-7bf88dbf532d",
          "name": "did:invalid"
        },
        "response": {
          "id": "59ecd748-2849-4bfe-84cf-fcd1446906bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b3e918-8919-4c15-8374-1d54c020c38a",
        "cursor": {
          "ref": "a0e4eecd-81dd-43a6-aba2-e0f82221ecd9",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0ed2e46b-74ac-462c-a57d-537e89bc4b5e"
        },
        "item": {
          "id": "60b3e918-8919-4c15-8374-1d54c020c38a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dff19d8d-45ea-4ff8-8cf9-c58e657ddb52",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5e141e-2a57-4322-b019-59f162ea1db7",
        "cursor": {
          "ref": "414981f5-7952-4002-92e0-4b6b17e38cd4",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "629ce51b-4d96-4bb4-8902-eaeacbd7826b"
        },
        "item": {
          "id": "1c5e141e-2a57-4322-b019-59f162ea1db7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bb814c60-e66e-4d9e-8f13-56ee2d2cfed4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcab80a9-cf0a-48c5-b59b-65eba4c84f65",
        "cursor": {
          "ref": "df016349-86c3-4d61-9726-8b3ffbbabc95",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "48c7b609-4bc7-4c3e-84ce-3d14bd8f89d5"
        },
        "item": {
          "id": "dcab80a9-cf0a-48c5-b59b-65eba4c84f65",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "91211c83-cd7b-48c3-b5c1-b3e40575a674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27fb426-d706-4c00-a46a-cae637e83742",
        "cursor": {
          "ref": "a3e42b39-d0c9-419f-b3da-5076b0ca13cb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d324c916-d0f7-421a-ad53-8c106835930b"
        },
        "item": {
          "id": "b27fb426-d706-4c00-a46a-cae637e83742",
          "name": "identifiers"
        },
        "response": {
          "id": "e8b540d9-3ecc-4806-a587-480577b62705",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e7f17e-f175-43c7-b79a-62b3091a92b9",
        "cursor": {
          "ref": "809a7537-1626-442d-9ba8-839840162636",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "07f3d0a6-af8b-4a08-96ff-9a32b70523f8"
        },
        "item": {
          "id": "25e7f17e-f175-43c7-b79a-62b3091a92b9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d49eb10-53ac-4e34-b23b-e5af0ec50ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad0292-aff2-4cba-ad2d-c42a1da89d54",
        "cursor": {
          "ref": "1c6d5952-6104-47df-b08f-18f6589af2c6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "54d06732-18ef-413c-bdc9-9a3679097756"
        },
        "item": {
          "id": "42ad0292-aff2-4cba-ad2d-c42a1da89d54",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "908aa9f1-644f-4c39-b57a-4a77806328f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278b4e18-252f-42f4-99fc-7f2880cb7b8a",
        "cursor": {
          "ref": "e47f4a07-d406-43c8-bd01-ca79d0d0831b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cb13423c-749b-4090-939f-3e73eb8fd554"
        },
        "item": {
          "id": "278b4e18-252f-42f4-99fc-7f2880cb7b8a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c7d4faa5-b9a0-49bc-a046-f9979c30fe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a06529-619f-4230-8633-9bdd7933c794",
        "cursor": {
          "ref": "aca98982-ac90-4133-bca2-24a1c5a1bcc8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0721a939-2af2-4a22-bec1-7ea22b37a7c4"
        },
        "item": {
          "id": "60a06529-619f-4230-8633-9bdd7933c794",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85fe9171-d5e1-4964-a50b-e4993a91fb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632275e5-90b3-4892-bb45-5c63db041f29",
        "cursor": {
          "ref": "325b4a80-9ba0-4240-9549-a17e58ad66c2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8ce6637f-8614-41da-887d-4099da38a815"
        },
        "item": {
          "id": "632275e5-90b3-4892-bb45-5c63db041f29",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "27d9065c-6042-4a90-b16f-bef813d406ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3776e71-b83c-4234-bfa7-7f571e08a97b",
        "cursor": {
          "ref": "d371f3ff-67d8-4183-b586-380d3dc47bfb",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e06d765-6115-4988-82af-335674dd05da"
        },
        "item": {
          "id": "d3776e71-b83c-4234-bfa7-7f571e08a97b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6e67c377-bb9f-49d9-a2ab-7b02c1b2b31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2deef08-5240-4f2a-8268-1d277ca9d851",
        "cursor": {
          "ref": "62342242-acde-418b-b3a0-2e541988679e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8c698564-970c-45df-bd3d-d3d3c100d3db"
        },
        "item": {
          "id": "d2deef08-5240-4f2a-8268-1d277ca9d851",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cc8195c4-4bf3-45fd-bc80-618ece66a7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f8c6d8-0b35-4907-a741-b28a7650c799",
        "cursor": {
          "ref": "84b8dfa6-00f4-41c5-8e3b-2ccb1e75450f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "475bb274-9047-41cc-8cd6-43c2b94ed852"
        },
        "item": {
          "id": "69f8c6d8-0b35-4907-a741-b28a7650c799",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d46772e1-8ea4-4638-9797-a531f1bd9fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84b43c6-3f60-4423-af37-4eb77373f279",
        "cursor": {
          "ref": "239e284c-5ee3-4db6-8d66-b4a4d43ec0f2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9d53b0cf-3d23-4073-a170-017584a00af4"
        },
        "item": {
          "id": "c84b43c6-3f60-4423-af37-4eb77373f279",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "deae3ba8-36e4-4d82-8c17-f2adc49d31d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb3c25-a90a-4a2f-bf4e-39b345978386",
        "cursor": {
          "ref": "412d6e8a-be96-465a-b63f-bccc393d061a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "372b3a0f-1944-4d15-a8dd-b51af351919b"
        },
        "item": {
          "id": "4cdb3c25-a90a-4a2f-bf4e-39b345978386",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "73018e3a-ef1d-4332-b3e2-26de38eb6dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50b8327-63e8-4060-9e0a-d458fcfb8908",
        "cursor": {
          "ref": "3cf60edb-eaad-4422-a9c9-470e98129833",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "85bd20b0-7f06-4bdf-accb-2e83f3da80d7"
        },
        "item": {
          "id": "d50b8327-63e8-4060-9e0a-d458fcfb8908",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "50055d33-3dbc-41c5-b695-ff56d8cff440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314d0983-c2d6-45dc-ab4a-aac0212e9c81",
        "cursor": {
          "ref": "4a01a8cb-40da-4406-8507-372397aa70c8",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "20c5e47a-a09c-44ab-8b26-50c6ed303e1b"
        },
        "item": {
          "id": "314d0983-c2d6-45dc-ab4a-aac0212e9c81",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0a4e6611-6635-4893-9386-ee6f3843add5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ca8725-fcd9-4a84-bbdb-c47d12ec1876",
        "cursor": {
          "ref": "ced5f2bd-ccdc-4337-bb10-730bbb850f40",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af65407a-c580-4975-be23-7d5bb09d7f1f"
        },
        "item": {
          "id": "76ca8725-fcd9-4a84-bbdb-c47d12ec1876",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "90447bfc-bc3e-4f58-a7de-1e211227fe34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7e1a1d-3b37-45f8-ab8a-f795fa82d880",
        "cursor": {
          "ref": "678b4476-662a-4b7d-bc7f-7a3870a8951f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1901ba87-68df-4942-bda4-e14d76143d34"
        },
        "item": {
          "id": "5c7e1a1d-3b37-45f8-ab8a-f795fa82d880",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "32c75837-1be6-44bc-b510-18eade8754e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1722e85f-e9c5-47db-873c-e4b53fe2b0c4",
        "cursor": {
          "ref": "2ba485f6-631b-46a7-86fe-a15fad53fa11",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e812e1c8-b22d-45a3-b473-9256395806ab"
        },
        "item": {
          "id": "1722e85f-e9c5-47db-873c-e4b53fe2b0c4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a690116-2502-42a6-94cd-2c8635d8132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a347273e-8f95-4b86-a9a7-b00799bfd68d",
        "cursor": {
          "ref": "34944563-3b7d-4a8b-876f-2944d2005aac",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "54cbe0a9-72d9-4554-a97a-6ecbac8f722b"
        },
        "item": {
          "id": "a347273e-8f95-4b86-a9a7-b00799bfd68d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6e510456-b235-447b-bcb4-d872e7e9b863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b18799-dcc5-4e18-896a-5f8deb0b590c",
        "cursor": {
          "ref": "89750380-bb28-4c85-bb2c-1d41eedfe02c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1bc36b8a-b98a-4228-873f-8e4ab3017f8c"
        },
        "item": {
          "id": "81b18799-dcc5-4e18-896a-5f8deb0b590c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f2980941-6253-411e-b42a-5de35ce8ccf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e488a6e6-65ae-4108-b6d4-3fba869b3b4b",
        "cursor": {
          "ref": "07b6991b-f066-4e7d-800d-6bc87b84c3a0",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fc94ba11-67be-40af-921c-3ce76f1e666b"
        },
        "item": {
          "id": "e488a6e6-65ae-4108-b6d4-3fba869b3b4b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "930e41f2-1097-408d-b5be-6de0234c5ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceedce0-8854-4d38-b6ed-68cfbdb0ec71",
        "cursor": {
          "ref": "ca31d2ce-99c9-466f-9c43-e2f9ee63ea87",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8eb88207-6dd4-4d9f-bceb-f1d0dba887d8"
        },
        "item": {
          "id": "7ceedce0-8854-4d38-b6ed-68cfbdb0ec71",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e503dbf5-7463-4414-8a5f-de90584c69a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbd3148-dbaf-4c4a-ba84-93895444ce23",
        "cursor": {
          "ref": "47a14f82-65c5-47cb-819e-fac35212361f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b26b6396-54ae-4110-9222-be054930495c"
        },
        "item": {
          "id": "9fbd3148-dbaf-4c4a-ba84-93895444ce23",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "68453290-18b3-43bb-b0e8-766bdd53cc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a126c8-2584-42fb-95c1-c18ae5e132f3",
        "cursor": {
          "ref": "7d5d4d79-2ffc-4b8d-aee0-34f64602da4e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7b73705-8489-47da-81c6-d2d1d40088dd"
        },
        "item": {
          "id": "b1a126c8-2584-42fb-95c1-c18ae5e132f3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b2a00a79-6a61-4a9b-b39b-ae26f93b888f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82bcf00-ad90-43c0-8dd3-9b39e923d5a0",
        "cursor": {
          "ref": "ab2fd96d-a855-4075-8cec-01e301559267",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a9c7a174-372a-4459-9c84-70765d116aff"
        },
        "item": {
          "id": "c82bcf00-ad90-43c0-8dd3-9b39e923d5a0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "937a46c8-d5c5-4767-8799-2bc5a4904f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89722748-2620-472f-a152-15f8ce56525a",
        "cursor": {
          "ref": "96176344-ae4e-48bb-b8b2-e66d30788ffc",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2b9deaf-15b8-4a3c-91a1-f0db3ff55cc4"
        },
        "item": {
          "id": "89722748-2620-472f-a152-15f8ce56525a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "666b8841-04b9-4563-b0a0-64e4f616fdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f68677-f395-4ff9-85c6-aee3d71f16f7",
        "cursor": {
          "ref": "e545f77a-2e9c-49bb-89cd-187d3c5f0a42",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d21ba02f-050d-420e-865b-29324b2baa8d"
        },
        "item": {
          "id": "86f68677-f395-4ff9-85c6-aee3d71f16f7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "371d6901-75ec-49ff-8b70-323c9f20851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a0699d-6629-4952-ae0f-8132c7c75b61",
        "cursor": {
          "ref": "f93a56ae-efde-4736-a1c6-48351b769108",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a63c722a-a561-4441-8397-0d91157bca9a"
        },
        "item": {
          "id": "e2a0699d-6629-4952-ae0f-8132c7c75b61",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9fe60035-df4f-403b-b611-10a9cace7531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5fbedd-6513-4958-bd8c-fdba38e55c8d",
        "cursor": {
          "ref": "ecd5d782-f67c-456a-8130-97687eba5ab4",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ff1d84fe-7a96-4a16-9f0b-199abc88b0ff"
        },
        "item": {
          "id": "eb5fbedd-6513-4958-bd8c-fdba38e55c8d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "99c573a0-cb4e-48d4-9289-283c14a3c998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06ee34d-f7aa-421f-a7e9-e7a0d1f5a73d",
        "cursor": {
          "ref": "bf77052a-6705-43c4-ba7b-06b85ef056d3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "72e2dc72-53e9-481b-8ea6-f48e115e229e"
        },
        "item": {
          "id": "b06ee34d-f7aa-421f-a7e9-e7a0d1f5a73d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c6a84e56-52d3-4513-b927-725620d0710c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722b3ecb-9e3a-41cc-922f-a65fa5a0c89a",
        "cursor": {
          "ref": "e5bc61a0-64a5-4cce-9c63-2da845c3358c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e7cfb251-fa90-45e5-897e-38a9f6266f03"
        },
        "item": {
          "id": "722b3ecb-9e3a-41cc-922f-a65fa5a0c89a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "754a3233-332c-40ad-b844-d6ee94636d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e59b8b-360f-4b4c-b4dc-d4d89cfe2c40",
        "cursor": {
          "ref": "a07b2832-4ad7-44f4-b979-80b3d3af7393",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98a2b657-1ac0-4e9e-9726-92d3ef5d70d3"
        },
        "item": {
          "id": "13e59b8b-360f-4b4c-b4dc-d4d89cfe2c40",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f615bf66-a98d-400a-b422-ac19d05ee62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfb0ce2-afde-4feb-98cd-e69a5d24a45a",
        "cursor": {
          "ref": "f49f0b1b-99e1-4f97-ac39-8cbc9208e780",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "063c11f7-4f80-4397-8a83-8e3f5cc02469"
        },
        "item": {
          "id": "fdfb0ce2-afde-4feb-98cd-e69a5d24a45a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f90d5b1-edc1-41c0-8789-9523b4ebc294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6039da9e-fd12-403e-9314-cadc49483143",
        "cursor": {
          "ref": "013b8b18-0899-4c6e-b8be-aeac7c68295a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b48bc62b-a37c-4bce-bcf0-db30d60dbec4"
        },
        "item": {
          "id": "6039da9e-fd12-403e-9314-cadc49483143",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "916925eb-03b2-4f85-9470-a6ac5609fb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b49f04e-6cc2-4533-bf61-8357f8d56502",
        "cursor": {
          "ref": "9a9e59f5-59e1-4069-97be-e9539a05ed30",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "423730e6-053d-40da-af19-5eca3f794e50"
        },
        "item": {
          "id": "5b49f04e-6cc2-4533-bf61-8357f8d56502",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6d6b9923-b617-4916-99dd-b2d5915999fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c29a07b-467c-4fa4-86a9-c9efeea4d2e4",
        "cursor": {
          "ref": "9232905b-d5b9-476c-9ae7-9f53d8152fe0",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "40988f4b-5329-4749-8f88-594f7d5878b3"
        },
        "item": {
          "id": "5c29a07b-467c-4fa4-86a9-c9efeea4d2e4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "36704db0-4223-453c-981f-187a21c21f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab28bc8-2ac7-4fd7-a877-95a53c0bf568",
        "cursor": {
          "ref": "7acc43c2-e2fe-491f-9862-96792fabcf6d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "05f39d36-c18d-44f5-a3f2-c2963938c7de"
        },
        "item": {
          "id": "1ab28bc8-2ac7-4fd7-a877-95a53c0bf568",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "17cd3c5b-acfc-4d1a-8e18-05d392fcb5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0663ae-b623-4b9a-a205-c6b16bd5a53f",
        "cursor": {
          "ref": "c9028ff0-b1da-48fa-b650-139ecfdd1611",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f869da3f-d024-4e62-b7db-32c750f8925b"
        },
        "item": {
          "id": "bc0663ae-b623-4b9a-a205-c6b16bd5a53f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "caa5342f-9e17-4d60-8a1a-2d9cc92e8273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d81831d-e114-428c-9d9a-b8336b7d064b",
        "cursor": {
          "ref": "1b4f1b36-1db1-4d48-adf3-4f60a8a52252",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "027543fe-9632-4a67-bffb-055eb3b8c050"
        },
        "item": {
          "id": "0d81831d-e114-428c-9d9a-b8336b7d064b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b77276e8-e594-45c4-a8c6-53aa13e97479",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0d8ca5-febb-4b36-b5a5-5087027d9fe2",
        "cursor": {
          "ref": "bdd84be0-3071-4665-9554-29f745bf3f02",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9e5dda71-bebe-40b0-bff2-836d7a8266da"
        },
        "item": {
          "id": "0b0d8ca5-febb-4b36-b5a5-5087027d9fe2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2cf976a4-b99d-4e53-947c-7b03211f9106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e818d8-1fb4-4264-8e77-f12f6b76c952",
        "cursor": {
          "ref": "2c1e7078-1449-4aa6-b4be-805f84e89f1b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5d88473a-a012-4a35-9a5d-84003c2241c2"
        },
        "item": {
          "id": "52e818d8-1fb4-4264-8e77-f12f6b76c952",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "af3b7f1e-4385-48c2-8367-483cf17f15ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cfa74e-2d5b-4a58-97f1-086a9b4bbc7a",
        "cursor": {
          "ref": "7a6866cc-5e2a-46e9-895f-d05db282ce3c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "69219b86-5b1a-4fb0-af6f-0ff5a868133f"
        },
        "item": {
          "id": "d6cfa74e-2d5b-4a58-97f1-086a9b4bbc7a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "61b27795-ee7e-4b55-b40e-3f168b3f661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415210e-60ff-43b9-a1fb-3bdaec3339cd",
        "cursor": {
          "ref": "eb0b44d4-836e-4057-867b-f62b9f3de7f5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "390a0a11-dd1f-4030-9429-741066601641"
        },
        "item": {
          "id": "a415210e-60ff-43b9-a1fb-3bdaec3339cd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0f028f7e-66dc-4c92-b719-8f6a644864c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4f73e2-686f-4f4f-b65d-bc52b01a5c79",
        "cursor": {
          "ref": "d24653ab-1087-4adb-a490-33f00acb830d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5c1a5da4-1aa5-4e24-b3d2-42b33b20a3b7"
        },
        "item": {
          "id": "6c4f73e2-686f-4f4f-b65d-bc52b01a5c79",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9dbc08a2-5ea8-4e16-aa6d-50fc9d27369d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770db332-211e-48c0-8c7e-736c16f4c2ae",
        "cursor": {
          "ref": "28b86523-8381-4ba0-a3a8-2f1b1a2092a9",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "158cf9b9-c394-460e-8fd5-a20f07e8bb08"
        },
        "item": {
          "id": "770db332-211e-48c0-8c7e-736c16f4c2ae",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dcc868d3-e0f2-4aa9-aa57-f27dbc27bf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc34983-e5a6-45f2-a136-23aa1c7110da",
        "cursor": {
          "ref": "a8c0586e-0c0b-4d64-8e96-ec07f98f86b1",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ee9587cd-f7d4-4ea8-a198-c064f8b5b0ee"
        },
        "item": {
          "id": "ecc34983-e5a6-45f2-a136-23aa1c7110da",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "66e8be57-c7ff-4c93-ac9c-0f369d0d2274",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ea7b5c-2116-47d6-8f30-47081dd9aed1",
        "cursor": {
          "ref": "0289e48a-5d5c-4f95-8b66-3395ffd7c3f7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cdb5a641-435a-4ad9-8a01-4a9d2ce4ee6b"
        },
        "item": {
          "id": "f1ea7b5c-2116-47d6-8f30-47081dd9aed1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b7e15d11-a28d-4b04-9c71-132e70f82009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d2df29-a0de-434d-a000-0ec16f5a19ab",
        "cursor": {
          "ref": "f8c79692-cc4c-4f89-a39d-b153049a65a5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b1331cbb-40d0-465f-9613-7ecef45c66a0"
        },
        "item": {
          "id": "f0d2df29-a0de-434d-a000-0ec16f5a19ab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78ef2825-f757-4950-b658-58e6a06f090d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deabfdd3-04c1-42d5-8948-30b561a4616e",
        "cursor": {
          "ref": "bf9e1399-6c52-4635-8adf-bcdc1cb1e154",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "597818ee-7474-4e81-828d-61041ed9ccf4"
        },
        "item": {
          "id": "deabfdd3-04c1-42d5-8948-30b561a4616e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7c0639b9-c22e-43bf-b2ba-5c88ebba6feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18bf93-a92a-4070-81f6-46a0933817c9",
        "cursor": {
          "ref": "e5de1e11-81e1-4120-b9db-be917a820be8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76a66bd1-dee6-4c23-a747-b160452daeca"
        },
        "item": {
          "id": "2f18bf93-a92a-4070-81f6-46a0933817c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1f9d1cde-4e7a-4e2f-95fc-4fb8b3b5d846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0d055-460c-4dd1-8814-8514980f4e62",
        "cursor": {
          "ref": "9ff71ab7-ddb2-4429-beff-62b723ea846e",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "329933af-fb28-4948-b40e-ba0cffdad44b"
        },
        "item": {
          "id": "94e0d055-460c-4dd1-8814-8514980f4e62",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cc5bcfa1-11a6-4bc7-8e92-41dc4343bfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef55b06-bd67-489a-9090-d4e7115f7a86",
        "cursor": {
          "ref": "6cdac7ab-d3a1-41fc-8b57-7f25d65ca47d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ee4e2052-db0f-41d9-b8b2-e711bf5e8ae0"
        },
        "item": {
          "id": "9ef55b06-bd67-489a-9090-d4e7115f7a86",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa82cc6c-d646-443e-84fa-e4647cf8ba53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397864f1-62db-42ae-af67-8c4ea9e41989",
        "cursor": {
          "ref": "9348f616-ba06-4164-8cb0-0071805c8247",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e72c8b3e-54f4-44bd-8edb-0db7cd251f0c"
        },
        "item": {
          "id": "397864f1-62db-42ae-af67-8c4ea9e41989",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "406a9877-f99c-4e96-bfa2-e0ade207fa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6528677e-2ea6-46f0-b1ce-06856277e0c3",
        "cursor": {
          "ref": "1cf024e0-14b8-4482-a796-cc28cef64049",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9f0b8a35-f471-4883-b653-473fa7ba5027"
        },
        "item": {
          "id": "6528677e-2ea6-46f0-b1ce-06856277e0c3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b457baba-6ae5-4f0a-a941-c435d320ce9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27f8da5-5194-44d3-84ee-4178746946ea",
        "cursor": {
          "ref": "3d9acd62-2c34-4061-8f55-865e5914bd78",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a009c34c-5fd5-4fd0-81cd-c86889c91b71"
        },
        "item": {
          "id": "c27f8da5-5194-44d3-84ee-4178746946ea",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "74a6ee8d-ebb5-4cb2-9997-b76aadc88c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f661495e-ad78-4097-8ca4-b85d40d77035",
        "cursor": {
          "ref": "b4267bf4-24cf-4151-bf12-86f7feecd9dd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "71763e0a-ec6a-41c7-b6ab-97e3be4cae92"
        },
        "item": {
          "id": "f661495e-ad78-4097-8ca4-b85d40d77035",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3190121f-5f9d-4dc9-a812-e2ba68ba42db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e4b5dc-3be3-4f32-b85e-0514ba0bb587",
        "cursor": {
          "ref": "1660e99e-5838-4233-9eec-71e5f0fccc3d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e7a9d890-1785-44f7-9331-3d3b09a9f1f0"
        },
        "item": {
          "id": "79e4b5dc-3be3-4f32-b85e-0514ba0bb587",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77db5483-7b3b-4e41-bff2-68c19e97fe06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c167db1-3135-46ec-8407-f63043fee6e8",
        "cursor": {
          "ref": "c4885479-9b70-4e24-a772-ced2f9626761",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e80f8b24-e519-4ed1-b928-2b3770024986"
        },
        "item": {
          "id": "4c167db1-3135-46ec-8407-f63043fee6e8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a08753b2-25e7-4816-950a-69d8e1c26dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f299c2-0c9c-45ce-86df-14dee5112b7c",
        "cursor": {
          "ref": "b19de412-24d4-4cc8-88b2-63d6535395ab",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ea2cab0d-5a11-4884-a789-f0a684371077"
        },
        "item": {
          "id": "b0f299c2-0c9c-45ce-86df-14dee5112b7c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2bc949b8-2ce1-428b-87d5-ec8af86493b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef46030f-979d-4058-8c22-febb496876a7",
        "cursor": {
          "ref": "09dab803-3893-4a8f-be6a-b3420cf0a8f2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4fbab03e-97cc-4047-aeff-558e32ff5a2a"
        },
        "item": {
          "id": "ef46030f-979d-4058-8c22-febb496876a7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "da0f9a7c-9edc-467b-8122-ccfa8ed7d275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f664b2-c0a9-4b0c-8b13-1a7fdce267ff",
        "cursor": {
          "ref": "1781156d-4ddf-44f8-ab84-4a57c7bddfeb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6a3c3641-aa54-4835-9ed9-63027e9e964c"
        },
        "item": {
          "id": "b8f664b2-c0a9-4b0c-8b13-1a7fdce267ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a6a56418-c998-4023-9704-a6d6a2239017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7472f7-4ae6-4226-9cda-401250577ce6",
        "cursor": {
          "ref": "6fa95263-e2d6-44d8-a5bb-911249a437a5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd56ef5e-9ecb-4fa5-a939-076cad27b366"
        },
        "item": {
          "id": "ab7472f7-4ae6-4226-9cda-401250577ce6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5f1bf228-a45f-4334-999a-668b94795247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aa08d6-6f97-4875-97ee-d1fb7ebbe589",
        "cursor": {
          "ref": "912401f3-d6db-43a9-9771-059f9a619e58",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3395241e-3872-462d-ab0f-14b8c03f4e36"
        },
        "item": {
          "id": "52aa08d6-6f97-4875-97ee-d1fb7ebbe589",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b9121bd0-a208-4fc3-bc71-1177b61fc7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac0668-7a36-4b3f-8d6a-497c5d8ba52b",
        "cursor": {
          "ref": "26d0a4ae-e29c-4df1-a76f-6ae91fb06ea5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a1baad83-a522-4495-85ea-cbf3772314b2"
        },
        "item": {
          "id": "9eac0668-7a36-4b3f-8d6a-497c5d8ba52b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0b4b68ef-a9f3-4bfd-8409-f6e46bedcbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f249c19-e437-4e72-adc4-6e11a575b223",
        "cursor": {
          "ref": "22b4b25f-905e-480f-be5c-7668be503018",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea6197ba-d2a5-45e0-883f-12d0e9559884"
        },
        "item": {
          "id": "5f249c19-e437-4e72-adc4-6e11a575b223",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "004d3f99-1f57-4e8b-8237-8c5ab1fab1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9ebec7-2bee-4cac-b107-65caad5dc837",
        "cursor": {
          "ref": "69cde090-f43d-4bbe-aaca-c7206d9dd2c0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8cefcc3d-45eb-4354-9b7a-87b93437944e"
        },
        "item": {
          "id": "dd9ebec7-2bee-4cac-b107-65caad5dc837",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8b022a1e-e691-46c3-baf7-52955e95c3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3c1049-ed06-43a4-8f52-9e76a9bc5b57",
        "cursor": {
          "ref": "1c9fb5c3-8383-42ca-82d2-0bf9c3cc343b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "89513efa-e0d8-459e-af7a-348c3707de3c"
        },
        "item": {
          "id": "ba3c1049-ed06-43a4-8f52-9e76a9bc5b57",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6fe5d339-ed3d-4988-aa72-288ca488b7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3c9a25-3baf-4cfe-85f9-06931ce658e7",
        "cursor": {
          "ref": "39789101-4e3c-4843-bd0e-04eccf3bdd85",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e08ab735-e278-4729-b6cb-c736257c438d"
        },
        "item": {
          "id": "ea3c9a25-3baf-4cfe-85f9-06931ce658e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2310d896-3094-4b60-98e8-fe5a11057261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4647bafc-a23f-4337-b1ec-5f27cebf0baa",
        "cursor": {
          "ref": "023819c8-98a1-44b5-a4ab-25d17b652f1e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c27a2e0d-62c4-4e3b-9f12-b1714ffa6b56"
        },
        "item": {
          "id": "4647bafc-a23f-4337-b1ec-5f27cebf0baa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3dd74c59-47be-4a0c-a3cf-5d214a721317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9715cc4-fb38-469d-836b-fde009fbd9cc",
        "cursor": {
          "ref": "7389dd2d-1d2e-4ef5-a0db-a4184e99fab2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2a1938c5-3713-4b53-8c55-bf4f4b78f50d"
        },
        "item": {
          "id": "c9715cc4-fb38-469d-836b-fde009fbd9cc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "482c8438-61c0-4587-a173-6eb1cc7e783e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a5f528-14f7-4a0d-a8b3-19ee1e908158",
        "cursor": {
          "ref": "6134ac8b-d484-4f4c-8152-02c10b67cee3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "54b96323-de55-4ed8-80b4-f49a126c1751"
        },
        "item": {
          "id": "29a5f528-14f7-4a0d-a8b3-19ee1e908158",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1a302b2d-7809-45ef-acd7-343454c2c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e1d657-a960-4038-863e-17640aaaeffc",
        "cursor": {
          "ref": "1736c3da-23fe-444f-a47c-9861ba7d5e37",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "33af2b31-a322-417a-b938-9943224e1e3a"
        },
        "item": {
          "id": "d5e1d657-a960-4038-863e-17640aaaeffc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7e580b9b-c278-4feb-a811-be4d76a4f19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b99988-a90c-4725-99b7-bd31696f8046",
        "cursor": {
          "ref": "9891fd6b-3b2a-4fd5-917f-ce82164c96a2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "718c9eef-95bf-4e32-a220-2329372a91d3"
        },
        "item": {
          "id": "80b99988-a90c-4725-99b7-bd31696f8046",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1e22c30f-81df-41f7-a8d8-d2e17bb9fcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53df809-404c-4980-9c84-f480ddf97c74",
        "cursor": {
          "ref": "e4113557-dea6-45e6-9165-065b7f6bf7e6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "89660dd7-3f2b-4bcc-8f58-e8b6104f221c"
        },
        "item": {
          "id": "e53df809-404c-4980-9c84-f480ddf97c74",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "750c780b-3b1f-4785-9254-125ba3373ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c288efa5-a4c6-4c37-a697-aa2b2003d641",
        "cursor": {
          "ref": "11e92e98-584f-4518-bbf0-0154faa04866",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eccda22e-1d7e-4bfb-9aaf-c0c70b26fe2c"
        },
        "item": {
          "id": "c288efa5-a4c6-4c37-a697-aa2b2003d641",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c6b09157-cb64-4fae-aacb-de708e6d9277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f54e9a5-0c57-44e7-85b3-a1c1f0fef4b4",
        "cursor": {
          "ref": "d4897c40-81bb-4b6a-b55c-005c094a0335",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4125bfc5-f805-45d3-a697-081a6ffa2154"
        },
        "item": {
          "id": "9f54e9a5-0c57-44e7-85b3-a1c1f0fef4b4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9f960a51-941e-4c61-8cf4-1cd41850b2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684a26a8-157e-4060-8504-55076c3168a7",
        "cursor": {
          "ref": "48c5bb68-5338-4301-a4ff-c3c796134bce",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b1d8f9f9-8fa7-4f8b-85ba-9b2e2f812242"
        },
        "item": {
          "id": "684a26a8-157e-4060-8504-55076c3168a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c55b7297-ccd7-4743-8c0f-863dd689bfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901cddfe-488f-446d-ada7-b1ace9567763",
        "cursor": {
          "ref": "346e1b92-05af-4562-b9c7-95480ad6e7d8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e17a34cc-2ce5-41a3-8354-4099341aa2e2"
        },
        "item": {
          "id": "901cddfe-488f-446d-ada7-b1ace9567763",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3fb27e38-994c-4414-bfab-05ae07c8606d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f9447-4256-4a42-9e82-658e6747abe0",
        "cursor": {
          "ref": "69f57a00-1e18-44e8-b7cb-2e346c7b106b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09a079c7-eca7-4d9e-9a68-84d5b5f2da2d"
        },
        "item": {
          "id": "228f9447-4256-4a42-9e82-658e6747abe0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "efdc27aa-0dc2-4d3e-b8b6-379ae2a565d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cbc4ca-cd97-443d-9d15-5adfe3b8d24d",
        "cursor": {
          "ref": "1592f9e5-cbe8-43e4-9d58-c5997646825a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a9d9d4f7-8d02-46a4-abad-99d8be27d11d"
        },
        "item": {
          "id": "98cbc4ca-cd97-443d-9d15-5adfe3b8d24d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b48472d1-a16a-4b16-bec9-395a8287ef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc6ab0-2155-4af2-8cd9-0115f599f47a",
        "cursor": {
          "ref": "e89bf74d-58e7-495c-9bfb-bb28d1db09bd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4df51a9b-7b6c-4dfc-a82d-9e2dbacf4318"
        },
        "item": {
          "id": "f2dc6ab0-2155-4af2-8cd9-0115f599f47a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d3cac492-5d18-4c01-9b44-7b482b962204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42da84c-8f3d-4c07-8b09-f2264d3441d0",
        "cursor": {
          "ref": "84609c48-ce9d-4267-a496-61c4ef0c9ecc",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a9121c42-edca-402d-8e8e-23017b4f4530"
        },
        "item": {
          "id": "a42da84c-8f3d-4c07-8b09-f2264d3441d0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f1b5f91e-e35b-45a1-a98a-cdd0b6623338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3266b3a9-f27c-4df7-81f4-e0e4b81264bd",
        "cursor": {
          "ref": "cd5c2127-a217-4ba9-aea1-06b4b019202c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b0aceb52-3ca6-4688-89fb-06f21c8bbffa"
        },
        "item": {
          "id": "3266b3a9-f27c-4df7-81f4-e0e4b81264bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3298449d-3d75-4f46-9d43-977715ea0347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ff931c-d40a-4b0f-93ab-cf4e735c64d9",
        "cursor": {
          "ref": "f9cfacaa-c297-4aba-8f52-4443e4f11a63",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6f233b8a-105f-438f-bddf-a913886cc1c4"
        },
        "item": {
          "id": "e4ff931c-d40a-4b0f-93ab-cf4e735c64d9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dffdf6ee-2a24-4575-8839-0500142369cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa85c6c-8d50-4b96-b574-ffa6c7f56e34",
        "cursor": {
          "ref": "38869223-1901-4175-b54b-3158b59329ca",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7d359c2f-d775-4add-a704-7807c4aa7ca9"
        },
        "item": {
          "id": "7fa85c6c-8d50-4b96-b574-ffa6c7f56e34",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6ff432dd-e4aa-4ca9-8e31-0c6b52bf329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d439e615-0890-4711-a9b7-8327749d469d",
        "cursor": {
          "ref": "3f7a009f-b0e8-4f87-adc9-53378717504a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cc9f7af3-0b1e-4701-9311-5ff591642254"
        },
        "item": {
          "id": "d439e615-0890-4711-a9b7-8327749d469d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cea9f164-de9c-4e84-813b-3e2ca65ba6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c08b1b6-7533-4c56-bf5c-836198745d46",
        "cursor": {
          "ref": "14fb2c4b-b469-462c-8a91-8e531ef37f71",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c5fffd0c-2a50-41cd-8e76-31e7892e3ee2"
        },
        "item": {
          "id": "3c08b1b6-7533-4c56-bf5c-836198745d46",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "86bf1c6a-af2f-48e4-ba0d-3956c8b446b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad48603e-1b5e-4e0f-a624-13a38be908d2",
        "cursor": {
          "ref": "0fc75921-eb98-4bb4-9986-d0aaee6de1a8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9d88e940-7e7a-48fd-a099-f2bd6eb2a929"
        },
        "item": {
          "id": "ad48603e-1b5e-4e0f-a624-13a38be908d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "988eedd8-7205-4c2a-ba74-139baa01ee08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61188ef9-e3e4-4762-9177-33d16f5d5c59",
        "cursor": {
          "ref": "9180a109-eed4-43b4-89ee-1fde12e075f1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b2ead6af-b1f2-4ace-a27c-2c8681e43ab4"
        },
        "item": {
          "id": "61188ef9-e3e4-4762-9177-33d16f5d5c59",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "546a74ec-5045-41b5-a3b3-573859799800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e405d0-7262-4205-bff6-57d8140fb6a9",
        "cursor": {
          "ref": "a8663277-5e4d-4837-ad24-390c41874ea8",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "97ae974f-b84d-4ceb-a5cd-9fdb702840de"
        },
        "item": {
          "id": "99e405d0-7262-4205-bff6-57d8140fb6a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9e740781-a2d8-40a7-a1d3-ed4a901ad483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43e6aaa-04a3-46f7-831f-fd508159a175",
        "cursor": {
          "ref": "edc7003d-6117-4a51-a0f7-c0c0d0715e86",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4152e6e7-0a38-4c4e-a976-2cd3d05f0430"
        },
        "item": {
          "id": "c43e6aaa-04a3-46f7-831f-fd508159a175",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e9c26176-ef41-45de-a104-9faee570d892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2f77f5-8b03-41ee-90e1-d73eef311cec",
        "cursor": {
          "ref": "61fb4388-ccaf-4989-8997-9b0169f9eab1",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "daf5698c-85d1-4db8-ac38-20f5388aef61"
        },
        "item": {
          "id": "df2f77f5-8b03-41ee-90e1-d73eef311cec",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fee38903-4f52-4ebf-b460-75bc927c4136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b662760-cadf-457f-96de-6deb7de73b8a",
        "cursor": {
          "ref": "7e3d209b-c1d8-4de8-890a-12c128105a1a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "27e8eb09-2093-4215-a72c-083a8bb4dbc6"
        },
        "item": {
          "id": "7b662760-cadf-457f-96de-6deb7de73b8a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "89f3dc78-4a9b-41b6-834b-09e7a51101f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa8a03-513e-4ebd-b745-abad84de1f20",
        "cursor": {
          "ref": "e4472404-2c46-48c6-9432-0a1a453b5797",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c2f60121-ca4e-4e2f-b548-0e74a2263e25"
        },
        "item": {
          "id": "bbfa8a03-513e-4ebd-b745-abad84de1f20",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "05f7aefc-9cda-41bd-939e-f4ad49c37a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5672d6-e679-4528-8f16-c1e34ea18d11",
        "cursor": {
          "ref": "e59e45c0-2ad5-4a2f-9fc1-c7b22d16fc7b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d4692d46-36df-4650-a5e3-53d6afa267d5"
        },
        "item": {
          "id": "8b5672d6-e679-4528-8f16-c1e34ea18d11",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9f03d105-2bef-4932-b86c-c4aaf94cc7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ccb73a-4616-4885-8fc8-cec9e415ec6a",
        "cursor": {
          "ref": "7fca447d-d408-41ca-9a71-17619401f1b9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bd7d4fb3-46f4-4183-95eb-3ef239221a8f"
        },
        "item": {
          "id": "b9ccb73a-4616-4885-8fc8-cec9e415ec6a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "11525c7c-de13-4a82-b61f-c29d20071e06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9724e80-4399-4d8c-9002-e82e49d64429",
        "cursor": {
          "ref": "14cd05e9-3b91-4163-8472-4b694c213327",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3f8f88d6-95e6-4f96-87ba-f4ca67f35c03"
        },
        "item": {
          "id": "c9724e80-4399-4d8c-9002-e82e49d64429",
          "name": "credentials_issue"
        },
        "response": {
          "id": "64ac48fe-5925-4955-a686-4be21326b3da",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fdf3fa-86a9-4761-aadd-280041635f49",
        "cursor": {
          "ref": "67deeced-c3c0-4f44-9f50-3177d93083fc",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b0161863-a01e-4f96-aba7-b45ddfb5c58e"
        },
        "item": {
          "id": "20fdf3fa-86a9-4761-aadd-280041635f49",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d5ac2e65-7382-4e3c-9c6c-f9e5c377e8c3",
          "status": "Created",
          "code": 201,
          "responseTime": 333,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1667ca-fbec-48f0-b861-9337d2727ab5",
        "cursor": {
          "ref": "02796d04-a898-432c-b1f6-6d274a78c0e2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35520893-1ca9-4c71-b6f9-ccf47b93bfe3"
        },
        "item": {
          "id": "2f1667ca-fbec-48f0-b861-9337d2727ab5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b09db244-a000-4a15-907e-f0a2da22968e",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f339cfc4-08bb-4c70-96de-19448f6ba7ab",
        "cursor": {
          "ref": "fbb235fb-f13b-4bcd-a677-76c9adbb9c0e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "173c573a-2e2c-4c02-a668-2a7ea0eaf272"
        },
        "item": {
          "id": "f339cfc4-08bb-4c70-96de-19448f6ba7ab",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e3753198-724d-4e70-8eee-4829e9540edb",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c600ffdb-3090-4e63-af15-941fcbd11b76",
        "cursor": {
          "ref": "ae56ba3d-1f3f-42a2-9a31-a941047cc00d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "98477437-7939-4a07-8e47-25e451c868a4"
        },
        "item": {
          "id": "c600ffdb-3090-4e63-af15-941fcbd11b76",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c2534526-5279-42ba-a03a-1b3a614be5a3",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6826b96-761e-4836-9601-5d59a024ca0e",
        "cursor": {
          "ref": "616ac02a-265d-4f1b-9776-f46b7d4daee5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "39fc801c-5e9f-4b2e-a4f5-a803e5ca3927"
        },
        "item": {
          "id": "f6826b96-761e-4836-9601-5d59a024ca0e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "57c5d78c-8aa2-49f2-a31f-db6dc4e43fcc",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0f75d0-1c3d-4ea4-97e6-e9cae8891dcb",
        "cursor": {
          "ref": "d2da3bb9-a71f-416a-950d-e1e7988ba2e8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "32fccd77-70d9-42d9-be84-e38adc4d2386"
        },
        "item": {
          "id": "db0f75d0-1c3d-4ea4-97e6-e9cae8891dcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "40d9b7e2-6a09-4555-b85e-60399fb4cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd05dfac-3cf3-4ffa-a2c1-7e80225ad54e",
        "cursor": {
          "ref": "49d06571-5abd-49cb-bca2-a00c5673d752",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5ca3f3a6-d3c9-404e-a9b5-da164213ec82"
        },
        "item": {
          "id": "bd05dfac-3cf3-4ffa-a2c1-7e80225ad54e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "af75e800-0515-4bca-b880-006e4d38da5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c825e35-c48a-4b0a-b8c0-72a21aba92a1",
        "cursor": {
          "ref": "0b8fe46a-f9c9-4b03-8f18-66ba55a8b6ac",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "06c2d557-e6a0-45d6-9fba-c09c5c705fff"
        },
        "item": {
          "id": "1c825e35-c48a-4b0a-b8c0-72a21aba92a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8e13258c-195f-4670-be42-ceced7c7d5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f25860f-d16f-4281-aa1b-e8da18689dd3",
        "cursor": {
          "ref": "a3e1d3dd-9428-48e5-a6d3-fb623b18fbd6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b91fa17c-979f-4c40-a554-d072fb1e062f"
        },
        "item": {
          "id": "8f25860f-d16f-4281-aa1b-e8da18689dd3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "875604a4-0c6a-4be3-ba7e-76ba1e0d040c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054e519e-47ea-4d99-85c1-150c31f3347d",
        "cursor": {
          "ref": "de62aca3-45ca-4959-bfb7-2f81955566a8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f3dfc723-24cb-4af6-bcca-76791eebe7c5"
        },
        "item": {
          "id": "054e519e-47ea-4d99-85c1-150c31f3347d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64035145-5c88-4f05-bdf4-2868b556ffc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb30746-eb8c-45de-be36-1a410a7cd894",
        "cursor": {
          "ref": "c2f0bb2c-6a8d-4d2c-898c-0ef0d5fcdac5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ac6c224-7de9-48b1-847a-a560054d22af"
        },
        "item": {
          "id": "8eb30746-eb8c-45de-be36-1a410a7cd894",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "45445426-6a60-4d27-ad3b-a5fc55703b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9e4831-74f7-4b89-b38f-e56fcbc7a87f",
        "cursor": {
          "ref": "5d4d8c38-7194-4a1f-9cdf-fa9e89240764",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e9d847bc-5b3a-4c23-8fc8-a106caa55d31"
        },
        "item": {
          "id": "ef9e4831-74f7-4b89-b38f-e56fcbc7a87f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7cb454ad-a289-4419-b46c-0edff75b1794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e639757-6aaf-4043-a2fd-6f3d61370c0e",
        "cursor": {
          "ref": "024eba77-dc91-4520-bedc-d234fe0b0403",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fbe1ef87-2496-4195-b58c-704c911d6628"
        },
        "item": {
          "id": "2e639757-6aaf-4043-a2fd-6f3d61370c0e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "adb03889-97b8-4c89-a46d-a112fa2c19c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a01b5c-04f5-47da-96d0-93a2574d7317",
        "cursor": {
          "ref": "741ddfbe-21c1-4b2c-9f83-5c5f150ee921",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "463ea3e4-1cb8-4ea4-973d-deafa01aa220"
        },
        "item": {
          "id": "c4a01b5c-04f5-47da-96d0-93a2574d7317",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b445d26a-0b82-43ce-a50d-506434c634eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba9f8e-6824-44f7-98f9-64314de70fb0",
        "cursor": {
          "ref": "043dcdd8-90d6-4673-979c-d244d9ec3b0b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e5d435ee-caa1-42c0-b970-976673e49e40"
        },
        "item": {
          "id": "e7ba9f8e-6824-44f7-98f9-64314de70fb0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bd9efdf-da5d-4d19-a5cb-c9908453e7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaef881-9a5b-4654-bb4d-9ad60df47a32",
        "cursor": {
          "ref": "f45d910a-98fd-4283-bf3b-c6f8d8ef6145",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "878f47d4-3970-4ac6-98e2-e25d4315774f"
        },
        "item": {
          "id": "3eaef881-9a5b-4654-bb4d-9ad60df47a32",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83e402ec-dce8-412e-8ca1-eb83eab7333b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332aec00-c0f9-40ab-bedf-27b60e58a9c7",
        "cursor": {
          "ref": "7a9ca094-c13d-4110-90df-27d69dd7f212",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "df090f74-fc08-4ccd-b491-76398107e8cd"
        },
        "item": {
          "id": "332aec00-c0f9-40ab-bedf-27b60e58a9c7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41136fdc-b524-42eb-88a2-3a5aa8eca751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850637a5-d4d6-430d-b3af-8901cac14428",
        "cursor": {
          "ref": "b0a7816d-abda-4b5c-8dbf-64f6a2d6185d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8ced8c31-27ac-46bc-a7fd-b6b28511c705"
        },
        "item": {
          "id": "850637a5-d4d6-430d-b3af-8901cac14428",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0636ce23-04e5-4861-8640-30157dbcafef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893acb59-42dc-42d5-b203-28e5ac3ce860",
        "cursor": {
          "ref": "025fd567-08b2-4c04-910a-c0e35673f717",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0efc7c07-0ab0-4e12-9c5d-07729d764994"
        },
        "item": {
          "id": "893acb59-42dc-42d5-b203-28e5ac3ce860",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb303e45-60a2-453e-9d0f-9bfa3724f931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2bc61-c739-45f9-8620-af183eebfc8a",
        "cursor": {
          "ref": "e5160aca-b0de-4acc-bd5d-2d8c5cbdaeb3",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f22821b7-dc0d-470a-8271-d747f97b5e70"
        },
        "item": {
          "id": "42f2bc61-c739-45f9-8620-af183eebfc8a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dbf2555a-4c62-4bd7-965c-87af9188169d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb68dd6-d0fb-4f94-8cdc-025489659362",
        "cursor": {
          "ref": "b9a41775-9141-4edd-8fdf-d4f66e7ddc44",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8d9bd187-933b-438e-8582-4ef2c2bfa0fb"
        },
        "item": {
          "id": "4fb68dd6-d0fb-4f94-8cdc-025489659362",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8ea97c91-a2e8-4294-9d3f-8a5c0a0e3ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda25291-bbf1-47c1-aa75-8e41e5af1f3a",
        "cursor": {
          "ref": "a4ecf339-abbf-4d76-bce9-2777261cb5b2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "00de4056-3419-427b-b548-5c7581cf4dde"
        },
        "item": {
          "id": "cda25291-bbf1-47c1-aa75-8e41e5af1f3a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16036d2c-ef58-46c0-ac38-c39acef9a763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b5ab40-581b-4b33-8b0a-b53dabb43dc0",
        "cursor": {
          "ref": "99b157c7-cde0-40a2-b898-462a6bff9fce",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c7fbc18b-1325-48ad-8be5-84b6fced5284"
        },
        "item": {
          "id": "e2b5ab40-581b-4b33-8b0a-b53dabb43dc0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92659495-1302-49c1-b659-606f278112f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc93ab9d-a5a7-4018-8630-47dd452371e2",
        "cursor": {
          "ref": "2b2593cb-9294-4faf-a42c-6e1b2d7bfc54",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "501bd74f-3f76-48f7-8dc0-c9a44a05e620"
        },
        "item": {
          "id": "bc93ab9d-a5a7-4018-8630-47dd452371e2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fa0c6f97-43f0-4e17-b013-9d16b730d6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ea1bee-0bc6-4e01-abf4-41c40ecfc2a6",
        "cursor": {
          "ref": "33413d22-0e12-43d3-bf28-1cd0d4c74e07",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f0b74aa-2ced-4a14-b576-734f161af913"
        },
        "item": {
          "id": "f0ea1bee-0bc6-4e01-abf4-41c40ecfc2a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8416c5c9-7d21-40d5-800f-4e2c43f01f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dfcd59-171b-406d-b5e3-143c208b3078",
        "cursor": {
          "ref": "c76b782a-f31a-4b9d-abad-9c1fd587a414",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7c42225f-7838-48c1-958a-c420cc80ceb4"
        },
        "item": {
          "id": "28dfcd59-171b-406d-b5e3-143c208b3078",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f64b2da-9bc2-4294-af75-55b4e2954097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbb8126-f421-4909-81e5-911b8be6066a",
        "cursor": {
          "ref": "cda25903-59bf-4aa2-b72a-bcd12574cbb7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "70649eac-3a2a-42b1-9f97-9a5c256c4748"
        },
        "item": {
          "id": "0dbb8126-f421-4909-81e5-911b8be6066a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b795128d-3feb-49c7-8614-c2bb07f5d608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f8632-93b2-4c50-96b2-9064a26c91ac",
        "cursor": {
          "ref": "6e440628-a0e3-4f12-b750-6e4c5252cbf7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2a20c295-5fe1-4f85-9817-eb1b2e68c19f"
        },
        "item": {
          "id": "708f8632-93b2-4c50-96b2-9064a26c91ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8d6fc9d7-d231-4b6c-975b-9127e0ebac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbf4e0e-caf5-4ecb-ae42-735b1f1c5144",
        "cursor": {
          "ref": "617b433e-231f-4613-b86c-fa66902a0bc6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7798395e-08e4-479e-9079-e51bd4d8c5a3"
        },
        "item": {
          "id": "2dbf4e0e-caf5-4ecb-ae42-735b1f1c5144",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "061aa746-f97a-4b3a-a9e1-d446aab26923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e954b345-f27b-4318-a74a-5dd650906093",
        "cursor": {
          "ref": "7195296b-b67e-42f2-a267-fb5291b52ff0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3f3a8dd7-7f04-4bff-8583-4a45923aaaf6"
        },
        "item": {
          "id": "e954b345-f27b-4318-a74a-5dd650906093",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "83d7b98e-7e10-464d-8d2a-c9290e60198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9472fef-0d05-4de9-b73f-7e9ed19f371c",
        "cursor": {
          "ref": "190b91c3-956d-46cf-8356-21cc7021df00",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7e4dcb1-eb1e-4c3d-b6c4-7118c622898e"
        },
        "item": {
          "id": "e9472fef-0d05-4de9-b73f-7e9ed19f371c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d2f69278-3e57-4452-9708-0a69461312b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c9aa3-087d-4ff0-8f36-6dce6c3d864a",
        "cursor": {
          "ref": "5f2813ce-35e9-47be-bdde-1117dadded79",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4da170c4-18de-4ed4-92e2-34a2efbd23b0"
        },
        "item": {
          "id": "b60c9aa3-087d-4ff0-8f36-6dce6c3d864a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "075b7db1-06db-452f-8f4c-f8eeb7c64fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469b6062-e102-429b-b4f3-07b136ff60b2",
        "cursor": {
          "ref": "09f5cc6c-25b5-415c-baa6-edb7e471f55b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7de38fd3-fe3b-4c23-8aef-c0d5c2b48ded"
        },
        "item": {
          "id": "469b6062-e102-429b-b4f3-07b136ff60b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ff5a21d-aaf8-47dd-a0dc-e400b2d32929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc5d49-b335-4ec6-9948-c97c5ed01ed5",
        "cursor": {
          "ref": "5ebc6f5f-d57f-4e5f-a81b-6b644d4171cd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "938f3ccb-21e0-437e-8227-bb423aa3710f"
        },
        "item": {
          "id": "24fc5d49-b335-4ec6-9948-c97c5ed01ed5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4af865d4-4142-42c5-b20b-c2f0153bc6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1903039-0e3d-4583-9da4-ce2f5aec55fb",
        "cursor": {
          "ref": "f35b8c0d-cc21-4410-addf-e9abceb37223",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "561ef7be-b73d-4aee-81ca-6cc84b25e253"
        },
        "item": {
          "id": "e1903039-0e3d-4583-9da4-ce2f5aec55fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a7c73c80-a3d6-4d34-99b8-409385e64ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42be882-eb9f-429a-b7dc-e1f744341c1a",
        "cursor": {
          "ref": "d38604ef-2896-4aa5-bb11-071b0c207b20",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0226d7f7-e13c-47d9-9059-56400fb7f1c5"
        },
        "item": {
          "id": "c42be882-eb9f-429a-b7dc-e1f744341c1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8d864692-2c81-4908-9ff0-c587d4e3a46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eae0399-922c-4a1a-a27d-0b85a5d9e545",
        "cursor": {
          "ref": "358b82ef-ef34-47ac-8713-80b0522fc6a8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "21a96c8b-fbca-4f32-8246-d6c8cad08059"
        },
        "item": {
          "id": "2eae0399-922c-4a1a-a27d-0b85a5d9e545",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0f6740c6-b12b-46fe-8f6c-454f62541464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd3bf4-1e93-499b-984b-3e6fe02ec24e",
        "cursor": {
          "ref": "8234e086-9002-4f1a-94fb-b5ddf4b736d9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e9c6eaa-c624-4509-9ed2-73d6e25e3967"
        },
        "item": {
          "id": "f2cd3bf4-1e93-499b-984b-3e6fe02ec24e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4a46f985-e631-4d19-8c4f-76542f4248f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f47931-bd71-48e0-a2fa-1b3029ec935f",
        "cursor": {
          "ref": "519687cb-fb13-4b85-926a-8d002540a0cb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "06bfdd43-667d-4d0b-a95f-fa6dc21c9e88"
        },
        "item": {
          "id": "30f47931-bd71-48e0-a2fa-1b3029ec935f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0696d9a8-89ee-44ae-a768-ed21d9889476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eaccd1-4e09-4c98-9b4a-27fc9dc339ef",
        "cursor": {
          "ref": "ad11a475-9b72-46b4-812d-0c29cc5bae5d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ef9a81e-21e3-4fc8-81bf-feb8a0d3dc6c"
        },
        "item": {
          "id": "30eaccd1-4e09-4c98-9b4a-27fc9dc339ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "19826c77-3407-4d5a-9130-e9cc898a92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28807b83-a233-45ba-b93f-1151473be6e7",
        "cursor": {
          "ref": "131e39b4-25b1-49a2-9980-5a69f5b02361",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dab424d0-236e-4153-9512-c0bbd9f7f84e"
        },
        "item": {
          "id": "28807b83-a233-45ba-b93f-1151473be6e7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "471c34c4-79e2-4288-8081-07097a64fc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c1b68d-55d7-4ca4-a926-f984f7678c4f",
        "cursor": {
          "ref": "d8804166-756b-4a36-b6ac-9b8a11ac50a2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e5f5db07-73c4-490e-a4f9-aed610a13fb2"
        },
        "item": {
          "id": "44c1b68d-55d7-4ca4-a926-f984f7678c4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d61faed-67eb-4dcb-9828-0f170a18a03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc2c054-4c0d-426a-941e-9237fdb474b2",
        "cursor": {
          "ref": "0519a4ab-f0eb-4709-9524-3b1d6e544a8d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "77d583f3-019e-4264-b97a-fca6ac3ce349"
        },
        "item": {
          "id": "3dc2c054-4c0d-426a-941e-9237fdb474b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "714d86bf-587a-4bfc-85da-d014ca823bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce45e17-4dd3-49e6-8591-a8b53a0b19e7",
        "cursor": {
          "ref": "a83e531a-dd93-4a3e-8cc3-91e67ea5de87",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "02785195-f2ac-4a0f-9eb6-b2b5b7e8a10b"
        },
        "item": {
          "id": "5ce45e17-4dd3-49e6-8591-a8b53a0b19e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a576737a-fd0a-45a4-a969-56cdfc55668c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5182ebc6-d100-4300-81d8-e4bc7e93b8fd",
        "cursor": {
          "ref": "0d203f79-c417-4025-99ee-3f4677391107",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6428c890-e8bd-45ea-868a-388cf0c5b36e"
        },
        "item": {
          "id": "5182ebc6-d100-4300-81d8-e4bc7e93b8fd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d2228b4-33fd-4b34-b213-41252b0603b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea03ca4-6c30-47b3-b775-c4a174c6dff5",
        "cursor": {
          "ref": "8c147f26-7898-49b7-b71f-230c9653495c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0ee881f5-0b1a-4e2e-8585-b78cac93b8e5"
        },
        "item": {
          "id": "bea03ca4-6c30-47b3-b775-c4a174c6dff5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "278ea06d-9725-4334-8531-c82a3f740347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243647b0-4297-4284-81cd-1ea5a6d14181",
        "cursor": {
          "ref": "583f8068-0528-4822-9332-293a0438c01c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "96e2472b-e2d6-4c45-a499-58a69b8aa94f"
        },
        "item": {
          "id": "243647b0-4297-4284-81cd-1ea5a6d14181",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c1ece7e-8f61-4c06-948e-8bec7190d694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccfb63c-f757-4bdf-95e0-7443622395b3",
        "cursor": {
          "ref": "f818f8b9-b48d-41ed-94fe-47fa9591ab0b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bb1dc6ce-1960-41a0-8368-d0dc633ae90c"
        },
        "item": {
          "id": "1ccfb63c-f757-4bdf-95e0-7443622395b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "87dfee13-3979-4375-9b74-1d8b2e84ac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce0a56-0d78-4661-88c7-90ee3c537ea8",
        "cursor": {
          "ref": "0324fdc1-80aa-49ef-9e52-4d9fc9485075",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "feae488c-057f-495f-8d89-d544a180f706"
        },
        "item": {
          "id": "dbce0a56-0d78-4661-88c7-90ee3c537ea8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "99159335-7912-4664-9882-afadae519398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683125b3-b34f-4cf9-a28b-bfeeba41ba73",
        "cursor": {
          "ref": "2216579a-f82c-4508-b72c-d1bf7a1984f3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "acf22fde-206b-43c0-ba83-1953ac5e573d"
        },
        "item": {
          "id": "683125b3-b34f-4cf9-a28b-bfeeba41ba73",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "21cf82d4-39b7-47c2-9df6-390a477b553b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e958d794-7963-43c2-ac46-84d13e089957",
        "cursor": {
          "ref": "0e95f228-5ec2-4289-97ff-b03d04bafbe1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "846db8bc-47ea-4c92-9214-6f4c3fe593c2"
        },
        "item": {
          "id": "e958d794-7963-43c2-ac46-84d13e089957",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c001bdc9-e075-4536-8acc-c6cf9535e58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc68ca0e-d50f-42ed-abc7-1c839f096c32",
        "cursor": {
          "ref": "00400bae-1a93-4987-875f-c21797d38508",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "88467318-ff06-471e-8069-eaf15925f4d2"
        },
        "item": {
          "id": "fc68ca0e-d50f-42ed-abc7-1c839f096c32",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fcc2a2f6-d260-485a-9c09-414d2d330c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0940c01a-69a7-42b2-b529-d26186522870",
        "cursor": {
          "ref": "22554be5-e388-4a6f-b3e7-0d3b686a2750",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "39cbc1b1-de44-497a-aea9-7e027dc41dda"
        },
        "item": {
          "id": "0940c01a-69a7-42b2-b529-d26186522870",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4d992d15-acfc-4d78-9d32-59a7d5c94c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bed6bd-d550-4f81-925d-442930adddbd",
        "cursor": {
          "ref": "a9d297c2-49f6-49cb-bdff-26b4fb20c60a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f03bc8d2-7144-4571-b84f-ebf4326b5039"
        },
        "item": {
          "id": "c9bed6bd-d550-4f81-925d-442930adddbd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f12fbab5-b464-4df6-a258-111cdc861c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b19b832-f2e9-41e6-8dd6-467cac5e029b",
        "cursor": {
          "ref": "166f8b97-8e1c-4336-b279-e9f25ab47164",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "efa93aae-0a41-4625-a515-c9524bb4e332"
        },
        "item": {
          "id": "5b19b832-f2e9-41e6-8dd6-467cac5e029b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5811ad15-0318-4e6c-a4ea-77d73b3072c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29bbb24-1d99-49cc-be40-7345e4054d31",
        "cursor": {
          "ref": "a4321f62-2d86-44f5-992e-105e468b7ce1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4d3290b9-4afb-44ad-8682-de856d934824"
        },
        "item": {
          "id": "c29bbb24-1d99-49cc-be40-7345e4054d31",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a4a7e55e-9887-427a-8006-fc0ea21f8faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1826d02c-8275-4cd2-9054-05de81f4613a",
        "cursor": {
          "ref": "c979bd87-3a34-4f75-a3e7-816dc82e295c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0d99f5ee-a5f8-40bc-b2f9-bbe98c90f072"
        },
        "item": {
          "id": "1826d02c-8275-4cd2-9054-05de81f4613a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9dd10061-fd72-4b74-a743-3f1cc9b7e90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea46c78-b7c7-4e2f-97dd-87d79fc6dfe5",
        "cursor": {
          "ref": "b20dd373-105b-4823-8f65-d88864bf17df",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c6174428-39d5-4580-8253-e2158ebce820"
        },
        "item": {
          "id": "dea46c78-b7c7-4e2f-97dd-87d79fc6dfe5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba71a205-feff-48f9-9409-bb0bec76e41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9142cfd-aad8-49d8-b6ed-7a07a1ba1f86",
        "cursor": {
          "ref": "376615ea-757b-480a-9ac5-4b006348e4ab",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fbbaaa23-70c3-4bba-bf5e-7c2c96c4788d"
        },
        "item": {
          "id": "f9142cfd-aad8-49d8-b6ed-7a07a1ba1f86",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28b28f1a-e7bd-4c47-97d2-d7666d48f827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5907b0a-bb13-4695-9558-2598796528bd",
        "cursor": {
          "ref": "d186126c-cc89-430c-bafd-6004f5a26c35",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9ed1a7a4-18f4-47bd-b7c6-e69209419596"
        },
        "item": {
          "id": "f5907b0a-bb13-4695-9558-2598796528bd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "50cac4be-f407-4bf8-827f-88c4e8eec4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d64e4bf-5f7a-4259-9937-e7a5a1d8f6d5",
        "cursor": {
          "ref": "5bd38f96-3534-48e6-9356-2fb03485e1ff",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "86942ab5-5a4c-4ef4-a627-2b2c84a648f4"
        },
        "item": {
          "id": "6d64e4bf-5f7a-4259-9937-e7a5a1d8f6d5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa08d4d6-4439-4f36-ae9c-7791ef3b0ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da8dd56-0ca3-429b-bd8e-780aed81fd2e",
        "cursor": {
          "ref": "6006a153-a579-4ed3-816c-bc6d753a29d7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e56f79af-e36d-4153-8167-0a0b34598f35"
        },
        "item": {
          "id": "5da8dd56-0ca3-429b-bd8e-780aed81fd2e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88f174ef-2d2b-494d-883a-4e1f42d9a55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc09168-796e-4f11-8346-b99e1ec1b045",
        "cursor": {
          "ref": "e4d1fa2a-3529-4b67-a892-f7d0713216f4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4a1753d1-5241-4229-8726-08cd2ae42f01"
        },
        "item": {
          "id": "acc09168-796e-4f11-8346-b99e1ec1b045",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "475fa5b7-ce46-407f-b8f2-a94cf7e5020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11a0a54-539c-451d-b46c-e47dee29e2e3",
        "cursor": {
          "ref": "44f3cd01-763f-4b10-84a5-8a2f08e98cfe",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d5e1ee4d-9e81-4b86-b825-16243f341f01"
        },
        "item": {
          "id": "a11a0a54-539c-451d-b46c-e47dee29e2e3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7162bcdd-7017-4642-9d3f-e8edc5360149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc87422-9fd6-407b-80c2-14d1a9cde8dd",
        "cursor": {
          "ref": "a3a43fc5-872b-4069-8c87-25a2f12e2273",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4a56ddf9-5f5b-4c75-91e0-e3084cba1d70"
        },
        "item": {
          "id": "8fc87422-9fd6-407b-80c2-14d1a9cde8dd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "20bd998f-33f5-486a-ae51-ef5d1dd197d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2fe494-4274-4175-bc77-e21d30d381ed",
        "cursor": {
          "ref": "a2976117-e6fd-4aee-8058-d69d3fab3c10",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c1b89f3e-b9ac-45bb-832c-9bd975afe045"
        },
        "item": {
          "id": "9b2fe494-4274-4175-bc77-e21d30d381ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9571475a-774a-4813-b92b-218f2d695eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf8328b-7a32-4591-9ab0-9a7dd4bd4d3b",
        "cursor": {
          "ref": "789a4883-cfe6-4466-8ce6-2cd83e849a0f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c20bd4e0-5ca4-407c-abbe-87217970090b"
        },
        "item": {
          "id": "dbf8328b-7a32-4591-9ab0-9a7dd4bd4d3b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c18a82fd-58ec-496c-8cdc-37bc533a81c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd05a55b-f3d6-42aa-8fb8-112fa874c0c5",
        "cursor": {
          "ref": "ab827f49-3d7a-4327-96d2-129d9c401484",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fca5a7bd-7d22-424d-8dc8-c826697fcd80"
        },
        "item": {
          "id": "bd05a55b-f3d6-42aa-8fb8-112fa874c0c5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "71253385-2324-4e1a-aa05-8a2761adad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5145b449-dfe5-4f8b-a3b2-86bae1f4d5e8",
        "cursor": {
          "ref": "e7d84df7-e4ae-40f0-8013-ddac693b1091",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "29ad3201-0303-4d01-bc1b-f1fc7ccee582"
        },
        "item": {
          "id": "5145b449-dfe5-4f8b-a3b2-86bae1f4d5e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a1710370-80e6-4cf5-a4ba-df7e5ed5f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25628ba2-dd63-4677-9b41-621d943d4dee",
        "cursor": {
          "ref": "857eb310-a000-4c55-b25f-d200773e02e5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "02593ed4-5203-4490-8fec-a374318de391"
        },
        "item": {
          "id": "25628ba2-dd63-4677-9b41-621d943d4dee",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8a5080a9-dadc-4698-ba5e-54fc982d32de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dfdd5a-e6f8-4bf8-93a0-6a98b73bb1f2",
        "cursor": {
          "ref": "7490c1b9-b392-484d-8c74-f28e2e67f5cb",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b50a7f38-091f-419f-9ff3-7300d2b59c1c"
        },
        "item": {
          "id": "73dfdd5a-e6f8-4bf8-93a0-6a98b73bb1f2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d56c5c6e-29f3-488c-b41b-f478612d08a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4795f4-3953-409f-b258-7b640f9d6d3c",
        "cursor": {
          "ref": "aa1ebf92-7c10-4bc2-a38e-c2be2ab0669d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "103fba2a-f6f2-40d9-96d5-c7fc5d975d34"
        },
        "item": {
          "id": "6b4795f4-3953-409f-b258-7b640f9d6d3c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1291f579-0d8f-42dd-ba04-027042ad89d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7069dbe-e01d-438f-b714-6ce66b6610fe",
        "cursor": {
          "ref": "4d1daea8-a8bd-4195-a733-c807f9996192",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "33ac52dc-1b12-4ade-abb8-eaa8ea2b51e7"
        },
        "item": {
          "id": "c7069dbe-e01d-438f-b714-6ce66b6610fe",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cccd48be-4f96-46d7-95b4-a635faaca1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb0f1f6-0eb1-4ba1-99e1-ade32c4cb94f",
        "cursor": {
          "ref": "a9db96cd-afc0-4158-be30-8c0bb5d0c107",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "381854a0-630c-470d-8bcf-57e152eb2461"
        },
        "item": {
          "id": "fcb0f1f6-0eb1-4ba1-99e1-ade32c4cb94f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9db6de0d-f67d-410e-bf62-6bd66e3297e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01f0b5f-1f56-45c7-aed2-e090c4d9b4e2",
        "cursor": {
          "ref": "f9d840cf-c990-4d65-9132-fd1a5604345c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7dc30274-b9b2-4b79-b6ed-a605dc065680"
        },
        "item": {
          "id": "c01f0b5f-1f56-45c7-aed2-e090c4d9b4e2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fae193c3-d03b-4374-bebc-105896e91a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c33942-9c30-47b3-b4e0-6a9b3a756354",
        "cursor": {
          "ref": "2cc30900-4cc1-4438-b2bd-18e5f7982fbe",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0dfc6fb2-9b80-4f6e-96df-39bb0a1550bc"
        },
        "item": {
          "id": "12c33942-9c30-47b3-b4e0-6a9b3a756354",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7460b50d-7181-47de-964e-1c46ae42dea6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf1dc18-7f4e-469b-8272-ca4d7a5777ea",
        "cursor": {
          "ref": "fa71b2aa-9092-4233-9dd0-dd71a8431871",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e9519a73-3817-4648-95c0-81367258e2e7"
        },
        "item": {
          "id": "adf1dc18-7f4e-469b-8272-ca4d7a5777ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc18c714-16df-4d99-a28e-f9195ae1b007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd01db25-8c3a-44d5-afaf-6acc4a13746b",
        "cursor": {
          "ref": "b7b25512-43d5-4479-ab3e-c6e1c9106a34",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d24073c4-d988-4716-a78b-5e9f36264211"
        },
        "item": {
          "id": "fd01db25-8c3a-44d5-afaf-6acc4a13746b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d2982755-065d-4d4d-be53-904959b7da70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3f3d09-3ff7-4ee7-a33c-c6b9b10e8975",
        "cursor": {
          "ref": "6ebbcf55-ffd5-435e-a5ce-c8a0c6687924",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "07092ed4-f152-4742-888b-a7612837ed92"
        },
        "item": {
          "id": "ce3f3d09-3ff7-4ee7-a33c-c6b9b10e8975",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b4202e42-ddca-4f9c-aeea-bdcb645a4271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae27a192-2d2c-4013-947c-7daa533b9585",
        "cursor": {
          "ref": "e90bc7a1-8dd5-4a9c-9f50-bd99d52c9d2a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "07fd893a-8a5e-449b-b3c9-b71a0c899568"
        },
        "item": {
          "id": "ae27a192-2d2c-4013-947c-7daa533b9585",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "86e90456-6ac6-40ea-95c6-f295a4304a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb015e6d-7a18-4189-a044-353265799da2",
        "cursor": {
          "ref": "8afb8d49-bf73-4af0-a6e9-b8a36a470d3c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "90d2c9e7-d66d-4d0c-bb9b-a2c2d2672d10"
        },
        "item": {
          "id": "bb015e6d-7a18-4189-a044-353265799da2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b534d723-2af7-44c5-9626-b1ad936caf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9131ac-9d3b-4488-b626-4c5abffa0a7c",
        "cursor": {
          "ref": "b09d968a-b28f-44f9-8625-6712fe84ab2e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c73225de-8ffb-4542-99e1-54981071a6e0"
        },
        "item": {
          "id": "3e9131ac-9d3b-4488-b626-4c5abffa0a7c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "08b2b99c-98de-48af-a6c8-4dc56f588889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c966e7-a36e-4344-be3c-1d53849d0681",
        "cursor": {
          "ref": "e44063f6-6fb3-48a8-9cc3-48adba895807",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8905487b-e539-4cd5-b1cc-4199b361bf6a"
        },
        "item": {
          "id": "93c966e7-a36e-4344-be3c-1d53849d0681",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "665b4522-0459-408c-9971-b785fd7af6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf5bc5b-09f1-4703-9feb-00b920a4a0a2",
        "cursor": {
          "ref": "d1c51ad6-0891-434f-b2dd-3d0d9c5f6f83",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a3b39ed6-36f9-4828-a56f-9ddeddb0f70c"
        },
        "item": {
          "id": "acf5bc5b-09f1-4703-9feb-00b920a4a0a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5282562c-2f44-4d78-9683-9ce8f5456674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148310fa-b1a0-4d6c-a380-392a7dadbf46",
        "cursor": {
          "ref": "6542f9a2-b98f-48f1-bfc5-561036471ff6",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e3449872-d0e6-4ded-9080-dc2dd68e90f7"
        },
        "item": {
          "id": "148310fa-b1a0-4d6c-a380-392a7dadbf46",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "46f91e37-6533-4c52-9acd-59641771d9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77a8bb-5719-4b02-97f6-6d2ba1c6b876",
        "cursor": {
          "ref": "c21eb2c3-c57b-4058-bf29-1d2a1703982d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4eff22ab-a64d-4d32-a365-07a6bdcf2b71"
        },
        "item": {
          "id": "ae77a8bb-5719-4b02-97f6-6d2ba1c6b876",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b52b179d-0e90-4c4b-a04d-29bcb060d0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949961bd-05e0-4d67-9b32-b60cf3b637a3",
        "cursor": {
          "ref": "ec5bc5c4-37da-4c21-a64e-dff7f250aa7a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d45c9c7-9aff-4743-8807-7db83e6417e2"
        },
        "item": {
          "id": "949961bd-05e0-4d67-9b32-b60cf3b637a3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fbd796ad-b33e-46b1-861d-5b11c9b62bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b73790-200a-400d-a857-cd7ea7ed2d10",
        "cursor": {
          "ref": "63d89755-e708-4b9c-945a-82d194dce6c5",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b05e4da2-0d67-4161-8bde-1ff48c295c0a"
        },
        "item": {
          "id": "87b73790-200a-400d-a857-cd7ea7ed2d10",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e15b2edb-0929-409f-9243-5f214aa7c100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb24d36-16ed-4686-829b-d68a2c47fcc6",
        "cursor": {
          "ref": "ae618c7d-9054-4c75-82e1-a695ec4e56a0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e725590e-ee8b-4143-8f42-e977c0549e64"
        },
        "item": {
          "id": "5fb24d36-16ed-4686-829b-d68a2c47fcc6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "926ed154-8607-4fb6-8eb9-162e6cdc3181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40577857-9caa-476d-99e7-3d9217704046",
        "cursor": {
          "ref": "8cb6ad86-ff03-42fb-99fd-9a02fd4f8a3f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aa2cd169-cc26-4ea0-85ec-38a927aa4baa"
        },
        "item": {
          "id": "40577857-9caa-476d-99e7-3d9217704046",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff986020-088c-4707-aea5-c9e6573c3677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d96e3a-7fcb-4825-85ca-ef049725b143",
        "cursor": {
          "ref": "cacff7b0-534c-43a9-8e2d-8e01daaf6ce3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5fd406b3-16f4-4c77-b887-00ceaa44f0ac"
        },
        "item": {
          "id": "e3d96e3a-7fcb-4825-85ca-ef049725b143",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3be180b6-b887-41b5-8f96-8107fde90566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810e829b-0124-4f0e-bc88-ecb214cd8724",
        "cursor": {
          "ref": "8cd287eb-3f5e-465c-9b30-199296dc1ddc",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6818befa-b836-4664-8c8a-86229c32b705"
        },
        "item": {
          "id": "810e829b-0124-4f0e-bc88-ecb214cd8724",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ac19ac2f-a0a3-403e-8992-7da574193376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5d6df6-4075-44d0-ac90-75eaa900961c",
        "cursor": {
          "ref": "16f8c4ad-6a2c-4a64-9d97-3b48e5260fd6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4dfb42ec-671e-4b85-91cd-efb730878a7a"
        },
        "item": {
          "id": "2d5d6df6-4075-44d0-ac90-75eaa900961c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "33484226-92b9-4f92-8b9a-d9e711b2152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4af0536-9d32-4d91-b781-9ee945e041cd",
        "cursor": {
          "ref": "10672682-caee-4efc-8841-b90552bb1bdb",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5297926b-ba4a-4148-b39d-efd33489a148"
        },
        "item": {
          "id": "a4af0536-9d32-4d91-b781-9ee945e041cd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1d5335bd-6efb-4570-bb8e-2fdc0ca5a64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121eeb56-9e19-4920-bf99-d3f65ae6810a",
        "cursor": {
          "ref": "729806ab-9c3e-4fb3-9256-9ccac5b3ce0f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8e5a077a-14c6-4038-acfb-8d96b9744955"
        },
        "item": {
          "id": "121eeb56-9e19-4920-bf99-d3f65ae6810a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0c826db3-0472-4fab-81f0-bf0fa367fd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21aa55d2-b24b-4403-9a67-d8391c780d57",
        "cursor": {
          "ref": "5af26f6f-1279-45d6-b3ed-c37d2453d37a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1e2e005c-bd8a-4d3a-8e89-c0c986d02022"
        },
        "item": {
          "id": "21aa55d2-b24b-4403-9a67-d8391c780d57",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "545f38ff-a8b5-4c7a-b0cb-e6a81d43b2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202fb0c9-ef9b-404d-87ac-f24a479db551",
        "cursor": {
          "ref": "6345a55d-dbe4-428f-b8c3-8524bc7c1b3e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "820c76b8-9949-4dcb-b2ff-1b798e059b1d"
        },
        "item": {
          "id": "202fb0c9-ef9b-404d-87ac-f24a479db551",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "75ba0757-6ba8-4868-8ba6-db1f840ed75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f31329a-4473-4328-a66d-fb43ffbee59b",
        "cursor": {
          "ref": "6a9a2ed6-eb90-4b94-bbd9-cec9a4f0bbb6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "53b2bad8-8650-4019-aaec-45dd1232cd02"
        },
        "item": {
          "id": "8f31329a-4473-4328-a66d-fb43ffbee59b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8f78ee6d-1f89-46fe-b3b5-06db3c9ca2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d9bea5-d475-4abd-899a-188da1945ea6",
        "cursor": {
          "ref": "2f5bf33e-a8d6-4e36-8833-65e5d4a57f25",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "230dadba-aedd-448f-b558-013eccc96f63"
        },
        "item": {
          "id": "e2d9bea5-d475-4abd-899a-188da1945ea6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5dbdb06c-2eef-47a5-87a7-d3f7a044caa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87483e6a-f61f-4878-951e-6cc654a2b9c5",
        "cursor": {
          "ref": "0e3960d1-cd3d-499d-bd48-98d007bd6c23",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6a0c66ed-8f5e-4f3f-a7ee-3a2c26c4fd03"
        },
        "item": {
          "id": "87483e6a-f61f-4878-951e-6cc654a2b9c5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f857f54-bfa4-4127-924c-49b4cb868b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e438a086-2293-471b-875a-023164ac9453",
        "cursor": {
          "ref": "3c65979d-f7ba-4ef3-9ae7-67dd0f1799a1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "700c1c12-9f09-4106-b2d4-fc7967894699"
        },
        "item": {
          "id": "e438a086-2293-471b-875a-023164ac9453",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d063f662-eb4b-4350-8328-1f18f79644ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6091a1a-1cdd-4507-a26f-9b77140753e5",
        "cursor": {
          "ref": "f0a26397-f861-41b6-8dd8-3e515c59a495",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e02d6be5-7350-43fe-b96c-5554199faf8d"
        },
        "item": {
          "id": "c6091a1a-1cdd-4507-a26f-9b77140753e5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fcc2df7b-f062-4c12-9170-0c0942462541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46124eb9-1dfa-46a0-97f7-797506903a69",
        "cursor": {
          "ref": "9a94416b-cfff-4457-a48d-6750ffaebba5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9af5c77d-64e2-497b-bf21-9cb780ac5183"
        },
        "item": {
          "id": "46124eb9-1dfa-46a0-97f7-797506903a69",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a1140b10-76be-46c8-aa7e-5b7c4fbd1031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc9a5e6-354b-45eb-8a0f-4226c3db41ab",
        "cursor": {
          "ref": "3b5eb78e-a762-45a3-b3b2-e0087798d1f7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b4a1672a-eeda-4fb3-81b3-30269ebf1d19"
        },
        "item": {
          "id": "fbc9a5e6-354b-45eb-8a0f-4226c3db41ab",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5c1f2bf6-cd49-426a-8b85-f3774bedb781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9af2b6-c310-4ebc-b779-16034b40a8a1",
        "cursor": {
          "ref": "be3ac409-46e7-43f7-908c-e27a4fc8df3f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5ec0711a-e399-4635-be42-82afd55428be"
        },
        "item": {
          "id": "5e9af2b6-c310-4ebc-b779-16034b40a8a1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "99be7e67-90f2-4287-a227-5e7afd2ff3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac9a8ad-2e62-4de9-b025-26dae80a27b3",
        "cursor": {
          "ref": "088b0427-1cdb-4857-8a13-3842456ff06d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b148db31-7d3f-4a45-9501-7c985918e44e"
        },
        "item": {
          "id": "eac9a8ad-2e62-4de9-b025-26dae80a27b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "163bf878-eec9-4d54-a2d5-b930a1e344b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80db5dfb-a41a-4c3f-8da9-13083972c9b2",
        "cursor": {
          "ref": "d3c3c346-83c3-4b76-a2dd-ad8fb973fa44",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02ffbb10-35d2-483d-9a29-30aa4bc9f59f"
        },
        "item": {
          "id": "80db5dfb-a41a-4c3f-8da9-13083972c9b2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "225146c7-076a-4d19-a728-c3e678c45c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c712ef8-8755-49d6-995f-5ca1290c6bd4",
        "cursor": {
          "ref": "3173d1d8-26a2-4d64-ace6-7c7f1b70e9a1",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6b937b79-2c93-4424-b34f-ce765d3c6fc8"
        },
        "item": {
          "id": "0c712ef8-8755-49d6-995f-5ca1290c6bd4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "74ff608f-6c62-429c-853c-6c689a452e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f404be0-7b51-471f-b563-4277a3e35113",
        "cursor": {
          "ref": "1b2e0274-8747-420e-be57-52e0bb519322",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "30a6c4ef-a0b8-4529-9118-00b68ef82117"
        },
        "item": {
          "id": "4f404be0-7b51-471f-b563-4277a3e35113",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "af5d5615-3580-4943-b85e-830161006c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edf7744-4aa8-45b5-b742-8fce3543cb48",
        "cursor": {
          "ref": "116915b3-be10-4a27-b7f3-cde77d48629b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "95862470-a0ef-4ac0-b864-b5a9162399d9"
        },
        "item": {
          "id": "3edf7744-4aa8-45b5-b742-8fce3543cb48",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5d455509-1c59-4dd1-89f2-109f94c86703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee19ee38-60a8-4317-bb6d-0ccead1930bb",
        "cursor": {
          "ref": "11784b37-7b85-4842-b390-4c103fe95963",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43d224c4-8a95-4332-a659-6150962ba8c7"
        },
        "item": {
          "id": "ee19ee38-60a8-4317-bb6d-0ccead1930bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "16345d22-438b-40b3-9195-f43f7ea896a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251cb527-edee-416c-917f-57951eefb2ff",
        "cursor": {
          "ref": "0e82fd91-2727-48e4-a8c6-5d1ec24a1c93",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e52c8bf4-ae01-43e1-92c9-f1030a4dc43a"
        },
        "item": {
          "id": "251cb527-edee-416c-917f-57951eefb2ff",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5d20a31-37fb-4c43-b31b-a5b5a678e68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc23d7f-f5c9-4ad4-916a-e6cdaac15028",
        "cursor": {
          "ref": "3a40f230-c047-439f-bbd8-0f88a10e32a5",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ebd666f9-cd9b-4857-b213-1a90b1b3484d"
        },
        "item": {
          "id": "7dc23d7f-f5c9-4ad4-916a-e6cdaac15028",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "384c1424-b606-4849-9642-4918917eea05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c921ee-ab43-47ad-89a5-b65ed5d82657",
        "cursor": {
          "ref": "f5078cc9-c9d8-496a-a527-1b9d7f21d57b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b0cffdc4-038c-4874-bdc8-7e4206f07b70"
        },
        "item": {
          "id": "12c921ee-ab43-47ad-89a5-b65ed5d82657",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8d90e01e-27e2-4482-8ce2-de297df7837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ef21ee-6de8-4fd7-8f2a-bd55c527023d",
        "cursor": {
          "ref": "c5977bc2-03ab-4d7a-9ff7-079d2406176b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "77876939-5b69-4936-9813-04d1a3e9f87f"
        },
        "item": {
          "id": "31ef21ee-6de8-4fd7-8f2a-bd55c527023d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "156c247e-a25a-4b33-b0c4-52012ed968dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ef8a8-b807-4dfc-b30d-1e1757f65f9f",
        "cursor": {
          "ref": "d39f0325-f239-467e-a1dc-2a1164e2f702",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "77df7deb-2778-4249-9ce9-592ee2f1816d"
        },
        "item": {
          "id": "d49ef8a8-b807-4dfc-b30d-1e1757f65f9f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ddfc335-3d80-41ed-8cdd-5a607a824530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1127cc-9271-4892-8099-4b1895407e65",
        "cursor": {
          "ref": "cbf95aab-fe52-47dc-b8a6-ed9c197db324",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "90720184-3a6e-4cb8-b457-ff50f1d948fc"
        },
        "item": {
          "id": "fe1127cc-9271-4892-8099-4b1895407e65",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b0545d0f-1d9a-48cf-8f6d-4ac45587ccaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d790c9b-c6d1-4bdc-b35d-3a0d067cf85d",
        "cursor": {
          "ref": "e819bf8f-4af9-4bca-a08a-5877271581db",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aceb2ca4-cc9e-4176-870d-43ddd8059cb3"
        },
        "item": {
          "id": "6d790c9b-c6d1-4bdc-b35d-3a0d067cf85d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5750f60b-e8b7-4c92-92fd-bef307b0dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536bf328-b680-4b5c-96f9-f3cac457512c",
        "cursor": {
          "ref": "6a667c16-1245-48ba-ae3f-fcabd91cbb4e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c7bdfed7-40f2-41f2-b290-20905a8c99f0"
        },
        "item": {
          "id": "536bf328-b680-4b5c-96f9-f3cac457512c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "59bee8c6-fc91-4c0b-bc6a-40a38cef4aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c5a144-d306-4069-9786-71480854375b",
        "cursor": {
          "ref": "6d0f5c7e-006a-4d77-b281-e9bd8fb71e1a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b535991b-b1e1-44dc-bc51-91df824bcc6a"
        },
        "item": {
          "id": "40c5a144-d306-4069-9786-71480854375b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "841c706a-7bcf-4182-84dd-4573f686a0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b9f044-19df-4cb0-ad0d-d482f40114d7",
        "cursor": {
          "ref": "4afb69ab-fb26-4a39-8ad3-3fbcf860d1bd",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "796d6a46-1452-488a-8d90-a115715cdea8"
        },
        "item": {
          "id": "54b9f044-19df-4cb0-ad0d-d482f40114d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b642c721-1c1d-4fd7-8ac5-ae72a12fe31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cefad1-0bf8-4d4e-9402-d5e67c2e6cb8",
        "cursor": {
          "ref": "7564a179-7b97-490e-92a7-c4aa07dd0aa9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa401bd0-09f7-45c8-98ea-c1226fbb54b1"
        },
        "item": {
          "id": "65cefad1-0bf8-4d4e-9402-d5e67c2e6cb8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "76ad2f84-c922-4b78-89e1-18b6211e09a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d76bfb-9a49-494a-a766-44159b67c1bd",
        "cursor": {
          "ref": "8e960844-f9ff-4c0e-85a2-794a9ac55e38",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "47657122-7101-4cff-bb94-c4d432520b7e"
        },
        "item": {
          "id": "d3d76bfb-9a49-494a-a766-44159b67c1bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b4509b2-edbf-4dc4-9c4c-52e8c7d3854f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3aed11-cff4-4066-bce9-4a359d7a1c56",
        "cursor": {
          "ref": "711cc0d7-504d-41f6-b0a5-fb1773378839",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dacd28cd-1122-4034-8294-e422a34b8099"
        },
        "item": {
          "id": "2b3aed11-cff4-4066-bce9-4a359d7a1c56",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "87f7c86c-bdd8-4726-97de-beb7d80221bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6421e954-a328-4022-8ba3-5961de0f093a",
        "cursor": {
          "ref": "7e0bc092-e678-4b72-bf43-6866c24d7e06",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9ea207d5-d1f1-4743-8a76-97c19c69f583"
        },
        "item": {
          "id": "6421e954-a328-4022-8ba3-5961de0f093a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1e223b3b-7a77-48bb-b92f-27cf6fffcbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80d2808-d5fa-4ad7-99f2-799146692475",
        "cursor": {
          "ref": "5897c759-a304-4c84-88ee-202a7406c38a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b5408c1-2711-46e9-822e-2b48229bc2d9"
        },
        "item": {
          "id": "a80d2808-d5fa-4ad7-99f2-799146692475",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a3cb43e8-bfc6-4bdc-9a63-5072c7bdfb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f363f3e-835b-4f8f-bbe0-a6165f3d3b73",
        "cursor": {
          "ref": "607df582-6a69-47de-a89a-685f3fea8a68",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "778908e4-876f-464d-8577-20cf91b1908b"
        },
        "item": {
          "id": "2f363f3e-835b-4f8f-bbe0-a6165f3d3b73",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2e9473a5-f59f-485b-9561-c1dfd79d496c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65693e07-e39d-442d-b0bf-af8333e7c9b0",
        "cursor": {
          "ref": "44a3a6b5-8c0b-44ac-9183-b9c17820e484",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "86dc4d10-b0c0-4029-a042-ce541e58698f"
        },
        "item": {
          "id": "65693e07-e39d-442d-b0bf-af8333e7c9b0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "41b0c056-326a-40a5-bfc0-647f35f19d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d7bbb-a824-4e9c-811b-ce89efe649bb",
        "cursor": {
          "ref": "6a6b9d3d-3174-421f-9419-cf428a50594e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5d013c28-8208-4b4c-88e9-091a72b673b5"
        },
        "item": {
          "id": "9c7d7bbb-a824-4e9c-811b-ce89efe649bb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bef5230e-acb7-4a13-ab45-0df4d87c4825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb09b16e-33c8-4bdf-b7a8-c59ccd532821",
        "cursor": {
          "ref": "c25873f7-acaa-4e43-ae63-b3974c25b952",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "018c7bae-f5c2-4b7d-979d-dceffdfd8575"
        },
        "item": {
          "id": "fb09b16e-33c8-4bdf-b7a8-c59ccd532821",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "16f46eea-72b9-45e2-b134-71dc81475b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045eaa94-a4ed-4f30-b4d8-ff203eb05576",
        "cursor": {
          "ref": "1750a8cd-f8d9-47b8-93bb-25dc22a640d4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "752af72d-ef1f-4e2e-bfae-d16f3a77280d"
        },
        "item": {
          "id": "045eaa94-a4ed-4f30-b4d8-ff203eb05576",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f0adee0-3e41-469d-8ca2-ff7ee62dc970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7c2fb7-5d90-4f40-90d8-93731e59724d",
        "cursor": {
          "ref": "c9c8f4c5-2158-4914-9d2b-15cc1b95095b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8f926828-8f7b-4cce-8e60-d2ea1679799c"
        },
        "item": {
          "id": "cc7c2fb7-5d90-4f40-90d8-93731e59724d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5620dda5-4f80-404d-a73c-6fa2685bf841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5622c3-bd79-49c3-9480-c1696ba49e85",
        "cursor": {
          "ref": "12de8787-4b80-4bbc-a019-0c8060e4e7d7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "27542ae8-c96f-46e2-ac3a-75366b85c4f3"
        },
        "item": {
          "id": "8a5622c3-bd79-49c3-9480-c1696ba49e85",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "07560d32-e9a0-44c2-8703-4f8cfca2c6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ab43d4-249f-4430-a54d-7d93bf7b9b0d",
        "cursor": {
          "ref": "ba98e23e-2cf6-4226-a43d-dd7a55c77e9d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4f883ba5-6544-42b3-b11d-bfcf5fdcaa20"
        },
        "item": {
          "id": "29ab43d4-249f-4430-a54d-7d93bf7b9b0d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "daa4f633-2d61-49b0-8859-463a8a91630a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c4732-6272-44bd-aba4-1ad528f82560",
        "cursor": {
          "ref": "970cb3e3-05d3-4e8a-8d15-4690784861da",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0eda96a7-7b30-4f91-9167-b9a683376eb1"
        },
        "item": {
          "id": "9c8c4732-6272-44bd-aba4-1ad528f82560",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4aefc419-5313-433f-924a-04b385fa954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874d1754-9991-4e5e-b29e-dfc8299899a9",
        "cursor": {
          "ref": "b9f24039-b511-4f96-80b0-7aef3643b1fa",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "81da0691-bb75-4620-b90d-5147a1a4a64d"
        },
        "item": {
          "id": "874d1754-9991-4e5e-b29e-dfc8299899a9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3f7c89dd-7704-4163-b506-f51cb12f4acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86df4de6-1507-4a60-aaad-ecd780281aa3",
        "cursor": {
          "ref": "dceb9cbb-f7ed-4fb9-9b66-9905e75194c5",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1d7c7dce-cad9-455f-ad53-6fa47c6cffb1"
        },
        "item": {
          "id": "86df4de6-1507-4a60-aaad-ecd780281aa3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a55a51ad-482e-4ade-8d4d-09378f5c6f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc49ee3-d0c1-40e8-9b5e-63b8f4bc8b00",
        "cursor": {
          "ref": "5409c4ff-8d63-4bc7-83de-09fa2e9b409b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d4ac04a1-cb6b-4a4e-8af2-41f3700468a9"
        },
        "item": {
          "id": "4cc49ee3-d0c1-40e8-9b5e-63b8f4bc8b00",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5bd92701-1de0-4128-ac5d-befdf2399a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f7519b-c65d-47d1-a088-a2ca9b78a463",
        "cursor": {
          "ref": "b2270a72-2bec-466a-9b7e-be00977c5f44",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0db52d12-b568-4ce6-bcb7-9a58aa0c8dce"
        },
        "item": {
          "id": "b5f7519b-c65d-47d1-a088-a2ca9b78a463",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1e86e10f-8b84-4893-bcff-0142b33fbd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8112db-c517-483f-a976-21b13926dc53",
        "cursor": {
          "ref": "32522559-fcd9-4950-8e77-172173eea7a4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "90ece073-9743-4954-a622-f3f7e1bf6dfe"
        },
        "item": {
          "id": "6c8112db-c517-483f-a976-21b13926dc53",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "de308d65-8f29-4cd9-a86b-3643565fc96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96963fa-33e5-4380-8812-ffb0cf43bd49",
        "cursor": {
          "ref": "d6e492ee-c5bb-4ca1-b7e1-2c263363e7ae",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "27ead486-f004-4017-aed9-0ccd39dc175e"
        },
        "item": {
          "id": "c96963fa-33e5-4380-8812-ffb0cf43bd49",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "234db62e-5767-4ba5-bc6a-287cb4dcd1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb4924f-21b4-477e-9a80-7020c88a2360",
        "cursor": {
          "ref": "49eea957-bcc3-4a04-9b65-bcb2202a4131",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "307aa475-614c-4bfc-8f63-3186cc999145"
        },
        "item": {
          "id": "0fb4924f-21b4-477e-9a80-7020c88a2360",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "661fa8eb-98f5-41a6-9cd1-d56fd5cdf975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25be845b-7e06-4347-b420-dbd00b4e251d",
        "cursor": {
          "ref": "25873964-7717-4790-88f4-fe19a719e898",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0c524a6c-476b-4716-b2bf-6bc4be609adb"
        },
        "item": {
          "id": "25be845b-7e06-4347-b420-dbd00b4e251d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e9d5e192-7018-4e89-9731-83c59d9af110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e33148-a08d-4234-a019-f1363bea8bd4",
        "cursor": {
          "ref": "1ec7a254-32d9-4d3a-9a2d-1282ebd5e0fb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2e02ab30-d3e8-45ee-a908-7f712fa72fb1"
        },
        "item": {
          "id": "f3e33148-a08d-4234-a019-f1363bea8bd4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5ce57196-79a4-45f7-8098-1c085953a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4cb8c5-367d-4b09-9738-8f5f1ea427f9",
        "cursor": {
          "ref": "11f7b6c1-a0c3-48a6-a5b4-f1e082db5b8c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fd1c5a3d-111e-4fca-854e-bef386836526"
        },
        "item": {
          "id": "be4cb8c5-367d-4b09-9738-8f5f1ea427f9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c36fae22-e7cd-428c-9531-d2a69060cc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97033ca7-2776-4868-8cbe-071867e02b93",
        "cursor": {
          "ref": "11ebde99-6a8e-4b17-9be8-4ad9bdb06870",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "82c56bdb-fd88-4a8d-a798-ac3bfcf95c35"
        },
        "item": {
          "id": "97033ca7-2776-4868-8cbe-071867e02b93",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7768dc85-9f22-4a75-8495-2f1534ca3cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05105f7e-a788-42aa-b63c-fe9dff05534b",
        "cursor": {
          "ref": "65a18779-ca78-4605-bc0c-1a0d0f21ea28",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f4f68899-54a8-4efc-88f4-c0823e759883"
        },
        "item": {
          "id": "05105f7e-a788-42aa-b63c-fe9dff05534b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "323d813b-a62b-455e-9f15-13f4f6e6c75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e63ac5-ab5d-46b7-97f7-db46975bc8f0",
        "cursor": {
          "ref": "738e2e8b-ab38-4056-8a90-2386c1939468",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "154cc613-1855-4a89-a0eb-c4d9b89bf4d2"
        },
        "item": {
          "id": "53e63ac5-ab5d-46b7-97f7-db46975bc8f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "446315b4-8acc-4b3c-93de-6267d331b0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d55dcc-e0c8-47f6-9bbe-5cc06ccf3efc",
        "cursor": {
          "ref": "0e300bcc-1324-4614-915c-39b354febd9f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9412f720-e337-44bb-8b17-b19b80a93dc9"
        },
        "item": {
          "id": "60d55dcc-e0c8-47f6-9bbe-5cc06ccf3efc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "33c127dc-6000-4b5d-84fc-c04cc85bb627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c49d58f-e999-488c-9918-6501da3945a4",
        "cursor": {
          "ref": "9e43168a-b801-4077-bc04-75ec4132ae74",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d68fa454-d583-4623-a729-6e20047c7312"
        },
        "item": {
          "id": "7c49d58f-e999-488c-9918-6501da3945a4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5b44aa8c-62dc-48db-8b47-ae30af31eb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2344e1b4-23b8-4d52-8679-a68ec656055e",
        "cursor": {
          "ref": "d3328307-f8fe-4229-8713-661486c9a5f4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b0ef33af-40e5-40e9-a7c3-89ff3464b579"
        },
        "item": {
          "id": "2344e1b4-23b8-4d52-8679-a68ec656055e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8d7de7a8-8bea-47e7-b8c4-a8d073cd75ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e4eabb-4905-4cf2-9b29-ec55b003867a",
        "cursor": {
          "ref": "07706b4b-9fc4-44c6-a62a-292225e898fe",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bdc8acbd-418b-4f76-b437-2b98b1470a34"
        },
        "item": {
          "id": "27e4eabb-4905-4cf2-9b29-ec55b003867a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5222c463-1b42-4d14-a0fa-7eda6fc0a784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040899cb-0779-4ac7-af69-4601ea0c4468",
        "cursor": {
          "ref": "705230d9-8132-4905-a6d4-7d1ef3a77609",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7a9fa6aa-33c7-4664-b4da-954c7706254e"
        },
        "item": {
          "id": "040899cb-0779-4ac7-af69-4601ea0c4468",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e23b7449-1eeb-4351-bd89-816a094b48f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bfd7a8-cdec-43c4-9fe4-fa58aa3ec70f",
        "cursor": {
          "ref": "c3acac1d-8af9-42ce-8413-7d65bf297356",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d23b1cdb-4d5c-4385-9d10-3c749a56b7af"
        },
        "item": {
          "id": "f8bfd7a8-cdec-43c4-9fe4-fa58aa3ec70f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1c5bad23-67a3-4ffe-8d9f-dec8eb23486b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c3882-cbfd-4be0-ac53-48878cdae0a3",
        "cursor": {
          "ref": "dcd1ce07-3f66-4151-af63-c87cb306b5c5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "eaa1657d-664e-4029-a898-fe468e178046"
        },
        "item": {
          "id": "6c7c3882-cbfd-4be0-ac53-48878cdae0a3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25aaaa1b-31a2-4c51-bc56-29f2a3ca2b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa4614f-2ee8-42a7-9957-f9bcd93b6612",
        "cursor": {
          "ref": "8801e217-6027-4027-96c8-ae91d8c23d64",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5c36643f-e541-4b55-a8ad-ae98296a98c5"
        },
        "item": {
          "id": "6fa4614f-2ee8-42a7-9957-f9bcd93b6612",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0ca6ba9a-d8d1-4eb9-b042-0fa3227fb712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eb37ee-f8c8-43fb-a5d3-968299f86318",
        "cursor": {
          "ref": "4053be72-39ba-4eae-9d3c-816fc39ecb26",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "36ad748a-4260-47c8-9acc-b332a89ff935"
        },
        "item": {
          "id": "f6eb37ee-f8c8-43fb-a5d3-968299f86318",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "df1ebcf1-0813-4e92-a26a-2a22b3d5dd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ef12dc-cd4e-4964-b98d-2606628b7009",
        "cursor": {
          "ref": "c34cf81c-7c2a-484c-a530-4cc22031ae2b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "041cb629-7d6e-4d65-8ef5-f4e32cac0f52"
        },
        "item": {
          "id": "c9ef12dc-cd4e-4964-b98d-2606628b7009",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5eac33c0-317d-45b9-8c2f-702f98c57d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06246273-b441-40b0-9405-fac23f3cf0e2",
        "cursor": {
          "ref": "7f4c121e-ac39-4b9b-932b-e09359b5e617",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0e3f97b2-6650-4227-aa2d-493dae2a3d03"
        },
        "item": {
          "id": "06246273-b441-40b0-9405-fac23f3cf0e2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "46fc7a01-8835-4ce1-b4f2-eef62e75e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca3d718-7a95-4497-a74b-55a780d52ab4",
        "cursor": {
          "ref": "640e5522-3c87-4e52-bab2-5d788220dc81",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ef19e4f3-f5e9-41e5-97e5-7f736081f9f1"
        },
        "item": {
          "id": "0ca3d718-7a95-4497-a74b-55a780d52ab4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f5eb269a-14cc-4b12-877b-e4db9e7e8975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa70b3c-4cc5-4d7b-a567-67f40e4bea6c",
        "cursor": {
          "ref": "de867116-2677-402a-af81-993b51c5f749",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f316c2dd-2835-4c13-938d-013a9f67a615"
        },
        "item": {
          "id": "0fa70b3c-4cc5-4d7b-a567-67f40e4bea6c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f645ee27-7b53-4893-a95d-c7a7ce234ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe155744-9e39-4ca1-b6bf-d45c20eaa808",
        "cursor": {
          "ref": "f48b6726-6827-4874-b961-f24a670b94e4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "63db1962-9fc1-4f1a-bc41-f4b57305d936"
        },
        "item": {
          "id": "fe155744-9e39-4ca1-b6bf-d45c20eaa808",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "df2eb7de-d58c-4f0d-b16a-a872806dfd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61457aef-09dc-4856-b6fa-13c64c97ec3e",
        "cursor": {
          "ref": "96bce414-ab8d-4144-a0ce-dd3f8a9ed6ae",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "466b69aa-f6b8-42c8-8dff-d611cc6d8659"
        },
        "item": {
          "id": "61457aef-09dc-4856-b6fa-13c64c97ec3e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c89276e7-b407-4ba4-950c-597d51bf0694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c666dc20-df45-4a62-8e1a-95346103044b",
        "cursor": {
          "ref": "9853a86e-9497-4215-bee3-240a4c1ac664",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fe0b62b6-4004-4e5f-87d1-fac1dd9e502a"
        },
        "item": {
          "id": "c666dc20-df45-4a62-8e1a-95346103044b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dfd1ad66-707b-4828-baad-bb383fb74a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a93bfc4-e168-4f6e-a13f-e130bf68709a",
        "cursor": {
          "ref": "ff680fcb-4e55-422c-8093-a5700becfca9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "62281d11-7e2d-4b9e-82e7-5997d4f0a12a"
        },
        "item": {
          "id": "8a93bfc4-e168-4f6e-a13f-e130bf68709a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "17a4f1e9-97f8-4a24-89fb-8e8edd518ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3424f54c-ec98-4a73-8df9-a5bc32b0d304",
        "cursor": {
          "ref": "68e3159f-dc4f-4873-880b-daf066affc0c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8ee5072c-6b0f-429c-8688-63203b6f99c3"
        },
        "item": {
          "id": "3424f54c-ec98-4a73-8df9-a5bc32b0d304",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "29c5b770-2b71-43f7-aa44-1a9d632cf43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07de72ca-b350-4e14-953a-a0530b60601a",
        "cursor": {
          "ref": "cacfda6d-b282-44c7-b4bb-9f9916c2154a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "84289d12-8108-4be2-b440-9ec855dfe8f0"
        },
        "item": {
          "id": "07de72ca-b350-4e14-953a-a0530b60601a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "45fcea4b-0c1e-4908-94a9-57056c4b90e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eed54a7-cbb8-4d3b-ac13-6b8d9a8e5484",
        "cursor": {
          "ref": "18e82384-13cc-4c35-b2be-337df7e2f0ff",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1c99cedf-e573-4d48-ada8-62325a6f0f99"
        },
        "item": {
          "id": "0eed54a7-cbb8-4d3b-ac13-6b8d9a8e5484",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a63c4f7-c5a7-4c47-a0ee-b95c67e18288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecbdd1b-5123-424d-9ac0-8f70fdf66e58",
        "cursor": {
          "ref": "ddd6e480-ada7-4518-a5a6-6378a7a4a6a9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2f92f6d0-d1e8-4e19-8c03-a9d1f8b41cbb"
        },
        "item": {
          "id": "0ecbdd1b-5123-424d-9ac0-8f70fdf66e58",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ab8a1294-22ee-4d47-ba6d-7602a0519f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102894ec-08f1-4677-bcba-a789077b16ed",
        "cursor": {
          "ref": "8f27422a-266d-4d84-acdd-09b4a76491ef",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6f6aed4f-a19d-40f2-b3ad-c17bcc7309d1"
        },
        "item": {
          "id": "102894ec-08f1-4677-bcba-a789077b16ed",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3bc31cf9-4847-409c-919a-a28a3625e74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5972a2f-c0f0-47aa-ac40-6157879c3ed0",
        "cursor": {
          "ref": "57b102e3-8b78-46fd-b64b-b880b2c28357",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6dbe9433-c1ff-4cef-9858-b0e0ef0e45da"
        },
        "item": {
          "id": "e5972a2f-c0f0-47aa-ac40-6157879c3ed0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d33670f9-4c5a-4122-ad1a-d68ea2a98176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b5dfc-3ad3-4295-8075-58689d0f11e8",
        "cursor": {
          "ref": "69b65644-f2b1-487e-a15b-ee42a753f4d4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8dd22b48-903a-4eda-82c4-ec2c4b723bbe"
        },
        "item": {
          "id": "3d2b5dfc-3ad3-4295-8075-58689d0f11e8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "81d1c531-2ded-48b5-bf7e-6f52c8f72ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a63e7d-f0d9-4987-b572-fa249a7b3f03",
        "cursor": {
          "ref": "71d043d0-ee27-4a80-ab49-22c293c4b559",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c2a4bd9a-d1c5-4bd6-b375-6dec74d2f301"
        },
        "item": {
          "id": "e3a63e7d-f0d9-4987-b572-fa249a7b3f03",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e4b488e4-5f0e-4a62-b7e3-4d10ea7aaa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a764bf3-46e5-4d2f-8284-a895843a2f83",
        "cursor": {
          "ref": "07c2b6b2-16f8-4d3c-8e21-d58923fd7669",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e849c360-abe5-4ca7-98d8-9130c8503e93"
        },
        "item": {
          "id": "9a764bf3-46e5-4d2f-8284-a895843a2f83",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "00471b9e-335d-4b69-924f-3d1e28fc4a98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05480393-021d-4bcf-ba42-dd61052f7cbf",
        "cursor": {
          "ref": "500f7159-8cdd-4dd1-b65f-544263e32b42",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7a82bf3b-b5b7-4034-aa7a-2a4ba798f623"
        },
        "item": {
          "id": "05480393-021d-4bcf-ba42-dd61052f7cbf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aa50f506-69a4-4b34-b6eb-97a0933f5c8c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f524a3-ca18-4968-827b-6e5081254233",
        "cursor": {
          "ref": "9515603a-3078-4a59-bbc6-3dc8098dec02",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78317788-1127-4bb9-8a1b-96562353c3d1"
        },
        "item": {
          "id": "e1f524a3-ca18-4968-827b-6e5081254233",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a74b134d-b8e1-4da4-a0bc-46792ee5b67e",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fe2026-5147-4f1d-bf6e-a56cd9f4dde4",
        "cursor": {
          "ref": "9eeb4fad-f955-49fb-a4c1-3f502d76fbb8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3d80ff7a-56d5-4387-ad95-544aab17a140"
        },
        "item": {
          "id": "09fe2026-5147-4f1d-bf6e-a56cd9f4dde4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "80ef572c-129d-4727-9a24-cf7021ded80e",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1b1f25-1b81-4f3b-b9cc-481f4dc04883",
        "cursor": {
          "ref": "1388a9af-fb2f-4489-bb8c-67bebb4b9334",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "586b6b7a-14ab-49fa-a797-9862ed9af4cc"
        },
        "item": {
          "id": "7a1b1f25-1b81-4f3b-b9cc-481f4dc04883",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "948285f2-e582-4ddd-9b05-e7a1634ebcf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1b1f25-1b81-4f3b-b9cc-481f4dc04883",
        "cursor": {
          "ref": "1388a9af-fb2f-4489-bb8c-67bebb4b9334",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "586b6b7a-14ab-49fa-a797-9862ed9af4cc"
        },
        "item": {
          "id": "7a1b1f25-1b81-4f3b-b9cc-481f4dc04883",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "948285f2-e582-4ddd-9b05-e7a1634ebcf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a129d7-9145-4b6a-8c3d-f7bd068c6da1",
        "cursor": {
          "ref": "9aee18ae-8f8a-4886-b29c-9a15e8ce9ab1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "368977e3-eca9-48d0-843f-c5ee25b5c8b2"
        },
        "item": {
          "id": "79a129d7-9145-4b6a-8c3d-f7bd068c6da1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f708501-e300-41cb-a58d-5d539f3c8933",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf67491-3dd6-4ca1-8934-eeb9bff3c15e",
        "cursor": {
          "ref": "932e2a11-ddde-4268-b259-0339f08aebb5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "54685518-d90d-44d9-a1a1-4f97c520735d"
        },
        "item": {
          "id": "dcf67491-3dd6-4ca1-8934-eeb9bff3c15e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1ee32f50-e46e-42ac-8f0a-4a2b97f16f95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}