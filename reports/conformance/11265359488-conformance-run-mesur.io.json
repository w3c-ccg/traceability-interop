{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf945f64-5244-43da-956a-8a9a20004d7c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "66829788-ee1f-465d-8787-873ac58ce739",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb066a0f-4d0d-4853-bc0b-a54a78da7633",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5c7e370-4f88-4a55-ab60-bc252df73525"
                }
              }
            ]
          },
          {
            "id": "5a8f93fc-c0db-4bee-933a-1b8e274dd725",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f35e12d-a2ae-4e01-93ff-342578085b9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "16faf4d7-05e2-44bd-9436-5007ccb8cd6d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "75946972-95b0-4aea-9b43-234eb693343f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "da36dd2b-553e-4b3b-b697-f083830fb32a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4516855-a241-4912-b54b-0fbfedbf6416",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a96861ac-aa6e-4b47-9ee3-15f179fbf038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96b9aa85-c4fa-414d-a294-4a301801a7d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fff3e029-933d-4a15-8d81-ec44700581f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2cc3818-8fc4-418e-88bf-ddc7139bcfd3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a74bc34-06f6-40f0-856e-5cf1f2b938bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70807eee-f375-4f62-9e25-1fde3b4b6859"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "711c02f1-6ae4-4179-b345-f60ac2372b6a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3fd9ea3a-2ec2-4f1c-bc25-1782c25eb414"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2793d77e-3f46-4ae2-9965-f49b9db69429",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e90ebd2-75f4-4f9d-a313-99d5e127538c"
            }
          }
        ]
      },
      {
        "id": "6d86b4c0-41cd-4d05-9d47-9d3a159a6554",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "32461b3b-06dd-43e7-a701-3ef725282923",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2de929dd-bc5f-4f72-91ac-dda1b3a7e9e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "788eccad-ea6d-4ec2-85c2-a2e3a9c12f69",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f884be-52b2-4b3a-9ba4-cf77a7e76b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58692281-fb93-409d-9fc1-df5c48f5c542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d73c37-a98d-42ca-bbb0-dea619afc11a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea7a1d0-ce1f-4c9a-9250-337c75526d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e03f1fd-2cca-4c9b-94e1-fa0cdfab000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a013664-67dd-4482-8f50-fb7d3a94266e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a566cf7-3354-4c9b-9fba-5a0ddc096bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51f5b9a0-2e27-4a5e-b216-ce9efcb7f7ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb4b7426-4806-4d87-b883-7ee8b3a34dbd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0bed98a-14c9-41b9-b23a-83dfdcbe4a8b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8dedb9-8bf9-41ad-b2ab-e7c0ff759d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f46d40a5-2248-438f-8e1b-ddbbd85945c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee02d737-4b09-4846-b6da-ab77dfffbf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c289c29-21cf-417c-9e94-420c61bbe725"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b06c4071-7117-4970-8090-76d849eb33aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c0468f55-89a0-4d63-aad2-fd3d5070d70b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be19d93-88f9-4c43-8897-d570cec8846d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1cb52d39-7021-4877-92e0-d09b3dc7f9ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac9cf6c1-0a51-47d4-9935-11de7c2c8f8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e79d7497-4720-4470-a77d-d62e6fe11414"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e223347e-26ce-4fce-992c-aee953af539f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "572cdc60-44ac-4f0f-bdab-061d3552d88c"
            }
          }
        ]
      },
      {
        "id": "26181051-37b0-401e-99aa-9c9fca64eb60",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a3283e6c-4502-4ded-bfb7-9bf4886ec064",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ef35252-9f9b-454c-8e39-f7e9d0301d3b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "33a2312f-d66a-4bbe-b960-f8500c9f11da",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3191a9ad-e3b8-4536-b5db-b1ef4325c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8edff5-1c83-4f5e-a246-3704758cb66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b513ce6a-1b6e-4378-8fe7-2578a8bd2523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "653d1bfd-4c59-4c15-adf5-c26835166bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0d2526-9286-460e-87d6-46a16aed37a8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1098236a-0533-4590-8ccd-75ff785adc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e119244-0590-4a3f-94fb-8296707dbe68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eac8c8-7e3b-4975-b77c-024ae03c89b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "104ac5c2-c644-46b5-9b81-868b512ad21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3551293a-5f6f-4862-86b7-6c9a31ba6682",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c995ff4b-bb1f-4629-b108-ea2af2132f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cddad9-32d6-41f4-9169-1372377e2ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d7cd98-9286-465c-b501-df29c40c1c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fecba9b0-3b3b-477e-91f3-d998be3f99f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297196ae-6b1c-4678-a413-9557bc0a0ff1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3331f9-4a89-4d9a-865d-a13116c9f9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2caff35-311e-44b6-854c-1304b2f29f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225c22f7-8c32-4c6c-b037-469c0846e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f909a05-dc29-455f-b4b7-cf013202af69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc715c4b-47ee-4651-8ed8-a2ab902d73f3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b3c724-2b60-4a7c-8225-67d94e9d07f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df880afc-5552-49b6-85c6-8abfe4ed6458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9131fcd0-4a0e-4a44-8789-c650e3815ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b9af885-0f2b-49d9-bd47-ec05804a96f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ccba3a-6941-4027-ba01-14f986cf05aa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f190812-4b76-415f-8bff-5cbc4b4b26c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d3b463-58b7-4a5a-b215-c5a708f4e340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3b6bfc-0797-47f3-9419-f013f128356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4290064e-5f06-4edb-9f4c-1f993cbce51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d27967-550f-4689-90f8-21c0f87ba249",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e90ad4-ead3-4ade-bcf9-0c61174379f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805e6204-3b28-492e-b45d-36cc1f3e8ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e0f147-914e-42ad-a0d5-ed4c9e3443ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b54fd649-586c-46be-a955-3071df5e4aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917646ff-2cd0-439d-8168-5ecaff4a14ae",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d251f-136b-4360-a7cd-1edf6bd7465f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5451eddd-69a1-4b0b-8989-0b84e14ae59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa733e2a-af53-4313-b77f-df8cd33d7455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d4bd307-04bf-4d49-a26d-6d76890049af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fdb605-1bc0-4660-b80d-318c0cf0e8e0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe867492-da5e-4f3d-a436-51c9d0b72e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838d67f8-1312-4395-93a0-bb65d04284ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798f5ada-da6c-4eab-9853-bdb6ced5464b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eed232f-8c40-43cf-876d-91c2ec0ff415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ba1821-971b-468b-8c70-0cdcda41bc55",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9090861-ce3f-4d20-904b-59678c9aa6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e16e24-59a5-492c-be61-da06058dc463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69a193b-0b9e-4449-969e-9965ca85684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bc707c-c1ac-4435-be09-f6c2bba95e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d6ae6e-c422-453a-ac71-de8a4e0a6f2f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05361e-5329-4ac3-a649-2f635363d38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82606c6c-4e00-45fb-999d-e0dea6f4b49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e595ab-1eac-4528-bb7b-cf2e59717c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d49e4950-31c6-4791-b955-49618567eac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b595c3ac-c825-4b5c-9c4b-a80373333c58",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda6310f-0970-4b12-91aa-04402ee5aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437337f4-329a-43b1-bdd4-52c628040925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0f5582-400e-48a0-b6ac-84c92e390331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a67214b-dc40-44a7-b3b4-c6ba6dc7fa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f13492-71eb-4104-88be-1da7ce95115c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255fa61b-d10a-4aed-bf07-6f22d819caf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da100d04-fdc8-4123-b686-4e4268e0238b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d559cc5-ecb9-4553-94c9-0382bbc1b80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e389efa8-01a8-4dea-8fec-3a4249944104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f942023d-9ab6-4eb9-ab1d-44ed40955cdb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8143955-0441-4c2c-af8e-104e0030f41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663b5158-e81a-4066-99d2-73fdf3137b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96080bae-bc83-4657-8c1c-c8f0d05835ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "752927ba-c213-400e-8497-6b0f1543ba8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bb5145-756b-4a34-a834-4c6eda6652e9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640ba60e-38a6-49d9-9b62-b383e5e1cc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f708009-df60-4b06-a27f-8bd855b643be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5276b98f-acbe-46df-b343-ecb539152b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de22c5b8-6091-4a90-8359-af36cd7b4a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa5dc5b-ee05-4574-afe7-95a0046d225e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dce1e8-6bf1-401a-a030-25bc9e6f8eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ad537b-856b-47e0-8eeb-c692ca5772a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f025044-d524-4a54-88ef-b954435d79cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47f83ede-92dc-4f90-8212-fd953d891e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a9a691-e02b-4ea4-aff6-32113638cd33",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7818b42-1bc1-4f3d-82cc-19e55a29c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2775a68-215e-48c4-93a7-b347f3ff8b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62db5f66-99d6-4ef8-9273-06b8e8220ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f839d21-5179-446a-bdcc-6a238e8bd1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57029ae5-00ce-40f3-9843-7a2c563dff15",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00ff712-73b5-46bc-9322-62bea16ee3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c02051c-eeb3-47c0-ad53-0666fa6b2643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5aeda45-1cda-43a1-8606-12e0259d6ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a456c872-9466-410a-9364-f9d9d2405ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abb242a-d5a7-4a06-be1f-619222dbb09f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdce1dc-4378-4224-ba22-157aa9256625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d32e47-3006-4a19-aae9-bd8bcabeb35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c60dc83-8784-4b32-bda7-721bd2432e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e408684-3c21-474a-84e9-41d695b948aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866bb18a-d62c-4ab7-a7f5-ece157b2bf10",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4711ef3-8601-4511-9fc9-6a1dea4f55a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89a5fe8-88f6-4cf3-9a0c-1056574254b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27730d28-f22b-4f5c-ae48-b533a8b1a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f29150-376b-4b27-b3fb-eaa4583ecd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5311c93e-4efb-4839-886e-22632ba9268a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f151c85f-5f8f-4001-8bfa-3bfeac7c2f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bec3e8-a398-4393-8dc9-ea654a44dd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3ca90b-5b6d-4e33-8083-6116fdebf720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0189e2db-9748-4210-9ce5-9c944825d437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466819a1-23c8-4de8-86a3-c3235ee3625f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56969709-9ed7-455f-b9c9-7cb0edc518f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd5e3fa-ccb4-455f-ae9b-8dff5a5dc8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02b5668-060e-4d38-8180-96dfaa473981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffd2c53-5abf-482b-950b-899da0b1007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa4cfb0-64b9-47dc-9607-dfdc768e35f8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e711f97-798c-4eff-98c9-a15358c75262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64da9941-e8f5-4725-884d-d5c2aa60e62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99de92b8-d84f-483c-b411-447678ca896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c153b07-d278-459b-a108-d14ba303e528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9441be74-e6d5-476f-9d83-1de2ec4c6bee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871ed63c-a73c-4808-984a-2b25d2fc509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168e6218-b75d-4c95-a13f-953fed958e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed588c6-b3e7-403d-98c6-6909d9a65054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c47eae-f4ed-467b-8659-ef4096a61457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc82890d-aa68-403c-bce3-033b397de675",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f588948a-f78d-4559-9096-433f9035497d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d616d21-751e-47bc-84e4-c5c99836cbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75422c0-825e-4ab2-9970-8a5f36518f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df8b0ef-84fc-4362-adea-e9ce37dc33e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f860ff4b-8677-4a57-83cf-45812e94dad1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2512c37-9313-4cb1-b7cb-65533eb9fbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eff375c-64f5-49a7-9bf0-cba58cb11067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f113ab4-7d35-4c82-88fd-e046c88a172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "991a34c1-61bf-4971-a8b1-4ece5cd5390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64908a51-c4b9-4df9-bacf-d9069a10eea3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e00c38-fe09-4df7-8900-81e8674bb56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766c7719-b7e6-4cf2-bdcf-7b4bd1ebb310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27091c5c-f32d-4434-96f9-e47b03cd95a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba85fb75-9ab2-4c91-88e5-4a46efeaada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f2763d-f70e-4581-a4b3-497136440613",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c993dbca-4403-444a-b5ce-0d08b456aa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bcc5c7-3002-4115-97e3-edbab798c04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2ddf49-6784-474d-827a-f2b556706938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb0c9ce-0d6d-404c-8535-8ebc7fbdbe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197db8ed-2a7d-42f0-b4b7-d3985134d1d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4507b0-0a00-4342-a3a8-2860f6855e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c197fb85-57a3-48fd-8b53-62615b728e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091361af-bed4-4202-a57b-fa5131b35752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6775b9-016a-4244-8cb2-93d21d1b36ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2500cf-e29b-498b-8a15-92f93ddbe890",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739fedd6-2916-4570-894d-5ec73a3f0941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e8c3da-708d-4549-8190-21dd83df02c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4512ec0c-4939-45d3-80fa-d43c801f13a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "45abb8d9-8d05-45c2-9314-5c6db1533db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1445c331-ad6d-4dd6-ab6e-bdb84a36c0bc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e54be42-9a58-4f7c-995c-0f27bcf4bdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1731ae65-1054-473d-ac39-02c1c258425a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c062a579-a399-48d5-8525-760b22347a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21fcd9c8-a5af-460b-9b37-8aa589df643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6575d939-3d96-479e-8dd6-8d6d4c00796a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb30524e-a1ea-4635-8c8d-36d55fa51e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b74c06-9717-4d4a-9c26-341f447b0ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b376a855-e1c2-4292-914c-b277a3e0e5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f21b9c4-d6f7-4ae4-b642-4a0a6b92f958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0da3dfb-3988-4543-8c0b-8c4842058809",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3effc089-10eb-4a45-99fd-119c96536b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf6a464-01b3-4b69-a813-5d34398ca2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9850ec-a32d-4d76-bb12-2a9379cea440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c4fd70-f938-49ac-9fac-fd86d54c1531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5afa1b-c16a-427d-b3e2-ad2e0ecc3c3e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b962417-086f-408b-be3f-0159110e3f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a415b01-344b-4cf0-a08c-c9f6c2509149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a821c366-610d-4288-8e5b-d5bd31e34b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ac3ca1-447e-4972-af2b-26d840896548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24c64df-5d37-487a-9b99-e3f4e808bac5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a067c830-3322-4567-8676-e1d2476252e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8417247-04ed-4e34-8b07-4b42cfa65520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52144f5-7467-4884-84b7-b74515439139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8f889cfd-300b-47f6-a5e8-2d971283a6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b71ca5-1ca7-4f2a-8a65-2caec187a5cc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f328ba38-c314-4256-b8b5-2dc1724af1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcfe5f50-aff8-44bc-82d4-d07931196aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c5fbe3-bcf7-408c-99a4-df0cbfd41a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d553fca9-e1e2-4755-a147-02ba88806c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981f7f85-83bd-4b1b-8199-1d7ba2f1cc42",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b0ada7-80eb-427f-8f06-16d834d64e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a8da02-60b8-4b03-9b8d-bea0259a52da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58e46eb-168e-4ce2-ac6e-0bfa662e26c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b3acf5-838d-4280-8aa1-2d6361c77879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15a6c54-23bb-46a2-b77d-99a1eb815a86",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f21a729-bfc2-4c28-a891-40bb87240b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7237e72-250c-4b8b-bc05-d717d97c6c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62265e7-002b-4dc0-8d3a-6827c8315ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34c14863-f3f6-4410-83e0-3441aec066ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af4dd5f-5ac8-4fad-bc6e-599d64469712",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2333bbf4-73e2-45c7-8a6f-d30193645b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb317dff-b4a7-43b8-bec1-daaefe79bc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553d19d2-fb9b-40da-bff3-f91bb7f425e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67710a38-30fa-4505-bef8-b38ecfbdc7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f62f004-a613-4105-90a3-d4f45302e67f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c258109-d774-4605-b537-ef6ad03253bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ff5960-aed2-4d25-8cb4-ca19ad74a53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a94c46f-336f-411f-910e-e4035b40bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb085fa1-3160-467a-90f8-d74f9aa2cf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5192309d-59d5-42a6-a1b2-dc7b1fbf35de",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee78690c-69ce-4a96-abb7-96f2b4903414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a71e98f-b565-4d63-8c39-248bc653f8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec9576f-a46b-431d-8d77-cbedc7433f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9da5219e-cbd4-4fe3-b397-7b5a5fc7e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7b4f82-aad6-45a6-818b-3d7a5aaf40f6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24745be2-19c5-436d-9a6d-0c5d8b4c989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8673bbfa-0f8e-429a-b9ac-5322423af074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5377998f-3981-4897-a7c9-b968fd85382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "132021ce-a7d6-4c2b-9d1e-035edcb8e856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57482f5d-c1d1-48b2-a808-23b551ba9d43",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c74baea-0100-4015-9d28-4668af57814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d840a2-6b77-4447-bd18-926f17f43557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc01ab2-33aa-4c48-8884-e3d6fba1eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bc78db-cf29-4064-95e2-176dafbf0216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af241377-cba7-48ab-9890-179310ad4982",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aa8100-01e1-484b-8d63-6e7881f76fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7463d45f-ce68-40f2-b6e2-1603d5774fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c635523-050f-4004-bacd-5c82609e599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "184afa53-1560-4be9-8728-09441ad29adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aa26af-8d51-4e61-a0c7-2a45e6fb5a3f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed6dfe3-42ac-417b-8ea1-9e85a75c4439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6216c498-750c-44c8-a091-27ca5e623016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c0d224-2eaa-43fa-93b6-f5ce08c3a5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcc3068-029d-442e-9116-70d2a50cd626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c1f4a5-60b4-4db2-a09e-d73eb5a3f920",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f891a8cf-7c4d-431d-a1c2-7caceac8f399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34060330-b528-445f-929e-db6b3419be22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e785be0-a3f8-480c-b4aa-23e71c9da195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2380d810-932f-48ee-83f4-fc6249261947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58e6293-0acd-4c81-964f-ed3a72257c85",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93004b09-b9bb-4cf7-86e1-5b7944de4769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2412ee-c22d-49f8-93d2-fc6c004e516a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26053fc3-b71a-473f-8210-ffbc486bdc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f398b42-56c8-4d93-aece-148ed962d4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c5f087-11ad-454f-beea-44321f5b892a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b3faba-4b10-4bb2-884d-6973f522d573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85277304-4e70-4825-91a0-4663636af140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f87b5e-af7f-4ed5-9b9f-adfd2e8821e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97453221-3f14-40e2-a804-08518fb4fdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c573b1c-dc00-4ca8-b8ff-f89854cf66a1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c345fb09-31d8-4bf8-84c2-d64b46a549df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167c65fa-ea8c-488a-8112-92ccdc4018bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed1053b-4576-41bb-af82-0bc7c03a7797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0fc4bb-21ac-4dca-86b5-fd8f83ed0388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1fb4be-5040-4ac2-9557-09fd3a60e9b9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799dfe59-fb55-48a4-9ab4-13489328a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179fb49d-366c-43b8-b968-15f7bc7eaaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777cc0f-99cc-4a24-b017-9d94e86de6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61177756-6b1f-4645-9763-6adc68b2946b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0325b8e3-13d2-4a2c-986e-8452f5dffca6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6589048d-e126-47d6-b311-07ed824ef21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6189c82-ea77-4c23-bb07-43da17dd6de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a380f3-edec-4bbc-a4da-35233ed36d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a597100-710f-4eee-9bcc-2efb9b31c1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ffeba5-5673-4fca-a5b7-14963c0c286d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7be250-30c2-4760-a7a6-3e000db45223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f1653a-6848-46e0-915a-d46effd2de96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d82b10-f718-4417-a13c-83542a7d0327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64a3fc8-d973-47de-9232-81410b9d2f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08521f4d-2f40-4abb-b022-f2250d09a36c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dba3f8-1af4-40a0-b87a-84cd1938e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc3a730-046e-473e-a235-9cccd0db0ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d126645-587c-4675-9b2d-89484c06483c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5125e9ed-6f07-4f54-9325-eac13479dde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6234f107-5244-4df4-818b-ff8f242feea6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fc3902-fd8d-4053-aeed-8ea7bfca6967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe651fb0-8aeb-4f31-93e4-97ff6b0f7b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf781fb-9a7a-4bbc-8ed2-0ef9cd3152f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ad30d2-fe02-4f46-97ee-bee72208ca42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a70ef5-e557-4eb2-926b-7eceecce1196",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c85ba4-1670-427b-beb4-13e7eb3eefbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbe316a-839e-4f7a-8c26-44c153c3603b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9341922d-5f76-4884-8cab-1019e2f587e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17b27f01-5da4-4dfc-ac37-2b3a39f9ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f5650e-2d0e-4845-b3e6-6704922536ac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e25d09-1665-40a4-9a36-ad8cd30dee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4600ebe-a101-4799-bef3-34f2a0fd0e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadee93c-b437-4bdf-ba3f-cbb79b91a0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b5719aaa-d95d-403b-b43a-18a0b1d6cd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafcd3ed-242c-4c24-91e8-df9101a7e2d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e29007-8dbc-42eb-affb-de7483d36307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2aab9b9-9968-407c-8189-772495f1d79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4135147c-ccc1-45c1-9f33-06399b22bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cffb7115-9395-4f21-a8c2-5a37d8e62467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c92270-87ce-49be-ab58-d4d577c37986",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67487317-937e-4d5e-8ee1-ce5ecfe3d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e1cba1-c3f8-475e-9885-096ab14db240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bb2924-72b1-4685-99a4-91b2244a3f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3f86c9-497a-4b85-bc9d-4cc758778e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dac77bb-5f47-478e-b3fc-498621eb5d93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141a5bab-1eb6-4d4f-a2fe-9755ce686d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0227cf35-56bd-434d-b74a-64814589a114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b0fb41-fc80-4dc4-a3ab-7c56957f9a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "831c60a2-b7be-4b2d-a931-58b037286ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4521bea-8000-4fff-9a9b-a50fc28d0158",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96227873-7152-4f6d-8395-e0d364826db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb404614-761f-4ed6-bae3-dbd268421c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a237e9-42be-4a6a-9bd9-22f497ffd775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3f5e58-653d-45a3-9721-67c1c425738c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081157a8-a462-47b1-b98d-7836abd9bb81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7027842f-f101-4a53-8407-9310b96f58dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73941171-7d8c-447d-8614-fd7b70889d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1abec5-b2ff-464e-aaea-be4b8573dd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1472da-0318-4434-a1b1-34445bbfc332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394fffaa-79e6-4b15-b8a5-70bbf108238e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8215482d-47cd-455e-9035-3fb1c6e01e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34515eca-c8f5-49ba-8a74-d77e4e8817a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d80001-0005-475d-82df-a8d29d1c1893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e378a358-03c2-4a5b-a697-014484fdb149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d1b283-2fb6-43a4-bffd-ac6f76d7711c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef13e72c-90f5-405d-9408-1aa85565cf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bd3a71-3f67-4966-b751-4170228cafb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc5a290-87f7-44f8-9775-87852dce5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4146c4e1-4c1c-49f7-95f5-48273db3189b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c46129-5157-484e-9420-76dc56b09c28",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af780353-8ded-4276-9fb4-fa70c9284899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b13cb13-7119-4347-9faa-75d97e67edc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21fda95-b163-409c-9c92-702f995d076f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fddccea4-5953-4f16-afdd-93e8bb115389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516b2ece-fbb1-429c-831d-2e68e2f4ddf9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224e424a-3968-45a4-a1cd-b9948bb338b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d0e8dc-8c7b-4498-a3ba-3e5dcf2419f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37da52e-82f6-49fb-94b7-fc47dd72d33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea3e1f9-34a1-40e4-b57a-b860bfe1e281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1c1197-98da-45ba-a1f4-7eb722b208db",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ac7972-7842-4eb5-8533-aebfc338c720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6093c780-6a26-4316-bf1b-ca0c440beb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa58f5ca-c557-4f11-8200-779240a9a3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "787ac4a4-fee8-4e60-8a13-45adbfb0bffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9068ae8d-af24-4ea4-b2b2-16338f41f7fe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b820f1-db7b-4456-a156-3fe6c8e5d5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4f86ea-804e-438e-aeda-968fb88a9c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d6614-3160-4571-b819-fc1aef2f30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2bb0ec-e587-45ab-bba3-4331d1ce18e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e307964-be96-4fb3-a818-efd47a318f27",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc6e59b-1ff7-4eef-b1c1-5e15cd7cb502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a12191-080f-42c1-89f8-26ab3e7c43e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451b5090-c5c0-4387-adbf-cda6d59baae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "037299f3-869f-426d-999c-05d8b2820806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b913df7-4d1b-4c55-9650-d872189db8bf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68810a13-c1df-427a-b67f-d74f7fb8547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e673c9c7-b663-481f-8edd-ca6e57af1dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbba59a6-3d22-41d7-83c7-f58547b19369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd5e6c1-1018-45ff-a0fc-8cf378418b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98339454-0911-4fcf-8253-55e5887d3ec4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fb156e-b00e-4386-b146-f7a8654bb9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845f4d23-0820-4d74-ace4-9ab548c00ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99f58be-872b-4ce9-a7bf-56ac21136291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03679d71-7b91-48f6-97f0-55bf4fe22394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd11bf3-ab98-4c90-bb72-bf71910be1a8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daa8a7e-ba86-451b-8576-ecf8cb8b422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ba340f-f292-45d3-aa60-4a841ea13e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fc7e35-9a55-453c-ac8f-bbe02f31aaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06cb8e6b-3cc0-4948-bef1-35cd61016e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ed8089-f25d-4f86-a308-e7415d754861",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d948e7-be2f-4327-a60d-14a747c32860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd6ba88-c51c-4c5c-82aa-9a0e25edfa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b3df7-fb14-4610-a733-dec1c149168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a994b94-a8df-44ef-8e6b-845bb1d1f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252bd26f-d883-48f5-b45b-55fbceab8bae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272b1e18-7d10-424f-9c4a-29f8231b32ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d485158c-91cd-4baa-b814-46518807c011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfcfeda-cc17-4be1-bf82-f7bce67d1f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0777555-2f3c-4d01-9d66-ddb5ec26124a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedbaf75-c3f4-4e47-b9e2-191835931bfe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e463815-8bce-4445-b0d4-51c3e7c422f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b0a207-07a2-4ddd-8b31-297b73ab6ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5414e35d-3750-47a3-b428-a2b47a66724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0063695c-c609-4676-bbe6-f8cacc41d817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e52e1f-67b9-4316-90f4-df51b81c6a09",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8883c98-7ace-4fd4-837a-6250d0814c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e352bf71-d103-44ff-b839-f733693dfa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c784a3d4-5496-44b8-9819-9e7dd0c2954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14459e48-48f9-4e1e-af82-b9076a3661ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f5f7ed-62a0-444d-b28c-8f6eb8c56cfa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfd0ff0-a7be-419c-8796-b23c2401561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc09f23-3356-4c85-ba17-33ec04911c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289bad9d-ce84-407c-b3d1-5c11f9d825be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e38cd74d-7f7b-4d7b-807d-fcc1a359577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ed226-6556-4d9f-a831-a3c41108269a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85cb292-5d87-424e-9e31-a23aa127b604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0810aa61-343e-4e08-8628-2b361e4e3bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18809e9e-02e7-48bd-a947-71bfaf0a8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce01915-653a-4df1-91b3-b8243505f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f7cdc-d6bd-485c-9b9c-ae4e64c84744",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d44021e-0864-4da2-b02b-128b09bc95cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2501f791-26a7-4f4f-9cdb-cfd187657ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a8ad0e-e7b6-4f1b-83dc-697b9c6515dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e7b15e-fbee-4844-b953-29277af168b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde23d95-8605-4221-a679-63fb8575ef78",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f2ca4-a67c-4974-b9dc-61a8d516f168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604e3231-42d4-445f-8bd6-34d78f033cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dad45f-bba8-4512-a6d4-8c845c793cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec6a5e7-2cbf-4b7f-bf47-7439116b414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645335c8-419b-4c5f-b2f4-aa083d0d805d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0ba92c-0c73-4de9-9beb-38a64bc272f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f9bf19-15e4-4ebf-b32d-82b51c5fa409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7df331d-fe4b-48ee-8b37-82dc702e5c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faf1a439-a337-4037-bd5c-91dfae825fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ae7eb7-2879-4f00-a5a4-71a7f3d25693",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843d101f-d10b-478d-9169-7a4b608d4799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54f282e-3960-447d-9796-6e7df47a0202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a2015d-c5d9-427c-9b61-0d74dfb5050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aad1cb7-ab81-455e-8c97-f472a3766c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86834693-127e-4452-8425-9a0e04ed2a69",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf89a4e-4596-4dc2-9e32-3f2ec0548ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97f7557-10b6-4007-a035-97e4ecd3cc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fe281e-f834-4304-94dc-f2ff94d83a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10f8a60-41d3-4a12-983e-111e5e037b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6d154f-2929-4f58-a7f7-6914f7ca7f30",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e88211-9f11-4345-8c08-c862cb28af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab9fe0c-5f4a-4fb3-90a3-50b49614be03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077b5563-9a07-4673-9581-2c88f32bf010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c65ea5-9fc8-4d2e-a8a2-d93286842eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf38f75-2ef0-41a4-85d6-9017170e4084",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a42c3c8-5865-405d-b10a-619b276c91b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603e569b-061d-4012-9d42-ef5d1bbf4d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba4b1a9-0e6f-46a6-9ec7-ee22ce3463ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e07fda-c8b5-4e29-85fd-90fa497076b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02863755-3460-4b0a-9070-a895b16bc870",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce842e98-a893-4a7c-bb78-97da35a80120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8bf0fd-633f-432a-99da-55fa4a7786c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c750f9fd-057f-4076-800a-bc09e7de9e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "198a6498-9101-453a-a630-c51e60acbe9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6df0134-ff79-4247-ab13-3dd6ff94ffde",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71d42db-8cea-4203-82b9-60faa1879b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff87f07-f99a-46b0-8eb9-857e45db979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc558dc5-24e5-416c-99cf-7a88d4860bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "342331bb-3303-4140-94f8-4f507e490e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e443774-df6e-47a0-baef-65de9c4f62f4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d4ccf4-0a5e-4fba-b87a-aa91a3995b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8ac792-c207-40b2-a01a-7ff5ef4e5ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e9caad-4608-40f2-8369-9531832f6e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d772c9d2-c060-44eb-8159-4f6a923d022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21964bac-c862-4e37-9ecf-43036e0e4833",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8259ad4-d2e8-4b40-bdca-a047cb7e5b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3612680-ce61-4124-aac5-8e68cbc09406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c54c16-5548-4949-9fa6-e08672a7c1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a63ce6-6d24-456b-bcf2-ae9a96d0dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c85086-7a48-4e71-86e9-bb8d51abd091",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e8f57-d5c0-4924-b367-09350fd2b684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912e793a-1f68-4109-80fc-02ed40be79b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c7d372-c40e-4361-afec-2c4e21623b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e63440c-96a1-43e3-9b73-22ea97ed0824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4963d3-19c7-4cc1-9157-2171f604c2ca",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e6cc4a-3c37-4722-8961-c115fc86398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8479d1c4-980c-4999-960a-dca3151c0d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f06155-9ecc-4968-b6aa-a5db45d61eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b7cfcf-12c7-49a2-b283-23b0b9cd05c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdeaa00-7fcc-40ec-8a0e-26f8995f2470",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59de6761-c7ed-4624-8d1c-1d41e254a3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce08f319-a4c7-4b0a-815a-3d5bfdafd9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52cb92d-0c7f-4756-8e7a-36aa171ef9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "583ed003-c2af-4a3d-80de-48e96c59bfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9809e93d-e1ea-43ba-94ef-5855406d1c1f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e52d40e-7d6e-485c-9866-58a53188ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f2ccc1f8-d37a-4eaa-8123-718055afd429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50c10cc-273c-4f34-bc18-425baf7a4c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d60d810b-031e-408b-bc93-24698d40d76b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "232fe602-9a73-41f4-8ed6-bc9406334446",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f38a088a-e11a-40d3-9237-e8d0c9d87f6f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e59505-3549-4f14-9d59-6b72f227afe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61fefa55-81a6-40fd-8517-723dce2d9f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf371a87-0320-41b4-b3c2-e7c2c7f39638",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8acd9f34-4034-47b9-b340-9ff544d7e749"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "227491b8-5362-4398-8d68-ca2a0b507def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e4eb40a-7fb1-4ca4-8b7e-d545764bea8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d0b28b3-5473-4dc5-b1f8-3b9927b1b89c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2298e1e-436a-46b7-b043-e843db9a66b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ddf2392b-c851-4fcc-8a51-ccaccdce959e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f65c5bed-0299-4b78-bce0-102fee4481e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "594805b6-f091-4239-8fbf-2223fe7fabc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75f508b4-6ab1-4204-bc85-d5610aa64c49"
                }
              }
            ]
          },
          {
            "id": "b2c8c4d8-b895-4158-9401-51801a566053",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d1d0faa-d62f-45a6-9076-e33f5f1ef64a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bee619e2-662d-4f23-96a2-82a73198e042",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43038ace-fa6b-42c2-a163-ff585c92118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "572f4a0d-2f13-481a-9b5d-0cc8966de616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fabece-014e-4585-92a5-746e36306146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3435e7-1a00-4bdd-b5ca-f9c3e09233fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37f2f211-e96f-472d-861a-d14b27e9db84",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfefb8fa-de69-4660-be00-a63a12c46a9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6969e2e-e967-4da3-9f4a-9ee1addc31d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b66e96-36f9-4b10-9d35-43dc209851d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5293ab8-30a2-449b-9e2a-135b67454f17"
                    }
                  }
                ]
              },
              {
                "id": "ac317576-5be4-4e47-b835-eb6aed9294f3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a8962fd-24b1-440c-9f55-29d751576c82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f7b02a8-2eae-40a2-a4a4-fbf1d21db1b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35a35890-695c-42be-900e-c1fd975ced16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33d004a4-5da7-4175-ae41-36ae635d96ce"
                    }
                  }
                ]
              },
              {
                "id": "a4daf175-fd74-4e08-bc67-28a5039106fa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca8d8fcf-e926-40c8-a18f-e1d6cba2480e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8a932d9-5386-4860-b85b-e229cc59e704"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2172e511-5450-47f9-a223-ade2b3030e98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71f40aaf-2ed0-4c32-bbfa-2c6ed401431c"
                    }
                  }
                ]
              },
              {
                "id": "cbe0a8af-5908-46f3-9989-8555bbd6fe13",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f64ae2b-7756-4db9-821e-023985e13c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4725d9a9-e741-4259-b5ab-51d443a55d09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a209f1f7-5431-4e9a-9e13-b418e8e070e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7990a5a4-d2c3-4ee6-bc40-b8b779f09d3f"
                    }
                  }
                ]
              },
              {
                "id": "58033948-1045-4b96-8b64-802f13ba1d59",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed1724f4-24d3-4e0b-83a9-ffd89f2eb19d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3f21863-82eb-42f7-a103-0dca1ea94e61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a15f75b-20c4-4339-93aa-ab14f3141160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fef621d7-8de3-40e1-b1a6-ed1a48e36091"
                    }
                  }
                ]
              },
              {
                "id": "f65dd4ca-0309-4762-8400-efc8fe7aba48",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8246650f-62a2-4ca7-92a9-b941a74dce62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4276a95-10f7-47fa-b574-028f1b741e80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df3f879a-12a1-4ae0-9fb8-f3bc79c30b05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71cc36e0-40e4-4022-bace-a444c5e6e811"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47c7bdab-85eb-46cc-b0db-fc745ce21f0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0ef35b3-b3d1-404d-aa87-6f23dd379a84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c1fa022-6bce-4cb0-af54-6396643f4a07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10db6d28-a592-401f-a653-116205d48a4b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abb0f394-3bd8-44e4-8e76-ef3b55da1a78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8c4db7f6-0f19-4dbb-8420-fa5c19b17662"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb494e97-800f-4c8d-9f7a-b1ffbdfd489d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0dac648-d211-46ca-94e4-4e35b9373166"
            }
          }
        ]
      },
      {
        "id": "38f8efe3-1c75-466c-8fba-7046cbecb15d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "486834dc-df83-4035-b06e-4f0065d377d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fc5487f-2310-4ce5-9b4e-38eb0e800538",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f7a462d-3b29-48b1-9f60-451376b2db09",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36942cd-175b-4803-9852-1061dfea5b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125ab690-022d-42d2-a243-4b8f1338b791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2905deb-e071-48aa-8eab-db89e26599a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e131bb-55ed-451f-a2a4-179e12d171af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190bcf9a-8b4f-4c9e-b9ac-8d077fb47b45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dc46f3-eb40-49ce-a83a-e11506785ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae878c0-214b-46b1-ae4e-b6afed7d3356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9abaa1-9da4-4fb2-ace4-56fd21fd450e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01c072f-cd28-4516-a39e-4c79dc733114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a9edfe-c2f0-4d10-8336-5ae3cc853aa0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3539d6a-a324-4d48-a393-1b841c50431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f20c481-c7ae-4b5b-87d3-8ac14764aa12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca35112d-f881-4115-9bca-d0687be2505f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f87879e-1124-45c8-8e0c-e2acd0330398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baa52ff-7b1d-447b-a10e-92b93133e6bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0dc8e7-9905-44e3-a1af-e7c7608dfdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3141bce-4134-498e-a956-1be943d7f758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738772ac-a4bb-4382-a040-947e889ff101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42eeeb22-6dfb-48a0-93a3-924774da8edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc998ea-d806-4ce1-bcf2-9b6f156c8ffb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb753658-74a2-4a6b-9995-c321f86d5047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd0e7c7-b5d4-4362-8d50-60c392a047a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ebc8b5-0ac2-4e1b-bdfd-bbbb09fe1b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ebc780-812b-4fae-b5e8-db502769ab09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c2d299-c8a6-4ad6-b1e5-b6b3e2a01fb3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8c3598-8e96-4fe3-be79-68b8d5e74655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cc8573-4ec0-4f8a-8062-6f5468d29050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df112d11-8b0f-4e93-aa17-1fee778c2689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce6720d-b35c-434d-9aa0-2da1ccc134e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ee7969-393c-46bf-b2a2-46a598407cb4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5790eb10-c263-4b11-8fb6-800c95959bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb572d2-f9a1-43b8-9387-49ed219d3206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94b9825-86dc-4a94-a0d9-e5f28aeb843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07f0b4f-9bfc-4b74-bafb-89fb22aeb2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eda21c4-85de-43f7-a2b3-db830723acd8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b33f0c-b72b-4204-8679-828cec28cf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b05392-a5ff-4ad0-ba1a-bcdfe433150c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceac8fa-f6ee-4dc1-be39-722ea3683188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "426f1a53-7eab-4ec0-9196-8438a3eb0b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e6411f-5a74-4dbc-8233-a06492eb4e0e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daacbfb-7369-4e36-b257-60f40a16af9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f195474-0f9a-4220-80be-5a458314b52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c14ea6-34b2-4b9b-adfc-397c29b566b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecff7b8b-3c7e-414b-88c7-8df23a64f69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd43af7-ff8c-48c1-ae12-8f91be853ee9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e004cf-cf01-4e3d-bc98-5e132267389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a20e38-ebeb-4168-bcf0-eb811c8bc470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8647f4-2ab1-4c82-a7a9-8ee64fea3881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f37b75-fc25-4dcc-9694-d3fc4dd1b6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac3dcd2-2779-4c73-a13c-528fef7e2e75",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb79f234-1207-44f4-a843-8b48c5e5bd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08bdfbd-0d1a-4044-9cd3-b36ff7300814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f00a69-17dd-4bf1-969b-babc1a6a1aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b73396d4-ca25-46b1-8737-2c3471dda205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c45c70d-6aad-4e32-8d3e-cadd5371a0de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ee859-7465-4c7e-ac7e-c2327f2961c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2573e5c5-90d9-4dac-86da-0ef66bf62694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a632b-c69e-4056-b578-2201719ae859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba826598-ee36-471b-bf28-518bcbca8cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07614e88-52db-45ee-9678-360919fd4aa8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ad4ed1-0cce-4201-93fe-f12b54d69e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81944c7d-af87-4c49-b1ac-d2b80243abc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99243cbd-0903-4d4d-ac3b-087700bbc188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "387942f9-d1b3-4f64-b25b-d283a222d637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab0d645-eea3-4508-b30e-923c3d0b20d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e5e7a-96ae-4192-9b64-f0901deef8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b3158b-6d0a-4bf6-9b16-34f75f0c47a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd5f185-8e8e-4849-b32d-e71fb7733d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f21b4b9-dba2-457e-9f99-0653b3b34702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ae656f-5c19-4d1e-8da8-6b03ef117a88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb279082-6eb4-4a0f-8e32-bbd08154cb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca3bfbd-13ec-4562-a72f-33b3acf6acd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73b25d2-ddd9-499f-98fb-37787b45ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b4873b-4ed5-4a63-bb97-795e66e5f73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ae016e-a513-4d97-b874-d118153b3335",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2360ea47-ed4f-44cb-81f2-0918f50cfe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4578e5b-9779-41a5-aeb8-0c162d730e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e1c0e7-e597-4c20-b513-afa95740c090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e56a4e2e-4340-4edd-8b13-90023c10a7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39d81ca-32a3-4e90-9ed6-2b39d7c11f95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387ec0db-5453-4ea7-98f5-c8c471e7b8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea351789-116c-4ce6-9c0b-e2eddd4a0b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6c141-7f7f-4fe5-a5cb-b8368e0d2be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8489986-a0a6-4596-8a18-5ef8e7ba040e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d210aef8-a3af-40cb-b76d-d2990bb69cef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4fd267-e981-47d1-b8e6-1139160d4f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72aaf4a-e574-44c8-87a5-770441ef6f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7bd28f-dd85-419e-ad5e-a8fdf6c22690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "370b57c7-3285-4076-8723-c6c1eb7cf83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95f0bfb-9e71-4338-9f41-996e37a02c37",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e4c5e9-f22f-44f1-9403-9fd38b961137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2aa0075-4368-4a5c-93d6-9cbae664356f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452b0444-6af5-4571-8ee0-fd25289b65de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3046648-4ed6-4522-aa08-29237229782b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e49a7-823a-4c4c-94fa-c21147aac162",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f978350-4b04-4bb7-b6b4-1a9e0349d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c14e61-34bf-47ec-a0be-bf0f31a883da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ef1d74-900c-4266-9118-d224eb302932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c3aa38-790a-4963-b78b-89b20672d252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d9ae14-2c50-4db6-914e-45c97ebfd9eb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ed2884-61f3-4e41-a739-19344cde7cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566298a9-361f-4f3e-be66-4db5444a2f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d22a6b9-b57d-486c-8ed9-0c740f5111fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3630143-fc5b-44c5-82fe-761f6854782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a37a2c-5ffe-4271-bb6a-e72303adcc6d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d738b7-d283-49d4-a385-23abed58c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b9ad3b-a225-4bb1-b636-29f00361eb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e91bf7e-514b-4e53-a736-b786e383e5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4312387-eeb3-449c-954f-0e5d69669b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cc8861-3705-4ece-874d-0f0eb9bbba1c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed11c438-f8c8-4ca4-9ae9-e7d61e494c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe27df6e-fa2f-4cec-968a-0b00fcd3e478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0387861-38b6-4442-aca6-2b9d2d8e0e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d4e4bc-7658-40b5-96ee-abd4e6bc07b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2783a8-aeb5-4e46-8ae8-0d826fd3b75b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1853bd34-3340-4a79-b972-5508f18a0017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ba8709-eb27-4fdf-94bf-e9136faf93aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fec6677-af19-4752-a5b8-b0263be42976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36f2213-44cb-4bc8-b4b6-903406a8e7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a6d52d-bc6d-4da3-baf9-9230e3d1eaa3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c380db-5c30-43ee-8fc9-079776e273ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3078057c-ac37-4104-955d-75d1f39e13c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce858138-34db-4fba-9fe8-a6685820303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ab6710-1b18-42e7-af6c-32b0d5ae5373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea59694-2406-4bb1-ba1b-2cc9699747db",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74756b1c-78c2-4a03-b730-4c59912ff6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d20ac2e-bbaa-4749-b7ac-d373f0299924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a530ab-f87b-4ad0-97b9-ecb75c2c4b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3231f4-e109-4573-bccd-0106c4aaeca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484840d5-abc2-44e3-b638-2cff5c5cb693",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99ebc5e-e6b3-4a36-a902-7f2df83e504c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14abf60a-9c49-4895-a711-f302b6cef9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee1f52f-e8d6-4ee5-9945-f8c988a128a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc6c564-93cd-4ab0-9027-ad9c8d55c218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77157d60-7491-4368-b581-f608268a2f91",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae1a644-229e-4fa8-b7fb-48e3546e644b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7457e145-f543-4efc-a574-b929f148bf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d1f0d6-8f1a-47f7-bbfc-878a46f2df31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1649ef9c-4337-4dab-8905-c7318a34858f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1168ce97-18b5-4e7f-b07b-b35c2d927f99",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cea52b5-a508-45f1-895c-fbe3fbbb2377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f6e7df-6cf3-4531-a4d7-95bb8b93170e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c48109-43d1-43e2-9b7f-1c756b8e60c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cafbb403-a049-42a2-9249-d8599c38c046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7355263f-6e8d-454a-b219-a46992322c9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d68a6-02c9-43c8-b43b-3483c5b8c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176bd08b-dc31-4e10-9e88-2f266baa4417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a9f229-2451-441b-bb5e-d29d1fabf15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c5756c-5d93-453c-b6f7-c6cbd7d4b487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53d116b-cab9-41ba-b0b7-7c39c5cab414",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c385a6ed-f917-44e8-9588-1b20aa600067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c594fe-9d4f-4057-b261-bba4ae32048e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0649192a-afc7-484e-8d16-b0033dfb8162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e5d7ed-1f40-4019-bab8-33e964147362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4010420-6ce7-4f26-925b-a7ebf853bd0b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f7594b-79f2-4213-9788-2e36dabdd62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0193b3f6-000f-4863-950b-c826fe14fd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41792cdf-28ba-48a2-bd2e-5c437b57bc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8daeb0-c241-49fc-bbe4-f3650a93b1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8c077c-333d-4418-a419-c7052dd31d2b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6385935-93a5-4e12-8485-6209966dc43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3899de-aa14-486b-9c47-f91d4ff70fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ba81a8-5b61-4617-87f9-eca9fc350a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad624ba8-2645-4ea0-a4e6-63d993cd39f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f249ea35-ac1f-4a8f-a10b-69a19c6dca43",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da0c61f-e99a-421d-b502-fbb69961511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2388bfac-43cc-4dcb-a227-105a93c65cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71cf96d-8c7a-407c-9c51-2833b55ea461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc3003c-294b-456c-98f7-4c5b89d6b1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cabc7d-08d2-42c3-97f7-d953620f314d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d30ead-d1b9-4acb-9e49-2b335cd64819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea83095-eccf-46ca-b422-a99dc38adbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29b7557-a75b-46e1-8d09-ded895c70b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f17c48e-63b6-47b3-bb8b-88dbbb2cf52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f12c667-bdc9-4e50-b3eb-bb22e62e012b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea7e647-fdf0-4d45-a169-74b335411a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dadce16b-9576-49ec-9c38-3a6e70baa8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce06de-7d21-466b-bf09-7a66620bd357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d250463-60d2-4846-9012-4512b2b1ff7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8b291d-dcb7-49d1-83b2-e980c1d6ae86",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d669402-e318-4078-9657-85a442e68fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ade51d-b638-46c1-a765-3f911b014f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b63e4d5-b657-4ee9-ad1a-e79f2a2a0ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7062e064-eeab-400f-a6d1-f5570dcada5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e451a427-a7d7-423e-bf7a-a218ddcf347d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "695abf90-aca4-4dee-9361-1485d8336711",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adde7ca5-c0cf-4e0f-8a74-df0236ee9846",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "954d7c7a-0a5b-4a04-bd77-5280e36803a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749a6680-b8d1-4075-8105-409782b648d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac0f0778-7d7d-426e-81ec-2c7205406cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c18189ac-a876-4902-b4dd-bcc163f5603a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b785566-a9f9-4042-ba79-4905d632d46e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "469e4cce-eacb-408c-98cc-95d099d306af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf3fa0a6-6c2b-4121-b0a4-8e66cae552b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a98f596a-c974-48df-930c-5b4921474b80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "683a83bc-a836-43c9-9f21-3588e7f3a353"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b5da78d-4938-42f3-8934-3f472100d212",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "922bdf43-1763-4c72-a6c0-a1eea6c52bba"
            }
          }
        ]
      },
      {
        "id": "ff0be3f7-7be9-440f-9161-3189c74014b4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6e0dff61-5fbd-44da-b9c0-537621695d53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "367de59d-6cae-4b8e-afbf-86b8df9a0f82",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56a4b780-6da6-47d2-9589-eda33c3510d3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463ad5fe-3bb3-4bc8-aff3-cc463eba5025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c926bef1-6f24-4684-b8ce-2079e3777e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9086b23-5092-4410-b505-9422802bbb02",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479eabf0-4837-4e02-a0e3-a0ac9ea15fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a41917-0785-4873-a4e1-5376b38ff167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93d7388-b3d6-4f46-9ba8-a25da383756d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04f8a48-a6cf-4f82-93f6-cb1e8323971f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977a639a-65f3-4995-a8b6-44afce14c994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae2c268-6d99-4c7e-a9b9-30181bc60abf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c06961-34c4-44f0-8276-01ab2d519126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeba1f0f-14ef-4060-8871-c4331f534b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc0f8b7-fabc-4629-bba2-f6aab20d61bd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfd246f-da0a-4c86-98c3-5f584e9faef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac66bfff-b626-49f5-8df2-363e9c93b6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685c4544-86c8-4c1a-9181-034b81eb282a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecd84aa-cc0a-4cfc-a592-13f9f870cd6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb8a6d0-4289-4e7a-8449-29e99565b436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7b66bf-5dca-4c13-bbc8-c080be998395",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427dfa63-678d-4440-987b-ef13ab581dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea16d0b-2e34-4f57-a68f-f3e75e6e88ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682a5b6-5a98-41d1-8d51-080a8900a9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f5191c-afd8-4645-9e9f-f3aa094c61b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfc0484-aa1b-46ff-91c6-5e6019f69d3f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594a334-2012-4cb2-95e2-334dac0cfe5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3f1475-85f8-4a1b-b0d3-b860417636a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bee4f2-18cd-413e-a835-3ef7f04e8f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f04f25-79f0-4cfe-a7c9-6c8cac2279a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79c5f08-0e4d-41f1-b937-31b8703cf52a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f5f2f3-71c1-4a02-8946-120b6a9f3c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e737f5-0d9b-466a-bff9-d759a77fc76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469bb910-790b-446d-96dd-1e1803c535a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef829dc-fe5c-4f55-8a20-fb68e53f62f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae83e43-464b-4c07-b280-736faf827074",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f062a0a4-5c5e-4890-afb2-1a7f98022950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c8973e-52ee-4db7-abd0-20dffc0e1663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d66ea2e-b8d4-4fd4-8dd3-0f2a8e17c447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30cf6aa-411e-4e65-b668-75d4fa70ea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daa5544-e38f-4da5-9736-b711b8563dbd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b11133-d80c-497c-9754-529f0fb76962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476bb933-e571-4b35-8577-2f8eeb93fccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5cd2a1-6841-4b76-b897-25fa60d4ba7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424c2450-dc44-4b3c-88fd-9b7fdfcf0624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4695c9-70cc-4d90-b353-8ed508fb45ae",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaf0d7e-d007-43a6-8b1b-b3d4793bbcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ac30f3-25af-4f4d-857e-e1fb49651319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d0b176-38c9-44ec-ae9c-af3efed0e8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3277dda-c402-440a-9a55-0e162141ed14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3b9e1b-16db-4a4a-8350-9310f0bc3508",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2a941f-46af-4d47-82b2-01be3a17d75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7993876-54aa-4371-91bf-2a424308ea3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65856868-ba23-4e0b-9f20-cf06515cddcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5c2582-17e4-43e0-ac4e-dc7a2bea6669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69664c5a-6a9b-49fa-a35f-bda004a2dbdf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbfaeae-e4fc-499c-adc0-8f2b1372d24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa286120-bb49-4053-b9b7-051d20ca1457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba8f14d-2102-49b7-9bd3-afcb867d0db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534a571b-794f-49a9-951a-c63f2879f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a1f50c-095a-4d37-a377-671b5b7fbafc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1434417a-4e53-47ec-a7a9-2accec95107b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cce601-4725-44f6-b259-108befba6023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40074eb-f69f-4c37-85b9-651650be8aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcc75fd-e705-4aca-8afe-a0b73c1ac72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4222ed3-26c3-4587-8b15-600db093de08",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe70741-e2d6-4b71-9436-17591acc0a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a1f544-219f-445a-91b9-4945d1ec5182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0797448c-7fbb-445e-b959-7ba5416a49c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b087b57-84fd-4848-91e5-e4545e7e3307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139cc01-e9a7-4f9d-9dd3-be9c75d603a4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c204993d-7975-4878-ade5-806e2b8255ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c8407f-3b65-464d-889e-3e15b829ded6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d756942-5ff5-4029-9245-28fcb43d5270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54be558-8caf-4254-818d-9b6d85f7f950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea71fc-5806-40a0-acf3-b6a22ad4719f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab3e82e-0527-4eb2-aae5-c3df0e5bb44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4eb7887-6b22-43f0-9824-08bcb2e5aea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe3c5fd-3a07-4a19-b443-64655a5c986d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22458ea7-6047-42c1-8357-6e09cc91652b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7c1bab-bb51-4bcf-aacd-c65905c39d3d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3fc7b1-24e5-4705-8a34-903712678d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9627677-5971-4479-8777-e77f9978d33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf6c130-5795-4ea6-afbb-137f9d2588fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2e594c-9bb5-4e5a-a4cd-6014b5a10e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c9d78-46bc-4af9-8e2a-22be95b98eef",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbefdc58-1497-46e7-834c-ac186e3f865e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e9bd00-bc49-4877-85db-e12f320ecee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07ab35f-f871-45ed-8e36-ed70d2a55931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eef1840-56b3-48f3-ab29-adc92a4f5bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837e5b9f-55a6-4f2f-98a7-5e7be918f163",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acfe3e3-7e8a-4554-9144-927b69146ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9581e0-2e6a-4192-97bc-fd0991bf1015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb252df7-8a2f-4c5f-89f8-4a2983f5db5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e921a5-28da-46e3-ad7e-14d56ebf8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c87e62-7da4-4d7d-9600-d359f8bc743a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92df24ab-e0d6-4b70-87b0-1360f1755a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8835de-bd42-4e87-8cdb-a8964fbb2375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f19938-1075-4133-8248-e5a6d40f1812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f01e1a-b450-4c68-a6d5-85e4bd3f451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6274b156-d50c-46ce-bc1d-8da9a26ead8d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00963535-209c-4f6f-9f61-121d4502e467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e36484c-4d43-4cf1-aa91-768217e22285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50359267-b4f4-454b-ad49-a8d9b3cf6642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e454e2-5ba3-4730-99fe-4a5cc608e3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aea2f9d-e317-452f-8cf3-095788dcc386",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20881d4-3000-417b-ae1f-0c65ecc4067e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48624047-66f1-4772-bd1f-d58a6cb17a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4cc3e1-0051-4c0c-95e6-9ac74cb251ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8565b420-5a99-45f4-a64d-e93510812ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae621cb-ed30-40a0-8686-56ca8e9fd8d4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db89432e-26c5-409f-9bc5-3d8331211cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6bebe2-89e0-4f1b-94d8-aea1a319b8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae8a5f7-dc18-4b1b-b9f8-630e078efbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392af20f-c9b9-4bd1-8024-78de89499484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728b72b2-695b-4177-910d-f5f70446a941",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1acb356-5cbd-4f38-98c4-ec798e6f1f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2563a981-0252-42c1-9005-3792661fba22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f95cfe8-a6ab-4ee0-890e-ebef94148b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78fffd7-5cd7-4f9a-b014-20a6bb73b6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1864eaf-d041-46b2-ad95-e30bddee289e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b695c8-fd72-4bc3-be19-71c8eb6e9806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28b35ee-22ee-4e5d-b65e-77ad2a5fae16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5379e6af-1528-40ca-bc72-cffe7c6b2ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d451c2-171f-4dac-891d-2487dc72f767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cc331b-29f6-4e56-8cad-78c60eb45c28",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe94d89-ef69-4254-bf75-8700e9d5378f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00be51a8-a280-4918-9094-af46c38b68ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b50deb0-e546-4827-a1c9-526ef8e875b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dba9dd9-4227-4004-a27a-8024c4459f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2df232-be23-44da-b8e1-0579c3bd6b96",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e287a-f764-4f78-970e-d7953852958a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f92a708-04e0-444c-ad10-45fdb2ab27fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb0617c-0727-46ee-a61c-ecf1e4c11de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733ea3fd-2476-4edc-a750-8c0659759b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe428077-6c8c-4349-a047-13e8246b1d98",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f2812d-4bdc-463d-b4a0-6ead11daf86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5aed323-827b-421e-85d0-73230e6daa76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcf25a7-3663-4a2b-995e-f06cee24f473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817267f9-bdea-488d-a419-aeb400e759dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455ecf9b-0528-450d-bde4-b9004e45642b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa50337-cdbf-40ff-a5cf-4c29396d0a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a799d19-40e2-40f1-b47a-0ad34ccbc696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20eee5b-9956-4d53-a038-172530b790b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9890e24b-bde0-4f05-ba1a-e8742a5a6182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d053c2-f305-4fa3-98b6-7d0cf0580ea2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec40edbb-9cb0-41dc-b5d9-70af5701fa74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689b1fff-70f5-4e08-8d28-fc60cc6061ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5eb4ad-9ea2-4332-8c61-dec0e3e8e555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92c5572-260f-4a84-aef9-4896fdcca0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7c1bc7-4273-4fbd-aa80-8ad7977f369b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a194da1d-849a-40dd-93d6-cd11629988a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd5047c-a2ae-4dae-a9a6-0d24beb3bc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6f0f26-fb9e-4f2b-8d44-563ce1e0ed82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d808530-47d5-44cd-8009-bca919e2b48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34acd5cb-8557-431a-add2-2250cb2c0656",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15f3aed-ca67-46ba-9cd5-27cd0ab441a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267cb120-babf-4252-8f14-74aeff5a3dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9626dabe-40d4-4d5d-bbcc-c20815ccc03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22b6bc9-4710-4a84-aaeb-0d1fc13d4998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351ce900-c167-403f-9cd6-2217bf8f36bf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9fa72e-d3f7-42c9-ab11-95c815f31487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75cd3b1-8bca-49f2-8f92-8cf1e6557f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a34b358-74d4-4070-a473-a6bb4af231d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6ee4cd-f637-4356-a4f8-747599445455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bec74e5-158e-49ee-b08b-358f1f8da23f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0a1e43-78dc-488f-a9ac-cfc85d23721d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdda43e2-c9e8-483c-8fd3-2401b74a2854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fd0736-5b46-4309-8225-e26022ed6cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168fd65e-7bdc-466f-addc-bf049d3fc891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf56ee5-5e0d-43b6-a19c-dcb629f54989",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f64361-ee4c-4905-b813-08d0efce474e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b052ffb7-1c1d-447a-988c-ac9fb5759f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23113774-6806-4ff2-90aa-8a52b3229652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fc25c5-5de5-499f-ba75-e7cd263fd1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05c4747-6dc6-4347-83a3-f44e21b6bbd3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af58b89-57d8-47d9-9146-6cc763793817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8ac31c-71c1-44a7-8abd-0aaf9846eded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb47a595-63be-4ff9-a4f4-f4d8aadd0655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2096cab-fb2e-4019-8dd3-53331795eb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e523217-3f3c-40e4-8b8d-7d02aa250afc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5a4f2d-7ec9-4701-ad78-02a29fa43fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a853aad0-4f40-42c2-b1b4-41af6cfe5c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de02750-5d5b-45c4-b183-ec24efdce1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45192975-fb14-4354-95d9-d52938039558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6deb63a5-4607-44dd-a16d-fc3032de2d0e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cdba1f-25e1-4b85-9da0-0554b13bd8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b131fb7-d7f2-4f4e-bc76-ed5bffbc0c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41da9785-db57-4f9e-af7d-f912ba5f4c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82fe3d8-307e-4689-aebb-ea3d0600f715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10760a80-2627-4097-a9a4-3028f6c91a3a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c040cc7-41f2-4f85-83e8-ae720c4cf841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858532fa-8659-4bf9-9d73-9a84855168e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ae0003-f176-41e7-8f31-e91b1e8d4627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95f7305-add1-46ab-aecb-f54323a179a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d878d53a-c8fb-4817-918a-a5656634d7d3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c8364a-e7eb-4f8d-b9aa-44e7f123ca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1b0a4b-b8a4-47b2-bdb0-0d9520cf2a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66888b-2ab9-4fed-8d72-702cc0373712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef3f27c-a77e-480f-816e-69d6178858f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388eaeac-72e5-49f8-bd12-a96e0ae0788a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b555ed5d-c248-41e9-8999-1ce76f6195e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f45ff0-7839-48ce-86c4-c6f89eb88a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02822398-07a6-46eb-b275-50839e54c09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38853099-9dea-4a0c-93b0-992d89accaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4fd350-9acf-4673-a2a3-df7f0acd909b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b26780-059e-4824-bf1f-bee15519b9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9008be-97f6-4ff4-a5dd-996165bfb80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154be866-19f3-469b-bba1-ac05c0175159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886225b-541d-4f38-b865-acade3be0d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6afc958-045f-42d6-86db-221463f97cd5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6650d17f-d098-4d94-b6fb-650a25e2b7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096621b0-3890-4f67-9b56-c3a15f4f4b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c353f726-20f8-49f5-a4e6-011d690831ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1def8e-f914-4508-a571-165645e60c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6839803-70bc-4b84-8e33-97387d7ca116",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bea5de-f01b-44ee-92eb-5e6891b091ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a06a7d1-5a89-4d30-99e2-21b61868c0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c9ac4-d361-499c-993a-1807ba1718f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ccbeaa-f79a-437b-b5fb-c48dfabf981c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18be7e1-733f-43df-9114-0545e05a54f8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b31d849-4c95-4135-a9ea-21cad2c89c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7719c267-f1ba-457d-adbc-0ae45aa3e808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fefdb38-9a8f-4dca-b158-880181c8e89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb912b52-6a4f-44ee-926d-4f297255f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29025572-cdd6-462f-b73a-7760c280e8fb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e192997b-d522-4327-8d35-379d14852ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392ea083-9a27-496e-85d8-46c2eda696d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99d5c78-d52c-4393-98f6-e017ff2cbdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be473108-311c-4735-a6fb-9779b83ee089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed91a2f9-298f-47ab-9e0f-38a1142cdc17",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4ffdf9-7ad5-40a5-a477-29fddf2955c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a364b057-9b3b-4d0e-8fc3-9b85b9bb703c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcc0dc4-34ff-4773-8b88-7a40c4e2fa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407cebeb-d8d9-49be-97fa-de90b9d5b754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da76cd3e-6794-4192-b46c-f7fbfd1dc349",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd2d574-3f1e-44f0-9f60-75289801476b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93dccca-552d-4c5f-93da-6ab1a381892b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dd1399-078c-4fea-82bb-24642ecf3a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343c6363-c1df-413b-86b1-dff46c52a9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20d2825-cb74-4b71-ba93-13b79f27ab47",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d203eaf0-fb97-4d91-89a6-d454b3c4359b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e602b023-e3e5-476b-8288-bda7367a90c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a88f8b-87a3-42da-8ebf-3dce532e1354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1f5f3f-8f21-478d-9135-0484ab18b699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213d3304-f81c-46e8-9f96-f6d1b61c124c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e451254d-cc76-4523-add6-72e71ad221da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fb121d-54c9-4814-93a4-d3c3f564d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28af3ad9-4706-4c46-b498-375992df0b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b923cb-6d98-402e-ad36-0d0ad593d183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4733fac2-0a09-458b-8148-c36fbe015454",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaa6dca-230b-4d5f-80bd-75cb667cabe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf41a1d-207b-434c-8ea8-2d2bcfbe5839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7b1a2a-3d8d-401d-840f-6fa924d90fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64115ff-0c4d-4305-8649-067fa0ac76f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6b377b-e9ff-455a-94a5-381efc2ca0f5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8c3bef-3cd4-48a4-80fc-d7b7ade17a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04c7d93-dd5e-423c-8047-dc38ae327f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b825a5-847f-4181-be34-fd4e301e95b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f0a22f-97ff-4079-9eb1-22b1f9578dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fa9648-4d99-4491-9bf1-a89efb1f0af8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898c602d-c086-49f6-9b26-e3f6d06b33ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2218ad34-7930-4693-bd62-e83a31e720f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3553a6-17ea-469b-bdaf-3275b5864ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1dd8cb-7bd5-43a9-b182-4c40f0bef38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01facdbe-af81-45a7-b8ae-f3afa16c8435",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d3d674-05b9-4eb1-9074-4a346acab16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45896d7-bcb6-4d6e-9201-0e213bd3212b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164aa35a-e526-40fe-9496-edf9b31a4008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccb6307-977b-457d-a737-a8ba68b8dccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85de19e4-826a-47e8-9a8f-05389f8b85c0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a093f34-2c5f-4377-a43e-a95fe8b44824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe81483c-58c2-4c32-b817-d15cf48063d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acca2ef-fe1e-4047-be2c-50305979322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5998530-4438-4c63-a227-a04d607e273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95f1a07-7b1f-4af2-bd83-854bf4d4e198",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e662590-bdbc-4b23-b67e-36fcb5ad9bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7469ddf-d5b9-4a08-9042-2bf57e2a30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2590b8de-9f7a-4403-8fc4-b21dcf304475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee63357-0d5a-488f-a27f-60aae79d65f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32bb61d-ac60-4a5a-8292-baf4f150a237",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec794e5-356e-4aaa-b208-74b3a397dca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa1d119-5914-4f0c-8af5-58e75beaeb4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49828bf6-5402-4b60-8301-34f0b864afa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f256ecac-512d-48a6-a8af-61abf92a1e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d99086e-e00d-418c-9357-b9647a1ddeec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7cc987-42d7-409a-a364-af5a90ccf12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e5a3f6-1ed9-47a4-9ee3-c86c9dc274d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd19c42-f02f-4b64-b651-d9b8c8949a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aec223-87d3-4525-8b4f-73e4a2b582f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cf9b89-c4e1-4054-a1c5-a3691f875ea7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16ef2a2-df18-4d37-be09-c9086422982e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a9b603-ebc5-46a6-b05a-d160c2605e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dd0d0c-cb6e-4bfe-96de-8feb432b34e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27edaf6c-734b-46cb-8637-b4517eab3a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e352bdb-e41a-4b89-b73a-af445ddd2365",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10a3904-d67a-4dce-994e-068958f2aebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c059fcd-f914-4fd4-81ad-a1fdbe3b8905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc59e44a-c3ab-436b-bbbd-43f1e0c8dca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf8d3d0-ff31-49a5-b318-92374b185dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89af249-e698-4a27-8ff7-bb7772948fa9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a42662-66e0-4a2f-88d7-c7672fd9a365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538c9822-9bc0-456d-8d82-cce87a5b7da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2941e398-02ed-4633-bfe4-d8fad3c8f9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57efb51-c537-427d-9aec-00926b651e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632a0198-ee86-489f-87d4-7844c1e3a8f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dc571a-0f88-4250-b933-f77cb12ed4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d3ef33-433e-4e36-ab5e-c2717df29b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db0bc7a-0bb5-44d9-9421-2879d47b5765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48492fdf-1763-4865-822c-1a4da983495f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c54cbf-b297-4150-a194-ac9932b82cf9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f562849b-8f44-4fe0-9027-6b87ec3fd306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007ea0dc-2486-48ac-85bb-a992fbe4a514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf3f8fd-3551-45b4-95a7-774c2d7824ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3fc493-c9fc-4897-8ec6-a96ba9367a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0674b42a-666d-4c28-9610-d9b9ee0e2a92",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae302092-643e-45fd-8dc7-2e39e0817457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cdca481-ac40-4e48-bb21-e8a4514a4376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf2395-153f-4d73-a95b-969f33a1b389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6887f432-34ab-49bc-871d-bcf7b78cbdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ffa031-e45d-423d-845e-9da20285e4bc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c758c8-406a-4fc3-9938-f5c5a84ca217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea10d39c-d1af-46cd-97fc-8b95ba490576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d302b-7120-46b9-ab4b-77fd5d6aec2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61c8574-9046-4eb9-aa90-b9900c4e3adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e9620-4805-41b5-809b-df5111b01ea5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbdef29-cdd5-4781-bf03-0ddabf152b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583a9e55-ffa7-4116-9b30-ba80af60c3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170c1f45-0f35-4fe7-84ff-cc8ba033ba64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad739ab8-1f7e-4ba1-bb0f-6a46cfe72b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b227490e-3f2a-4217-ba1c-ccaaeec21708",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1efa8a-4b72-45dc-8df8-9e52d1e39016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf9c899-6013-4fea-bcb1-b4816b4cce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c120ea3f-9238-4036-bac8-89710c54aa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29abc73e-ebd8-462a-892c-7eee24c14b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaca5110-0a60-4343-bea9-0fee7f9a3d3f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d4bd17-42e3-4674-95e8-bb8d5027d02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102b977c-cbe4-4d28-87e1-b721cea3a9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237e05d5-a87e-42ed-8f89-5369f38922b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dc4e5d-00de-42eb-9d75-5bf27bb077d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c223d0-5bad-4bce-abb8-0c0cd2d462da",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84836e6a-5752-40e5-81f2-8db597e6e7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707aaaaf-fce3-4201-84b6-ebf27b040201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e83ba70-89f4-471a-975d-15572ed2ad09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f1fa1c-67c4-4558-ab2a-7c7fe6781b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f092ef6-1c28-4692-a229-c3e8b8dd3858",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e19672-eab9-4a03-9df1-b3dfc866346c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec99e1e-39eb-4385-9c73-527173102974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fd5a14-ede5-4305-bbfb-54fd256b3f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f7fe92-44de-4c91-a1ff-d117ff8a3b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15879897-0ec7-4fca-8052-5c403ad949c7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea4d742-bb42-49c6-8be7-b442da9a3fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d2af5a-fb82-44cd-919b-c9cd1332230b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669f40a9-6ebf-4173-a27a-444d95c540b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37984f7a-ec4f-46d7-ae35-aaf6c1b2b777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e39eec-7aee-4db5-bf2b-b14434af040e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8d18c-a3b6-4bee-a26b-f487bfcc4e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0390b5-1f54-46bb-a965-79bbbc7797ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2222b7-c45b-4455-9a9f-fb8950002d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40433b52-dc08-4b02-9e52-756a65994c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97388d9-4507-4ea4-b522-fc4cd381176c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2527ddd7-9afc-42f0-8809-beff5a3b3508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be9fb91b-f6b6-4d32-9ed5-a601bbe97aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d4b5a4-dad5-4e44-931b-ffcf161bd2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f226351-aa37-44ca-88d5-a58926007532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82452150-fed4-45cf-8c9a-b766603d8c1f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5d34f6-fe16-4204-a7e5-3e67ddedbafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47ab72f-c213-4977-9622-7a040dd2c850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389e914b-1bd6-4a76-a6ea-5f6077f099e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2740086a-3ba2-49e7-83c7-90ac0ae6f058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b74aea-e938-4f81-8430-4b4bf89c14ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3afad7b-5207-4a58-bce6-455bd9f65e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ef0a3a-6682-4778-bef4-a4c68f742ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fb9722-5227-478b-b4b4-a835e689cacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e4ab80-f5c5-4e8e-8c68-08b0225455f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50272101-8e03-4388-b8d1-f6d10c757286",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e021ae7a-66b6-42b0-84ca-08e8ee1ac57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75f365a-4fcb-4832-8f78-989ee9f2ffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52930e48-ad48-4a1a-a24f-d8c2da30fef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3fe5ce-1b00-481f-ab76-54878c0b7453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0698276c-36ce-4fec-83ce-326150f75d3e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b707b0f-3b3a-442f-a1a2-ef46e9d78596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f683ef-5dd2-4701-915c-de2960464d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80966dde-245f-4741-96c1-c0297f24ceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8403d178-7888-4cf2-846f-4c36c03a784f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5b277a-ea78-4e8f-b381-2ac9a8ca2bc0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c4701-b2b6-43ed-911f-26ed5f1e1bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1b0c5a-25f5-4866-a4cb-5b19670f34d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafb5e44-75c7-470d-91d2-5c8347a99576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b911646-3bfd-44f4-9ca0-67c0b839e7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3cf63d-3897-4024-b270-f167b3a6ce40",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a277a0-cf6d-4d43-8cad-1ea8667e7bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a9f460-1c3e-4e11-adaa-a9458b1082b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08f1f5c-f645-490f-b76b-6baaa1c87515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94285cd4-638c-4081-912f-4bcc05c24702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4fa24-6a8f-401c-827a-d0de628608c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c4283-d9e9-404f-a5b9-4a51068921df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31af08b-b90d-4149-b348-be8fd24d6b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f509a960-cd23-4b3e-9fb7-8dc4027e298b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7f7303-212d-427e-a13a-e7db44a6e7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa09be2-73a3-47eb-98bd-04b6fb84976d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4094cc52-7576-49c6-8a27-686c5e4ce5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072af6af-ac91-4c70-9c39-5bdd480177b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6642833-f26c-4f3f-a50c-a5b682be43fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c620fd9-a74c-4f3f-8f53-6ba93233b082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163cc8c2-c122-40ea-9a78-c5bfaf8a9b54",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0313923b-3174-4eb7-b3d8-52e10d628bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2838f6a-dee0-4417-94aa-7085ea54c78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf59df3-c42d-4003-a52a-0ed79d91d4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fd6d54-225f-4ebc-9a70-73a9c8829038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c13f90-9de3-4747-9ec2-bfa5d99c325b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff9deba-b787-4934-bbf3-be9d5c2c1329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8caf6ce-47d2-451b-a72a-8ce17e16aaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d74270-c893-4923-9206-f68d516dc2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715aac43-e076-4fb6-bcc2-4c63636f6a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1598147a-8d03-4581-80d0-16487006fc29",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b394b3d-a4bb-46f8-9f11-a823b04f5fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683cb1cb-63c9-4997-a08e-37ddcca2ffdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa2cc7-1fa8-4bc4-85b6-fd1d06d9ea4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b7f18e-3771-4a71-94a2-96088b6b10c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3585331d-d992-42eb-b86d-c5f2ab357596",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea467c77-b0b4-4bf4-9ff0-f73879636883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6985682a-2aa6-44c4-9d33-836d1dfde65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e4221b-e9cb-49c1-bef7-997821e1119b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eec35dc-32c6-46e7-8a66-781fd88e2d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d1806c-e944-4a25-ae64-36f263d1b6e2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79825a24-0d23-4daa-b0f4-2c9b2a595416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6ccee9-26f8-4b4a-aa81-5af014fa2a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4819dfcd-0779-487e-8d3c-f6bf566aa381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d0276f-a1c2-462e-ac52-1e5e7cfc3f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb15c82c-8cf9-4feb-868f-99a645dd758e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2db13f-07db-43c3-ac7d-1f72982b4db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540c0a4a-ecea-4b2a-9640-106416e32180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e35766-8aef-4610-95af-7167f2c90d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4666812-8686-4177-970c-a637d5f28b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a54aa53-6ec0-4277-aece-9d793a0e0ac6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8a1a75-046d-4bc8-858c-f3328f309acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c5655f-7ae7-494a-aef9-ca8a33fc4a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a18f87-7e74-4ee8-9565-9f215481fe96",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fbe86d-1afd-4406-b0ed-15671c824ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c167b8a-a1e3-41e2-be39-c41be1c2b868",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2967f5ad-804e-4c9d-a463-bf7087b6d13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7275fa4-1c6a-4fa1-b0b7-bd5fec39a06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85f4180-a36c-41af-a520-ad5b080033d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de11f5f-fbd9-48a3-80dc-c93f1de3fd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa41c7e4-3ccc-4c0a-859a-2b317be4de3f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38c5b5-2ea1-497a-996e-49235b68808e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6765f90-d44a-459d-b7b7-183dad549508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d4f04-cabe-496a-a87f-206f87be5b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ea945d-4d73-4efa-b7ff-59be4a0a35c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f62db28-c299-42a7-a030-9bd31b2a64de",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fc662a-955c-4cbc-bc24-16248f16dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4cdb5f-cd39-416a-a9c1-8a05ad9f5cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2894236b-5363-4e72-a2b8-7e4158283b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d114e07e-1b7b-48c9-abc5-7c5c7e7b39b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25af0383-c485-4431-8804-53e59c78a7ad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc72c83c-6baa-4342-8b67-77f486181e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bffa24d-1bde-4729-9571-38fecee26c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807f7c33-d976-4a37-aec0-79b9f03c050a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f66df8-58f1-4d59-a2d0-19298d29c329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265bbe4e-e502-47c8-b543-eb2920c61744",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1462e47f-728d-4554-b722-9fcb023b31f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8cf9cd-cf11-4b5b-8b42-cbfe43c391da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b57052-245c-4a59-8fd3-157a7952d0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f0c6cf-dc62-47d5-918a-4fa18e81f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca967ec-781d-433e-96fe-6b43358d9fd5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cd153b-8453-46c4-a493-e1ee4f25a5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e056966c-2a09-4aea-87dc-3c43cc65595b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27fb56f-acbb-4562-9f09-d5a4e8e15b4e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96d7152-c716-4655-a875-552eb201885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99de357b-19ed-454c-9d4a-a41102f36560",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666166a0-de7f-4b6e-8b92-323785fd592f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f849d8-508e-4919-83fd-4f0561e59c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe4e94-0a6b-403c-b2d7-b1c04936db0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b0fadb-08f7-4d91-9548-733d752c42b1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f0f5232-a5f3-4223-be5b-ef683e49b4e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8be5165-94d4-4cc0-89b2-7b19957643da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fa0c21f-0390-4281-814f-0b2ee52e7b4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bab539d2-0a1d-47ff-a929-92fe2814c43c"
                    }
                  }
                ]
              },
              {
                "id": "19c6e0cc-ae1f-4870-ac56-004ded77e3f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47a64d3d-64bf-42b9-b995-5aa1d47b8094",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e2a410-c44c-4785-b62a-96f8a4b571a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fadd4277-da31-464a-9610-93c93e4f6e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b33fce-5e4c-4ad8-814e-75c6a3513cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b7de698-5e08-4acb-a4eb-86a9535dd488"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "683ee091-30eb-478e-9587-49ee5d8d36a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b81c51-e808-46c8-a389-f5b0c9bcf58e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b31370ca-2cb1-4b55-934e-074a8b215ab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12daa4d7-b932-4c7d-9d4b-9677229c8beb"
                    }
                  }
                ]
              },
              {
                "id": "2cedef86-f0d1-4a99-bf43-1c2631f6c8de",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6a70bdd0-b195-49dd-8639-78e6be249742",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760f0541-896e-4c05-886c-9c09cfe8fef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8508e94c-3ca1-449b-81c8-6b94915032d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f474cc-c12d-49a9-938d-181d2f4be143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e922764-bc08-4b70-bad0-487d502863b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "721f6e36-3265-49b3-a3fd-940bfad916e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aacf7308-60bd-4ddc-a72f-1c4dd4696b6e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf90b443-db19-42e2-8011-cbafd9a8fe8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e32f4d40-3c9c-42f8-8462-a923969c392f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f403a5bd-eac6-4ed8-8675-8b1c038db5a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a40966d4-0941-405a-aec5-7a68b50206fd"
                    }
                  }
                ]
              },
              {
                "id": "df61be03-2484-4237-b193-3d83ee3e6e51",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7171b3a4-6202-4972-9375-13e62e3dfb92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b66631f-5e46-47cb-aa9e-aa6b61aafb64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc74a393-d238-4e17-b2cd-11f8db1dc9d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fa1e240-5cd8-4a68-bf87-1e2a2afd1a97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8581b27d-de76-4ac1-90fa-09796ec63864",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a73b4bc7-2103-4484-8520-4d86dc8dc9b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be4c3338-2f0c-476c-be31-4615f29e4d9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ce29339-741d-466b-8954-8c48e7a3ed6d"
            }
          }
        ]
      },
      {
        "id": "1a74b6c5-e806-4f23-a926-6bb10fab0a9c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d305d5d-d97b-43cc-be93-bfc5c112747f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "635b9279-1c7c-493d-991c-2ebfc29da726",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afde78ec-51aa-4dc5-b1b0-f2ae96034ec3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fbc7ad-0a45-4ece-ab6a-8fb43c4788a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06247d1f-9582-4f33-afc8-77744759d9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbe9643-d40d-467f-bb1b-1a88f8b95aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22dcd93b-6fc0-4ce3-86fa-21afbb84fe4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fb18217-5b0f-43c1-ba4e-11b4ac329a9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f49f1b6-29b9-427b-b8e2-88a3014cfdf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29900891-e1ac-463c-a788-fb438ab9401f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efcb0d1a-8a51-421e-a2ed-856feba9da10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ad18cee-4992-4d54-993c-ef8fb5ead887",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a2569ff-331d-4dcc-a6c2-ce67180c169f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "108c209d-9370-489b-b9e5-ecaca24bd4b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67ba6bcf-b13e-45ed-a8d3-537c817d1780"
            }
          }
        ]
      },
      {
        "id": "21ee4251-2f01-424e-9f6b-1cd2f7b650b1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "732d55af-1e3b-46c6-b8a6-a2efb48e413f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36fbeeb7-68c5-4921-9186-93cd01f2764e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c6e9e2d-3b89-40f5-a648-6a53c36e08b0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a701b66d-7247-45b9-bd7d-205153ffd1ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "850b18c4-3a11-491b-bf42-b5ce2c9541b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367f19f2-e055-4d17-9448-946912c5847f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0039c10a-a94e-4d08-b623-e62ec1b217df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3a09871-b6c0-4a31-9f36-04ca73377c93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "642a1c5a-facf-4776-9f2e-c3e68ba494a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bae84df-b9ff-4861-b83d-9db1a6df8f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d830f76-b8d6-460d-801f-0780847c9f90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6512ada-c450-44ff-918f-416a0d206a07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2727e48e-c1a0-411e-85bf-3cc079f15b13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e69e918c-ce05-45b6-bf18-d84ddb6055f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11731bf1-3883-4175-b168-106c1ad2fcf5"
            }
          }
        ]
      },
      {
        "id": "7b46e40f-d843-46fa-b976-292b5a3faba9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d1529bf0-ec45-491d-ab47-9bff38b73203",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e4478d4-ea00-4843-9b4b-6e111429cd63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c2ecd63-a020-47cb-80bc-1b4e98bbe33f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae4192d-0c5e-4d6a-a388-835e4bb2c25f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f8cf107-8351-453f-b490-91e10943d359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911f6264-652a-4b7e-82aa-de569095d437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cd4a1ed-b7f9-4589-b5e2-8b78c8ee8527"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df9c1fb5-aa69-453e-926c-9bde779485db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb59eb3e-023b-4c3b-8161-97ff5bfc59f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "816880d8-c19b-49d7-935b-ac7687970876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "decf3c3a-d8aa-4aa1-be30-65f083816b83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8aef80c7-b448-41ff-abf7-a458509c4945",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a195b194-bbe3-4ca2-8f7f-f245e7e78e07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6ba18ed-ab7e-4f48-8ba8-26d16759ff61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abdc6b01-e651-4e86-b8fe-b48b69474f8a"
            }
          }
        ]
      },
      {
        "id": "39e1a5c6-7810-416d-aec3-51d1cba37f78",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "732c2efd-3dd5-4fe1-9ed2-6a054712907f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76151191-cd7e-4694-9972-21eb61f400a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e37d77d2-a833-430e-8e2c-aa8494172c64",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbfa97e7-2bdb-4753-84a4-d478c856c0cc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bac6890b-9e4b-4a9e-b35b-70ede38f4ed7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.3015873015873,
      "responseMin": 6,
      "responseMax": 614,
      "responseSd": 42.02772513496492,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728521104405,
      "completed": 1728521116357
    },
    "executions": [
      {
        "id": "66829788-ee1f-465d-8787-873ac58ce739",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f42daf7b-00cd-4524-b078-4a68d2bfc969",
          "httpRequestId": "434dcd3a-51fc-4274-8092-85bc26ae3100"
        },
        "item": {
          "id": "66829788-ee1f-465d-8787-873ac58ce739",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cc5864d8-3342-41f8-9d5b-e6ce6e16a8f0",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "5a8f93fc-c0db-4bee-933a-1b8e274dd725",
        "cursor": {
          "ref": "d327d5fd-430d-4b7c-999b-5dc37900b851",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a848e6dc-7324-4ff6-89cd-5e1e5883896f"
        },
        "item": {
          "id": "5a8f93fc-c0db-4bee-933a-1b8e274dd725",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ca0985dd-c330-40ec-861b-ea219f08230c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d4516855-a241-4912-b54b-0fbfedbf6416",
        "cursor": {
          "ref": "6fe39212-5708-4a80-bfb3-c0888a26ba28",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a9bf4a6d-2813-40d6-b60b-2276a571bb3d"
        },
        "item": {
          "id": "d4516855-a241-4912-b54b-0fbfedbf6416",
          "name": "did_json"
        },
        "response": {
          "id": "841c0c65-52f7-4aaf-aaa8-f29408163cc2",
          "status": "OK",
          "code": 200,
          "responseTime": 212,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788eccad-ea6d-4ec2-85c2-a2e3a9c12f69",
        "cursor": {
          "ref": "47364095-f0c4-40fa-a923-ff76c9c21de5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be97d60e-6f29-48a7-9b8c-ad5ac98c0c73"
        },
        "item": {
          "id": "788eccad-ea6d-4ec2-85c2-a2e3a9c12f69",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd170ab1-24e1-4976-b44c-364068d6462d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788eccad-ea6d-4ec2-85c2-a2e3a9c12f69",
        "cursor": {
          "ref": "47364095-f0c4-40fa-a923-ff76c9c21de5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be97d60e-6f29-48a7-9b8c-ad5ac98c0c73"
        },
        "item": {
          "id": "788eccad-ea6d-4ec2-85c2-a2e3a9c12f69",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd170ab1-24e1-4976-b44c-364068d6462d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d73c37-a98d-42ca-bbb0-dea619afc11a",
        "cursor": {
          "ref": "0ff4fec0-6572-4326-add5-37412c6a5b45",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9b0b24c0-d364-4497-b494-54e3ce61b2f8"
        },
        "item": {
          "id": "75d73c37-a98d-42ca-bbb0-dea619afc11a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5c8c7112-d0b5-441a-9a80-e53fb078e992",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a013664-67dd-4482-8f50-fb7d3a94266e",
        "cursor": {
          "ref": "4faa69c0-bfa3-4ba7-8605-ca8ef9aed999",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1894df99-6464-4652-809d-a73ad839c80f"
        },
        "item": {
          "id": "8a013664-67dd-4482-8f50-fb7d3a94266e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b5199c47-af90-4f0f-816c-372d019ff1e0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bed98a-14c9-41b9-b23a-83dfdcbe4a8b",
        "cursor": {
          "ref": "1ba3d4e3-ff07-4337-a4a3-1c17e56b1cdc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eede17df-d716-4a91-80e7-0294efe95b6b"
        },
        "item": {
          "id": "b0bed98a-14c9-41b9-b23a-83dfdcbe4a8b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fb4c7e6d-a03a-495f-badd-ebfd36bf4f9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0468f55-89a0-4d63-aad2-fd3d5070d70b",
        "cursor": {
          "ref": "a05c15a6-83ac-45b1-88e5-4e580a8beaca",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0cd2379-c5e2-40f4-bca8-4a9b60241ffd"
        },
        "item": {
          "id": "c0468f55-89a0-4d63-aad2-fd3d5070d70b",
          "name": "identifiers"
        },
        "response": {
          "id": "ee085e8f-a1d0-4afb-83fd-8d085f328546",
          "status": "OK",
          "code": 200,
          "responseTime": 181,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a2312f-d66a-4bbe-b960-f8500c9f11da",
        "cursor": {
          "ref": "53e298fb-7ed6-4b1d-8316-fc984abaa9ba",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "724ce4eb-7d66-4cb8-a200-f06a1a529e60"
        },
        "item": {
          "id": "33a2312f-d66a-4bbe-b960-f8500c9f11da",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "efe7d2e3-2081-4ea6-a7b1-22117b3ca624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0d2526-9286-460e-87d6-46a16aed37a8",
        "cursor": {
          "ref": "a753c6e4-ded4-4c25-b61c-458d9a975dbf",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1018b725-8d9e-4a94-bc1d-6d5a6d043635"
        },
        "item": {
          "id": "6d0d2526-9286-460e-87d6-46a16aed37a8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "07a3fb3a-49a0-4048-a0b1-2d40ad5be8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3551293a-5f6f-4862-86b7-6c9a31ba6682",
        "cursor": {
          "ref": "89c94d7d-687f-4ad4-a48e-670bc5f50d81",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fbfe2d29-dc56-421b-b1c7-d049b3ca8cf6"
        },
        "item": {
          "id": "3551293a-5f6f-4862-86b7-6c9a31ba6682",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0b19f08a-be13-4b4b-965b-a6a8a2771478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297196ae-6b1c-4678-a413-9557bc0a0ff1",
        "cursor": {
          "ref": "9ee1cdca-228a-411e-91e9-79f547af2fde",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d3337485-86a1-43c1-bfbe-7d5cc86cf11b"
        },
        "item": {
          "id": "297196ae-6b1c-4678-a413-9557bc0a0ff1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7280de99-4ced-4212-845f-7b9afa12935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc715c4b-47ee-4651-8ed8-a2ab902d73f3",
        "cursor": {
          "ref": "8c115dc1-b3dd-4077-89f6-0f8dc6bf5b09",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e82f5e1d-a9b3-464b-bcbd-7fdf02286459"
        },
        "item": {
          "id": "fc715c4b-47ee-4651-8ed8-a2ab902d73f3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "08156dcb-e109-4c15-b5d9-a5656e7a7e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ccba3a-6941-4027-ba01-14f986cf05aa",
        "cursor": {
          "ref": "2663a9d2-6b0c-4eb2-a4da-fa58362c12c5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd53c674-75a2-43ee-9d1b-8c0e0cbc74b8"
        },
        "item": {
          "id": "08ccba3a-6941-4027-ba01-14f986cf05aa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "919c181d-6183-44bc-8dfa-e8312bc9f300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d27967-550f-4689-90f8-21c0f87ba249",
        "cursor": {
          "ref": "51e2af34-5c1e-4d59-9d16-b1650637a32b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c5ce4e4a-0205-4a7c-a547-dd312d34db05"
        },
        "item": {
          "id": "51d27967-550f-4689-90f8-21c0f87ba249",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c35df8e2-0726-4cab-b649-3b754dba7393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917646ff-2cd0-439d-8168-5ecaff4a14ae",
        "cursor": {
          "ref": "0e8ec8b0-e925-47dc-a776-676cb583de23",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "60600490-8772-4430-a662-3c2dac37edef"
        },
        "item": {
          "id": "917646ff-2cd0-439d-8168-5ecaff4a14ae",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8dbef59f-a90b-4209-8f11-34df7b4cbe96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fdb605-1bc0-4660-b80d-318c0cf0e8e0",
        "cursor": {
          "ref": "56a131f5-44ad-43cf-8d71-4bd245eb8cb4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dd2c3770-4020-4c02-b4aa-26161e9e5922"
        },
        "item": {
          "id": "22fdb605-1bc0-4660-b80d-318c0cf0e8e0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "73ddee84-e841-4dbd-8fb9-91a7e471e8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ba1821-971b-468b-8c70-0cdcda41bc55",
        "cursor": {
          "ref": "57a88d09-d90d-4ae3-8c60-614b9b99ad58",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ce6b864d-b94f-4086-bb8c-f2689df84486"
        },
        "item": {
          "id": "12ba1821-971b-468b-8c70-0cdcda41bc55",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4445342a-18e9-4f7d-99fa-86a9cf987685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d6ae6e-c422-453a-ac71-de8a4e0a6f2f",
        "cursor": {
          "ref": "8a44ed05-03b9-437e-84e6-8e6e5921959f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d506a85e-18a0-43a8-b89a-159a1827b20f"
        },
        "item": {
          "id": "c7d6ae6e-c422-453a-ac71-de8a4e0a6f2f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c769f82e-f4f0-4e53-9c02-0a55a48758ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b595c3ac-c825-4b5c-9c4b-a80373333c58",
        "cursor": {
          "ref": "e5d2ea97-2067-4601-a5b9-2e7cb1a349ec",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1b1c4667-60d0-4095-b823-a87abe027bcc"
        },
        "item": {
          "id": "b595c3ac-c825-4b5c-9c4b-a80373333c58",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "49defe87-1a3e-4a5a-99fc-5c0f98999756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f13492-71eb-4104-88be-1da7ce95115c",
        "cursor": {
          "ref": "8e08a970-93a9-4180-82fd-2dc1878ca381",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "55452fe8-4a2d-4142-96a8-a4e52c08ead7"
        },
        "item": {
          "id": "d8f13492-71eb-4104-88be-1da7ce95115c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d0cb7ef1-2324-41ea-be57-455cb97f7e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f942023d-9ab6-4eb9-ab1d-44ed40955cdb",
        "cursor": {
          "ref": "a9e1165e-092b-48b4-aec9-6ec4fc02f4f0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3d362ad3-a8c0-47e1-869f-e4c52f49b421"
        },
        "item": {
          "id": "f942023d-9ab6-4eb9-ab1d-44ed40955cdb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5f264bbf-8c09-4631-a167-56136060217f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb5145-756b-4a34-a834-4c6eda6652e9",
        "cursor": {
          "ref": "ec897bb4-181d-47e5-a70a-02694313cab2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f4bf094e-7412-4758-91ee-40c9a12879c3"
        },
        "item": {
          "id": "14bb5145-756b-4a34-a834-4c6eda6652e9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "187a3574-2ab5-475a-bccb-402b1a99602a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa5dc5b-ee05-4574-afe7-95a0046d225e",
        "cursor": {
          "ref": "2a2fe8dc-2c86-4d28-a98c-3df904b7dccb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d19b9e6e-eaef-4086-ab27-1a8c4d8835c7"
        },
        "item": {
          "id": "2aa5dc5b-ee05-4574-afe7-95a0046d225e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "32a9e023-f73b-49ff-9099-9823358aa265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a9a691-e02b-4ea4-aff6-32113638cd33",
        "cursor": {
          "ref": "6d22ccab-ab48-4176-97fd-02514a2e1977",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b5b1a5e9-13a6-43d4-8a58-be46f775f78d"
        },
        "item": {
          "id": "38a9a691-e02b-4ea4-aff6-32113638cd33",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aebb068b-df6e-412c-b982-e1a32724b62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57029ae5-00ce-40f3-9843-7a2c563dff15",
        "cursor": {
          "ref": "ee65b834-b2f7-4d88-a724-fae2f550fa56",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a901de4c-9136-438e-9db3-905fd5f0a60c"
        },
        "item": {
          "id": "57029ae5-00ce-40f3-9843-7a2c563dff15",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7f765970-f5e3-4bea-aa84-b186c8904495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abb242a-d5a7-4a06-be1f-619222dbb09f",
        "cursor": {
          "ref": "cca985c4-90c1-4a5c-b530-d36192e847a1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8214bbc8-f9fa-467a-ad05-b6c4737d1bfb"
        },
        "item": {
          "id": "6abb242a-d5a7-4a06-be1f-619222dbb09f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1050c17f-959b-4547-9ca5-92a6f66b9866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866bb18a-d62c-4ab7-a7f5-ece157b2bf10",
        "cursor": {
          "ref": "067c56eb-9823-481d-8d08-d70daf6bde0f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1a530525-c12d-411c-b299-d4443b3b4347"
        },
        "item": {
          "id": "866bb18a-d62c-4ab7-a7f5-ece157b2bf10",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dd0188e7-7b1f-4f5d-8d83-18798d132cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5311c93e-4efb-4839-886e-22632ba9268a",
        "cursor": {
          "ref": "cade64ed-c462-4393-8be5-6d5cc2c8fd46",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "75efc361-5e31-4e65-bd12-eb7519249c88"
        },
        "item": {
          "id": "5311c93e-4efb-4839-886e-22632ba9268a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f7b08a12-0d66-4c85-ac04-1bef3e72f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466819a1-23c8-4de8-86a3-c3235ee3625f",
        "cursor": {
          "ref": "1baedcef-6ccc-4aae-976e-06ffdbd69388",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5184916b-35ea-468b-9a26-b57b660c24f7"
        },
        "item": {
          "id": "466819a1-23c8-4de8-86a3-c3235ee3625f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e42fc44-9233-4ddf-a638-fcd0acb2eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa4cfb0-64b9-47dc-9607-dfdc768e35f8",
        "cursor": {
          "ref": "d015700e-aa90-443c-a127-f2a3d1adf986",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4a982213-27db-4e9c-b010-0d87dbed1dca"
        },
        "item": {
          "id": "eaa4cfb0-64b9-47dc-9607-dfdc768e35f8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c0ff9167-4e3c-4fc7-be0a-d7dbd9a9d38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9441be74-e6d5-476f-9d83-1de2ec4c6bee",
        "cursor": {
          "ref": "ba37f3db-f6d6-46d1-bff2-b5d55d1c1a29",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "df00b1ff-71bb-4285-b242-5d4def3fbfc6"
        },
        "item": {
          "id": "9441be74-e6d5-476f-9d83-1de2ec4c6bee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4cedca49-1ce4-47a0-b157-e340561467a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc82890d-aa68-403c-bce3-033b397de675",
        "cursor": {
          "ref": "29a745da-b6ef-4a2d-989c-fa4bb12b24fa",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "88878d49-77ef-45ef-9325-401b2490d6d3"
        },
        "item": {
          "id": "cc82890d-aa68-403c-bce3-033b397de675",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c8e38abd-ed77-4cad-97ba-0b9c0b5d1695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f860ff4b-8677-4a57-83cf-45812e94dad1",
        "cursor": {
          "ref": "94d9b707-b37d-43c3-b570-94f930cd338a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7c49fd16-6a24-4b71-9b26-b3d57a669c09"
        },
        "item": {
          "id": "f860ff4b-8677-4a57-83cf-45812e94dad1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ffb08f15-9dff-42d0-bf8b-2bfd0897b18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64908a51-c4b9-4df9-bacf-d9069a10eea3",
        "cursor": {
          "ref": "eae71b89-05ac-4932-8ba8-6d63c832a14a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b3d7dffe-1d40-4df4-abfc-c4a4f3ae1f9b"
        },
        "item": {
          "id": "64908a51-c4b9-4df9-bacf-d9069a10eea3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ea7b78fe-82a3-40ad-9315-a0c4faf30c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f2763d-f70e-4581-a4b3-497136440613",
        "cursor": {
          "ref": "69d32a6c-0c4a-43b1-a20f-eeac4a4a5a7e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "018f2ff1-3ada-4a1f-8d77-cdb8e015bcfa"
        },
        "item": {
          "id": "e5f2763d-f70e-4581-a4b3-497136440613",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "391a0d1f-676e-4cc1-9c8f-39c5231f655e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197db8ed-2a7d-42f0-b4b7-d3985134d1d1",
        "cursor": {
          "ref": "3c1eddf8-1519-4213-96e7-3f6f4b6d783b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2d4c4c6f-da59-4a56-9ff6-333afbf39a46"
        },
        "item": {
          "id": "197db8ed-2a7d-42f0-b4b7-d3985134d1d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5ea2083d-22a3-443f-ad14-f05a04b29d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2500cf-e29b-498b-8a15-92f93ddbe890",
        "cursor": {
          "ref": "526cf715-dfec-472f-8fa6-efab83361efe",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a0cdbafb-91b5-49aa-82d4-526fb2560878"
        },
        "item": {
          "id": "9e2500cf-e29b-498b-8a15-92f93ddbe890",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef19fa6f-9bd7-4b70-bac6-ed343d46c2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1445c331-ad6d-4dd6-ab6e-bdb84a36c0bc",
        "cursor": {
          "ref": "d1d2eebf-338c-4142-aaec-532fd6069a51",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f21233a7-d2f3-4702-ade8-c4dbd6a55fbe"
        },
        "item": {
          "id": "1445c331-ad6d-4dd6-ab6e-bdb84a36c0bc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96254b42-4445-4dbb-acf6-434035c66fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6575d939-3d96-479e-8dd6-8d6d4c00796a",
        "cursor": {
          "ref": "6621972d-864a-4635-8712-17904b31779b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4d6ca22-9820-44a7-9b12-2c6af5070830"
        },
        "item": {
          "id": "6575d939-3d96-479e-8dd6-8d6d4c00796a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25c778bc-c3eb-4c23-ba07-dc68de7ede86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0da3dfb-3988-4543-8c0b-8c4842058809",
        "cursor": {
          "ref": "326c11d6-9757-4878-85b0-4c1ea5a2b26e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e14070ac-c8af-4d15-b853-99c31840832d"
        },
        "item": {
          "id": "b0da3dfb-3988-4543-8c0b-8c4842058809",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "217b203b-d67c-49aa-a1a6-50c04410d180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5afa1b-c16a-427d-b3e2-ad2e0ecc3c3e",
        "cursor": {
          "ref": "cb5b750b-690e-4fdb-ad9c-a962a030931e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "29f491e3-ec9a-4fb2-8036-23dc72b507e9"
        },
        "item": {
          "id": "2c5afa1b-c16a-427d-b3e2-ad2e0ecc3c3e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97713c41-1f75-4976-89dc-5caf6a64fe27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24c64df-5d37-487a-9b99-e3f4e808bac5",
        "cursor": {
          "ref": "819cf9d5-e53f-4a8e-8031-005a8c7c90ca",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d8ccb186-cff8-470c-a808-61697e1c0745"
        },
        "item": {
          "id": "a24c64df-5d37-487a-9b99-e3f4e808bac5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bab97be2-9765-40f3-b192-97c6da256460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b71ca5-1ca7-4f2a-8a65-2caec187a5cc",
        "cursor": {
          "ref": "8eaeda20-acc0-4814-a37c-62116d679b1a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "184dd7fa-0548-4178-8e18-d28cd26b4ad2"
        },
        "item": {
          "id": "a4b71ca5-1ca7-4f2a-8a65-2caec187a5cc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80636f7a-29a6-43db-81b8-9850adec8ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f7f85-83bd-4b1b-8199-1d7ba2f1cc42",
        "cursor": {
          "ref": "104b3c87-7dfd-46d6-84ad-cdfba14d0f04",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bb5b8b68-bd75-4958-be11-763cc968cfa1"
        },
        "item": {
          "id": "981f7f85-83bd-4b1b-8199-1d7ba2f1cc42",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ec8e62d8-3c83-4fde-a734-a1a863b15f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15a6c54-23bb-46a2-b77d-99a1eb815a86",
        "cursor": {
          "ref": "ac66d059-f0f1-49a4-9a7d-5c96d84744f9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c322eb64-e7a7-47fe-b670-3ef95c8b96f6"
        },
        "item": {
          "id": "f15a6c54-23bb-46a2-b77d-99a1eb815a86",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6484ada1-2f18-4b86-b573-e265d219e601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af4dd5f-5ac8-4fad-bc6e-599d64469712",
        "cursor": {
          "ref": "84600086-2b62-4365-b590-b95bdec55157",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "86d675c7-8c35-4962-8203-7268255db7f7"
        },
        "item": {
          "id": "0af4dd5f-5ac8-4fad-bc6e-599d64469712",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6f289ac6-b71a-414f-b5e5-5bd6439f0a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f62f004-a613-4105-90a3-d4f45302e67f",
        "cursor": {
          "ref": "0bb66ca3-3612-45d5-9105-91b2d1d2d214",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d981f9aa-7de4-478f-83f5-45b4c2617c1f"
        },
        "item": {
          "id": "4f62f004-a613-4105-90a3-d4f45302e67f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4783fae1-cc12-4d63-b537-0f5490f0390e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5192309d-59d5-42a6-a1b2-dc7b1fbf35de",
        "cursor": {
          "ref": "1ab898a6-5dd0-45a1-bd9d-be8325612f1a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d9c2afd5-3cf4-45fb-9297-e072dcf4805d"
        },
        "item": {
          "id": "5192309d-59d5-42a6-a1b2-dc7b1fbf35de",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b88495c0-12d8-4cbe-b7bb-1189dc48b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7b4f82-aad6-45a6-818b-3d7a5aaf40f6",
        "cursor": {
          "ref": "e1d58b0b-579c-4738-a724-fde909233e53",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fa1a21d8-0c89-4ea5-9d3d-7d23064709e1"
        },
        "item": {
          "id": "ac7b4f82-aad6-45a6-818b-3d7a5aaf40f6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "28a138d6-ff72-4101-acbe-510b9893a4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57482f5d-c1d1-48b2-a808-23b551ba9d43",
        "cursor": {
          "ref": "97ce3f60-6f66-4ca2-8039-36c657a14ec1",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "afefa7ae-cce1-45d6-85ef-8362e9b796f9"
        },
        "item": {
          "id": "57482f5d-c1d1-48b2-a808-23b551ba9d43",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9c9f158b-5f18-413e-af96-093942d70af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af241377-cba7-48ab-9890-179310ad4982",
        "cursor": {
          "ref": "5c9cb661-8da4-4bc4-919c-931bd1816537",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4426d085-a887-404c-9d0a-c7883f899a05"
        },
        "item": {
          "id": "af241377-cba7-48ab-9890-179310ad4982",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "00a7a6ac-2571-4bd8-88a1-5c39b3fa041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aa26af-8d51-4e61-a0c7-2a45e6fb5a3f",
        "cursor": {
          "ref": "3c43072b-6260-4dc3-a756-2919b046d67e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f36f711-84f9-4876-a2cc-321edafa4f63"
        },
        "item": {
          "id": "e2aa26af-8d51-4e61-a0c7-2a45e6fb5a3f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e91773dc-d860-49a8-b578-c0abcd35b8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c1f4a5-60b4-4db2-a09e-d73eb5a3f920",
        "cursor": {
          "ref": "bc369cf1-f317-426c-ae42-e84fb13d52a9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3ef99084-f7ed-454c-8fcb-104225a5dd93"
        },
        "item": {
          "id": "b6c1f4a5-60b4-4db2-a09e-d73eb5a3f920",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "07b7161b-9ca5-4c42-87ba-233b27faac6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58e6293-0acd-4c81-964f-ed3a72257c85",
        "cursor": {
          "ref": "3434b5c2-e4d0-443d-ac32-8ee0586c8551",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6807778d-7be4-4f9c-a0b7-884fcc96f484"
        },
        "item": {
          "id": "f58e6293-0acd-4c81-964f-ed3a72257c85",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0be8a74c-869a-4865-bf40-9dd10fc63aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c5f087-11ad-454f-beea-44321f5b892a",
        "cursor": {
          "ref": "bb2696a0-92b6-4b27-a0f0-a29dce6e75b7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cc838a1a-2184-4f85-ab94-913cb1a6e0bb"
        },
        "item": {
          "id": "c6c5f087-11ad-454f-beea-44321f5b892a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e7a4c57-76c3-46eb-93a3-341e7e99f0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c573b1c-dc00-4ca8-b8ff-f89854cf66a1",
        "cursor": {
          "ref": "4de6d7f0-c667-474a-a4f5-7b5abc8b415c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cf51949d-ad2d-4e6a-af20-336c82b1e61e"
        },
        "item": {
          "id": "4c573b1c-dc00-4ca8-b8ff-f89854cf66a1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "059ce77c-c4c8-45e0-b961-1f10dc6cb054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1fb4be-5040-4ac2-9557-09fd3a60e9b9",
        "cursor": {
          "ref": "13f06b30-3f5a-4a0f-bf34-3d501390963d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a126238a-e5f1-43a7-ad33-26197eb0ef4c"
        },
        "item": {
          "id": "dd1fb4be-5040-4ac2-9557-09fd3a60e9b9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "79c2b977-c329-4fda-89f1-14f6535d7b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0325b8e3-13d2-4a2c-986e-8452f5dffca6",
        "cursor": {
          "ref": "9ca56f93-ef1d-4a7f-b00e-1c18413851eb",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fb46b038-e3b6-4ba7-922c-d6332bea8582"
        },
        "item": {
          "id": "0325b8e3-13d2-4a2c-986e-8452f5dffca6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "382c2201-8312-49d3-aa40-50c9455d9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ffeba5-5673-4fca-a5b7-14963c0c286d",
        "cursor": {
          "ref": "09525011-ece9-4205-b7e8-3a6752e08ff2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "276f814d-fd37-48cd-9109-d08d87a864de"
        },
        "item": {
          "id": "39ffeba5-5673-4fca-a5b7-14963c0c286d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0528d6e9-63e5-44b0-bb23-57e3bae25774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08521f4d-2f40-4abb-b022-f2250d09a36c",
        "cursor": {
          "ref": "e5be5e77-9c9a-4bda-b8d3-03e7307577fb",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ac34c0d-c049-4b56-b145-1ba9b4dc24e3"
        },
        "item": {
          "id": "08521f4d-2f40-4abb-b022-f2250d09a36c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "942e1a85-9fe1-466d-9753-9143599ade2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234f107-5244-4df4-818b-ff8f242feea6",
        "cursor": {
          "ref": "bfdaa7e8-871c-4bc0-a5be-1ef17600306c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "efc219da-167a-4b0f-9a03-51d342b9ecf2"
        },
        "item": {
          "id": "6234f107-5244-4df4-818b-ff8f242feea6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "57f6b40a-ed80-4568-86e7-81e755668b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a70ef5-e557-4eb2-926b-7eceecce1196",
        "cursor": {
          "ref": "4035693d-bc44-47a8-bbab-50c9aaca90dc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2abeeaea-1df3-4b20-aa11-d008a26d621a"
        },
        "item": {
          "id": "76a70ef5-e557-4eb2-926b-7eceecce1196",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "233261d1-d6ef-418c-9afd-7415fa4543c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f5650e-2d0e-4845-b3e6-6704922536ac",
        "cursor": {
          "ref": "9ccbc31b-eb83-4b4b-9a53-1e757739ab3b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3a4d7263-cd64-4cdd-9031-e77587922f11"
        },
        "item": {
          "id": "c0f5650e-2d0e-4845-b3e6-6704922536ac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "617d69d7-f79f-4efd-a294-d06d0bfcf2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafcd3ed-242c-4c24-91e8-df9101a7e2d2",
        "cursor": {
          "ref": "6c050d7a-6f37-471b-ac82-b1cd2e8d2eed",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f5dc515a-795d-4838-8c5c-b3bebc78f260"
        },
        "item": {
          "id": "aafcd3ed-242c-4c24-91e8-df9101a7e2d2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "41a7e3a4-0f1e-4a75-b1ed-3a57a83c17f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c92270-87ce-49be-ab58-d4d577c37986",
        "cursor": {
          "ref": "3e8429cc-04c9-4051-9f35-f0be93dbd924",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5a3a833a-2d18-41e5-b933-59c26473c049"
        },
        "item": {
          "id": "26c92270-87ce-49be-ab58-d4d577c37986",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "da6b590d-f81d-42b7-a6bc-41b08d4e344c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dac77bb-5f47-478e-b3fc-498621eb5d93",
        "cursor": {
          "ref": "7cff73a0-45af-4c37-b16e-38899de5b758",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "78d1dc53-ebb1-4fca-8984-547599d9fe6d"
        },
        "item": {
          "id": "6dac77bb-5f47-478e-b3fc-498621eb5d93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4a7c92bf-032f-4ee0-af4d-8f4693f4eade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4521bea-8000-4fff-9a9b-a50fc28d0158",
        "cursor": {
          "ref": "c2cae311-c758-426b-9ab1-5d3668e37350",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "063bc2cf-1e8b-4a34-817b-96aa9097e0e7"
        },
        "item": {
          "id": "a4521bea-8000-4fff-9a9b-a50fc28d0158",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "48d26623-3f54-46a9-9f21-cd69418ff883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081157a8-a462-47b1-b98d-7836abd9bb81",
        "cursor": {
          "ref": "822dd772-ad3f-4f6e-8bb6-63de21dad96b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "95af918c-617b-4927-877d-e43318655cdd"
        },
        "item": {
          "id": "081157a8-a462-47b1-b98d-7836abd9bb81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6f42760-3438-4791-80b0-0e72360504e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394fffaa-79e6-4b15-b8a5-70bbf108238e",
        "cursor": {
          "ref": "0e38869e-ddaa-46fc-89b6-66d1cd7f6b02",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c01d3df1-7ab9-416b-a3b0-628c22e68359"
        },
        "item": {
          "id": "394fffaa-79e6-4b15-b8a5-70bbf108238e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b8078042-af40-487b-82aa-d49ebcfb5667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d1b283-2fb6-43a4-bffd-ac6f76d7711c",
        "cursor": {
          "ref": "d32004a6-d708-449c-b1fa-2764f900eec4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6a5745af-ad65-41ca-bf1d-fd690d89c86d"
        },
        "item": {
          "id": "24d1b283-2fb6-43a4-bffd-ac6f76d7711c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2767983f-c9b4-4321-8cf4-2333eff5b6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c46129-5157-484e-9420-76dc56b09c28",
        "cursor": {
          "ref": "cb3eee59-316b-43cf-9215-9933b4724564",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6258b8b0-adaf-4f7d-bebf-06e6a4954b00"
        },
        "item": {
          "id": "61c46129-5157-484e-9420-76dc56b09c28",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ffae1ad9-7ed3-4e92-a625-4bf8af4836f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516b2ece-fbb1-429c-831d-2e68e2f4ddf9",
        "cursor": {
          "ref": "cee77c9b-574d-4b2a-b9e4-3d35c012380a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "29a14643-b800-4d63-a483-15bdc991bcc2"
        },
        "item": {
          "id": "516b2ece-fbb1-429c-831d-2e68e2f4ddf9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "955e9ea0-c157-4567-8fb3-67f95fa47f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1c1197-98da-45ba-a1f4-7eb722b208db",
        "cursor": {
          "ref": "dc6e6aaa-6f21-4011-84ce-487f23c431ef",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ad7af67d-4ecd-4ce2-846b-9343dd06169c"
        },
        "item": {
          "id": "3c1c1197-98da-45ba-a1f4-7eb722b208db",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "04217d45-18ad-46ea-8d42-396c70518254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9068ae8d-af24-4ea4-b2b2-16338f41f7fe",
        "cursor": {
          "ref": "74a77772-afce-4615-bdf8-b125b1a6bf4d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b8234ab6-d8eb-43e9-b1ae-2b430cb6c2bd"
        },
        "item": {
          "id": "9068ae8d-af24-4ea4-b2b2-16338f41f7fe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "82329f0e-85a2-4be6-9be8-ed64514e6fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e307964-be96-4fb3-a818-efd47a318f27",
        "cursor": {
          "ref": "67d0d54a-6af9-4206-89aa-df37615ffb0c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bf591f88-bad7-4996-8780-c9dcfc789329"
        },
        "item": {
          "id": "3e307964-be96-4fb3-a818-efd47a318f27",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "11f75c93-f895-4cfb-846e-ae6df5992939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b913df7-4d1b-4c55-9650-d872189db8bf",
        "cursor": {
          "ref": "56f8151d-fa8e-4e92-b21c-ebe38366ffd5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "23865d6c-7907-495a-9845-9546cbefe6fd"
        },
        "item": {
          "id": "9b913df7-4d1b-4c55-9650-d872189db8bf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "12b53763-3627-4353-82e3-a52f5b89498a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98339454-0911-4fcf-8253-55e5887d3ec4",
        "cursor": {
          "ref": "e359b9c1-9a40-4689-9278-b0231322eaee",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8664cef4-b31a-477a-95a0-6467094cbfb3"
        },
        "item": {
          "id": "98339454-0911-4fcf-8253-55e5887d3ec4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d85e2089-b3ea-45dc-85fc-333e7ab88e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd11bf3-ab98-4c90-bb72-bf71910be1a8",
        "cursor": {
          "ref": "e570531c-9be1-4467-9053-c47e85128914",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5108d4d7-2bf3-4a42-8006-ca1e377298c0"
        },
        "item": {
          "id": "0fd11bf3-ab98-4c90-bb72-bf71910be1a8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "41e5c333-d58f-4573-bc5b-cd75ec991ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed8089-f25d-4f86-a308-e7415d754861",
        "cursor": {
          "ref": "0a2c5a3d-0755-4b9e-8683-6acf709061c7",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1e11f061-7e46-4d76-a224-59581a3f97d7"
        },
        "item": {
          "id": "79ed8089-f25d-4f86-a308-e7415d754861",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "99421277-cd5c-4a38-bbfc-f2851e769e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252bd26f-d883-48f5-b45b-55fbceab8bae",
        "cursor": {
          "ref": "a3f2ea2c-dc04-49a3-987f-9b0661a16084",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41d700d9-ba54-47c9-9b13-a9b1dd05f293"
        },
        "item": {
          "id": "252bd26f-d883-48f5-b45b-55fbceab8bae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6e087122-2931-40d9-ba7f-c7e7bd98a947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedbaf75-c3f4-4e47-b9e2-191835931bfe",
        "cursor": {
          "ref": "3fd03878-e120-4ab8-a556-7013aefc5b40",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6dcec21-c915-4fe8-a23f-c62a370afc42"
        },
        "item": {
          "id": "fedbaf75-c3f4-4e47-b9e2-191835931bfe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "59f921cb-dc83-4eae-bf6c-4454c5f6debf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e52e1f-67b9-4316-90f4-df51b81c6a09",
        "cursor": {
          "ref": "4562a3f9-701f-4049-aaa1-67c260095dd6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7f2c8666-6512-4ed7-96e7-ee3fd30e0db9"
        },
        "item": {
          "id": "e7e52e1f-67b9-4316-90f4-df51b81c6a09",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4873b4c5-a7b0-4316-8c6d-68cefc7aa41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f5f7ed-62a0-444d-b28c-8f6eb8c56cfa",
        "cursor": {
          "ref": "b351a812-8b3f-453d-8d95-bf38900c2944",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "46ba666e-29d5-4dc6-a01d-ca23a3e133d2"
        },
        "item": {
          "id": "30f5f7ed-62a0-444d-b28c-8f6eb8c56cfa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c7c8dea0-bd02-4b1b-baa5-01eb4b76d1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ed226-6556-4d9f-a831-a3c41108269a",
        "cursor": {
          "ref": "c44db0c8-0daa-4c18-8c5e-ee9c37802046",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "06104be3-b0e2-4ab4-a13e-17540e873e0c"
        },
        "item": {
          "id": "2c3ed226-6556-4d9f-a831-a3c41108269a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9a440ce9-578f-4fcb-920e-25860a34d580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f7cdc-d6bd-485c-9b9c-ae4e64c84744",
        "cursor": {
          "ref": "e68647eb-c12a-4ca1-b3f5-64a314729c75",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e6e84ccd-730f-4e15-9bc7-8d1c80cb0e62"
        },
        "item": {
          "id": "a55f7cdc-d6bd-485c-9b9c-ae4e64c84744",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a370743-89e9-4cc0-bf63-0afc6574d22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde23d95-8605-4221-a679-63fb8575ef78",
        "cursor": {
          "ref": "6b733a7f-4cf8-46b0-9612-49fb21393f99",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa7d3855-1bc6-45c9-bd7d-02262e9187e9"
        },
        "item": {
          "id": "fde23d95-8605-4221-a679-63fb8575ef78",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "18d08791-2ddf-4e4d-af3c-31684715e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645335c8-419b-4c5f-b2f4-aa083d0d805d",
        "cursor": {
          "ref": "29a442d6-293d-4925-9e25-c8f5b0dcee82",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6445f2a2-5f18-4748-aa0c-891cdbcbc0da"
        },
        "item": {
          "id": "645335c8-419b-4c5f-b2f4-aa083d0d805d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0c137594-6d53-4fc7-9fa1-a74ec45ee1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ae7eb7-2879-4f00-a5a4-71a7f3d25693",
        "cursor": {
          "ref": "d44c8f54-bea6-400f-a555-6c4fab5f732f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1e682411-f51f-4342-8c1a-5cd5c06894f2"
        },
        "item": {
          "id": "98ae7eb7-2879-4f00-a5a4-71a7f3d25693",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "de0ec82b-33ce-409d-b91e-2cf1fe37a93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86834693-127e-4452-8425-9a0e04ed2a69",
        "cursor": {
          "ref": "587782e7-6ef0-44a3-b204-ed0b6f845abd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "54ae622f-06bc-4fa3-b355-82baf71adb78"
        },
        "item": {
          "id": "86834693-127e-4452-8425-9a0e04ed2a69",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9f958d18-4c28-4d0b-bc02-dda213eb1562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6d154f-2929-4f58-a7f7-6914f7ca7f30",
        "cursor": {
          "ref": "fe8a1a74-044f-44e2-aeb3-18cb5484127c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5b80490d-7420-4ffa-aa99-9fd5e7800486"
        },
        "item": {
          "id": "4b6d154f-2929-4f58-a7f7-6914f7ca7f30",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0f5818e8-4b6c-4d65-bbf2-fa52c906fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf38f75-2ef0-41a4-85d6-9017170e4084",
        "cursor": {
          "ref": "d0f5451b-4867-4533-91f2-aeb56bb3af8f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "86a9b6fd-4c3f-42b9-b1cb-2139433c0c8f"
        },
        "item": {
          "id": "7cf38f75-2ef0-41a4-85d6-9017170e4084",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99a0ad1e-3493-40e1-8802-1c5438caabac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02863755-3460-4b0a-9070-a895b16bc870",
        "cursor": {
          "ref": "9b41751f-f0bf-4c61-bf16-c3fe076a9042",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "006f8a28-cb2c-4a27-b3d4-33b20b38d083"
        },
        "item": {
          "id": "02863755-3460-4b0a-9070-a895b16bc870",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8883e2e9-7ce7-4cfb-915d-fcc0166e1cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6df0134-ff79-4247-ab13-3dd6ff94ffde",
        "cursor": {
          "ref": "64de8576-d760-4c22-9388-bd2cea42658f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a480d717-5600-44fb-b9e1-60a30c9ab104"
        },
        "item": {
          "id": "f6df0134-ff79-4247-ab13-3dd6ff94ffde",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "681ec244-5233-4566-9252-63f927c391de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e443774-df6e-47a0-baef-65de9c4f62f4",
        "cursor": {
          "ref": "ac60a60b-7e63-45b5-ad23-441ffe0d7a52",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fc0f281e-bae3-4ed6-b35b-34802fe32314"
        },
        "item": {
          "id": "4e443774-df6e-47a0-baef-65de9c4f62f4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9617357d-f538-4851-9084-1b62a8076bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21964bac-c862-4e37-9ecf-43036e0e4833",
        "cursor": {
          "ref": "e23646b9-d6bb-47bd-ab39-a30654b7e8f8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "456d0e39-62f1-4d7f-af6d-7698bec90909"
        },
        "item": {
          "id": "21964bac-c862-4e37-9ecf-43036e0e4833",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "71c741ca-1250-4f32-b8fa-e9eaee01ff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c85086-7a48-4e71-86e9-bb8d51abd091",
        "cursor": {
          "ref": "41a42ea1-a816-4b47-9c9e-d33b1dec17ca",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "584d4641-db33-4ee6-81e5-2104d280a618"
        },
        "item": {
          "id": "b9c85086-7a48-4e71-86e9-bb8d51abd091",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b28164c7-7e05-4a33-aa6c-1a32303a78a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4963d3-19c7-4cc1-9157-2171f604c2ca",
        "cursor": {
          "ref": "fd83ccc7-5943-4057-96a7-17d3e7aeced5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5e79775b-1bb5-4284-a104-2fa74426cfae"
        },
        "item": {
          "id": "ac4963d3-19c7-4cc1-9157-2171f604c2ca",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5dd7fc3a-1632-418c-8ba9-268c96a4df8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdeaa00-7fcc-40ec-8a0e-26f8995f2470",
        "cursor": {
          "ref": "7597bd7b-bf36-4415-bbdf-15f172720d24",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac46f1ce-15e5-412a-808f-f4295555fddb"
        },
        "item": {
          "id": "1cdeaa00-7fcc-40ec-8a0e-26f8995f2470",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7ebc6787-8df3-4d89-8a3a-cfa24a9121b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9809e93d-e1ea-43ba-94ef-5855406d1c1f",
        "cursor": {
          "ref": "190f0740-8c30-47df-b438-4144c7b6b5bf",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "593c34cf-919a-4951-8624-5aae1ddb3c96"
        },
        "item": {
          "id": "9809e93d-e1ea-43ba-94ef-5855406d1c1f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d6162930-aafc-47c7-906c-7c836627cd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a088a-e11a-40d3-9237-e8d0c9d87f6f",
        "cursor": {
          "ref": "48122fcb-72c0-4fcc-8096-b83b44d051b9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2581bd01-96aa-48fc-9bfb-2ff52728d099"
        },
        "item": {
          "id": "f38a088a-e11a-40d3-9237-e8d0c9d87f6f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "849cfc9e-cc55-41ae-bd70-c2de023daa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee619e2-662d-4f23-96a2-82a73198e042",
        "cursor": {
          "ref": "c1487a33-cb47-410f-8530-672bd721ca84",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1e9b8550-8d6c-4d52-8e4a-13137dc61cda"
        },
        "item": {
          "id": "bee619e2-662d-4f23-96a2-82a73198e042",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0b69ee08-ab63-48c3-a465-3a31bc423dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "37f2f211-e96f-472d-861a-d14b27e9db84",
        "cursor": {
          "ref": "ddfe2c03-3fdc-4caa-b5c6-302285d98a00",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f261ac51-4858-4725-9de9-3a8bf91c9345"
        },
        "item": {
          "id": "37f2f211-e96f-472d-861a-d14b27e9db84",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c3fcc1a5-2498-40ec-b66a-e40ffc2b733e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ac317576-5be4-4e47-b835-eb6aed9294f3",
        "cursor": {
          "ref": "3fb77245-bf40-4b9e-8ada-5c3c2cb14044",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f35fed28-0346-47ff-bfbb-ae764ae639a7"
        },
        "item": {
          "id": "ac317576-5be4-4e47-b835-eb6aed9294f3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3c738e0f-2dac-494c-9651-f36efa6f28c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a4daf175-fd74-4e08-bc67-28a5039106fa",
        "cursor": {
          "ref": "bffb0bdd-5f65-4794-8261-c96fea09c1d1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "490e40f6-d2ad-46c0-a615-87301118d8c3"
        },
        "item": {
          "id": "a4daf175-fd74-4e08-bc67-28a5039106fa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e17df991-907c-43d7-b14b-b7dc6bafe106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cbe0a8af-5908-46f3-9989-8555bbd6fe13",
        "cursor": {
          "ref": "8d566b32-ceba-4806-904b-b164a914f2a4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e4fccb52-a440-4603-83cd-0bc12012733c"
        },
        "item": {
          "id": "cbe0a8af-5908-46f3-9989-8555bbd6fe13",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "523c2dfe-3444-40a2-9dbc-cf5824bbe872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "58033948-1045-4b96-8b64-802f13ba1d59",
        "cursor": {
          "ref": "05f9f217-c167-4bdf-96c3-9899c8481488",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "50a53ed5-0bb6-4e4c-a235-f8299b682bd9"
        },
        "item": {
          "id": "58033948-1045-4b96-8b64-802f13ba1d59",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b95d3e72-9754-48c8-a770-84d006be940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f65dd4ca-0309-4762-8400-efc8fe7aba48",
        "cursor": {
          "ref": "a19766fe-a54e-48fe-89bd-1a8b41ab0b27",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b2ec0242-17ad-46ef-b3de-b3baa96352f3"
        },
        "item": {
          "id": "f65dd4ca-0309-4762-8400-efc8fe7aba48",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "be63a10b-80b6-46e4-89da-2d94f4ca61b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7f7a462d-3b29-48b1-9f60-451376b2db09",
        "cursor": {
          "ref": "7fdebf7b-609a-4f11-9ac0-67d221e5bae2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "737edc2b-011e-438d-bd8a-1c1b7719df87"
        },
        "item": {
          "id": "7f7a462d-3b29-48b1-9f60-451376b2db09",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aa897c03-7451-4bff-bb6d-b1e774b62e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190bcf9a-8b4f-4c9e-b9ac-8d077fb47b45",
        "cursor": {
          "ref": "4fdf7710-1e5e-47b1-9bcc-642805ce6e0e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0349aaa3-3de2-43b8-a031-4b5b4a812ffb"
        },
        "item": {
          "id": "190bcf9a-8b4f-4c9e-b9ac-8d077fb47b45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "43f4f7b5-df85-44fb-86a2-dc67d65348c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a9edfe-c2f0-4d10-8336-5ae3cc853aa0",
        "cursor": {
          "ref": "b853d929-fc7b-4c2d-beb7-b653b743f917",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b036f7c1-b1cd-4ec8-9ab9-ab72e11726cb"
        },
        "item": {
          "id": "53a9edfe-c2f0-4d10-8336-5ae3cc853aa0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "52468550-18ad-4933-8498-84f4734751d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baa52ff-7b1d-447b-a10e-92b93133e6bc",
        "cursor": {
          "ref": "ba795f9f-f37a-443d-9901-d4cb45a8e45b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "853353bb-ab01-43f8-811c-2959ac2e69fe"
        },
        "item": {
          "id": "7baa52ff-7b1d-447b-a10e-92b93133e6bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15ea9b78-ed47-4aba-913a-15f035bb96b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc998ea-d806-4ce1-bcf2-9b6f156c8ffb",
        "cursor": {
          "ref": "e8670c68-9074-4f8f-b559-78c5eae54478",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ef7b6d29-0ffb-41d8-b1e6-54454c259f0d"
        },
        "item": {
          "id": "bfc998ea-d806-4ce1-bcf2-9b6f156c8ffb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a37a7d50-a4d7-4646-877b-d281e0cef3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c2d299-c8a6-4ad6-b1e5-b6b3e2a01fb3",
        "cursor": {
          "ref": "afb18deb-9041-4e59-8731-e09e3a57ba80",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6ca0a882-7b3c-414a-83b9-15e103142266"
        },
        "item": {
          "id": "08c2d299-c8a6-4ad6-b1e5-b6b3e2a01fb3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3beffdf7-350b-4232-ae4b-c180bfbae4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ee7969-393c-46bf-b2a2-46a598407cb4",
        "cursor": {
          "ref": "fb331c49-05c1-4c06-8088-c516413eed1a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d8dac7bc-b155-47dc-bbb6-e8d039255ae6"
        },
        "item": {
          "id": "52ee7969-393c-46bf-b2a2-46a598407cb4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30053c3c-897a-4738-9d76-b3f1106ba620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eda21c4-85de-43f7-a2b3-db830723acd8",
        "cursor": {
          "ref": "73718698-6d6e-4651-a0a0-dfe730e365eb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a35ff5b0-86f4-4ab7-abbe-1db1d27c2eab"
        },
        "item": {
          "id": "6eda21c4-85de-43f7-a2b3-db830723acd8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "82fdc19a-7805-443e-9f94-49e38c7912b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e6411f-5a74-4dbc-8233-a06492eb4e0e",
        "cursor": {
          "ref": "4bb57256-e075-44a1-842a-717ffe147eeb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "570d343e-812f-42ca-b4f6-ed817c010ebf"
        },
        "item": {
          "id": "15e6411f-5a74-4dbc-8233-a06492eb4e0e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b8ed4d59-bdd0-4efb-b6c8-07469d4f18a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd43af7-ff8c-48c1-ae12-8f91be853ee9",
        "cursor": {
          "ref": "013aaad5-3eff-438f-98ba-fe4090acd977",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7ccfb26e-cbeb-4fad-b718-bce2a83b69a6"
        },
        "item": {
          "id": "abd43af7-ff8c-48c1-ae12-8f91be853ee9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a940b80d-8e74-4da2-bbe7-affdde370cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac3dcd2-2779-4c73-a13c-528fef7e2e75",
        "cursor": {
          "ref": "da921d31-6775-4fd4-acb3-df970b778d9a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6777877d-4579-44d5-8922-e3721daba432"
        },
        "item": {
          "id": "1ac3dcd2-2779-4c73-a13c-528fef7e2e75",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7d8329bc-da4b-44ae-90b0-8d94d51d2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c45c70d-6aad-4e32-8d3e-cadd5371a0de",
        "cursor": {
          "ref": "ff57b10c-6c64-4cfa-bbcf-c0ffdc5b3e15",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eaa5cd52-2994-41b9-b257-5469e46ecb14"
        },
        "item": {
          "id": "9c45c70d-6aad-4e32-8d3e-cadd5371a0de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a2ec6d31-1e62-4a4e-ab20-3760181e5a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07614e88-52db-45ee-9678-360919fd4aa8",
        "cursor": {
          "ref": "ba2b399f-a82a-42e6-804f-82ebc3c4c8ff",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dffe5d55-6e78-499f-ac57-fc47ac18f8c6"
        },
        "item": {
          "id": "07614e88-52db-45ee-9678-360919fd4aa8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ddb2c58-2551-4d32-8d70-cd90757e29a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab0d645-eea3-4508-b30e-923c3d0b20d0",
        "cursor": {
          "ref": "bd362941-96e5-4210-9e02-346ed94db58d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d8bfab27-4096-412d-9f9b-8851c1f5a9f8"
        },
        "item": {
          "id": "aab0d645-eea3-4508-b30e-923c3d0b20d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c00ed798-f31f-403e-87d3-c297067cf39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ae656f-5c19-4d1e-8da8-6b03ef117a88",
        "cursor": {
          "ref": "9a8ea3d3-0e45-4927-80fe-1992c73f6cb7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c4141ded-e1e5-4ed5-91a9-a10199e45c54"
        },
        "item": {
          "id": "86ae656f-5c19-4d1e-8da8-6b03ef117a88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b8a8231c-5c86-44e4-bc1e-2e55a957f8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ae016e-a513-4d97-b874-d118153b3335",
        "cursor": {
          "ref": "01507a9e-b2f5-48c1-a2fb-a34739c6c00d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "570e6691-bda2-4bc1-90c7-1ba0ece88f63"
        },
        "item": {
          "id": "99ae016e-a513-4d97-b874-d118153b3335",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43216d96-7b3b-4b02-a0bf-df807c3dec46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39d81ca-32a3-4e90-9ed6-2b39d7c11f95",
        "cursor": {
          "ref": "dd42b927-24ef-4ce3-8205-1ee90fc921dc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d692502a-be88-4938-a13c-002b03aadd7d"
        },
        "item": {
          "id": "f39d81ca-32a3-4e90-9ed6-2b39d7c11f95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7562677a-0b74-4b16-81eb-199407e1cd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d210aef8-a3af-40cb-b76d-d2990bb69cef",
        "cursor": {
          "ref": "2fdf386f-5c12-4c7c-a487-57d0d568b458",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "342edbe3-39e9-48b2-b080-8858a05788ec"
        },
        "item": {
          "id": "d210aef8-a3af-40cb-b76d-d2990bb69cef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3d9a804c-8db0-4852-a901-0bbd3163110e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95f0bfb-9e71-4338-9f41-996e37a02c37",
        "cursor": {
          "ref": "3b8f999b-e0d5-492a-9fcd-981579aecf7e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "00c271e0-1774-427d-a5d5-e3c703e852f9"
        },
        "item": {
          "id": "f95f0bfb-9e71-4338-9f41-996e37a02c37",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "141e8f2f-3495-41c1-821d-509b3cacef89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e49a7-823a-4c4c-94fa-c21147aac162",
        "cursor": {
          "ref": "39e9bc1f-1dc7-4c91-bb6d-7efe4e5604aa",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "11cd48d9-460e-4c7a-88d6-4684bec0374f"
        },
        "item": {
          "id": "dd4e49a7-823a-4c4c-94fa-c21147aac162",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e2087134-ba29-482e-a717-a810cbeaf6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d9ae14-2c50-4db6-914e-45c97ebfd9eb",
        "cursor": {
          "ref": "9d79bbbd-3afb-48e9-88b6-c7695f3f2305",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d8ddcbf3-1803-4905-b91c-42a1cc27e241"
        },
        "item": {
          "id": "03d9ae14-2c50-4db6-914e-45c97ebfd9eb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf2a8522-7c97-48cf-959d-7c5d751495b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a37a2c-5ffe-4271-bb6a-e72303adcc6d",
        "cursor": {
          "ref": "7e12d2d6-fc90-4b88-956b-7435de2fea60",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c0707e2d-6548-498e-b278-e05297a6e9f2"
        },
        "item": {
          "id": "a0a37a2c-5ffe-4271-bb6a-e72303adcc6d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9f13753-7726-4f86-b1b7-ba7559b268cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cc8861-3705-4ece-874d-0f0eb9bbba1c",
        "cursor": {
          "ref": "2ee49d6b-268e-4915-b988-f46a384830c0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "efe72b0f-dcc8-4323-a8ca-ee0b2df33667"
        },
        "item": {
          "id": "f4cc8861-3705-4ece-874d-0f0eb9bbba1c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4216a3d4-cc3f-4436-993d-971ff621e5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2783a8-aeb5-4e46-8ae8-0d826fd3b75b",
        "cursor": {
          "ref": "18c89dd6-5c3c-41bf-a52a-cf4ecf4e05d3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e3230d68-4176-4a26-8650-92f7d160c075"
        },
        "item": {
          "id": "5b2783a8-aeb5-4e46-8ae8-0d826fd3b75b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "42269c56-6d2a-47e8-a2f6-27a9a8ba40d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a6d52d-bc6d-4da3-baf9-9230e3d1eaa3",
        "cursor": {
          "ref": "ceb49ca8-b711-40c3-abda-cf266b0f59fe",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "888c48fb-78b3-4150-bf53-780d4ac06caf"
        },
        "item": {
          "id": "29a6d52d-bc6d-4da3-baf9-9230e3d1eaa3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "03ea90ce-38a8-4287-b13f-74635cb1f438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea59694-2406-4bb1-ba1b-2cc9699747db",
        "cursor": {
          "ref": "bedd09d0-26cb-4c5a-a4eb-7b0c689fcf30",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "af2b20ef-a2d9-457f-93dc-851d694811a5"
        },
        "item": {
          "id": "8ea59694-2406-4bb1-ba1b-2cc9699747db",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "205f089b-a9d4-46b0-8368-f1ce6b6ddef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484840d5-abc2-44e3-b638-2cff5c5cb693",
        "cursor": {
          "ref": "f3d4c3d6-393d-4487-8183-79156560ea32",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ce1d7cca-f810-42cb-9f33-8b2c568c8c2f"
        },
        "item": {
          "id": "484840d5-abc2-44e3-b638-2cff5c5cb693",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6efbcb5a-3819-4f92-aca1-5120c681ae24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77157d60-7491-4368-b581-f608268a2f91",
        "cursor": {
          "ref": "4eb912d4-d517-4d9e-97d5-b169b6fd49ee",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "acf6a20c-4d92-45ec-90cf-dc069a93ebd9"
        },
        "item": {
          "id": "77157d60-7491-4368-b581-f608268a2f91",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6b47e98b-312f-4e27-bbb0-2f70f301d637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1168ce97-18b5-4e7f-b07b-b35c2d927f99",
        "cursor": {
          "ref": "da6a3e07-175c-49b8-b95f-d1d6e45ea1a9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "45a72366-f4a0-4b23-a830-33ce92eebe80"
        },
        "item": {
          "id": "1168ce97-18b5-4e7f-b07b-b35c2d927f99",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3806d824-f4ef-4758-9479-4ce60748ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7355263f-6e8d-454a-b219-a46992322c9d",
        "cursor": {
          "ref": "b131d2c9-5a9a-4811-87ca-8b9b4a96592e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1e285337-24fc-40a0-b318-5b24b1cbb813"
        },
        "item": {
          "id": "7355263f-6e8d-454a-b219-a46992322c9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ffbacdfc-1a63-43cd-9d6b-8c1c8ef7462d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53d116b-cab9-41ba-b0b7-7c39c5cab414",
        "cursor": {
          "ref": "3f26543f-1a75-4c24-ad42-ba8d518aace7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ca5a09c0-3ae3-4624-b7ee-40f8e5a07bf0"
        },
        "item": {
          "id": "e53d116b-cab9-41ba-b0b7-7c39c5cab414",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "03de8237-d242-49a0-b890-109343e86465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4010420-6ce7-4f26-925b-a7ebf853bd0b",
        "cursor": {
          "ref": "890fb8f6-3541-4b07-8f60-5caada159337",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "65c79697-afcc-4084-9024-65cca1a4392a"
        },
        "item": {
          "id": "e4010420-6ce7-4f26-925b-a7ebf853bd0b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7697510d-fe51-4fb9-b5e0-1baec0790839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c077c-333d-4418-a419-c7052dd31d2b",
        "cursor": {
          "ref": "4bd0a1aa-85f1-47ba-943d-fe60111b2364",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd0cf34b-5a97-4ab1-84f8-c45cacd90e57"
        },
        "item": {
          "id": "9c8c077c-333d-4418-a419-c7052dd31d2b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e8f0ae43-0d9c-41f6-9770-ace7effd91f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f249ea35-ac1f-4a8f-a10b-69a19c6dca43",
        "cursor": {
          "ref": "a9c19727-15fc-457c-bf9c-bd8c00105bca",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1897b55d-a92f-4395-9505-ef5cb5e0e30d"
        },
        "item": {
          "id": "f249ea35-ac1f-4a8f-a10b-69a19c6dca43",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e169f4fd-1f8a-493c-9efb-264fe77d0792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cabc7d-08d2-42c3-97f7-d953620f314d",
        "cursor": {
          "ref": "c55a6d6a-2b7f-4918-a91b-7556ef7da41d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d2cc20be-b1a8-4182-83fd-2464745b39f4"
        },
        "item": {
          "id": "c9cabc7d-08d2-42c3-97f7-d953620f314d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f08c9d80-82bc-4b6e-9672-0bfde52be5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f12c667-bdc9-4e50-b3eb-bb22e62e012b",
        "cursor": {
          "ref": "05ba40b9-e787-4d87-a51e-016a6baa402f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9cebba3a-4cff-4f0d-972b-5665a84608a8"
        },
        "item": {
          "id": "4f12c667-bdc9-4e50-b3eb-bb22e62e012b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1592e267-6775-4749-be32-662365cd2609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8b291d-dcb7-49d1-83b2-e980c1d6ae86",
        "cursor": {
          "ref": "5bb10645-9fff-4530-a47c-f4b39b6c63c5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d531a809-9ed2-4c67-b81e-8396a9516622"
        },
        "item": {
          "id": "5e8b291d-dcb7-49d1-83b2-e980c1d6ae86",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "16e15972-75aa-4e18-b045-cce5e01a099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695abf90-aca4-4dee-9361-1485d8336711",
        "cursor": {
          "ref": "00925aa2-8747-4784-8cca-da88a2810ae2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a76c5a5b-c43a-4e4e-94fb-57c3f35671de"
        },
        "item": {
          "id": "695abf90-aca4-4dee-9361-1485d8336711",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c865e1b6-19a2-4807-8ce2-1e7708a3d028",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a4b780-6da6-47d2-9589-eda33c3510d3",
        "cursor": {
          "ref": "5a7976e7-81bf-4e1f-b4da-4227cdc15994",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "31da2a32-0650-48d5-8e02-c1a5ad8bb3fa"
        },
        "item": {
          "id": "56a4b780-6da6-47d2-9589-eda33c3510d3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "919f9416-7e71-437d-bf2a-ce3c509c3b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9086b23-5092-4410-b505-9422802bbb02",
        "cursor": {
          "ref": "f38e01fe-0887-4fe4-8b81-f51dc8cd9385",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "56e8f8b8-dd0e-40c8-bc20-4d8e433bc7cd"
        },
        "item": {
          "id": "e9086b23-5092-4410-b505-9422802bbb02",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7d4dcf38-9ec4-467b-9858-50d117dae9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93d7388-b3d6-4f46-9ba8-a25da383756d",
        "cursor": {
          "ref": "6df9254a-45c9-4aa9-96e4-18bc54d9548b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9cec8fe4-2d73-445d-b3ee-6c745dda3c1f"
        },
        "item": {
          "id": "d93d7388-b3d6-4f46-9ba8-a25da383756d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cb808b2c-30ac-41c4-8059-ffe7ec087721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae2c268-6d99-4c7e-a9b9-30181bc60abf",
        "cursor": {
          "ref": "5f2073c5-2948-4aff-ab4a-17a1111d5d6a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dae9abb3-41e5-40c9-b92e-22ce49abb13b"
        },
        "item": {
          "id": "8ae2c268-6d99-4c7e-a9b9-30181bc60abf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3f45f211-e70d-4dab-bdce-aaab5a0a8747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc0f8b7-fabc-4629-bba2-f6aab20d61bd",
        "cursor": {
          "ref": "64a38153-fe62-46f8-bbb8-f386f9cfd043",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "984b2305-2c1e-48da-9c39-77d30021945b"
        },
        "item": {
          "id": "1bc0f8b7-fabc-4629-bba2-f6aab20d61bd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "79ebd4a2-331b-4292-89b9-f903ad21f234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685c4544-86c8-4c1a-9181-034b81eb282a",
        "cursor": {
          "ref": "45c14b0e-40b3-480d-b7bb-190e869a023f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0fd3a560-34fa-433c-aed9-4c0aa43201ee"
        },
        "item": {
          "id": "685c4544-86c8-4c1a-9181-034b81eb282a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "25ecdcc2-33dc-4251-bc0c-19024006b1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7b66bf-5dca-4c13-bbc8-c080be998395",
        "cursor": {
          "ref": "47a65252-1b06-46d5-9e5b-2fe509407f3a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "68289d36-9402-4cb3-ba75-891dfb413dd3"
        },
        "item": {
          "id": "ad7b66bf-5dca-4c13-bbc8-c080be998395",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "848d5d53-f626-42b7-b119-d4fff295a8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfc0484-aa1b-46ff-91c6-5e6019f69d3f",
        "cursor": {
          "ref": "8e09b04e-efa7-499a-90a3-fdbd273576bc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c779988e-8066-40f3-8ab2-3d9b86159e12"
        },
        "item": {
          "id": "4cfc0484-aa1b-46ff-91c6-5e6019f69d3f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d02d5043-9567-4db5-8ffb-63e9e93fa8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79c5f08-0e4d-41f1-b937-31b8703cf52a",
        "cursor": {
          "ref": "4f3f6f8b-b957-4fcc-b87b-9e163ece2f85",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "37ae34da-6600-47f5-96a8-ff1381627e79"
        },
        "item": {
          "id": "e79c5f08-0e4d-41f1-b937-31b8703cf52a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "317ce59d-ad02-45bd-818e-fc390b3bcbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae83e43-464b-4c07-b280-736faf827074",
        "cursor": {
          "ref": "a94e621d-e2cd-4334-9f82-7ad4455f2e7a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5363c3be-2860-41c8-85e2-008d25809bf9"
        },
        "item": {
          "id": "bae83e43-464b-4c07-b280-736faf827074",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "63e5efac-02e9-4c29-b9e7-8a4ce1bd71f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa5544-e38f-4da5-9736-b711b8563dbd",
        "cursor": {
          "ref": "38e3b1c4-f9e1-4d4d-9f96-1e67ec389aba",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9afb1e95-c45f-42bc-9748-1f6e5716cb40"
        },
        "item": {
          "id": "4daa5544-e38f-4da5-9736-b711b8563dbd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "59577c42-7df9-4a12-a1d4-f0a2f4d0774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4695c9-70cc-4d90-b353-8ed508fb45ae",
        "cursor": {
          "ref": "693f08cd-5392-4772-88c9-ea6e8addd7ea",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3facd3da-0a6c-4150-aa01-9e2ae3f4f5d8"
        },
        "item": {
          "id": "2d4695c9-70cc-4d90-b353-8ed508fb45ae",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ab3394a2-f1ca-4b69-8a1c-1f7661197af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3b9e1b-16db-4a4a-8350-9310f0bc3508",
        "cursor": {
          "ref": "1f014272-fc1d-49e9-90a0-a5829222e7a0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "10e7f1c7-85ac-41c8-b569-1e3f8c08fd12"
        },
        "item": {
          "id": "cd3b9e1b-16db-4a4a-8350-9310f0bc3508",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2d052844-b82f-4e49-b37e-561c47b8a2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69664c5a-6a9b-49fa-a35f-bda004a2dbdf",
        "cursor": {
          "ref": "e131b6b3-a80f-4b46-be53-00d366b3d521",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "10b49034-1315-40a0-89f2-e39d8173c7a2"
        },
        "item": {
          "id": "69664c5a-6a9b-49fa-a35f-bda004a2dbdf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "89e5c8dc-bf20-4f4d-9627-3833d0c587ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a1f50c-095a-4d37-a377-671b5b7fbafc",
        "cursor": {
          "ref": "2a33b844-e006-494e-813b-39f220708a4a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d35687ce-7c7c-4318-aeca-effe110673b5"
        },
        "item": {
          "id": "f4a1f50c-095a-4d37-a377-671b5b7fbafc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a9a43f2c-32d5-4333-8e18-6a18aac88418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4222ed3-26c3-4587-8b15-600db093de08",
        "cursor": {
          "ref": "b394c00f-75e1-482f-b65b-8322e488120e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd8c99c5-1c95-430b-addd-b1896e819824"
        },
        "item": {
          "id": "c4222ed3-26c3-4587-8b15-600db093de08",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "94a4025d-fb0d-4270-a06e-3d39bf355bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139cc01-e9a7-4f9d-9dd3-be9c75d603a4",
        "cursor": {
          "ref": "e885a979-9543-4e92-a00f-41c07caf4087",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bd236884-0b43-492f-8714-727df919b87f"
        },
        "item": {
          "id": "b139cc01-e9a7-4f9d-9dd3-be9c75d603a4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0903d399-6d4d-4d15-a85b-05e20aba7217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea71fc-5806-40a0-acf3-b6a22ad4719f",
        "cursor": {
          "ref": "a2ccbb1f-304b-4024-9a30-f79f3021feed",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "39acddd1-d9b7-4436-97d4-12723e398bbf"
        },
        "item": {
          "id": "4eea71fc-5806-40a0-acf3-b6a22ad4719f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c4b9d2d1-b0f0-45a7-bdb5-3efde436c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7c1bab-bb51-4bcf-aacd-c65905c39d3d",
        "cursor": {
          "ref": "58a9d795-ad54-4e03-820c-db8aa85badec",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "beef9232-a0bb-4c9e-86b9-c6fca7aed5c7"
        },
        "item": {
          "id": "8e7c1bab-bb51-4bcf-aacd-c65905c39d3d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3fc332cb-28e5-43de-8e87-7e2130ac2473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c9d78-46bc-4af9-8e2a-22be95b98eef",
        "cursor": {
          "ref": "91afaa67-323c-4bbb-81c0-7526b81b93a3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a69dc128-f9f3-471b-a126-340a6b8afdab"
        },
        "item": {
          "id": "971c9d78-46bc-4af9-8e2a-22be95b98eef",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9d35cd12-7291-48e8-af10-54f4e1536183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837e5b9f-55a6-4f2f-98a7-5e7be918f163",
        "cursor": {
          "ref": "83829bed-9ae1-4225-98a6-d458146ce6ab",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1827e9b7-4f7e-4dbc-afe1-bcdf46c118b6"
        },
        "item": {
          "id": "837e5b9f-55a6-4f2f-98a7-5e7be918f163",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8f634e61-bd9e-4083-80e1-c39c23bb5060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c87e62-7da4-4d7d-9600-d359f8bc743a",
        "cursor": {
          "ref": "312bde91-48c3-4473-aaec-e60358cfe4c7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "56c6098b-5619-4f4f-9ae8-a3bf0d359535"
        },
        "item": {
          "id": "11c87e62-7da4-4d7d-9600-d359f8bc743a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0945a1ef-0357-4f7f-8c42-c6d640d29f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6274b156-d50c-46ce-bc1d-8da9a26ead8d",
        "cursor": {
          "ref": "44fd8057-35be-48a5-84b4-11be90b360c5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "631d26aa-6e7c-4525-a806-1d27d3f61b3d"
        },
        "item": {
          "id": "6274b156-d50c-46ce-bc1d-8da9a26ead8d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8524f0e7-2eb0-42a4-b3f0-6d67b4cd12f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aea2f9d-e317-452f-8cf3-095788dcc386",
        "cursor": {
          "ref": "0696dba4-86b2-4ae4-b89d-24d27b30af2d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "410385de-6b08-4ae7-a02e-25cbc4b22f88"
        },
        "item": {
          "id": "9aea2f9d-e317-452f-8cf3-095788dcc386",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8afccb48-c2c2-47c1-b82a-eb8bb2ead55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae621cb-ed30-40a0-8686-56ca8e9fd8d4",
        "cursor": {
          "ref": "6073ef03-e1e2-4e0f-9192-c32d981085c0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "558d58e8-5353-43f1-a88e-d53389537939"
        },
        "item": {
          "id": "2ae621cb-ed30-40a0-8686-56ca8e9fd8d4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4bd1f8fd-7452-4d56-a9cc-086c8e2b524c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728b72b2-695b-4177-910d-f5f70446a941",
        "cursor": {
          "ref": "d1e5c106-567b-4d8c-98df-351e6eeafa84",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a19b3d69-3101-435f-b8e3-f4600ea55265"
        },
        "item": {
          "id": "728b72b2-695b-4177-910d-f5f70446a941",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a9e706fd-4351-4505-85aa-e2d848230afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1864eaf-d041-46b2-ad95-e30bddee289e",
        "cursor": {
          "ref": "325d4262-0d64-430b-8f62-cce5c680d1cf",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cb21959d-be46-4625-a476-991d32575bd5"
        },
        "item": {
          "id": "a1864eaf-d041-46b2-ad95-e30bddee289e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3ac92e96-15e3-462e-9f55-f9d61e9b496c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cc331b-29f6-4e56-8cad-78c60eb45c28",
        "cursor": {
          "ref": "90358b2e-7481-4c51-b8a1-8ba32ca5a732",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6462c6eb-b67b-483e-b7cf-9412f50de43a"
        },
        "item": {
          "id": "e5cc331b-29f6-4e56-8cad-78c60eb45c28",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3637f2f6-b6cc-4e5c-af0e-7fb87d893da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2df232-be23-44da-b8e1-0579c3bd6b96",
        "cursor": {
          "ref": "0af2d289-3893-4411-a318-07fa31fa4ba4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "99ceddd7-135a-4f7e-b14e-efa764a085ab"
        },
        "item": {
          "id": "de2df232-be23-44da-b8e1-0579c3bd6b96",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d648a861-b52b-42b9-bc59-63c0f27a9a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe428077-6c8c-4349-a047-13e8246b1d98",
        "cursor": {
          "ref": "e250e519-3266-4bde-9b9a-b111c8cf3ee3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "94003a6f-12ab-4dd1-99c0-540d65bcf730"
        },
        "item": {
          "id": "fe428077-6c8c-4349-a047-13e8246b1d98",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "08af9581-662b-4796-9494-bd3087e4f6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455ecf9b-0528-450d-bde4-b9004e45642b",
        "cursor": {
          "ref": "b3ec5b8f-51d8-4bb6-8405-51d5dbce3c35",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6c7bd2c9-e4b5-4408-9f37-fab54f70927c"
        },
        "item": {
          "id": "455ecf9b-0528-450d-bde4-b9004e45642b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a7f43999-9348-4d23-a467-4b36b6a10859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d053c2-f305-4fa3-98b6-7d0cf0580ea2",
        "cursor": {
          "ref": "820a9d12-70ef-4a47-a8ae-0a00d2ea2bd6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4b27529d-a54f-4726-a29d-cf3a4f8e615b"
        },
        "item": {
          "id": "00d053c2-f305-4fa3-98b6-7d0cf0580ea2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "182400cd-858a-416e-9d95-d93f279a8f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7c1bc7-4273-4fbd-aa80-8ad7977f369b",
        "cursor": {
          "ref": "4f2b8f6c-0321-44c8-9733-c53efc22a3d6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c1ceba75-eb34-4152-ae05-5e2ec5e2b4f2"
        },
        "item": {
          "id": "de7c1bc7-4273-4fbd-aa80-8ad7977f369b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "66f326eb-2d77-4c87-850a-5a16fd139a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34acd5cb-8557-431a-add2-2250cb2c0656",
        "cursor": {
          "ref": "33b9260f-3651-4ac6-b6f4-249a85ce364f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9ca2e49d-c7fb-419b-bf6b-5ef62e151112"
        },
        "item": {
          "id": "34acd5cb-8557-431a-add2-2250cb2c0656",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c783447-1b80-411c-8f25-bca08db2fac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351ce900-c167-403f-9cd6-2217bf8f36bf",
        "cursor": {
          "ref": "e9f7171a-7d6b-4afc-b689-f962b5ecfccf",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c39cfd33-493c-4177-9a60-57234d38cb23"
        },
        "item": {
          "id": "351ce900-c167-403f-9cd6-2217bf8f36bf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8f898c37-cd28-4fbe-88a8-1e85179f7adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bec74e5-158e-49ee-b08b-358f1f8da23f",
        "cursor": {
          "ref": "cdd350fc-0666-453f-8422-057f590f6cb7",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c386b9b1-a90c-4d92-ac16-bd8f99c6ac0e"
        },
        "item": {
          "id": "8bec74e5-158e-49ee-b08b-358f1f8da23f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b43bdf13-3c7d-4c8f-b3af-28ed1c54a4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf56ee5-5e0d-43b6-a19c-dcb629f54989",
        "cursor": {
          "ref": "c48454ef-d4c2-4342-8d25-c01504c41ee1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "408e77f7-05ee-46f6-9e67-72dac50c7816"
        },
        "item": {
          "id": "7cf56ee5-5e0d-43b6-a19c-dcb629f54989",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0689dee8-d075-4887-9ebf-9739906afc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05c4747-6dc6-4347-83a3-f44e21b6bbd3",
        "cursor": {
          "ref": "6af70d0a-4d22-4a39-8782-253407c59be3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3047d8a0-b783-4736-b625-2a10f5383eca"
        },
        "item": {
          "id": "c05c4747-6dc6-4347-83a3-f44e21b6bbd3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5d704fc2-4745-4e71-ba0d-d046da65e9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e523217-3f3c-40e4-8b8d-7d02aa250afc",
        "cursor": {
          "ref": "25a07f8b-7df0-4e2a-90d5-e9f7d388f83a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8c015c4c-229a-4b69-b8e4-aa3312e8cc4e"
        },
        "item": {
          "id": "2e523217-3f3c-40e4-8b8d-7d02aa250afc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "626bc283-ad1d-4f65-8776-d3be35a1f7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6deb63a5-4607-44dd-a16d-fc3032de2d0e",
        "cursor": {
          "ref": "5ada91c2-1563-48bb-b44f-67f9fe39d11e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aee0492f-060b-4aa4-aca6-198a9bdb466d"
        },
        "item": {
          "id": "6deb63a5-4607-44dd-a16d-fc3032de2d0e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cbca24ca-eb75-4dc7-bc24-2d233d17cdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10760a80-2627-4097-a9a4-3028f6c91a3a",
        "cursor": {
          "ref": "d7335723-e92c-4eb5-92e8-2f3c0e6dc8ea",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd783603-62d5-4faf-ae86-489aaf40a546"
        },
        "item": {
          "id": "10760a80-2627-4097-a9a4-3028f6c91a3a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "99fef7db-f26b-496d-a74f-bae5297f9802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d878d53a-c8fb-4817-918a-a5656634d7d3",
        "cursor": {
          "ref": "de6ade26-de91-45d1-a2cb-b1f63a728b33",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b4e9aefc-3039-4a29-896f-950c46c51592"
        },
        "item": {
          "id": "d878d53a-c8fb-4817-918a-a5656634d7d3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0b10fef7-2d77-4e21-aaa9-c264f7415260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388eaeac-72e5-49f8-bd12-a96e0ae0788a",
        "cursor": {
          "ref": "f7ff06d3-37d0-470f-b3df-e6f378e61b87",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e1eba6a9-4582-4e4c-910d-967321fcc4d7"
        },
        "item": {
          "id": "388eaeac-72e5-49f8-bd12-a96e0ae0788a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95b12005-9699-47ce-aeb7-96cb773f0b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4fd350-9acf-4673-a2a3-df7f0acd909b",
        "cursor": {
          "ref": "1d0870c6-576d-4158-9c5e-90bf79bdd5d2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d2161490-475c-47c3-b266-35aee99bd0f7"
        },
        "item": {
          "id": "eb4fd350-9acf-4673-a2a3-df7f0acd909b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ea07a57a-5aa1-45e9-8860-29daeacc8e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6afc958-045f-42d6-86db-221463f97cd5",
        "cursor": {
          "ref": "3fc3f7c9-2f37-453e-8d4f-ad66976098e1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c273d138-5693-4c8f-b795-f732e899b32e"
        },
        "item": {
          "id": "b6afc958-045f-42d6-86db-221463f97cd5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f97c6fac-6ec3-46e0-a005-05d708b6595a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6839803-70bc-4b84-8e33-97387d7ca116",
        "cursor": {
          "ref": "202e4e53-3381-4e21-84a6-d76fa1270c68",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "63d34ca0-ca3e-4195-9169-7ae70cf5e8d0"
        },
        "item": {
          "id": "b6839803-70bc-4b84-8e33-97387d7ca116",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b1f9a0e1-915b-483c-884f-a87ccc9eac3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18be7e1-733f-43df-9114-0545e05a54f8",
        "cursor": {
          "ref": "53233f30-cfbd-42f5-a565-217d59833f63",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "482c2457-b2a8-46fa-b623-24122de2f3e7"
        },
        "item": {
          "id": "d18be7e1-733f-43df-9114-0545e05a54f8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "feb9cc44-0507-4f44-a700-4b3dc10d143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29025572-cdd6-462f-b73a-7760c280e8fb",
        "cursor": {
          "ref": "76868494-cc4d-4778-a3bb-89b94e80807c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ae15fd33-16b5-4757-b12d-1d8b05d81e2e"
        },
        "item": {
          "id": "29025572-cdd6-462f-b73a-7760c280e8fb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d00eda48-0857-471a-b6da-74e84e622dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed91a2f9-298f-47ab-9e0f-38a1142cdc17",
        "cursor": {
          "ref": "76890300-7c4f-4721-be7b-f6d0e9bd7bb2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ac96b86-4787-49b8-a4b3-62866e06c51c"
        },
        "item": {
          "id": "ed91a2f9-298f-47ab-9e0f-38a1142cdc17",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e5775d7f-a561-4629-aa98-c094b0c2e72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da76cd3e-6794-4192-b46c-f7fbfd1dc349",
        "cursor": {
          "ref": "e8bc25c6-0b93-4e22-9a80-912c89a76b2c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "776578ed-57a3-45fb-a530-9d8b86e676f1"
        },
        "item": {
          "id": "da76cd3e-6794-4192-b46c-f7fbfd1dc349",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8edf2649-e30e-49f0-871a-004aa0c218c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20d2825-cb74-4b71-ba93-13b79f27ab47",
        "cursor": {
          "ref": "a6c55652-c700-4f62-87be-8929e02e5269",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "87fa6381-2f94-4b24-8304-dabb1080f514"
        },
        "item": {
          "id": "a20d2825-cb74-4b71-ba93-13b79f27ab47",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e732033e-32fa-4156-81c0-217bdf07eb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213d3304-f81c-46e8-9f96-f6d1b61c124c",
        "cursor": {
          "ref": "49441dd0-5fda-4f12-ab09-69f915a83d0f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "55075a9f-8701-444c-9083-6bba8fe553f3"
        },
        "item": {
          "id": "213d3304-f81c-46e8-9f96-f6d1b61c124c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "837116a7-8e70-4c1b-bd03-1ad1f7441164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4733fac2-0a09-458b-8148-c36fbe015454",
        "cursor": {
          "ref": "fca4211e-b908-46ab-9ecc-300d4b288066",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7f4faec5-a5bf-4149-ad22-7e7ce68d7926"
        },
        "item": {
          "id": "4733fac2-0a09-458b-8148-c36fbe015454",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a7ac3df0-8aad-47f3-9f7f-88bff665d503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b377b-e9ff-455a-94a5-381efc2ca0f5",
        "cursor": {
          "ref": "ecdbe17c-cfe3-4550-9996-41f058237620",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2a95d28d-eb86-458a-8586-f990f917a6af"
        },
        "item": {
          "id": "9f6b377b-e9ff-455a-94a5-381efc2ca0f5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f7f1c8cc-34fc-4323-8c44-0e86bb5d37d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fa9648-4d99-4491-9bf1-a89efb1f0af8",
        "cursor": {
          "ref": "4e3388a2-4a1c-4067-b2d5-e9e3d2b09865",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "20886e88-8fb8-4d0b-a6ea-4cc2d5a3dea5"
        },
        "item": {
          "id": "b7fa9648-4d99-4491-9bf1-a89efb1f0af8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "47fbf893-2c1e-41f1-8ed1-17763dbc1bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01facdbe-af81-45a7-b8ae-f3afa16c8435",
        "cursor": {
          "ref": "f3e55591-b7e4-44d8-8db7-f2b8600325d2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9da409eb-8a54-4ae9-8361-c2dd6539f421"
        },
        "item": {
          "id": "01facdbe-af81-45a7-b8ae-f3afa16c8435",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "53786dbc-d74f-433f-9e9c-da14f084c3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85de19e4-826a-47e8-9a8f-05389f8b85c0",
        "cursor": {
          "ref": "619f9678-ef54-4d68-a32f-1a84960a7c9b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6de7da9e-4778-494b-83e7-c5787ad9bf59"
        },
        "item": {
          "id": "85de19e4-826a-47e8-9a8f-05389f8b85c0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "55160f6e-d719-40fa-b093-d80c9f9bb1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95f1a07-7b1f-4af2-bd83-854bf4d4e198",
        "cursor": {
          "ref": "d251291d-7aaf-41f5-bd53-312104cb1a77",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2ed777ad-4a84-44bd-92c3-68182bb22cda"
        },
        "item": {
          "id": "c95f1a07-7b1f-4af2-bd83-854bf4d4e198",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cd256312-51cb-4b31-b6bb-c7a6d8bff9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32bb61d-ac60-4a5a-8292-baf4f150a237",
        "cursor": {
          "ref": "c9e89355-b697-4d21-b904-e2bfd2c84ceb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ce8fbabc-e09e-4490-a415-b4dd7034fa56"
        },
        "item": {
          "id": "f32bb61d-ac60-4a5a-8292-baf4f150a237",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "387e3fb2-1bc6-4e33-8ead-aafbd4b4125a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d99086e-e00d-418c-9357-b9647a1ddeec",
        "cursor": {
          "ref": "f47dee25-f868-4f95-8482-f42f6a55359e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d6772c91-feb7-47e3-9a37-d1c8825b8be1"
        },
        "item": {
          "id": "2d99086e-e00d-418c-9357-b9647a1ddeec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bdb1dd4f-d982-4023-859a-3fcdd4f511e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cf9b89-c4e1-4054-a1c5-a3691f875ea7",
        "cursor": {
          "ref": "0d82b028-dcdd-4e3e-9c5a-7eee0c0782c4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6122e319-9ae4-4444-989d-aa5ed7e7c031"
        },
        "item": {
          "id": "46cf9b89-c4e1-4054-a1c5-a3691f875ea7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "29b87c21-8b55-4512-8d25-34022a19b37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e352bdb-e41a-4b89-b73a-af445ddd2365",
        "cursor": {
          "ref": "886ef2fc-cf1b-4823-aff2-a6986e1421ba",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "30267396-67fe-4b0b-8309-60263320dc04"
        },
        "item": {
          "id": "6e352bdb-e41a-4b89-b73a-af445ddd2365",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "742d06d2-b273-421a-9b55-d3db4a82bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89af249-e698-4a27-8ff7-bb7772948fa9",
        "cursor": {
          "ref": "5b244b4f-7fd7-4a03-ba53-0113f400aef8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e36db98a-6b23-4a63-be86-91620e878ca9"
        },
        "item": {
          "id": "a89af249-e698-4a27-8ff7-bb7772948fa9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3f8c2f61-3c38-4687-a872-efac6cad5b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a0198-ee86-489f-87d4-7844c1e3a8f6",
        "cursor": {
          "ref": "30600889-3d05-401d-a0a4-bae285be963d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "afa0bf43-6175-4901-b818-95cb71fcc5df"
        },
        "item": {
          "id": "632a0198-ee86-489f-87d4-7844c1e3a8f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a5e2b28a-d1a9-41b8-b560-ea9f0f1dc590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c54cbf-b297-4150-a194-ac9932b82cf9",
        "cursor": {
          "ref": "d109cc0d-ca7c-494d-bba9-b8498c99b2a8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "88457f50-5943-4b50-b175-4f993c5926d7"
        },
        "item": {
          "id": "f1c54cbf-b297-4150-a194-ac9932b82cf9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a3daa85a-4730-41dc-b39b-1727e5788283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0674b42a-666d-4c28-9610-d9b9ee0e2a92",
        "cursor": {
          "ref": "26380ae7-8850-4c36-8f9c-2b4c7c26653d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9787b147-e390-45a3-a72d-4cd601cdd4d9"
        },
        "item": {
          "id": "0674b42a-666d-4c28-9610-d9b9ee0e2a92",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2c975d15-ce56-49a9-b33d-804bfb53daea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ffa031-e45d-423d-845e-9da20285e4bc",
        "cursor": {
          "ref": "3b48930d-5d00-4480-89d1-14d1890a9e34",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "24070760-0260-4147-94e5-767cbe4ab91f"
        },
        "item": {
          "id": "a9ffa031-e45d-423d-845e-9da20285e4bc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e93b699-0dfb-46e5-9628-a3fca7d44812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e9620-4805-41b5-809b-df5111b01ea5",
        "cursor": {
          "ref": "23390e37-ce47-4ef1-911c-63ef343d6280",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50b77b15-3b99-4af1-ab34-e1876039ce12"
        },
        "item": {
          "id": "2c4e9620-4805-41b5-809b-df5111b01ea5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff299837-955e-4671-abfa-daa9271a9a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b227490e-3f2a-4217-ba1c-ccaaeec21708",
        "cursor": {
          "ref": "8743460c-7eb7-40f6-8f15-ffc563fc1503",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f3f81162-f11a-4342-97a2-fce51d7a9907"
        },
        "item": {
          "id": "b227490e-3f2a-4217-ba1c-ccaaeec21708",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f001841-b8cf-4a96-ad25-703ec7747b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaca5110-0a60-4343-bea9-0fee7f9a3d3f",
        "cursor": {
          "ref": "60b0d2c9-09a5-45c1-bc32-dfca1428d9f6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b44eaf8f-3647-414d-ad95-9f3e3bf68608"
        },
        "item": {
          "id": "aaca5110-0a60-4343-bea9-0fee7f9a3d3f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "16ae019a-d920-4d2e-b70c-794bfe6c8c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c223d0-5bad-4bce-abb8-0c0cd2d462da",
        "cursor": {
          "ref": "065138e4-6dde-4e52-8fd2-599ffa734f4c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "10306d2b-3592-41a1-8f3c-3e85d33f3fb6"
        },
        "item": {
          "id": "d4c223d0-5bad-4bce-abb8-0c0cd2d462da",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "376afced-dafe-4c5b-acbc-2e77b59c0c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f092ef6-1c28-4692-a229-c3e8b8dd3858",
        "cursor": {
          "ref": "a780dd77-e727-4b3c-906c-8edb9c5a1246",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "253b6226-e13b-46b2-8960-3cae2e6edb6f"
        },
        "item": {
          "id": "3f092ef6-1c28-4692-a229-c3e8b8dd3858",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "65dfec5f-3879-4df8-919f-cbbe590b0549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15879897-0ec7-4fca-8052-5c403ad949c7",
        "cursor": {
          "ref": "2178b56e-9134-4006-8832-83b890dd0764",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de6a1ef3-8393-4a1c-ad53-15651f057397"
        },
        "item": {
          "id": "15879897-0ec7-4fca-8052-5c403ad949c7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "11f0b063-85aa-41ee-8692-b035e95f88da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e39eec-7aee-4db5-bf2b-b14434af040e",
        "cursor": {
          "ref": "1806164f-6bd8-4682-b8ed-726bbc97891b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e82359f6-627b-4a10-a8dc-ec229e5c0e89"
        },
        "item": {
          "id": "21e39eec-7aee-4db5-bf2b-b14434af040e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a8b0a7c5-0284-4479-9c76-48acead85cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97388d9-4507-4ea4-b522-fc4cd381176c",
        "cursor": {
          "ref": "14aff857-42f9-4ce0-af46-9476718f025f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "33bee085-95b7-44c9-b106-db5fbda3221b"
        },
        "item": {
          "id": "c97388d9-4507-4ea4-b522-fc4cd381176c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d064a821-3296-48ce-96dc-42175e635adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82452150-fed4-45cf-8c9a-b766603d8c1f",
        "cursor": {
          "ref": "05b63830-67d6-4288-9ad1-b4e4b98adeb1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "da02d100-87ea-4289-9135-3bfd18bec518"
        },
        "item": {
          "id": "82452150-fed4-45cf-8c9a-b766603d8c1f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "395dfd3f-b410-45b0-9b0e-94a4bbf18fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b74aea-e938-4f81-8430-4b4bf89c14ca",
        "cursor": {
          "ref": "689abe01-51a1-488b-a213-12bea78860bc",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "251206eb-2777-4fd5-9440-5011ff7446e8"
        },
        "item": {
          "id": "a4b74aea-e938-4f81-8430-4b4bf89c14ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d891707c-8f99-4046-8cf0-5bfce5354814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50272101-8e03-4388-b8d1-f6d10c757286",
        "cursor": {
          "ref": "2a1b21eb-35c5-4f88-afd7-1f622e34c752",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1119e585-3004-46c0-a3dd-9db009b749f5"
        },
        "item": {
          "id": "50272101-8e03-4388-b8d1-f6d10c757286",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "da0710c0-8e7e-49ea-8dad-0332af5a0800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0698276c-36ce-4fec-83ce-326150f75d3e",
        "cursor": {
          "ref": "18403c05-ed83-417c-add7-41246c739c8d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3afa06b6-c6e9-4b08-9cef-869e9e86aaa9"
        },
        "item": {
          "id": "0698276c-36ce-4fec-83ce-326150f75d3e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0cdd62fb-266c-4eed-9e56-8feedb47a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b277a-ea78-4e8f-b381-2ac9a8ca2bc0",
        "cursor": {
          "ref": "20cc1bc6-3166-4e47-8625-bfe6469307f7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8c2eae4b-1a8b-48e8-89d2-628a32f07743"
        },
        "item": {
          "id": "7d5b277a-ea78-4e8f-b381-2ac9a8ca2bc0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4e2c1855-da5a-4fb1-9164-9d6edaf31bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3cf63d-3897-4024-b270-f167b3a6ce40",
        "cursor": {
          "ref": "9560158a-8090-499b-a65a-2a5bb45a3f04",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0b57efb6-1590-4558-b100-d0444d4f0f6e"
        },
        "item": {
          "id": "1c3cf63d-3897-4024-b270-f167b3a6ce40",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "430762db-22bf-4c82-bbe9-d856b1655d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4fa24-6a8f-401c-827a-d0de628608c7",
        "cursor": {
          "ref": "143a265f-29ca-4056-a8af-9a8d69f1de62",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9ab04ac3-6063-42ce-97c3-5b9bbc84d024"
        },
        "item": {
          "id": "2fe4fa24-6a8f-401c-827a-d0de628608c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ab7df2a8-8f78-44aa-a3e9-a8945878da73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa09be2-73a3-47eb-98bd-04b6fb84976d",
        "cursor": {
          "ref": "15d67ee0-9cf6-402a-a4ae-a40883f0fe43",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3a1d237b-8649-409f-b0e2-592acbddf3e6"
        },
        "item": {
          "id": "7fa09be2-73a3-47eb-98bd-04b6fb84976d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7c0bcf00-f3b3-4188-a2e2-96924e8291d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163cc8c2-c122-40ea-9a78-c5bfaf8a9b54",
        "cursor": {
          "ref": "7a2ad23a-2fa3-4870-922c-63e10c24d6b3",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3c0c7b71-07b3-442f-893f-25ffe8499e2a"
        },
        "item": {
          "id": "163cc8c2-c122-40ea-9a78-c5bfaf8a9b54",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a553aacb-7fa7-4e8f-b719-62941569536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c13f90-9de3-4747-9ec2-bfa5d99c325b",
        "cursor": {
          "ref": "c60be518-7aaf-4750-85a1-b4e10d72e8ec",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2155c9e3-0d3f-4aad-90d8-787635e60935"
        },
        "item": {
          "id": "57c13f90-9de3-4747-9ec2-bfa5d99c325b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a35a2fe-8731-48df-afda-0346cc79649a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1598147a-8d03-4581-80d0-16487006fc29",
        "cursor": {
          "ref": "26276475-7af4-42fe-9bd8-fd9cb4134eac",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1dcfebfa-caae-4813-85a2-3a1663de7ef1"
        },
        "item": {
          "id": "1598147a-8d03-4581-80d0-16487006fc29",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1ec4b2f6-8138-4a23-9f9e-99f96480e9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3585331d-d992-42eb-b86d-c5f2ab357596",
        "cursor": {
          "ref": "c61a7f61-0f93-4689-8af8-791dd22f5feb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6fb33550-2758-4e00-9db8-59322ed3ef60"
        },
        "item": {
          "id": "3585331d-d992-42eb-b86d-c5f2ab357596",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e1d3cf67-2048-40e2-8bec-3a3d75f5f7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d1806c-e944-4a25-ae64-36f263d1b6e2",
        "cursor": {
          "ref": "db1721d9-e647-4c02-b147-4415eedfabd0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7d3c3fd8-77b7-4325-968c-45b71f3ae449"
        },
        "item": {
          "id": "f9d1806c-e944-4a25-ae64-36f263d1b6e2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a0a51044-243d-4f9b-8af2-7d4eee8938f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb15c82c-8cf9-4feb-868f-99a645dd758e",
        "cursor": {
          "ref": "4f08226c-fd8b-40ec-9821-05ecd1e8d2b5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2ec4d507-b1df-4dc9-8e49-28eca8a64987"
        },
        "item": {
          "id": "fb15c82c-8cf9-4feb-868f-99a645dd758e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e9b510a4-24b7-4a62-8aac-2cb5203f697b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a54aa53-6ec0-4277-aece-9d793a0e0ac6",
        "cursor": {
          "ref": "465716fe-e887-477a-945c-e0f0d9f5dbb3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f8fb80dd-4db1-4f29-8ed0-fdc3a12de915"
        },
        "item": {
          "id": "7a54aa53-6ec0-4277-aece-9d793a0e0ac6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "53d7dd35-704c-43a8-9407-94d01ded7663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c167b8a-a1e3-41e2-be39-c41be1c2b868",
        "cursor": {
          "ref": "45a8bd1d-fa2e-46d0-99bf-8c20b7e85c56",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc7ebcdd-6fa8-48e3-b768-17b85fcb912b"
        },
        "item": {
          "id": "5c167b8a-a1e3-41e2-be39-c41be1c2b868",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9fa54bb2-fc13-44b1-9139-564f30b69a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa41c7e4-3ccc-4c0a-859a-2b317be4de3f",
        "cursor": {
          "ref": "4446a6fb-865a-43fd-b35e-fb4651980864",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db42214a-04a2-4900-8afb-acb57abfdd06"
        },
        "item": {
          "id": "fa41c7e4-3ccc-4c0a-859a-2b317be4de3f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "232836a3-b3b0-4500-8cae-686cc010a380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f62db28-c299-42a7-a030-9bd31b2a64de",
        "cursor": {
          "ref": "042b389a-7de5-4c20-9a2d-c10f3f7b8c63",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ebf7f0c5-e879-4f6b-854a-257ebcece8a5"
        },
        "item": {
          "id": "6f62db28-c299-42a7-a030-9bd31b2a64de",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ae887c0f-60ce-463e-b958-e8630fe2c274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25af0383-c485-4431-8804-53e59c78a7ad",
        "cursor": {
          "ref": "a91260eb-d042-4886-b752-de0b4ba2023e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "aa7d93a7-27ae-447e-aa84-35632c079516"
        },
        "item": {
          "id": "25af0383-c485-4431-8804-53e59c78a7ad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "119d7e94-38ee-401f-b5a9-1d8540ed9029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265bbe4e-e502-47c8-b543-eb2920c61744",
        "cursor": {
          "ref": "44264900-4865-46c6-b30a-b6f98228151a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f811cf56-f2cf-473c-84bd-0c7674088bd5"
        },
        "item": {
          "id": "265bbe4e-e502-47c8-b543-eb2920c61744",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c9db0a4f-ef0d-48f7-8f3a-ab0cad3c48ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca967ec-781d-433e-96fe-6b43358d9fd5",
        "cursor": {
          "ref": "f5781a3d-1c68-44f6-b7c9-d3c9b6695991",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "111647b1-bd85-4254-b949-7a763333a98b"
        },
        "item": {
          "id": "6ca967ec-781d-433e-96fe-6b43358d9fd5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cd4d3a29-c541-4a95-ad71-341e1310767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99de357b-19ed-454c-9d4a-a41102f36560",
        "cursor": {
          "ref": "669dea12-cc34-48e5-b2fa-21518ce3e7d5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "efdd6978-6184-4aca-9639-c70e7c891d5e"
        },
        "item": {
          "id": "99de357b-19ed-454c-9d4a-a41102f36560",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ac030fe1-a2aa-401d-b8dd-4c48ad218fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a64d3d-64bf-42b9-b995-5aa1d47b8094",
        "cursor": {
          "ref": "3913dec1-220a-4fb6-8f9c-31dd44e8f195",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1e24bbbe-5cfc-4dca-9b1f-d61eb745fac9"
        },
        "item": {
          "id": "47a64d3d-64bf-42b9-b995-5aa1d47b8094",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9abeef30-cd6b-422a-9ff9-a05b83e97b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a70bdd0-b195-49dd-8639-78e6be249742",
        "cursor": {
          "ref": "d1946083-6315-4e74-994f-41868978aaa1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fb66c6c6-b116-43ca-b99d-e87081bb0e10"
        },
        "item": {
          "id": "6a70bdd0-b195-49dd-8639-78e6be249742",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fc2ab6cc-ecf5-43e4-b49a-5ee871229581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "aacf7308-60bd-4ddc-a72f-1c4dd4696b6e",
        "cursor": {
          "ref": "d8d10e4f-36e4-42fe-9cfc-da02db44c8f7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "45cc00b2-6583-4d00-8955-4fb171eea9a3"
        },
        "item": {
          "id": "aacf7308-60bd-4ddc-a72f-1c4dd4696b6e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cde91492-a878-48e5-a618-68669ab0c301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "df61be03-2484-4237-b193-3d83ee3e6e51",
        "cursor": {
          "ref": "b1cd4a58-c7b1-44df-8d7a-0bca9bf50e9c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "22b01e94-e13a-4e99-8a3c-f4ff33cbd6e2"
        },
        "item": {
          "id": "df61be03-2484-4237-b193-3d83ee3e6e51",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b07d32b0-eda4-4017-8040-206a83daebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "afde78ec-51aa-4dc5-b1b0-f2ae96034ec3",
        "cursor": {
          "ref": "203ec22a-0ca2-4e70-ba8f-d931b3e6185d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e621e5c-c044-4d78-8ae8-959a6033d5f3"
        },
        "item": {
          "id": "afde78ec-51aa-4dc5-b1b0-f2ae96034ec3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eb2d597c-0a20-40b8-bd5c-44862567ec1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afde78ec-51aa-4dc5-b1b0-f2ae96034ec3",
        "cursor": {
          "ref": "203ec22a-0ca2-4e70-ba8f-d931b3e6185d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4e621e5c-c044-4d78-8ae8-959a6033d5f3"
        },
        "item": {
          "id": "afde78ec-51aa-4dc5-b1b0-f2ae96034ec3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eb2d597c-0a20-40b8-bd5c-44862567ec1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6e9e2d-3b89-40f5-a648-6a53c36e08b0",
        "cursor": {
          "ref": "aec97e02-65e3-4f67-b1d7-0ce792f81160",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5fc20535-885d-4edf-a96f-d39c01dedb12"
        },
        "item": {
          "id": "9c6e9e2d-3b89-40f5-a648-6a53c36e08b0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a5a1c72a-f798-46c7-ace8-fb54c0b90952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2ecd63-a020-47cb-80bc-1b4e98bbe33f",
        "cursor": {
          "ref": "08e56291-bcab-4ad1-88c0-50394b2c8a8d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4c579178-6061-44ba-9a2e-70ee33d93540"
        },
        "item": {
          "id": "0c2ecd63-a020-47cb-80bc-1b4e98bbe33f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2d2fce57-7912-4901-86ee-2313a516dc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}