{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "031dbb09-9906-460d-a50b-2bff095a304e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5eb2de07-51c3-47aa-aaf8-7de983f69364",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b959579a-7255-40a2-9466-525c1736dba1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40cb6c58-84d4-4dd7-ad45-87f5f010f653"
                }
              }
            ]
          },
          {
            "id": "acfeb6ce-b460-477b-a394-84fca5d37792",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6702f2ba-e51e-4bc7-8809-4b088bce039b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b6016bc9-5cfe-4081-a85c-78c9e876e7fd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f300b22-b24f-41fd-96ee-fbddec539d84",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "287c8303-bdfd-4df3-94f9-53efded7eb8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5652ed37-154d-4c9a-bd9c-0a1b442d0762",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d07244ef-3036-4f99-a916-d9f665bb0b5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "577ed705-a345-49da-9b3f-33be7ae57bd2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "329bd912-ede3-465e-a42f-fee69fbd7198",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff0c83e2-4525-4c73-a00c-02809e17eee8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc4a373a-7481-4a41-bebc-556786682f6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5408a61-eb0e-409b-9464-46b7571cb109"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eaa9a922-2365-42a1-8fec-01dd64442891",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5a03b2e6-55cd-4e32-926d-27a216354f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9333dcfb-e6e6-4e27-aa14-cd6901358565",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95b50de7-5979-4039-a2c0-57ea083397e1"
            }
          }
        ]
      },
      {
        "id": "0e1dc884-3ce1-4254-8690-75eb26cdedfd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "855270db-e99c-4466-b781-8348c2e7e00c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6de2f45-60c5-428b-b651-085cee3990d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "095e7383-1bbe-4a0e-adee-d3eaf19efbe7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f790f673-389c-4be3-bf83-2ab110ff88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ae971a1-5a93-48ad-9b2b-faaa84756fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b0111-e889-4655-bad3-a9563f9ecb0c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee39c7c2-8b39-4d63-b9f7-b078f02f6e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e430558e-502b-4915-832a-6faf28ae2e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0389d05-c07e-4618-a3b6-cba9bb30c8c3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b0647f-c6b8-45e9-8e1d-9bf8f2c741b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a606510-4e76-4b0d-b547-1f014fe93de6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "620d7193-1a49-4b7d-ad3c-550b3200b8d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a04e3bc-9fa6-4e99-947f-228ffc9e537f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d7224b-cdcf-4e3d-9a82-cf9dce5231d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be1440dc-9c9f-4b40-a6a6-72d3fbe4cb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f6b217-5796-4f50-8c0a-853ad0d9d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f9203-dc51-4cd9-842f-fd17bef83445"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f6ef44d-db45-4d61-947f-c14fd5dc8f66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0d52c34-2ec4-4d1b-b848-a147ad53d39a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e509bf0-4854-4d68-a86c-7460a7868baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "378df9d5-3ed4-4bb4-9126-8b2efa60145e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9b0819f-bd08-4cf8-aa54-a50ec2013448",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d2b42c81-85f3-4e44-939d-cc8d586a49d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c5b35ca-2a9e-4a2c-98f6-4c7679ac134d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f4ec25f-45fd-42fd-929d-ec711b3ea96c"
            }
          }
        ]
      },
      {
        "id": "c4c337ab-f32b-42e7-939a-2604d076d8d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5358f0f2-ff33-4dd2-918c-2a575ffdb682",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b02840c3-6ed9-4fe7-9ea2-8afa2a835ef1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8cfa3dd1-8088-4666-a672-92a15870b920",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627b3b88-12bf-4214-a962-6d57f2bf3ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2423330-8c93-4915-896e-ebfe0affb9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0453c9-6257-429f-a244-42fec9133412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d387f50-accb-4a4b-9faa-b97dbaaf996d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a644ef03-4913-442c-b237-affada82f4f2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f890cdd-670e-4f72-b174-eb625a809533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2a3628-4fda-4649-8678-a54ac2135de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fc53d3-19a1-42c6-a434-58564182ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "042b4f27-1ced-455c-8666-d3151c0a3d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26411bcf-c885-49dc-8269-db44914fe01f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd869d7a-76d1-48b8-9e26-17cab89a7a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3d4ca8-4847-4233-afb7-81bf627dbc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948028a0-378a-478f-b8ec-5001ac455371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "351017e0-167d-4e11-96f7-3fca8c1e3c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98da7a6-2993-4336-a9fd-d7258507e05b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904c9385-3c39-41df-a696-9c834ac148a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ab24fe-4e5b-46d6-97c7-fed8bc0b5410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaa1cc2-5437-4260-9032-5e6b1f2a574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b42dc52b-f73d-453c-a223-4e89f02347ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b408d1b7-7d1d-44a6-ba2f-c333d08e81ae",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea18473-fbb8-44c3-aae5-81670283aa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6924423-540a-4a62-b15e-05ae346e73a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7d282c-e103-4d43-a877-4a12b929746a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b962cbb7-872c-45b8-85b1-f974a97294db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6081e5-1c74-4b18-a559-1fe2a276ca94",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0147c10-9a8d-42fb-9b2c-ebac2ee380ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b06abf-98dc-4c6d-9479-c5fb259d6fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8584ff-7309-4f77-a492-be196562161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d04dc8c7-4588-4f5d-9fc8-737238930e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb47cea-6a59-4f50-83ac-1c6ae1d63172",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8219980e-9300-45d2-8e5d-4bd2545f6f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c174271-d648-426b-8976-003bf0991dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2724fb-cafb-482e-872c-e55d2c18830c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4942839-4468-4b1f-82b5-9cc3d4fd2173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dbd5dc-1a0d-4290-bc20-0d320bc351bb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225be326-6e6f-47ab-9610-6189fd1c602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61a090d-1070-4120-9ac8-8e886cba3266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2983f4b-2739-44de-951a-d323ff95fe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dce943b-9483-45cc-bf5f-78957a8aecb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b66f02-2541-41c2-83f8-094ef4f0ab92",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08aefaeb-e3d0-41d2-82d5-254d0ebbb507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6202ba35-6f4e-4f92-967e-9f4166dcd78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8439d8-84c6-4749-97fc-fd7b1b29b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab6893fb-3482-43ba-8a26-b7b983cbafb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5616f2a4-3173-4d56-ae83-1784fb132cdb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db7ac95-72a1-4a9f-afe4-4716e830cb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dce8ed5-60a1-44ed-927f-980de182a66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350a818e-536b-46ab-b436-c11e61692533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa2e01b-b4a4-4017-9d1f-ff0d3c844a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32883ea9-d7f6-46bb-94b2-27d9a8eb6113",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ac04a4-e3b4-4d31-bf51-a6e4fbf0d107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e55b254-f146-4076-925d-16113117f434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662622ed-1eb8-42db-9c8d-4f061af826f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16ee99ef-b54e-4b5c-9247-08f9b00f952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958a6539-1280-410a-94cc-89b075b7d6d0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cabb27f-4ce2-4fef-bc12-ed6d8a53af1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10af28aa-c384-428e-be75-beb10c14fbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed550a89-ce6c-4311-be53-81a0cd126649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7300962e-e863-4334-ba32-d508a57ffa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dd22da-88d8-4fc9-a40c-a5457cf65bbd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45cafb2-c6d8-46ea-8489-660060b69ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714a463f-a9d0-457f-899d-2c71179968c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ac347d-bdc7-4ede-86f6-71fda0917c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36ee42c4-9697-45e3-83e1-54baf2be8b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15892c06-26e5-488b-9ed1-6acc8f707088",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411c55e8-cf64-439e-946e-a9ea29a75e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9878828-5374-4987-b0c3-0ea75c4b90ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f952ab2-04cd-43e6-a9ec-e62fccc7855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23ec6e61-9341-4ef9-a92a-368c4b0c194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9948c314-a642-444b-a85a-a21df70a3b36",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fe4a17-b9ac-4538-bf36-d412a0a63910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9af5bd-69cf-4174-bdf9-1a40f1a7a955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0852e03-cb42-4bf7-922d-aecadf16f45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbbac8a1-0ae6-4913-b997-1ba5c852705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea74721b-80c5-419c-9896-4b20593e2ac6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ba925d-382c-4c5c-9c4e-005baa51fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263061dc-885f-42f6-9a98-86497a16ba2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf5a206-1cc8-4c77-8f29-5852615e2b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b39ce56-39c6-4f4e-940a-4063ca23b31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e8f09-9e84-4865-9266-5333efabc3d7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc43c56e-4b2d-488c-b739-1fdafc5d4ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e27c4c-e83c-48d9-be38-d2553bc8e70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573b9dad-0ffc-4db5-be4c-3a4123219191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bbd74e2-2b3e-45db-98d8-11b4e413c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327fc462-5ab5-4918-acd8-2760426499e8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05618241-ab5b-44f6-ba3a-511a4ee331e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5b8881-bdbb-4d4d-a824-c97e21dee95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84614d09-307c-467f-933d-7e93db64f362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c4329f-48bf-47fd-a026-aeed3f45a54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd308f-5f18-4168-8e2e-b780b49dd304",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c6f858-a3e2-4f51-b8ad-f4c546ba3a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468b1059-126a-49b4-b4f1-0cdbb6f8668a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaca393-23c0-4ad1-8f93-36dda6a2b576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f45c6efb-7717-4a6e-97d0-899f1e119002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d2b36-158e-4029-ae41-9cfdda1cfbc7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33ff8cb-72b2-4bba-817b-ea27aa14221b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff2d0c6-99c3-457e-8647-ec2f71d29bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991a50e9-c154-4796-b93a-c96feaa71a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9218f43-6aa9-4f0b-9052-decfbbeb8e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4474e1-2938-4f84-b839-0571c3a273c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0eb825-f7b4-48ab-a423-b8d5a5374254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911a8cf1-e803-423a-bdcf-6a0c498a4b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e58ba4-87ec-49c0-81f1-b0c21f797cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e33435-d222-4d45-a100-981a25eee94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76df12-c87b-45fe-8d95-7c232a7af496",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4de0c2-bb37-4bcb-83ef-6b4c6302558b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c069cc0-eade-4523-b4f9-a74e2b7288ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4363e6f4-2f4c-4770-a970-9b8342f9f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c427c21-c870-4bf0-96a3-40a4ac0a340d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae447c1e-6bbf-4e1a-bdab-dd6cdb804bbf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea60ca6-0a88-465d-8b50-c94eae4c9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b6f0d4-e1f7-4a74-bd73-69c9b1454c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29a314e-78f9-4569-bc6d-844b654a3d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaae6393-ee17-4d23-8f27-47b799c4311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968976e4-a2b9-40f9-bd24-726fda8f139f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327144e9-a5de-4020-8dc8-c0be5f1a3abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ec8817-6129-4a94-ab0c-d5914e3b886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3bd681-73e4-4cdd-be7f-b80acb5e4f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2043e77b-5eb3-4885-bd38-fdc2bf9083b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31059ae1-b6d3-4b48-9c94-ca09037938f1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1ba04d-ac92-4e72-8920-4946c5a2c752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cf4979-ea5f-4f70-a459-262d75613467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf01ea1-92da-4a87-b891-9806138ba23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2f2d25-940a-4e76-92ef-60691ac11f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb34452-59a7-46a3-9da1-04c0915c17e4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f1d5b3-18a8-4f63-99e3-1988e15fbd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b9badf-5928-453d-918e-eb55eb78cbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffbb3d2-6764-4654-8838-dc69783bcabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7aeb31-7204-4a67-bd90-660918ffe06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696c98b2-096c-4564-bc8d-151d572a1748",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf04b9e8-cea8-46d6-b057-270253a40013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb3fe60-a388-4367-beb1-cac495ad61a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a64c3-4123-4432-bf26-894d648461ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b66365-e26e-499d-bab7-c887f1068b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cffb15f-95d1-4136-877b-bac0c0bd33a1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6153eaba-0c77-4e25-8896-a6b35de4cc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15700574-3374-4862-ad06-718dd94f9f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed989631-6f09-4307-b8a0-09023cd37ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8698eb56-9722-4997-bd04-c6349dd31ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb30576e-963f-4bce-b424-04b4818b078e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae70028-b666-4917-9aa1-0f81daee1be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99766ec8-6ae9-4089-b659-cf6beb4e75b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a16f3d4-e852-49e6-9264-e5813dbffc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d6bd0b-7b85-468e-b6ff-d47e1724d868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35b0085-ae6d-45ed-aa3e-bd7bfcfdc6bc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716df388-be6d-475e-be47-e9f7f0566223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb6c6a8-b488-4d7b-975d-22ae7e09531b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafde9b2-766f-46dd-be06-2ab8499effbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee93032-b13b-4dbe-a44f-bf944598022e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6268e85d-bd7f-4fcd-8a97-f36567846320",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0fc410-3196-4fc3-b84a-cc70af716e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11cda4b-ad7f-4bda-a13c-4084eada0632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef641f72-570c-4458-ab99-a0e5f29343d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40130c5d-d862-4838-b413-4a22b818f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bad3ed-d580-4d7f-87de-e6590aa3262d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a107c7-9f4a-4683-8744-813461b5977e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6acdbe-ea47-455d-b53f-b9cd37b04212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510b799c-8e1f-4e6f-adf0-e3e27456a030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6dd9275-4585-4ddf-ae5b-4ae78910bc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d103f6-ddfc-43a8-8482-2e4c13da814b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f219e49-73df-4872-8fe8-f3370bb131bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2549e4-859f-4201-8de4-cb08d4130d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9387cfb-5e41-49a6-a1ff-b375321d1609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7364c5e-aa79-4d06-ab2d-64172ae31bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c319d179-c06a-42fe-a5b0-c28cc1a950e3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233b7476-a99b-42b8-a4e5-98087d516e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42efb75-b1c3-468f-b82c-41a93791b7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eed7800-2813-4c6e-9cad-ea2142bbc2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b05680-a79e-4652-a0f0-4bb43b943936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3225ef4f-ee98-4756-899f-8c72a8643bb1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab48353-8363-422f-9a5c-8e7f37c440e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d553f7-6b19-4e17-b3b2-4d9dcfa7533c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb2799f-4f33-4f19-af3d-17b0db315297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b00dede8-ba10-4e93-bcf1-733fa14ca6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d230d404-5016-456a-acd0-45dbdad9ff50",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd5e417-a2e8-4a5d-accb-31d1a2b71b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87473223-ea3b-4133-b292-56708dd86617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad157654-40dc-415c-90ea-04ee5d414bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99217751-c542-4c32-a637-3422accc0429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367445e0-38b2-49e1-8787-23a2037890aa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bae95d-732b-4446-b2fa-7adf758a0a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04143d9c-abb8-4ee3-9ba7-1592f62bfc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f4635b-8c9e-4fac-951a-835635f0f29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "366b7afc-e646-43ad-b2a8-34e278482934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6186a5be-0aad-4ba7-916b-a07203c69449",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b205f8f5-421e-4172-acdd-514818cb93d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a68006f-a285-4280-bcee-376b454609f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f313fcc-07eb-4d62-bb19-a6e609f0d19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa400f4-3b7e-4d2b-b7ca-cfe213613c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d0270d-9df0-4d20-b542-b6607a5414dc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73705b57-71cd-43da-a32f-fd5d8e5a0c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f478bd35-7562-4eb1-b7bc-b0d37180a5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591a56f3-5920-44c9-ab9c-7edb0cbefd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62620e6c-355f-4d53-9bc5-2bd6ac853559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e89f8f-7b8c-42f6-8ab7-08ff40b6309d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296e4a86-368c-4b0d-8302-6ad8de65e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c133cd12-0f63-4cde-997d-2d9fd3ff1e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc51a0d-8dcc-45cf-abbe-a311bd56985b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb815752-8c18-4b04-a77f-e60493040469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c798a8cb-0ba7-49d7-a373-61937b6d536d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588397c3-fa0c-4661-bd52-60a7116e6116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbdfb77-d15b-4035-b191-4c7bd04c4365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb0026-30bc-4d18-9c88-4b2df0d51c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4f89e8-2a35-48da-822b-c87c91278f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c057e9-ab5d-443d-aee1-698aa7cbf19d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299302d2-ac21-4373-889b-7dee794894e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709947b2-1ab9-41d7-8aff-6c0cceda8dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bc683d-5a9e-4827-a522-7135be6297c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "48a01e44-4002-435a-b76c-dd63842f287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3888e7b5-9462-4adb-9397-d4cc9d1db9c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd46bca6-5c50-4f7f-8c8b-f4c095bf49d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657598ba-29f2-4438-8335-04a0f7e0c092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4534e94d-d199-4360-905f-a9a1086ef029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b52943e6-24f4-48b4-895f-4df60cb18895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcde53a-545b-421d-9848-eb37c0f09d30",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f9af9-0bf2-4021-b688-5c21de1ddc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d354ab2-0723-41e8-961b-c899532e18e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae95d4e3-69e5-4ef4-9e04-234d3407f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3435912e-a8cc-4862-80db-2f575fa06022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6019c2f8-bf5e-47b1-a04c-e6cc7a40b2f7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a0a518-ca7f-47c2-b034-000eba5c4a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38182a1d-5719-446e-83a8-7d55ca726e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445aa278-87ec-42be-9e79-7d67085cc649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea571574-9498-4720-b69a-309c1b7bdc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e28046-b1ce-45df-82d4-b09e6367d174",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaecb44-8497-4be4-ace1-131f6e64abc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c543bc56-d60d-4b4d-ada4-c4e7ea258906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd5c862-7f99-482b-9e60-50de16f197dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec58ba08-6751-4590-a098-7f0909d6d0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4de453a-f28a-4862-8805-e146ed4a70b8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a20b2f5-4184-45a5-a526-b8b3f2a3cedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644798e6-aa69-44bd-92b1-a46504e73b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579a354b-d9fb-4323-a514-cb67cf8786ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9ae380-ab29-4c48-92e6-10ec9805d98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad64f54f-1505-47f4-b696-c72ff32703cf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de7f695-7380-4696-8730-5bbd21c488e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bb4a79-78e1-48b8-ade9-4ae7d5319da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c50d17-0880-47d9-bbaa-7d4d3b0e7f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5559857e-db74-416c-89e4-38e2744aa971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66568cfb-3ea3-4423-b6eb-4388500f641a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63655491-96a8-47b2-9d65-1defe7519aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefa0a7e-10b6-42fd-8ad8-932a15614a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57123d79-30db-4f90-9729-e80a8a14ef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b3eb5e-b411-42a7-ab17-1e3b42518301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a700553-4d1d-435e-a875-d0e356a12017",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8008a33e-e539-4b7b-bb47-93d052032c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d276040d-70b6-4012-ac1f-77707f0e9640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6ecc73-2bf0-49cc-9c04-6cdbf7a4f245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8b8f54-ac79-412a-bae9-ec869df8da8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f700ab-039f-49bf-b176-6664f2b4cd2e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf232f1f-66c6-4e75-863e-e767541abcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcbf855-4979-44df-a7a5-639c8289294a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf862a-b2ad-4109-a0d0-57a9c95295e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6b3df5-f0fd-4de6-8e56-11b1c0f5d559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913dcb64-7853-4209-b561-2516675a4e12",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f4ce55-7585-4a2b-be89-0e1d1b376460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80086dd-bc10-4b84-b82a-dd4a84dfe232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd217e7-909d-43d5-8709-02a0c1a6548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8a0dbe-0a4e-4f20-8b98-0f7d2d69cae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6161fb-20e0-4f72-8ece-86cb8bef8957",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff95ea51-f67a-4959-900d-96940a410c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6574fe77-508b-4904-b972-237e4a729f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc33edd-de25-46b9-aa41-a5a34071195f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f41fd22-cc9b-4c23-ae04-311b8eef13d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0254b14-f818-49d7-9dfd-617eb8fe6591",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e72f6ab-6faf-42ea-a520-aeaaa9bb2a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9199e716-da60-4bb4-a27e-560bd6867e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3d3843-b85d-48d1-ac5d-6df18aaee408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "924db021-5ea9-452c-917d-8d48de8f3080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0f4521-362c-49bd-9be1-7d6d5dfd0f1f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddf5094-73de-457c-9bd2-ca64d804c255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546f3d35-a282-4cbe-99a9-aadc39745ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8935828b-b2b0-4e84-95d0-eb6ba562dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74f618b-c65a-4b13-9583-8ad6f030959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ca0f3f-0c1e-4b33-a05e-8ef201e6b244",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e79a70-4096-4a5b-a17c-d898b5abfd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34a3444-6679-4405-ae8c-8b18d74b8baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900a67d5-317f-40ef-bcb6-86fb78080d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e7e84e-8970-4c06-9521-550d0a5b16fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ffa95f-f5af-44d0-a722-b64d659ed2bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fadcf5f-4c99-49af-b514-2c0b8d080c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20aed427-6c86-4e3b-8951-4afee5b5f1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1ca8f3-b1ac-4f73-bc71-7d27fa9ecf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7042d0be-6ac4-4394-b705-7bde4ec4e0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e37263b-14b0-437c-a7fb-7de4796c3cfc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c9c7ca-45a4-4754-972c-39b19765aed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4af9f79-002f-453b-9b4d-0ad7c0f9cf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfca0430-df2c-4b9a-838d-374461d2cc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "879b0cd1-7f4e-4f93-9f07-5158560809da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0719d15f-02f6-45b8-a94c-211e6a717ef7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ada3086-915b-4ac4-bd04-a6baf5b77deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c5aab0-1de9-43c6-8e16-1723e4a78d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff3c80e-b7f1-440d-9870-88adfd220cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fda388e-f534-484d-acb0-3c7ff29a1e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71b7782-c2db-4d90-8008-df1b97906f97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46052020-8346-435e-add9-91ac778b7bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f66fba7-1f71-4118-a73e-8d3ef795c58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f7e13a-73d7-4f72-9beb-dc0dd0c37767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05efcbc9-523e-4837-9b90-1087532a854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cefe1c5-9df6-4830-9834-8a1ef12563b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdea971-9b44-4931-8c80-60c1a4e4b0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47a2bc7-909f-4cfa-9132-6cedb9199284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daeb800-0a6c-4c14-815a-0ef97787cad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37c70133-7c8d-4b2d-b7b0-6848e6c524ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a02c16-0abe-40fa-90dd-09ccb8243755",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e86a8e8-8ca3-488d-ba69-37b7eebf047a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d72d475-2656-482f-9029-5d2086a7de8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e7caa1-16eb-48c8-85dc-2c1031ced41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee955355-4167-4514-bd0a-5855b4c02832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1743624-ee6e-4d57-be9a-9ab258c2ccdc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14649cfe-7e4a-4e91-91d5-301928d78b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9e247c-97cb-4603-b686-f2c751c3c85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a91ac4-dd2f-4cf2-8fdd-48f9d1c24be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5691d0-5e77-48c1-8ff5-91ee5fa40ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234721c2-3b8c-4240-831f-31dde32bfb9f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51923f5b-1ddc-4a73-9eda-aba645ae60d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d7224e-bf30-487f-b396-eb3595029d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3844f8a2-ac96-4533-9016-01593e931785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0414bb2-a12c-46b6-9e04-dd5e5951699c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b759b4-20a7-4867-beea-f20bba61316a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81335c28-3a0e-4ddb-be82-547e7c15e058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e91942-a76b-4fd9-a004-9388c95bca3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93ce26-450a-40cf-8183-2a3f1fc14ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e043ce78-40c1-4b3c-a915-4834e16837dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f01caab-3d4e-493f-afe0-84b0ed179332",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55345283-51c2-41ee-8a97-80dcdc4073f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9914107-9eec-47b7-b343-76f0e6523b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb117bb-2d07-4b57-93f8-f2febfee6562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d471fd-db9a-43c1-a823-9823cd84a9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50500841-5f36-433e-8bae-69f175e13367",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7669ec07-00a9-4cbf-9033-aa0b62d55987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4593955-0b8b-4c78-bd64-d9fcf5880444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d620689e-a70a-46a6-ac06-7d6a8089fa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0ff88b-b979-4684-9fcd-b2fe65234b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75af8a3-7df1-4aec-85f7-edfcf7f8a551",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379fcde5-8f08-4460-85c2-e1c01d4e257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2fe200-55de-4350-806f-f3f6e1e31be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b5b814-7c97-4ad3-8adf-422e93a268d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "db103079-9e88-4cd9-b803-a39deca5c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2503a8bb-1352-44b1-b9ee-834b29d58775",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3881cdf4-a22b-4070-98c4-179bd74044e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916be504-ee1c-414e-bce4-10475914688d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fc3b7e-1262-4d2c-91d4-512570007d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a225ea0-b7ee-4912-be0c-81cd62d98fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b80eccc-1b77-4d4c-96ba-991b0c5508e9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a594e2ed-4a55-4b1e-be82-1930fde58abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff2f980-99a3-4ce4-84e9-4b0da8b6b044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132d052a-4f4e-4fc0-a629-d28c568ce636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6283b429-a2e4-43a7-ad9b-6bf9383b3b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371f843d-51ba-4d80-81d0-b301955bb3dc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1cb3c4-81b7-4b7b-bdcd-cf513975b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb02a921-4eab-434f-958c-5c11d7551561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04f2054-0cf1-4e84-8c83-fe8d20b13896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f99f8cb-4030-448d-8cfa-1f16cb4693f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b355b7e-c45c-46fa-99f3-c357f8e5ce27",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ace519d-1c7f-4c39-825c-c9e9e71d20cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60caf9fd-087e-4101-911b-59212cd1ae1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a41b058-a3ec-401a-8a98-4c227874f8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56c0810-a879-4e1a-8c21-414ed30ac686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f867505-c0fa-424c-a7d4-b7a09b04f12c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc8820f-891d-4ac2-b5c3-7d52c188e627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587bc21c-5930-4beb-95a4-d653a75c454e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051f217a-6c17-4145-852d-17d90abb1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77a54457-185e-4a5b-9d45-437882827933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1e9ff9-9041-4432-a5f8-3931768106c0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0333b436-c865-4575-86f9-323890014b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b528ba6-4a27-47dd-973a-2ca450bd6720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa392f72-cf64-4462-924b-17eb2f9d5d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4dd502-4660-4d82-a9cc-2b4e54c01ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e6e34-6301-4c98-a2ab-f0ca64b185d2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f170ca0-ae4e-4128-8179-4b4a19fffb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0ee610-ead4-41b4-8ccc-ec8b1d582efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b680801-f3b4-4a92-81bb-ac785ac7f51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "835a8ce4-6296-4637-a15e-8a16f4f5d733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca905abe-0118-48e3-a570-278f8a649e5b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5293fe61-a4ff-4cf8-a34f-257b7ed9626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b7ba26-08a2-417d-b948-cfd485b54522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5ed83-7d13-4e98-a31e-282ee963e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2e13c0-5a81-466b-a904-bb658bdbf760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade88ea8-d02e-4076-a947-0bac3b233b2b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b185c51c-c0f4-4a2b-b5b3-7f29a242a0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9903f01-56da-4162-8890-5fdab9a17ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfaa9d6-ac4b-458c-8bbf-4150fef79ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b3a887-9533-406f-a53b-78fdd22ad8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8556442a-52ee-4acd-8093-beecc36b85eb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d999fb35-2255-4fff-a99e-e75091fa83e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b30411-7c20-4e4f-8ef6-438804983174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce221bf1-1d71-4584-9e06-958265b4cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0415550-8bda-46a9-b251-de81156a0bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d352f7-c76b-4c4c-b6a6-ac4176877e8f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb5e86-628c-43ab-b217-7b74963e0013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8410fc-9144-4e1c-8aa7-6801e6177407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c789b20-9b0e-4424-8ec9-d73d4e4fc1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a6d1e3-6936-42f1-98ed-546856081d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d07991-5a99-4f0d-9c4d-5a8e694aad94",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb620b7-1044-4703-aad0-bc9614279a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54eecfd8-f67b-4821-81dd-03d319038950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c282a6-94d2-40db-8587-81118f784750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f0a69b-cb25-45d8-966d-0ab027610286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ff350a-deee-4a52-bf15-7ec53b984ba2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb92825-e78e-4122-8a4b-5ba15cecfc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d732d6c2-440b-48db-b309-8a00691e0528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e938e4a2-1950-40c8-8528-52058974435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd30da49-10a5-4ca6-9ad0-589c8fd558b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884a767e-b3d0-4496-8732-3a65636b9abb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eca5033-5432-4325-afa9-ccca33a6cee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880152db-19ca-47da-81ee-023e21f83c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68332eb-cfbd-44e4-81af-f734a91afe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5c0fbb-4f0b-4773-bb86-d8813cd2ec2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6da7371-9846-444e-a9cd-2209703d2014",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69044b98-2c89-47e7-aa8d-9e9d09294e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406d7308-e54f-4e6a-a833-1dbe6f984de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7434850f-2651-4657-a9e2-3c705e7001d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7b8b90-2aae-4b74-9674-232c0df8559f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4319d-3b06-4af9-8900-3eb8df5bc796",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c455a028-e14e-49c5-b62c-3d0686dc0502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6ffb2b-85f9-4ec6-8b44-c1d8646bdc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d1b740-6e56-4f37-b5b6-d4353a0bd8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b624688-98f9-45fa-8340-1575e885910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6c3319-04a9-4991-8485-93c925d6c013",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6dcde3-41f1-48e4-9271-7edaf8ad88dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbb5dcc-8390-4eb1-9447-87d94ceef44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb80d424-dccd-4429-b314-346b09b57315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d86095-6713-488e-b813-5ae468450fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8890b7-45d7-40ab-bd3a-c48d02514939",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4d1164-f486-466c-900d-9cd4e4413f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e3ff06-bd6b-4bac-9250-94c667b753bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00165dd-5969-4644-8a2c-e58c8c1bbb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "669203a1-0059-4ad6-ada7-ddc5f75e359e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25909f61-7e24-4c7c-913a-876fcc0b97ed",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cb965c-52f3-49fd-a507-e4838a7e7dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fb5a07-7e1b-4ab0-a83e-eba0477f0db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645a99f0-6776-4a07-be79-f87a1b4c4372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7efcbfcf-2740-4878-ba68-ebfe276add96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9efd61-636c-44c3-b92f-2d78b742ac0c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf761cb-83f5-46da-b56d-1c92d148dfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ae84af-95bf-4e29-9eff-28d01ad3c5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029cc97b-46aa-4e1d-8677-aee3e3930c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f40be4eb-ae27-4f50-9527-68e0e9a31322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d144989-ab9e-4738-8c70-bcd31cf41e35",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179b3ac9-e1f9-4b76-a660-9e274a001239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094e99ea-ea8c-4922-ab46-e859d858d5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430676a5-fe21-40a0-8a35-7ee371f2042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec11834-c674-4290-8dee-e9b1d6c67677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623f2475-0b16-4319-ae6a-42d20176f497",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c65b7f-df0f-43a6-8537-57bc779f143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeabbe18-477f-486c-87e7-2f568a4c3495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16b1e16-4726-424d-ac81-06a74bc0bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61003a8e-ce40-406a-ab64-018ad6e9e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d1b31-d641-4344-a03b-a396a471885e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd77642c-c744-4a76-b4e2-9a1566e8f4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94519f8-b140-4e8a-96bf-5ab5b9fad2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f03007-b126-44a6-a9ca-7dcfd88cbc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbba0b5-d8f1-427c-aa38-6d59e08c2c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90661842-b1c9-4172-8e16-dc4dbdd8d540",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd377d93-2beb-4685-a8f9-11bf12ef5867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f066213-1477-4d1b-a5ee-5e075d842cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a86f97-ea26-48c9-b392-752d63a94ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3ebdfc-f0d4-4cf9-8a2c-cf21e28e09cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa59256e-42f2-423a-9487-29770ca9d6be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5b9067e-73e7-4575-935b-85b67fe4ee76",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a6793-42f6-480a-bc74-2bceaeaf8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "461b8b45-253f-41c0-9cb0-c139767b781b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116e5d31-c654-4c41-822e-a73c5d5dba2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b53521c-d124-42c4-a11e-068d55b047c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ca1e5b5-a65a-4397-8cf1-ad22513a7e4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab4e05a-6cd0-4c21-aca1-fc7665bbb805"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a8d5219-e7d3-4a80-9a69-61305442470e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d88491f2-8ef0-42df-aee0-f882adeb308e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78515463-b7ef-4fec-ab30-823695dceb8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7235fae-6c4d-40cb-ad29-c4524fa7f980"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dedd107f-0cdf-43ea-892b-3ff3bd8830a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a8066c3-b631-4bec-bdb8-25f23a34387f"
                }
              }
            ]
          },
          {
            "id": "aa77a3ad-a594-4002-912a-4a6a09de3595",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02d9fe4a-d27f-44ae-9c98-73373f47a27a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78b77f3c-3670-4e56-b69d-bc1100efeeeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55050e7b-5c0e-4677-ae3d-0a5f2cddc458"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba1d439c-b9c3-4da7-aa90-da831683f150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "302db802-007a-4f6f-bf08-61c9e229fd5c"
                    }
                  }
                ]
              },
              {
                "id": "7aaf45eb-e783-4161-a89b-6f28023fcdd8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e470307-df69-4d6f-9d97-d0d2e7454108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7be13f02-e878-4f48-ba97-515fe8317a3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f66d42e-42c2-4732-9275-19ff0b49b19d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c667d4b-8504-4723-8bb5-f0dfb4012a82"
                    }
                  }
                ]
              },
              {
                "id": "6c116162-2e83-42b7-97c1-cc167935f8fb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1a26348-28f3-462a-ad5c-ee68af3aa3e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0149780-bbf1-4d73-ab03-47bbc2fe924e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc6515a4-6b80-4c22-86b6-68285311862e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b860abdd-d887-449d-892a-f75005e7cf58"
                    }
                  }
                ]
              },
              {
                "id": "f2c3859d-aee3-4b9f-afd0-0353557a246e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7da7d5b-cf95-4155-a578-b0ab35fbb64d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4954bc0f-a380-4a95-9bb8-96900a8fe343"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd98b7a1-6d13-4a0b-969b-ed4786766916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ce8e3c39-62b7-496f-9218-ca98ef8019f3"
                    }
                  }
                ]
              },
              {
                "id": "f9e91b14-4bd0-4190-b582-2f6807206fe1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f401a72-8b0a-48cb-af18-66b30f7c181f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1097a616-02e8-4d60-8525-923d959800cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b097a19-ac8f-4962-980a-e0b06a4fef52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9f0b44f0-2db6-4da3-8308-61f0cd070652"
                    }
                  }
                ]
              },
              {
                "id": "3d1f5a6b-c59e-4862-b595-1a698df878ad",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7542d372-930e-478b-8dd5-81a897fdd0d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76eff3ce-6dfd-4097-9f44-9b1e582949d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "958275aa-4acc-4a3b-9562-5c6a51e2977a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7af43f0a-d6b0-4cb3-80c9-0e1dcd4e714f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e99f8f78-ba7f-4e86-ae9e-d297c74750fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9756fe5-247a-4e84-afbb-ad5a8772fde5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0184d8f8-bf7a-4fe9-83f6-8990c1eb6868",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5954309b-97a9-4e6c-bdf0-a50fcf30c00a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01ba334c-9a15-411e-bcfa-d277dfff921e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bcbd7de0-587d-4220-8847-da0017cc9985"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9c74244-54ca-4449-8b51-fc4cdeafc019",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4afb672-52cc-49f7-9a14-4925abbc1ccd"
            }
          }
        ]
      },
      {
        "id": "e5ed2462-67cc-4e4d-a6e9-c7213f9f0b1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "afa71a98-4b8d-478b-9981-3bfb4c891154",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91635ca0-352b-4942-b176-fc8e2a531c05",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a032d6d-cda0-4b36-8b66-52c2ef28b35a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c1b91-8db1-4a40-b017-394de8c7b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a900ed13-d14f-4fa7-905a-5c45174b6ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe84faf-eafa-4473-8e9a-03717bb90b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d1dbfb-17bf-43eb-8b7c-cb8132749bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988f71f1-0921-4c45-b936-a8b80a26753f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c779bffb-2911-4f40-8981-bd8848cc5cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad123c57-bc18-4713-a4a1-524b50651336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6fa565-dc9b-4f20-8156-d3b67ecaacdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c748bd7d-bc2d-4fb5-b677-61fadc05ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ed823-4c49-4489-ac01-5373af2ad092",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe50cd7-043f-417a-b52a-bc9cca6c8005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ebd8d1-923c-4772-bbf6-c3a993cac05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f83c719-3136-487f-876a-0899848bf0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8b8fbd-d034-40a7-b732-176aa60cce6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd69efbd-0074-4d68-ab13-138974835eab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605cf25a-fb3e-4c7c-b993-a2fc767c2208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83557787-845c-465c-91eb-809449d207f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d563c86-697b-4e27-a95f-8edb3c48d00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e10bae-5c81-491b-bc1a-dcc80f935132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdcc61f-6e2d-4b7f-bc86-356510f6997e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1dcf9d-4d1a-4703-b770-2e3ae37af4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f4a6f4-8efe-4966-ad17-d9d3e80d7709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdc47e5-4ac6-471d-83be-2de58f4e3660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "417be943-b275-443b-80b7-58592065e83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0adfd4a-c8ab-44b4-a50b-40c1ef3ac039",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2e53b7-5b04-4539-a4d1-b0f159ae3204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22c0bfd-372e-4d46-9e22-477d082d6076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d447f0a-be26-46d0-8daf-ff95bbd72262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56940197-2455-4117-b7a1-b4824615c8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e307b829-cdfc-4f17-abcc-b22493fb5c4e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72500bb-3534-42be-a695-afc8699fa384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e43f2b9-b880-47c6-ab3b-c2582e0be9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8455dc-98e5-4fb6-a4de-1f06609e78d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaf64b0-d1ef-41a1-b76c-39f0d6883ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589f8f25-fc4d-41bd-82bf-331c1e6e8980",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6fa548-c410-442a-8d1e-e42c87d9d650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c52735-6919-4b6f-b7dd-e935b2b69e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aaeca8-4ff8-4092-965c-afb770aea764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "640f759b-1559-4deb-b394-172873086c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed07922b-f78b-4076-9404-a261c0f10133",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c65871-2d1e-4e06-a112-a69f9ca71f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ff3ec6-d207-4707-ab45-380a955dbe8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde80ebd-dd16-4703-99d4-b0e70e1985d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba636d6f-fc29-4e5f-bb4f-671863fc4ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bac5f5-bf85-489d-b2e5-83ecb0615ea4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e2abf-d332-482e-b302-4952306e7819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768804d6-c4be-4a2a-b327-7f246076846c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e97ef-5bbb-419c-9863-1d89a82a10c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bd34db-8d84-4f0b-99ea-cf0bce97be9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5dd777-489d-4aea-982d-ee5edf6e0d0f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd50f410-8a09-432a-8c27-6d888c0066f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c4f4ba-91f9-4330-bea6-3b17c8c86cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55abe3c-9b2e-4f73-abfb-6b8055c0a3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f39606ec-4327-441a-9158-af6a54bf030b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dee8745-684a-4954-9ebe-cf380dc7f411",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d5cbee-9a1f-41fb-8fff-44f9f5ed375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad3f05c-bce7-4762-b96a-fd4ce5206e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657fa702-0562-49ec-9372-2029b3930d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdf4fa8-e979-4386-a104-5841b6303d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5487dd7d-44c7-4fb5-8743-7b3473159913",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29745d1-f071-4612-bc2d-abbfc6a75aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873554e7-9d10-4318-bd92-9e88abff4770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df1014b-3f8c-4bf6-b9eb-bb0b55cbe87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8151e20-c4da-467f-b945-61b6aedb3410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213b82ed-1e52-41d7-bdd0-72718158e632",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c017fe-2416-439b-8163-bffce2635b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88840701-07d5-468c-a221-66754d23d1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48643ff4-9e58-4762-8f06-244514ad4897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ed334f-25ec-48ab-9969-07af553d4652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8905d6-d878-44ec-88e3-c89411ee77a1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c7f494-97ea-4949-a77d-a2b65f67d0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99726593-f625-4b62-8366-e432a5b5ada3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c48e7e6-09bd-49bb-b0b9-bb20d7145a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "686b70b0-a41e-48b8-8702-eca379e0a495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c7063e-1974-45d3-831b-d4b11ea39d39",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16880e3-5cc1-4dfe-8126-f0c47ed9d25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff10fb47-41e3-464b-95d4-f2ba01467591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e7bd6b-53f9-4b57-9490-0592d8347c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c487660-0838-47c1-bdff-4434d9f91d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e6fa80-1599-469c-ab93-cb0ff6552bef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687084c7-698e-4ef3-addf-9ae2c4c4a30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc009a1-ac61-40ae-8d72-e5c3ccc32cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fafe123-04de-4a3e-91b3-d5d92b8e703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f906d585-68c6-4ae2-8656-d8390e9b999b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cda6b2-20d5-4bea-9bd9-8235c40e6892",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6661c8c5-1644-4fc8-88dc-7546332bf259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a18288-b043-4557-8aea-5a0664baf5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa107822-34cb-4579-b6d5-697b2bad714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20ab293-2117-4e6e-8eb1-87fa80b2cc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd97b59-953f-4c0a-a5fa-bd323e93ea7c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bf783a-3533-4873-b4f6-4183199c1bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef7738a-6683-4b29-afed-ac87c93b37ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3f6103-fe18-4406-83e8-29a29a4e246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72edd959-9f7e-4d4f-a399-bbe1eef4df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea47660-e3a6-4637-b8be-e50fa6a163be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d89895-2e98-438e-9d89-25b9d33d923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ba71d7-e20c-4c3d-8075-eac29951d390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ec28e1-e649-4caf-997a-c63f4886dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c952d-4a11-435a-b78f-1f8ebdd169e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ff50e2-fdc8-4648-96aa-6245fbffda73",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93023b87-9f14-49ef-92e2-9c2d8dc13a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b34e0f-2bf4-4e4e-a6d7-e9da3efa695e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2967c01d-7723-436c-a302-0e3b665a9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f236d6c6-4f7c-477c-add6-6414a2a5b5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4069cb62-4590-42e7-bff3-96d976273d54",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf874ed-5db2-424c-85b3-66c7d6c005e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4398a3fc-61c4-4faf-8864-d39b7ef53054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e3dad-06f7-49ee-9642-635a3827a409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa85f968-ca00-4ebe-8d35-fc0ae0e24db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667d3536-9324-4bc8-8326-409b9a762049",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a97c64-e52b-4f55-94c6-a56a3d127a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cf494c-73ff-4251-91d9-50a7a78a1fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab94916c-ccda-4928-a846-27288a5faf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bedcae6-1e17-4d2a-b75d-24846130ea3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e6b994-341f-4021-8c77-dbbdf1b2e7a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a756c802-3f74-412c-8b76-4aed5b8d4fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3425b33-179e-48cc-b47a-f93d9736e4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0c1852-13ca-4673-88bd-6f147dd9ae2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed9b9ef-cffb-4921-8638-b0bb3bb4d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f87e4-0cb1-41e4-94f1-85305e6ec12c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcff3df-ffcd-47be-aad4-e401e2aac843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668ca1a6-da43-494a-b3a5-d4f270b53593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e95a6af-390e-4e97-925c-d342878858b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d97f5e5-27d1-4bdd-8575-4413ba9980d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09daafec-e26e-49f3-a58f-3a72458ac4d4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd50d980-6905-426b-8098-1cb3ff499b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ec433b-13ab-4e98-95ae-65b8ca0aec65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfe040a-1ee0-442b-930e-7c88eef27a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d3a1ca-140f-47ee-b22b-25755dd8ad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c565ed6-5389-46d7-910a-19ec881de20e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9084bf-b3f7-42c9-a84b-4bd26a2054dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3d672d-340f-4095-aeca-efad99885e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc0a0d1-f813-4ed3-b5bd-be4f81cc3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0927b0-f9a1-47d7-aa7a-dbd51faeaa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e0464c-d393-4b68-9636-cf39bfb133d4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91480f5-4ca4-4df2-9300-083c4eec3201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e5a25b-f910-462f-a68d-74751290d489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cfa538-bf40-4255-af88-0528be858e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ddf521-08ce-4e2c-a248-70137c71af3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46378b7-5332-4676-a1cb-3ebbfad42212",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecedb171-3faa-48e0-bf1a-848f8ba3986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e35b7e2-88a9-4c69-ad98-a62318eb29e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5739db83-0919-4c22-a908-014d5fc3f6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fba201-efa6-447b-be8e-04d2d7b72498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cc582e-3183-4d13-b2de-9938c2f66e99",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86329c8d-5592-43ae-b7dc-d2e466704cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98f4e56-1ff5-4ec2-ad78-0d8ddd007857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86a1fc8-b210-40c2-9559-943ca8de63ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4efea517-92ab-4cef-84ed-7577a374ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678631a0-4a56-4ebd-9435-e3a1ae5723eb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38f083a-d315-474d-8751-1a313c1c65dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb07d9a-4aa8-40ad-9acc-60b837fb7edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa26a6-5a50-4279-9853-ad239a367203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a59e94e-c607-48f3-9846-3ed5fd4513be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e1305c-6e78-45ec-9bdb-e9b670b98e41",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0dde42-9584-421d-9a61-48cf37552ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31b800b-180e-4faf-8662-c750577003eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2baed9c-5a70-47d9-bd87-12ef5d540442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fbdac9-30e4-45f5-acae-63d3b12fd336"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c7997cf-48b7-4adf-9b7f-a4af0f7f424f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fe847bb-04d4-4e0e-b597-0fe00d414ca2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac56753-8f18-439e-8791-2c8ecc52a009",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bef14059-1b02-4e30-ba1d-d88ee317b035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261391e8-a5f0-4f06-a388-3e5028fd9b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94f910b1-28aa-4c22-afa4-6096327a3245"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78db348b-f773-406b-9672-a40e8e515fd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50d240da-460f-4eeb-a680-a8d0032b072c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9994956-d3ea-41e4-8403-6a8619a7052e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "975d7e18-0fb7-4739-9b8f-897b0abf8467"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1221d0c6-94ef-4ff1-9e8f-6893a0868270",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b2e3b9b-83cd-4f94-9c9b-8c8cbea83bbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "370a20ee-68a6-4943-8ce1-ad7f2f67709a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1958d830-a8bf-4aca-9840-39828a152974"
            }
          }
        ]
      },
      {
        "id": "e0068173-c7e7-4214-9ca4-a1fbaf02e0f6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e09ae2cf-696f-4deb-80d2-cd2515dc515b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59393d3a-5046-4495-861a-b408fe9d2cf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9dbcd726-8a0e-4596-80a3-661c2984d33a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be323d1-0370-467b-8743-6102c0ed0b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e67fb1-d0f4-4e1d-8a97-37e6f486f738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90377358-b586-409d-94dd-e8e5758a1fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e25eb38e-7459-4580-affb-d9f4d7447902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66783d9-159f-4a47-be57-d8033d58fd35",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8ec5a4-ed04-4749-a585-b96456e10d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f1cfa9-1b08-4b10-af67-9f9c1334636c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40db9a12-b6d0-412f-b675-3fa91608d0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "184a1483-c903-4898-abd1-16ac8b3b8df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1fd74c-b13c-40dd-a054-14d07a3ba80a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c566263c-b666-4aeb-9bfc-6762782f6158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546a1748-6e8e-4b6c-ae14-82b0c3167d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5a3764-f7cf-4bdd-83b3-7523b689c4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "264bf23e-382c-4d5c-abd9-20c7f8af317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082332df-fcdb-43eb-81a9-f273689e9833",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f308094-1e6e-465d-9bc4-43cf23f49722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85233f2e-e9a4-4468-a767-abedd7d3e43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7e84e4-be78-4e26-bda3-a3649abd898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef797c04-6f28-4f0d-bceb-b434af343eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42521f96-e00b-4a1d-91f3-991863bd5d0d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b89fb-25ea-4d61-abfc-25fa5d4ece63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b673bb8-9c96-4917-abd8-e7fdcb1fdc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b4ba1f-fbcc-4b8b-987d-737a72e81c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a747fc-f29b-4b7c-bbd4-28df7dafc9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec20a9-16d1-4f18-b8ae-2842380ea13e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa643371-206b-4ec7-a32d-7f7d1be495d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e503bc63-e9ec-4393-81fe-065f499a79e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864bd5bb-5971-4d4f-8a08-24178c5c2acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8827b0f7-aff8-43a9-b97d-d5dd0518c62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d305743c-bc55-4ea6-bcf0-995166aa4b68",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b669f47-0998-4352-bdb5-6a34c69c98f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22700a3-38f7-4259-a0a0-12d753fe8b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0873a06b-840d-4ae9-836e-cd1ec71d2fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0edf851f-2c40-4490-9fd1-b256ac0cfa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d12f1c-796f-4fac-a09e-88fb3ee17890",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98c2931-46e6-46bb-b4ab-9e61e0b576a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1e8e48-3f99-4d35-99b3-7c432574f892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca2282e-f7b5-409c-a6d1-84c3d1be54e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb83774-1799-436e-a135-c89e24c9c030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4228c87-fb71-49dd-8da5-c0ed6dcc2a6a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8ccdb9-5323-4790-bc9f-b34c693eea7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972da76a-d92f-4f14-a508-e4a9306304aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecb2846-6131-43a3-abf2-b28984f43e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8d36b6-b782-4fa1-950a-eea4a4cb52fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df190927-ec44-4ac6-9356-ccf1df6f0258",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34007650-a2ff-4de0-b93a-cc40deab906f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dee6e52-bc10-4f9b-987e-15317f66d117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046f9bb0-ef86-4440-b57b-1a0aa35e601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ad09de-1f33-47d8-a4d8-dd02d4322a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b545fd-6c6c-41fe-b4c8-fb6329e0ffa4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aed11e-690a-49eb-b0ef-204fb4f43dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280952bc-fc46-442b-bee6-b38b4073ea63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a67f9b3-d28e-4449-88b5-19dfcc187abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57e4b286-c9c3-45ce-90f2-f9fa4deae59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0db46f-7452-491a-85e0-724b12a76e23",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982bf36d-0c41-46d3-a1c9-5d1eccfd8bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8101e8-0342-4aa4-bf29-8c36a492d65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665727ec-89e8-4ced-98b6-dae844e6367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8b11f2-7095-4377-af87-d89ebe8a64da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e59010c-af76-476e-a7fc-941d55da6fcb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da983280-a611-4d80-ad1d-ee8d7ae5c683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e8809d-ef65-4935-bde6-26ec0a5ddab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23abb145-5ed8-4fee-b216-3f6dcb31457a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf891d64-3fd7-45d7-a7b4-37958b636677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96b3471-0d74-4ef3-927b-349de32cba75",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af63d8aa-0fb5-448b-843e-467220ab075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdab0df-e0e3-4e40-a50c-d12117ae5083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac4b8af-1a29-4331-bc9f-dfcd1efc6519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae2cfda-ccdc-40a3-a6f0-304895a06b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ccb50d-a424-4858-9581-ea9366cf988d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e6625-445f-4ba3-b876-11669fb685f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6928f806-04cd-4646-954f-5bafc4530426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf07358-f0e9-4a8a-84d5-00571b909bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "222e342f-d41e-4e6a-8249-ccf723bab5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2b809b-e213-4403-854f-58e4e16f332f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed656115-57b7-4007-b9e7-b8ea530f33ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a702a7-7f72-44db-8b4c-56a95b7c130b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56fe8b7-00e4-4ed2-905c-be5d39d15fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c360ee-e9a4-4317-a558-594d3ef9e84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dbd21a-1c88-4550-b9f1-67b723c845cf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c90d32-661d-4e6e-9e40-ba02c0402d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c9fa9c-51c2-4c56-8ff2-5bdb50fbb470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c3ef10-e3cf-460f-ade5-dd879d9ac28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa7e516-cdd4-4bb4-9845-9beaafd28ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e2da48-c746-4e94-a147-fb9f35c82ca4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c673389-ae5f-474b-892b-ba5aff840188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb791b6-4bf1-42d2-9081-f109a37959d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62b3240-e839-431d-b817-22ca622eeac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b588e3-def9-4d87-baf0-a8164f1425f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5350f840-da93-4f9d-bf6c-75b4c83b3ba1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7687a6d-ccef-498f-9126-c9344f2c24b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46b9335-08a1-43c0-bf28-3a2da9a61a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7df208-456b-49b7-a296-0f2d76d329a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74f250f-964a-4c4f-a1fe-4ea95d0675e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea08f93-c6da-4827-94fb-a435de36dd0c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f80648-59e1-4b3e-b348-20da7af47bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c7192b-adc0-4846-8488-f3418071952d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02461103-2d65-4ae5-b7ad-574bde6619d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdafd45-1a02-4cc5-8d86-322c8e346405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771f6d44-74c6-49a4-ad6d-32c3e564f6ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65e1118-ea7f-44dc-8e77-88f19844a8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccd99d5-d328-4950-8618-6d5b71b721f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb958570-10a8-40b9-a48c-232f593dc69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e336b13-d10b-4d59-a0e4-03f3dd391d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fba35a-597c-470e-9830-92d088d3d316",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22ded87-8be1-4fff-80a3-2753551460c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be565d54-1d4d-4e25-98ab-631ff53f96c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bc107a-631e-4f2d-9b4a-d8ed823ebc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bc2d94-033f-44a7-86ea-59641aa512f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ad36ec-30bc-4e12-84b2-cd8238ecc747",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc6c101-bbe7-48e1-8dbb-daef0048d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9e0fb9-ddb8-4a4f-b088-4e8c671f3a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40deafd-5a49-4326-bbdc-103a29a43198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94cc87e-de64-41ea-8b10-d4b159ef90ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e604d-9610-49aa-9526-64f0dd6cce33",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e59f60d-9686-4646-a847-96a4c8d32278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf9e9a2-1963-40e7-8d65-7e5f08b0f8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911ad7c8-7c0a-44ad-9547-6fc73eec5d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf34ef4-775c-46ff-94e1-4ac6aca7ec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b61370e-6c57-4721-acd7-69831f894196",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58bc14e-e32f-4542-a1b4-b8cd314f127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658c7224-2d7e-4a63-a1a1-511997ce2dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb7dce5-39e1-4c2c-b545-39270e24073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58fa5ffd-db2f-451d-89cc-37eb97cf8b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d04301-abd1-4d4f-8c5d-6045f6cbf171",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5db577f-013a-4917-8749-615272aaad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fbd864-6264-4362-ba4c-c23f955f174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff1c2e-bdd6-464d-906f-2186e0ae6ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7959578f-6f15-4a8a-9d28-9c21c07004d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7003677a-a320-4672-a99d-aeb98332da71",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b58650-9858-4cb2-bf01-4d63d4aaacec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75232eca-b10b-4973-8b80-792189ac98ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73afe0a9-e099-4fcd-8122-33c767ba7c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2625cb-c304-4ab6-a347-f058f9cf5870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770850ec-133d-486a-bd21-3b0baa1cad46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe01cdf-98ef-4f6d-91aa-ada96a9cf99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f275bf-a162-4777-a813-1dd6166e44e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d7f3d8-ed48-4395-90e1-2b79cbc82b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c091074d-e527-49c4-ac6e-68abafcf8838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36816689-e471-4ad3-b5db-196673cd4b17",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ecaf07-ca2a-46d1-9233-e2acc35e700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde98e91-40f8-466f-a32a-1409e9c65be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216e7358-2e27-4f63-852a-b46f4e4267ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e6b980-b0b9-475b-9cb6-85e68a0b45fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e944bfad-a092-4b3d-8ea6-de89b27620de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bb0428-584c-46bc-b9fd-db2bbc39407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3d5bf7-5473-4d35-b666-272208ed5004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ad6a6e-9022-46ef-93e7-1114c4f2ea5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec684b7d-4b7c-45b1-9267-87da41a9cf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ef674d-d11b-4e43-b127-05e4f165732f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f522130-6d27-476b-8fda-be061c6a7ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d6007b-6ac8-4907-adf4-c895dd01e0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093a5cd5-3b51-4906-902d-a37244315a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89154a1b-ae37-4cf5-9fb1-c92313e8785c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08705a6-4a53-440c-bed3-1c92209d3506",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25dce93-3688-4d30-8245-208bb174f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15f1a76-a5d5-41bb-888c-13678771bea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c12d5a2-7ce1-43f8-b75b-fccdaa53f726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3846dfa-4825-4743-aa16-d202e072524e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cfb2cc-42f9-40d2-932f-cad55b6af450",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af6c6c8-7cd2-4487-a837-78ad97c29207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b251de63-19ff-4533-b8cb-2f3ef749e1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf040f06-4c4a-4b3d-9aff-f44334747a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "589baaf5-c30f-4024-8981-094dba8b7f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08774f2a-80e2-4714-a1f3-9bb6e417a33d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207fa11b-faa6-4891-a4ed-d828bfbd2c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafbcb1a-76a3-44b6-8614-66c7f2b6b3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87795e0-d828-4e73-a59c-b492a6ddeeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fffe7f69-649c-4b7a-a055-062a24d98999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f55a5ce-bae1-494e-af74-d1c38ee87be9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6dd59a-8333-470b-b5eb-8cd52eee7f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ebabd4-f339-4ede-b197-8dc10720609b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7209881c-5731-46b4-a764-70dd7ef8e9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4be4c0d-c1c1-4cc5-8022-bd77c7c829e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01283fc5-ce79-49ae-9bef-60fc5b1afdd3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096bcdf3-0626-4a6e-adcd-1fe43f307ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b08d4f-eaee-4c35-8169-2b8c1e5cb4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3683ec-66ac-4eb9-9d65-1803cc887513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df14ac47-6cae-4fe7-b046-3ebdf39af903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a62813-dcbc-434d-9ab0-53b56bdeaf3d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8ed077-e8a2-41f5-a6db-a4675b84feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f139856f-db4c-41ff-bbbb-36cf7942d501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b0030a-cf91-4989-bba7-38b78bf27496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb747d54-dea0-472b-8073-3767e7411ff9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3b0b773-1c27-4b0e-bf22-9e5f002231a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "508826c4-f3bf-4f15-93b9-359347b42c51",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c5736f-3fd5-46bf-ad32-c4d75551c0c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61a54b2a-1a53-458b-8425-8e48ada22bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0120a85a-1d04-4b0d-90c3-4aecb0dddb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "936e3f9a-0c73-4efe-9250-72d79d068ca0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cff38699-eb16-4e1a-baf8-489e91a25dc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c355e26-de5b-4d56-b1ba-ab3ff9da5ed0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "717834fc-82e1-4169-86c3-e7c325ae2787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "325d50e4-71f0-411f-824e-74305367e75f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36c4c226-767b-48ad-bb59-493d32261959",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3a6620f-c772-41d7-bf4a-79122dbc1b9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aec2c8a-978c-4c81-a02f-ad2fa1aa0eef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebd874e3-175b-4427-83c5-e1a19457bac2"
            }
          }
        ]
      },
      {
        "id": "7b6b5ba7-a10d-45cb-b10d-2d285520bcb5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0d8191d9-5beb-4274-b3fc-f813ca6c6286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9898354-0792-4aae-9d52-e16249fd4d1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "913fd026-ebb4-49bb-b834-be0c1682b64a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968d468e-9090-40c9-bde9-8cb30219d619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f14a0f2-fdb3-4c71-9092-164fb65f7999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0661252-c3a8-4b42-8cfa-625963a4f210",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a6a75a-afb4-4aff-a399-13d634db8902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44b84df-7473-45a7-b353-e33d2130af58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e199d851-878d-4f15-a122-b7681e5b0fcb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3ccbb3-11be-4104-b81b-53248949fcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444c881e-041c-4b8d-861d-884d45e1660f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddabbce3-55e7-4585-bf3f-d028b9ee9122",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4196966c-b8d9-4bad-bf80-5db6e9ba470d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e6450f-d145-43b4-868d-9fd3b8d4c456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4074958-9645-4155-8708-4ac2c5c429b2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59d4c82-241f-42be-abc0-e8018dfbdded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f55e55-bbed-48d0-ba91-65dc57413d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2d611d-0bc7-4444-81f3-773c5c901584",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef3d691-d735-4479-af88-79df67f12da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a0265b-0c88-40c7-bb8f-4820e0ff509d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4904468-4810-4188-9319-88a64a450853",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc740b-c740-4562-89b0-f809bb4edec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1005ab68-3dbb-42c9-8f86-f464779dd9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17965c57-567a-4b63-8d28-259c820d3b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e08a865-1815-4d2b-be85-1e2a20ba1163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e389095-cd41-4fc5-b3a7-b683a367494b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d985c8-0198-491b-af11-fc170841358a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5a7aea-c72c-4357-94fe-db7f4e3ae7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7aaade-a5b5-4bb8-a43b-cc8bd425757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2369437e-6d8f-4bb3-a3a7-dfb0dcf1a7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22ce400-c7f2-42bf-a236-8bf42bb5f614",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c140cec-8cad-414c-bb0e-70c725aff44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4ffe56-2726-404a-ad43-3ed743524cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a5150c-ded7-443e-b53e-2a008fb3efdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c900d0-b7ae-42e9-8899-adfc767840f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99952afb-6555-471a-818a-0d4c6a84387b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a312d7f8-9c5a-4351-aea0-b8e9fcd9ca72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaeb3310-63a3-4b13-9198-5c009725515e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d479712d-bbc6-4e60-9d7d-992ed9659326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8a108c-d08d-4751-a31a-90ecec80af68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92732e64-6180-443c-9879-9f1bfd4b21d4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc99f21-a7ce-4b43-9fdc-8dc0943d6aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c16efd-5410-4f31-bad9-a8802deb7eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f12a60c-c1cc-411d-ad89-1db895c7fae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6011399-e480-4329-a9d1-868640248ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336665c5-c6ab-4d1e-a0f0-5a973d87f2dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abec0f41-8a61-4154-8ad3-9589a8004f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b116b076-d654-40ba-bffe-4680aa0948e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e980095e-bcb2-4314-ac42-0cc3dd817f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34093b9-235b-4860-a1e8-e575e5494e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df006983-b94d-42c2-a78c-66cda68948f9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8db375-671a-49fa-bb4d-9c3957f457c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f55835-eeb4-4bfc-94a3-2e950ea792b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d7b48d-bd70-48a5-9caa-ccf07fadb2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2ac495-268f-43a8-b881-3f0817c1a920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308aa7d5-642e-4619-bf1b-fa0b10223a80",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1227d21d-47e1-468e-bbfc-994c90b68bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b89b0c-4229-4cad-be35-6a4cb96437a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6cc53a-a04e-4ebf-8c13-9c8fa1e66d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7ee83c-a523-40e8-a190-bd27ee0b57f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa33edb-f616-487d-9228-f1789f6a4f07",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709a4e91-9ebc-4005-96cd-ad0cddb6ce6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a7a425-bbd6-4c92-95c9-aa658e0da7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c05aef-c8fd-4461-b59e-435a5e0d2d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d1b0ed-c7fa-467f-90af-e3810c074729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc96d4d-0e52-4b78-a319-edb8358b3818",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1364faf8-3880-4bbb-bd2a-9e3c0a48e6ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e0f5ae-e4ee-4a9b-9c22-63a37bd5d49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1773ed3e-ac82-4b52-8ae8-e59c29c319d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01518abb-e3d6-48b0-b71a-583c4a853765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee50ecdc-d2a4-45f5-99dd-032c04d1a111",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b58aa1-1bb4-4053-96bd-a0842d855d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ca47d7-51a7-4370-b7d7-558f08d701e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2955820-f8e7-4eaa-bbe6-c5bc4695caea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2a9b1a-a058-4b62-b2cf-1f7b2d459064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d060cd-0315-496f-8969-7024e8126ff9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54106bf-4c31-4f7c-a86e-467687e5e139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99072ee0-71a6-4e04-9951-789d9bc97cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232e376d-8ce0-41e0-be55-6f3be5e7f8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489cbb27-4fb4-4470-9b0b-52634fd60f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90fb94e-1de2-4d63-9bc2-d8777add1cbe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473e3600-53e3-48bf-94c9-33fd03e17ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979b57b7-211b-49d3-9ca5-246dc2211da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f907c7-bbd4-4e25-8f71-20af8c958237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4775b231-e1fc-46f6-aa20-40d1604daa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bfb66f-3152-4801-8cab-f540b59e5db9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ca2a7-4ab0-4177-9ee6-dad5baaf7fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df0f6ef-f1b7-4b90-beca-37bda353adc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3323123-3da8-4905-9a31-48a96ecb5d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5efd0a-1395-4b4d-957d-31ead0b17dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcfd811-3d2e-4796-9ac2-03319f0a42ac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22854145-a473-4bc1-9328-2e91d4fae1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3413d613-cd72-412a-9eea-1a2c490da8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3221e99-272a-44df-aaf7-25a07f099208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c89332-d4be-42e5-a5f5-fdb52bf60bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2133341a-d2b2-4999-8dd7-aa6700cbbcbc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49db3c2d-c1e2-4ff9-a84d-968246ffcbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41551f8a-17ce-4032-acd0-ef987cc7e259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd54075e-964e-4c0e-9953-860885f6f657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b1d843-7caa-492e-915d-dbf682d7d0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d552b4e-7766-47e9-97af-daa5c8b2a3a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe85c5a0-5927-4d2e-ac7f-1a8ba36807b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64baddb1-90a1-4f3f-bc5c-8d957367e1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a208c326-f7ee-49c9-8318-f5888e1213ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c5d140-4ad3-46f0-bcbd-7fe640396e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c3ea9a-2780-402c-baff-5cd48de784f3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dedbe12-0d40-46ba-a293-8fbfe64f0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd404b3d-ab2a-4eea-9c3d-fd40533a396c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4460ee-a1a3-47c2-92c2-342e0e382a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965e370a-27a8-49c2-bce4-fc3fc1ed6afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441ffae9-8db9-4f42-9d93-c43a71349082",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71385d3-81a1-41da-bb7d-c73728f0976c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656e5f3a-6ee5-44dd-bd57-3df2a024e1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98eac7-f576-47b9-ba5e-ddae9a4861dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e50100-5fd8-4ee8-8b29-f33240124ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838177c1-0c06-4ec5-8c78-655f6dda182d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3efef6c-d1bb-45a7-a74c-b428a30292ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90ef054-53a1-4908-b59a-bd23897c94f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98b2e4e-0953-48ae-8787-e773d2517b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d93d63-5370-46b6-a7f3-63f9a4638be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f376f918-8f40-4518-9eef-914d6c9d829c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51920b0-f437-4cff-95f9-daf96f458204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4e0b09-8b89-43b3-a761-2aac5a407dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1911622-b111-4663-8e67-9f4eb6023da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4376c233-e543-498d-b835-eebba57bf9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43dd2b4-2f7c-4cc2-aadc-6e6a87e85684",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a66811-b2de-4e6b-b628-c686770e0893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cece5c-ee67-4235-b139-38daa3ff04cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2129411a-c733-48ab-bba6-bf57bcff1717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ddab00-5ccc-47e5-ae5f-972334512169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e7e802-0652-417d-8c0f-3b8488f1ce17",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e89606-83df-4d0e-b14e-b081e2511abc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779e115f-0676-4457-96dd-ac44ae2986f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6b029c-2b85-49e1-97ba-5c79015b7dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad335d9-eed7-4a6c-bcc5-49e873b2d783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f58b1a-1ccb-4ff4-885d-49e75b060776",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87abb2cf-9175-4301-bf8b-4b926373e448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f739c55c-ec34-44ff-bb2b-4f0882216fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a0d7ae-9534-4732-a7b1-2fee026bee4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959867e2-0e25-44f4-bedb-92e487e9950c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ea610f-158c-47a0-bcdc-6b1c958312b5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca1632f-7d31-4b00-8c62-9865c2e50409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e5f7e2-9eb5-4631-b298-3cdbfe0ae70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fa45a3-64d3-451e-bcc3-0890ef4c1db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d434f7-a97c-4347-8b21-ffb786365c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a972ed-dd2d-4527-8b92-b046c659156a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8dc5c-1dc3-42dc-a7b1-e6af010f62e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a54b842-589d-49c5-8526-ab2b78d93f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac535d43-38e1-4667-90f7-5779ec25ad51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d6cae6-e26f-40ae-97ed-3c0da1d56261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972fc591-5697-42be-8fc3-44b0987b57c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc4369d-58ff-4aeb-95d3-87f9dd293cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "612f27f1-a1c7-45cb-a5c1-7e03e7f5181f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edee578-fd65-4e5c-88c2-8b13e90a5a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e05a64-191d-485a-9492-44287e820fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8668cd-b7fd-4491-9895-fcc88d1d4bb9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd1431b-7e18-4dd3-99b2-ccfd0316998c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9dc3a82-ed4b-4c18-bfec-7467d8452844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9598a5e9-bc55-4672-9b4a-554200af772c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfce075d-b88c-4e25-ac7c-59dcba6f89c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a12f818-69b5-409e-8ebd-930d346c0aa0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94be57e-6aa8-4560-a35d-811bee2e471b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac544e5-4b85-4e93-825b-b866646f2659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdafb78-1d54-42a6-b2b2-67e09191ce3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d484d99-7336-4a85-80a2-c719f926888c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4511bd3-b059-4910-bcca-ac73e1f8be86",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10787483-1bac-4f8c-addd-9800835ad0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb21c4c5-b0eb-4a52-bb7d-18b9038fac5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9928b598-6857-416b-8fe6-5bc3cd66bd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e97715-2463-490e-be31-3aa96287c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdfed4f-3dbd-4dcf-9d22-228787370a3b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b17072-3206-435c-8ae1-b201beab477b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb9a8d9-3ef3-4c07-acd1-2363f44ad90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a840e7-55ed-4bcb-a9f8-5390257ac13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e2de0-668a-45a9-810f-773504a9d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d08bc5-678a-41a0-9e2e-30c4451979fe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d64fe0-f54a-40c5-91d6-9e0489d1f0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795ef87e-ea7d-4c15-9526-d46ba9dd7e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d06dd3d-db01-4172-acce-ff612caa3b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2503e4c3-b1fd-47bf-b700-9f03c36d67a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781344bb-8e22-4738-bdfc-ec159ed6b5d0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154f95a4-e7f9-4ba4-b027-59ffb8191724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4861f85f-1059-48da-8f8c-0ff1c844e3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758d5124-514b-42dd-b1b5-b5c39bb7fa52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3bf157-9aec-4fbb-9133-fcb5628d412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773bbdbe-46fe-4c0e-a1c7-d04a168e90ed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bba2ca1-8e74-41ea-846a-fbf48b7a36d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a1ab70-9831-4bc8-90a8-b13e714b7d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d5c42-de60-486f-8ef4-c995bf59a3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a308fc8c-133d-412e-ad7c-4253e2f0545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc50fb1-4f15-483b-ad5c-fc04b4297002",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0da6ec-c7e6-4715-9ff1-da3f1143fc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01d7aa0-6af7-4d32-a01d-a37e5c0757cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51455464-9243-43fd-9167-197a1236cba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d07c6f0-a134-47c8-8828-57b6708b3272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c7d320-550e-439f-b3e2-181d1f7fe56e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce85d99-139b-4fe4-a087-04ea18400a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c16bd2-2361-4f0e-aff1-2dddf9d6401e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f778e7c0-c8c2-4623-aaa3-4c1d508495ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59006eb5-5f0d-4840-9dde-555a0f432b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b37532-5d3a-426b-9484-027ad071e6ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70aa6b4-a9bd-4f7d-84b6-1ea04445f0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d34f46-8364-45fc-bbc6-74cd48a634e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665aba3e-428e-4aa0-b4aa-0ba77fae0479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7bd372-3088-45eb-b8ed-5159890a2862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d776c-b64a-44b4-83d1-7d31f47ab172",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512cd256-b219-481d-a2d3-0ed78bff8ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb354170-dca1-43ac-9845-45163936ab5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d266bb-4a38-4af4-8245-90ea2fbd9385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af238a4-810c-4cc7-bdee-04359b1e5447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe60191-5641-46fc-adae-830c629606c6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2ea67a-cc67-497d-b014-798044b6dc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48cba17-199b-4cad-9c8d-c3f5159817cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cacc162-b200-4bba-8bce-b30e50dd9bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a69e91f-1189-433c-95b9-e0ecc44cc138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c32cd2-ae25-4885-92e4-d4e79c85030b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df97cfd0-7a8a-4ccc-b61b-9525ea6161a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769226b5-f16c-4987-bc6d-4059e7ddb184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c1572c-4503-4d6b-a6cc-083062652c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbb3f4d-2115-4f62-bb83-381e09c455ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d31cea0-81c2-4c0a-86e2-8ed007335ca8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc75a666-a91e-4765-976f-73b73000520e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ac25a9-738e-4351-8d2a-315a43daf23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce165a5-a10a-44cf-a0fa-488152c6e0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237c3733-382b-43ca-8e3a-d7c2ffd8a9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d74bd7a-189a-4c14-9bfe-64c2bb8d3ecd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2f7a64-8ef8-4410-a379-ee4f3b701c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f040d4f9-209a-4d2f-b7af-55eb5e42eca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95ce43d-4085-411b-8994-93671b14dda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0cab6e-fe57-44ac-87c1-dfcb3594fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958654c0-768f-4895-8247-027bdc2b9211",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f52adb1-0741-4cc1-b636-349654045a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a40f8a-17b7-4990-a937-f0c569417c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ed4e35-8e89-448c-b4f2-fac83697f41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7147542-152c-4e6d-9f01-de0563401988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07157dd3-05a4-4a21-9737-32d41fafade1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d262009-0265-43c8-97f9-24028be4799e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4804080f-98c5-4701-8018-2857b4e1ce23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3f4656-617d-44f8-a1a5-08c8220c4a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd94e5a3-81ac-49d5-9fb8-3236109b5af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d547c3-d6d7-4233-9b4b-962138c61950",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551b0a04-8468-4a81-aa0b-ae2b22d0db80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65202e4-9503-47d4-b57e-029274705542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b97766-2a51-48c1-930a-8f8451ef86bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ed8a05-f5e7-4bb6-be76-83054bd2ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321ded0-45b6-428d-bc49-58a540d178b8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a735c6-2a7d-4eb3-82d6-6642571c2e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c0c576-49d3-47b4-947d-f9090a8630a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e06c18-3e29-4517-b799-98505b82ae26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722a1b58-d261-4341-923c-25a0c609845f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7db26c3-2864-4cb0-8e96-e831f48ad0ea",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33cb79f-e766-4b54-94d6-7a693edb736d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe84bdb1-4574-4243-a94f-ec217b936a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a9fef7-80bb-4952-a9ed-527b6fbe3728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935ab16a-75d0-4907-a9b1-777e9800d59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aeb4d3-6f5d-40f1-a230-75f469bc96fd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e1eb06-0c47-4e1c-8662-12f6d5c4f593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e4068b-3340-4ca9-a796-20b08afc93f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68455ba3-1e4e-41f4-9638-84beee19841b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1353a313-316f-4bf9-8b96-dce37bed6294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd95f3d6-bec6-48f8-8e36-8026e0c2fab2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad35f81-2f52-44b5-af2d-c77a7d267273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39782d9-8a24-428f-8b15-149593ae9910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2129787-4d5d-410d-87cf-870de67af569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27ed9b4-a4b7-440a-9282-b776d5e72d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fe9f18-6885-493b-84bd-ce5e73cab09e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1a4f14-9bfd-44fc-851a-ccfff2b82d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a1bba4-29ae-492e-b52b-48b408959ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59af418-5f43-4f46-913b-28142a827bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7bbb43-3417-4bdd-b489-928b19a2d920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb351c-2fd8-484d-9c8f-efa9b0c30e8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231176f1-bb1e-4345-b4d3-b8d45c0100da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1de8643-f62a-48ee-abb3-3c532912538f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9d480d-7e85-4dd9-b13d-31c7416944cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31255a9-6850-4454-a77d-af179b269d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447f9b6a-ef1a-498f-99cc-3bff9c43a2d2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba5cbee-caed-42ab-94a3-a3ccdd99c4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0333d5aa-2d70-4594-964a-1f21e08edbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c795e00-1775-4707-94e9-b5ede4c6d006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e10f5e-1ddb-46af-aa31-7c6d773381ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bddf6c-2bd3-4205-a4fe-66ba57f4964d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa1e5d2-3daa-4684-9a76-6db277151fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae64b7ac-1000-42dc-8d47-f6637a62bcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1223cb0e-fb5c-408e-a07b-63534516840d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3234dd8b-4e5d-4f62-a31e-233891a8fb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dfdc4e-36d4-4adc-8f9f-da2037a605aa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aa7b9b-cf56-4f8e-ac4f-fcb969602057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d2a722-dfa7-4f0d-adeb-3c62e10362b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61a1472-c569-4f48-b82e-39a1e5de71c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667fc152-a380-409b-93d3-e55deb5289a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f31652-673c-404a-90bc-b4435d269408",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37728dd1-b7d7-43b2-a078-a66bdc60cdfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b820d75-9a43-42e5-8315-93885b4966db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedb81ba-b5f5-4e09-9acf-f0c34ac8e198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1f6f9b-6b8d-49b0-87b7-539d520b5cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3c1421-6a53-4d62-a805-c28dbf12ee6d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccce6514-87d3-4970-84dd-b63b8a208222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b98971-0fab-4202-84d1-997496f2ba3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e898ab3-9b5f-499a-b582-117ee735f80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7f15f0-3752-46b2-a6aa-4d240cae461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dba810-b219-46ce-a28a-07c81a09dd50",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7df91ea-2542-4546-9247-b718ccb06b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11669fda-f6f5-4f79-b574-848a07d53607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9472795c-12be-4d2a-b47a-f87e1b7c6a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b64282-fb99-4924-8114-5d112d3d76aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83160995-2268-49e5-b645-47fdbe354840",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8dee9e-a567-4485-b439-226be2b24f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8885b2-05f4-4472-8ec2-162a3f6d6386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee0f934-9eaf-408e-bc95-d85e706cbae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45266c48-6ab4-454b-b517-a46123554ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a63fc60-dd27-4db3-b541-47ff3857edb4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d8ffb-502c-41c2-b1cc-186a4b86a238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c604031-10c5-4094-87b8-5f9f7bd0bec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54f91a1-91e5-41c9-9bde-7ca1e296cfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09245e7d-131b-460e-a9d3-5f3e44122c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66efc3a5-64c1-4982-a459-3571e9363f71",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd5422d-0f62-4db2-9572-5aeab4eaf8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e6abd0-87d2-45fd-ae79-eb3c2cea0b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbad34cc-0652-4c45-92e5-918da2ddcce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6bd4f4-a9fa-48bd-85b4-104d62efda92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8995931a-be88-4c98-b0e4-ab39683c9140",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ec5051-493c-4a58-aa29-8c0aab6797c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e1395ce-2398-4dae-b47a-a069bb6a7357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f57416-89e0-4adb-b96b-6e12fac22187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c50237-0332-44b2-a896-b09b318e17d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6abfb3d-105d-4b23-a949-7edc03d8376b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf29e705-3804-43f5-b98c-61920d10c306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87149d21-b99f-4404-9e57-1995e4d7f5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402daad3-fc94-455a-bbbf-d45b83b39041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c759b55-0146-4b95-aa78-2d9357237ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd639a80-7dcf-4277-9ec8-707a831cd203",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c89ae8-3922-4a0e-8612-80729bc11238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d533979a-ffda-4840-b246-19c93cfab851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdea62bc-5696-4176-a5ea-ef9d3f4625f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0430f1f-9453-4ba4-96cc-e83ffb63bf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cfb52b-88a3-42bc-b93a-e68b82379fe5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214db27b-ffea-433f-b9ff-83a25ec79180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1411091b-3693-4c8f-b42e-dd6edacd25bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98394b1-a437-4134-bf9d-4f95ead5572b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5534be-1fa7-452b-99b1-ddb1c25d29fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2362756d-49d6-4cca-b464-716b35713b7a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44883bc6-8fab-4554-b915-713b4d076599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41038ecc-e4de-4ee7-b060-2ed71688d56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a760106-5d2c-4173-b29d-3cf275b3ccb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e194d035-61fe-44a8-a1c3-258ed3af7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbfc31d-6a01-4968-a19b-0ff1e0be926a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba32ade3-dc0b-45d5-9f05-5aafd5031ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc08088-f807-4f7b-ad0a-0639f75bade2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b513b83e-8da2-4f74-a9c8-2f412a8b9846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703c6ffe-3b25-4d7e-854e-7280da7bb4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a10d9f0-3374-4b78-8597-1b6c2e0605d7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265b9a05-6624-4550-81ab-bcfa0f091e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7f6295-0e18-442a-88ac-34b0553a4a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45311828-02ff-45b1-9fb7-e048610bce40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327c5310-ec55-4989-80fe-7aeb263e36a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e1e1d5-dbea-4171-ad61-a318ce17fb8a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2291aa04-e336-4ed4-bd30-26418c06ea29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d5793c-c685-43d2-8dc1-ec24590a3561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aebdd36-251f-4d50-9887-39846bf9cd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121adfb7-fdce-4756-b890-d46169e0b3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbd31a3-3cc6-4318-bea4-d5c513d0188a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef60212-a680-40a4-b5c4-a56e04736195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2dde080-4bae-440f-84e7-9e6db08390ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae96c14-f043-4fbc-a3e8-3306616280eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c72f62-f415-4c9e-b4c1-bf021f4abde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab35e488-d15b-4a6b-9bf0-8527b7a703c6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f7d93d-396b-47db-91df-85d198c9a73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cd33a7-0663-4e44-b93f-bb9133e4fe10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d23f7a3-f343-42e4-8902-74cf2eff82bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20364357-e2cb-4a44-9970-17c8b8cd6358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f02a8e-1579-40d0-a158-8d984d4826b4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8067e954-ed28-46ea-8205-ef37e4a22c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed912568-ce7b-4db9-94bc-e25487c38948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc18149-e87c-4d99-989a-df908dcf21f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d5c987-a75d-4640-85b3-c96349eae6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656b6b92-337c-437d-bbba-a02468d78f1b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7253fe-7e9c-4440-b441-0f0a84823d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b07be4a-abee-408a-b710-6eba4790f510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f51de9a-d07d-4cb9-85e7-6ba5e7b0f707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1031996-d5b8-4f62-98c6-f84607193c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4afea6-0281-4cf4-bba5-8a42410f8665",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2ac0d7-8980-4d3e-9aa1-cfc4f05df1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "437ad9db-6893-4136-95bf-30ae7265ec20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d4150-0279-4a16-b240-7a836f9b801a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6201e604-b45e-4cdc-ac06-7a713fc09bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6133fe7-7971-4661-bf15-7d0999a23cdb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606cb505-6b7f-469a-acbf-1c809d5a4101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863a2c7d-cebd-4e7d-be93-63fe1e8eca12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad1343d-b08c-4a03-8279-5ecbf209d067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd934ce0-3d76-4033-a084-00a7a83ae592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3414643-0913-46f7-a64f-db5927c79a23",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0476e21d-75c1-43e8-9da5-3a4a76944509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f53c38c6-d4a7-43bd-bbf3-480f933dae86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4988a7-b248-4227-89d7-56da4aae13d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b72d8fd-95ab-4ba5-a414-d3074e86d565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcf3749-5018-48f8-a409-fdf0ecea91c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da2433-3084-4678-9e86-0f4307eb4647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd09d9f-0d24-4629-888d-fa9a74915566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c800360-e037-4176-bcc7-4ec925aa5d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791ad4c1-8127-4087-9c65-37b2c877b96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302f1a2e-0bd2-4bf2-83fe-1970cab2b280",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a0fa1-70de-4571-af4a-f2a2dfbdad26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb194879-7ca4-4d77-9ff2-9bbb29d90f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eaf0d1-09a0-4894-a937-9be062a05cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6e335b-01f9-46f0-971f-a79198d9010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3aa135-6397-437e-abc6-6a22d40d719e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc61784-eb4a-47d5-a68c-50c7d67a1487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2ba348-dfc3-4f9a-83f0-d44920b0259f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8241b7b8-272e-4db0-91da-8a43fb5e2268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec385f3-07fb-46ae-a1dd-a65daa76ffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da26109-8593-44e7-92e2-95266c6331cc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b777035-b7e2-4bd5-afec-54d79514a47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60efad7b-3600-4554-b287-d24345153f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfadb23-8913-44d1-a116-9e9f9c593785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4217ee0-afa9-4d1f-b187-485564fd9558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa976e-2ad2-404e-9986-1a80ed61235d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9f45ea-da59-43c4-916a-8cfc804f4414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe732155-d682-4b92-8983-78b3505f7425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6a9cb9-3146-4959-bc06-f83474d9f436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ccba8d-b878-4a9d-ae76-c0d96f387c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185c7295-013d-4d01-8e60-10dde4c311b9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7768935c-5831-4421-829d-42bfebd6d86c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51650e8c-aeb1-49fd-85dc-b5988c74f5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff3daf-6e24-43e4-9377-19acc657a7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f997ac-84cb-4e71-9efb-5847054dc834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6e2750-5b3e-4419-aa8d-cbef9e05626a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35194ac3-29f4-4323-aa90-9700739c6d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c44976af-8cb4-48bc-bcc3-3a383e8eef22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ceaacd-9c2c-4d82-ac80-887f988fd0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6392b9-df68-4c3c-b515-bfedac78d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed86f38a-23db-4400-b21c-7b7e4c15f651",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc4dc35-1de1-4513-b9c0-e68d63c78175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b10e814-49e1-42c2-afec-e476b82cca2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a58d68-8d3e-4183-aa05-4f02222d4fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683bb20b-524a-490b-b267-eb59f78f3c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865b2dad-4092-4e5b-982e-5ec56bc8b6be",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eabaf8a-2e11-496e-922e-5be9b2ec98c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b15c50e-2da5-4096-8d3f-22e904778bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042cb91f-167b-4a08-9748-970465cb7212",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f40cf81-3591-4eb9-85c5-cf0ef9b67039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a59c214-cfee-4c1e-9b5b-2b989ca482db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf367ce-6a41-4296-b170-a89c4d798a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6783d1ef-cafa-424b-8be9-876fee15f948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01a5368-751e-4f71-bf4e-ce0c4595506a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58091fea-60c9-46c5-a27e-0c9aad65db2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ecef73-b1b3-4ac1-add6-b838b4e99e3a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cac2cc9-a890-41c0-bfd0-b9e11137b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4747e9-92a7-4ffe-bda9-c416b2f01e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681a3895-041b-44da-b5f1-d9829c741a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b84c82-9a7c-4824-83e0-264da7daed4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceca9bf-e493-4c3c-81ed-73edd7e96ad0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947541fc-f028-4d3a-b5b5-f7dd8b82dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65bce9f9-bcb8-4731-ae0e-7dae5a38d86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3327fbd-079a-4bf0-964e-675426c9bdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4152bf5e-546e-47ce-8053-6e1dfc25ed67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec41ff0a-9f8f-4611-97a7-0aaaf533c6ec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d9212-821e-43ac-9aad-85edfae8ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "609dbd6a-b73f-404b-b30f-f37a25cd0592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41082c34-6268-4275-94df-a8fe78c5ca90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f67eb0-f455-41cb-bc4a-38f081017434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52677522-dc70-4042-bbf4-7fe50deb58f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617bdb2b-4ae3-4ce1-859d-25a65539fcab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2011c7c-e17a-44e4-96e0-7cbf3e508024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd5a99-8cb3-48b6-b369-069e2ca82e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25494cb9-91f6-4254-a160-e8441efb0387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f608f16a-1fc6-46e5-ac3c-c19ed2456dda",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67303da-515f-4a03-8c7b-2789c7676e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "effb285a-bf10-4d56-933b-a337b5459239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa6641-14c7-473a-ad4e-3d2463c683ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990c58fd-76ce-43c1-92ba-cfac45117d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e6ebd3-78f4-48c4-b7ff-8a8862d2821b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8447f6d-5008-474c-83e2-2ddc287ed983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66f9efa-8c60-4a5e-8455-3c4b7eb5afbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3565a623-fc01-4901-bb63-8ce7af0bf77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0775b6-7847-438f-8f75-3c7e498e9c0c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1f2e641-7b4e-4356-a4b7-aebef20cffe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51c588e1-d040-43c4-a42b-2af2ae20af4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0093a082-e8d0-4c32-89d8-69f0e2607517",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8ccab36-473e-4b99-92bd-a1484b9c288c"
                    }
                  }
                ]
              },
              {
                "id": "83aaef39-39ed-4713-9ffb-59a539e2a2e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b8115ed-09af-4294-8803-6ea7b63db731",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea97c2-599f-41e3-83a6-14cf8ec41e22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "26e64d97-1673-4642-83dd-033660a72bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eb6230-c3a4-4b56-bdfb-5e91d67472a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d23bae71-eeff-4b51-8cb6-47b70e00fb1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "401fdbe7-91b3-4825-81e2-6011b343ff2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25645d95-41c2-4b8f-98f2-90c0a10f06f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8623348-2fa0-4367-9b77-dbdbb97f71b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6c97f56-2574-41cf-872f-5807a584c40c"
                    }
                  }
                ]
              },
              {
                "id": "e8eef870-00d3-46b1-8b8f-a36d15a0d238",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "44fd3b0a-1bca-4e1f-a2bf-62d4b3bb479d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62dfedc-8248-4013-8f9f-790fba7e627e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2be555eb-109a-4a80-9295-95b9a025b6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e7e53f-0a40-4d63-b8c6-46bbf72f62ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54d73da-fd0f-45b8-9eec-3cde3f6cb67f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6b9bfcf-7703-4bd0-bf32-af7d3e9b3316",
            "name": "Positive Testing",
            "item": [
              {
                "id": "297d708a-54d0-4a84-bd01-07732fca2f29",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "554232ee-0094-433c-8d90-227947232e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38056317-9c40-4906-bb0c-07d65a7c07e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6549bd8-eb3b-4956-920a-446de0040be2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa2c8faf-6a1d-4c7c-a73d-455466fd6b17"
                    }
                  }
                ]
              },
              {
                "id": "7f93e0f0-62fe-4ae6-a6bb-699252beabe9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2ef0540-0b46-45fb-9939-0f4126797cea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "785ecea7-fb68-4517-b3fd-29701a8cdcbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c891ad8-0e94-4de1-9875-727b30724fdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76b5fb4c-8d7f-4337-86fb-6d5ead271db0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fda00cdb-9643-4f9b-b810-0714c748d1cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "949ae6c3-3915-4da4-82ab-ae255e58eca0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3124d5a-1eb2-4014-910a-0bf0b108fe39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0276f7de-97b6-4faf-ada9-9b652227ade2"
            }
          }
        ]
      },
      {
        "id": "e03e9682-9a6e-4931-a353-f10e02c0352e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a0ee4178-7560-494a-ab65-d5cfcab40263",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cff1a152-211f-42b8-ba0b-4d74c95186bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "738143ee-5b2e-4881-b082-ea04fbc8ff49",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9952751d-136c-4c73-af88-c470db8b5cc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43ff8c39-4c0b-450f-ab4f-472d0c9ecb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166cd033-259b-4ef6-a7a2-6e1bbc47c740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5003de3e-1732-4016-8415-6ac3a2d90a15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a5bf404-3787-48f3-8132-c72c3e598d60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a21f8007-54bd-427c-89c6-e332a62c7fe2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d09d3daa-462f-44a2-9c9c-0bc256ce4c6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43159aca-8d25-4e21-aba7-f0f286ee3795"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d2285e8-da2b-4638-82e7-177d3e4acdb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "207250a5-cac6-486b-ad1d-c8bd67e16dd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8034d86-7102-4d33-919d-f9d28cef4029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f34bd3d-2c92-479b-89e3-07ef5fb398b7"
            }
          }
        ]
      },
      {
        "id": "77b0f1e6-d51d-4372-9691-2551a6466837",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00b11255-b9a4-4751-abbe-abb03abaeb77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05f73e38-e81c-41da-b65b-c2d69d976ed4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94ef14d1-bd3c-4d43-8e4f-3306cfdae6ca",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0154f814-7a59-458f-98d6-c1c0a1eaf14a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b91a3ab-28fe-47e9-879b-34084aa98f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aac7a59-a51d-4830-8165-6f1fe77552a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52e0ab2f-6c6c-419c-af44-59d41067a4d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0f136a5-4324-4a80-a240-4777d416d558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "923557d9-7e90-4ff6-99a2-2924ed84bb0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc4ec0ea-ff65-4029-8f39-3d1561b6170a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83176c8b-e610-451c-8548-96cf1630fce8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e0d7166-77f4-4fd4-aa1c-a5a3fc58628f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab77c453-1e16-43ed-8611-f0cf4c1087fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f6afb88-1831-4649-a63e-63f717d6aab0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91eadb31-0f31-42c6-a31d-409db1142876"
            }
          }
        ]
      },
      {
        "id": "2e0efb28-500b-4994-9155-f2034e3e1923",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bc8e9d2e-75a3-481f-8bf9-d62b2f3833cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40060494-439b-436e-9705-7e2ef3529e9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae91e2a0-201b-401c-8ca3-39797022f8a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be02a7e3-4bbe-417c-8b01-e86e787ff301",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "400a50b5-1799-4e0d-a1b6-d8da545e0ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2d8f8b-164d-415c-af94-5a4fd79156e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2373514a-a8cd-49ae-88b7-5c688ca50bcf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d133d02d-3570-4793-8bb3-4b3793bb0b95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83aa0112-4188-43a4-8abc-fa79c273fa35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b14809a5-bffd-4837-991b-2269ccfa6b28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "865eba9f-fe70-4475-ae64-e081bbf210a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da0c4bd7-e546-4383-a182-f16387d8760a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5922a89c-d30a-42de-9c72-cdd78d674db1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87dac955-a1fc-4b41-8d21-00b1394aed8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73419f16-5baa-4b43-bd72-b80d8a213f3d"
            }
          }
        ]
      },
      {
        "id": "2b64fa30-51f6-4a31-b7e2-f17723fd608e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb980d6a-ceda-4f96-ae68-7cf8d6c66535",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93723f42-4d0d-45ef-9dc9-5c17cbd0d0cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "919e948a-82a4-401e-bbbc-cc95ef6d5836",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f6a389a-5ba1-4fec-8f2c-4491e01473d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd581cd6-343d-4345-a36f-92d92b7b9283",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.9366197183099,
      "responseMin": 6,
      "responseMax": 12089,
      "responseSd": 754.5027297646951,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697070714094,
      "completed": 1697070768645
    },
    "executions": [
      {
        "id": "5eb2de07-51c3-47aa-aaf8-7de983f69364",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a09f6e5b-dd80-4c25-9a91-4421da782efb",
          "httpRequestId": "80e28042-5471-4465-a566-eba6b03341a7"
        },
        "item": {
          "id": "5eb2de07-51c3-47aa-aaf8-7de983f69364",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "24003005-79aa-4719-bbab-c0c72b7cbe0d",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "acfeb6ce-b460-477b-a394-84fca5d37792",
        "cursor": {
          "ref": "4a2fc33f-c9f3-4141-8dac-ccd59e6342e6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d994ea5d-13af-4dd8-ab82-39a374a27261"
        },
        "item": {
          "id": "acfeb6ce-b460-477b-a394-84fca5d37792",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "abaf1acc-89d7-4b2a-8bdd-c46e5db7a86f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5652ed37-154d-4c9a-bd9c-0a1b442d0762",
        "cursor": {
          "ref": "50ffb669-7f60-4e65-bc9e-796dd70b4c92",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b174f57d-ee5e-4666-879e-5893937d15bd"
        },
        "item": {
          "id": "5652ed37-154d-4c9a-bd9c-0a1b442d0762",
          "name": "did_json"
        },
        "response": {
          "id": "9ca30e22-4d37-4620-9ec4-a2ef35581a4c",
          "status": "OK",
          "code": 200,
          "responseTime": 410,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095e7383-1bbe-4a0e-adee-d3eaf19efbe7",
        "cursor": {
          "ref": "4f5d57ed-d697-4574-b9e8-8366238b8fa4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe7f4301-e01e-4d9f-9ad2-729b7e9ccf6a"
        },
        "item": {
          "id": "095e7383-1bbe-4a0e-adee-d3eaf19efbe7",
          "name": "did:invalid"
        },
        "response": {
          "id": "be16db39-d2f0-446c-a5e6-78002663ff1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 757,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095e7383-1bbe-4a0e-adee-d3eaf19efbe7",
        "cursor": {
          "ref": "4f5d57ed-d697-4574-b9e8-8366238b8fa4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fe7f4301-e01e-4d9f-9ad2-729b7e9ccf6a"
        },
        "item": {
          "id": "095e7383-1bbe-4a0e-adee-d3eaf19efbe7",
          "name": "did:invalid"
        },
        "response": {
          "id": "be16db39-d2f0-446c-a5e6-78002663ff1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 757,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b0111-e889-4655-bad3-a9563f9ecb0c",
        "cursor": {
          "ref": "ca379418-a607-44b9-a66e-2e3cd7ae1d53",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2ff2a05a-f5b1-4d29-aa08-4ae289899cb6"
        },
        "item": {
          "id": "e55b0111-e889-4655-bad3-a9563f9ecb0c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d4a76ce8-2081-42df-80e3-8852fbc5012d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0389d05-c07e-4618-a3b6-cba9bb30c8c3",
        "cursor": {
          "ref": "8b2158d4-033c-4f86-92ff-fc3920abf368",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0b0832ad-ce2c-4ec4-b6e1-f9ae9e89a7a0"
        },
        "item": {
          "id": "d0389d05-c07e-4618-a3b6-cba9bb30c8c3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6e9c6b16-1f86-41c7-92ff-3a0b831e72ed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a04e3bc-9fa6-4e99-947f-228ffc9e537f",
        "cursor": {
          "ref": "2209ef73-36fc-47de-bb2f-89bc8e2ca896",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0cce4001-6781-4fdf-b812-92b285ad19ad"
        },
        "item": {
          "id": "5a04e3bc-9fa6-4e99-947f-228ffc9e537f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f274f4d6-d6ef-4cba-8e99-4a84a499fac0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d52c34-2ec4-4d1b-b848-a147ad53d39a",
        "cursor": {
          "ref": "83ba0ded-c36a-45d2-b067-e2d393339f9e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aea7bff0-a7d1-4376-9edb-695e7ba47bd1"
        },
        "item": {
          "id": "e0d52c34-2ec4-4d1b-b848-a147ad53d39a",
          "name": "identifiers"
        },
        "response": {
          "id": "c1ec33c7-fbbc-4769-8b50-8697165523bd",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfa3dd1-8088-4666-a672-92a15870b920",
        "cursor": {
          "ref": "339963b4-2965-484d-9a59-ddce79245865",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d1310ccb-e5b1-4c90-aef2-e9f0ca733fd0"
        },
        "item": {
          "id": "8cfa3dd1-8088-4666-a672-92a15870b920",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a5d295e8-8b66-43cf-9e5d-b79b4223a152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a644ef03-4913-442c-b237-affada82f4f2",
        "cursor": {
          "ref": "a0219c4e-5f38-4e04-8d6b-053f59276d00",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a3192b22-dbf4-44bd-8a08-187045791da9"
        },
        "item": {
          "id": "a644ef03-4913-442c-b237-affada82f4f2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b401bb4c-566f-4038-9075-053096580e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26411bcf-c885-49dc-8269-db44914fe01f",
        "cursor": {
          "ref": "5d434bb7-6a47-44ef-bc95-bf77ae18cd63",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3f9fa80b-4812-47c7-8fee-d7c8ddd426a6"
        },
        "item": {
          "id": "26411bcf-c885-49dc-8269-db44914fe01f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f91c2a8d-e4de-49e0-a794-a8b507fb150e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98da7a6-2993-4336-a9fd-d7258507e05b",
        "cursor": {
          "ref": "95b39537-b65a-4638-9f22-acfb3acb3900",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e38b22ca-ad46-4462-9387-870054344a72"
        },
        "item": {
          "id": "b98da7a6-2993-4336-a9fd-d7258507e05b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "316336f7-f03a-418a-be75-4e33492ba96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b408d1b7-7d1d-44a6-ba2f-c333d08e81ae",
        "cursor": {
          "ref": "1178510f-bca5-4ea2-b140-84f3a7db9d3a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f696d859-cdb3-4b61-8e8d-ddf35e7794f4"
        },
        "item": {
          "id": "b408d1b7-7d1d-44a6-ba2f-c333d08e81ae",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2ec048b0-f2f7-491f-a90c-79eacbd0635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6081e5-1c74-4b18-a559-1fe2a276ca94",
        "cursor": {
          "ref": "74ca2407-9541-4ea0-9f48-dda54f40dd60",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5dc37c77-a17d-44a2-a572-1269b7e7a9a8"
        },
        "item": {
          "id": "ed6081e5-1c74-4b18-a559-1fe2a276ca94",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8c58300e-db1f-4e08-abc5-96d69964f3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb47cea-6a59-4f50-83ac-1c6ae1d63172",
        "cursor": {
          "ref": "5ee2828b-60f9-4424-abdf-bf58fbe7f2a8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ad9ea2ae-450e-4c5b-ba8c-4c48f2f4bce4"
        },
        "item": {
          "id": "cfb47cea-6a59-4f50-83ac-1c6ae1d63172",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8fad3742-eb1b-4da3-9e1a-73a270cbd54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dbd5dc-1a0d-4290-bc20-0d320bc351bb",
        "cursor": {
          "ref": "cd4ae7fd-9bd4-4694-b1d7-fd94a575cde1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5dfbe007-736e-4c07-a873-1e6225cd4376"
        },
        "item": {
          "id": "e0dbd5dc-1a0d-4290-bc20-0d320bc351bb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da79d028-f614-4af5-bf6d-582df77365dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b66f02-2541-41c2-83f8-094ef4f0ab92",
        "cursor": {
          "ref": "3d16bec8-9db7-44d0-98cb-9502336478df",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86ee7f67-16ed-453a-bf18-a645203137a7"
        },
        "item": {
          "id": "f5b66f02-2541-41c2-83f8-094ef4f0ab92",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "205acf24-8cb5-427c-9613-3b6b4a9f97e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5616f2a4-3173-4d56-ae83-1784fb132cdb",
        "cursor": {
          "ref": "4149fea3-eb31-4c90-9b71-a003b56b1289",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8c3c3087-79e9-4b1b-9e68-780016ce7e82"
        },
        "item": {
          "id": "5616f2a4-3173-4d56-ae83-1784fb132cdb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "835874be-b969-496f-8bdc-a312a45134ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32883ea9-d7f6-46bb-94b2-27d9a8eb6113",
        "cursor": {
          "ref": "2e495669-5f83-4c8b-b802-3f519d548a83",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ab66c716-a811-4d1c-9cfa-fc220879684b"
        },
        "item": {
          "id": "32883ea9-d7f6-46bb-94b2-27d9a8eb6113",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aa4386f4-e66a-4551-b256-ebdd9df276f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958a6539-1280-410a-94cc-89b075b7d6d0",
        "cursor": {
          "ref": "4581a6ba-2125-4255-bc36-fa1c0eb3bbd6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fdea408b-c528-4179-b7ce-9429db87a5e0"
        },
        "item": {
          "id": "958a6539-1280-410a-94cc-89b075b7d6d0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ee6b80f1-b4c0-4025-9027-958202f0ffd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dd22da-88d8-4fc9-a40c-a5457cf65bbd",
        "cursor": {
          "ref": "aac4bc9c-b605-492e-864d-c6013b30eb1a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "50d0d5f4-028a-4238-8b96-d59f096559ca"
        },
        "item": {
          "id": "82dd22da-88d8-4fc9-a40c-a5457cf65bbd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ecfcba40-3400-4e4d-a496-12edc371ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15892c06-26e5-488b-9ed1-6acc8f707088",
        "cursor": {
          "ref": "95b45020-217d-4683-85a0-8de369a54c6e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6623e05c-509b-405b-9be2-b7a82b165020"
        },
        "item": {
          "id": "15892c06-26e5-488b-9ed1-6acc8f707088",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "423ac74a-b6e6-4225-9f73-bf5a9d05ee26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9948c314-a642-444b-a85a-a21df70a3b36",
        "cursor": {
          "ref": "8d58159f-a4a1-4bff-b149-126733b1f8be",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a28a418-9d07-4f4d-bfbe-04013b3c53ee"
        },
        "item": {
          "id": "9948c314-a642-444b-a85a-a21df70a3b36",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0f3ed4c1-8802-481f-885d-af6045d4b704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea74721b-80c5-419c-9896-4b20593e2ac6",
        "cursor": {
          "ref": "6d3247bb-baee-40f1-bb97-ea207baf574f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2524d2b1-4239-417c-8c13-066de1ffd873"
        },
        "item": {
          "id": "ea74721b-80c5-419c-9896-4b20593e2ac6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0e7e8bab-681d-4d07-a3f8-711bbac00e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e8f09-9e84-4865-9266-5333efabc3d7",
        "cursor": {
          "ref": "455bdeab-3a0c-4c8e-adf9-893072719969",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a028056d-4216-4ba9-ab0c-7a2378ac0879"
        },
        "item": {
          "id": "dc8e8f09-9e84-4865-9266-5333efabc3d7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0251ce11-a814-4c65-bfea-a8f850db618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327fc462-5ab5-4918-acd8-2760426499e8",
        "cursor": {
          "ref": "c0dff530-6ff3-4fa1-9085-4c9c97fda74c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f674e6a6-57f3-4c31-bb29-558d0d0dcb55"
        },
        "item": {
          "id": "327fc462-5ab5-4918-acd8-2760426499e8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5eb5cee3-597a-484c-972f-f21673a0eabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd308f-5f18-4168-8e2e-b780b49dd304",
        "cursor": {
          "ref": "badce0a8-77db-4124-9adb-86c344bfc75c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cb74bf1b-8e2e-421e-8154-b1c3b9328a3d"
        },
        "item": {
          "id": "3ecd308f-5f18-4168-8e2e-b780b49dd304",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6c885418-207c-43a1-8e41-11d04bf7554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d2b36-158e-4029-ae41-9cfdda1cfbc7",
        "cursor": {
          "ref": "d6dd2a43-0d20-4cc5-997a-9dc990f53002",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "736718ba-6eef-450a-b145-550a4d583afa"
        },
        "item": {
          "id": "9a8d2b36-158e-4029-ae41-9cfdda1cfbc7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a0d33c33-ea59-4f7e-9a1f-2d369a860cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4474e1-2938-4f84-b839-0571c3a273c9",
        "cursor": {
          "ref": "cc204987-6c32-44c2-8e29-73f22e00c9a0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "671ecb7d-ca3e-4373-a473-bcdc3f7d6dfe"
        },
        "item": {
          "id": "cb4474e1-2938-4f84-b839-0571c3a273c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4053203c-2275-4b4c-85df-d89f3f6a4924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76df12-c87b-45fe-8d95-7c232a7af496",
        "cursor": {
          "ref": "f3b1d121-a63a-481a-9c30-e7f511f8a086",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4c667f44-11ba-4588-8f6a-99fac5616733"
        },
        "item": {
          "id": "8f76df12-c87b-45fe-8d95-7c232a7af496",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b182f2b1-2f47-4c79-8c07-0c8a95e4e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae447c1e-6bbf-4e1a-bdab-dd6cdb804bbf",
        "cursor": {
          "ref": "a09fe8a4-4e66-4014-99e6-20701b1a0d0a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7400db97-5456-4508-bfbd-e677f2de8e72"
        },
        "item": {
          "id": "ae447c1e-6bbf-4e1a-bdab-dd6cdb804bbf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "40628138-8e7d-4862-af99-7e1ca58d2dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968976e4-a2b9-40f9-bd24-726fda8f139f",
        "cursor": {
          "ref": "5e91b829-ceef-448b-b544-baa747200a6a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "707a21c2-74f6-47fc-9a55-c9f89fdc6d5c"
        },
        "item": {
          "id": "968976e4-a2b9-40f9-bd24-726fda8f139f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "34a25f3a-7403-42c3-8eab-fc174b700906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31059ae1-b6d3-4b48-9c94-ca09037938f1",
        "cursor": {
          "ref": "d451f400-51f5-48a0-bf34-c03219486b45",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dbce02d7-19c2-4ab0-8fc6-b360ef770d52"
        },
        "item": {
          "id": "31059ae1-b6d3-4b48-9c94-ca09037938f1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d0b7de4b-cff6-466a-9c92-773b4ea71cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb34452-59a7-46a3-9da1-04c0915c17e4",
        "cursor": {
          "ref": "ca8660a9-d6ff-4c7d-b225-b3ba431c25d2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d8964b19-22f0-4f02-b273-3fad3f50a6bb"
        },
        "item": {
          "id": "4eb34452-59a7-46a3-9da1-04c0915c17e4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "956d61b5-614a-4eed-a62b-e9926b788177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696c98b2-096c-4564-bc8d-151d572a1748",
        "cursor": {
          "ref": "0fb651d0-9d75-497d-b16f-467c0e65fad0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c53e5862-a2b4-4c76-9de1-4fe001c5c27d"
        },
        "item": {
          "id": "696c98b2-096c-4564-bc8d-151d572a1748",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "562c3fae-cb0b-4afb-8ba1-44d5218a4d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cffb15f-95d1-4136-877b-bac0c0bd33a1",
        "cursor": {
          "ref": "b717d6dd-ae35-4ea2-845b-a44accfd3f5e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c76e8cab-b958-4493-a1c9-0de2986c2f0d"
        },
        "item": {
          "id": "2cffb15f-95d1-4136-877b-bac0c0bd33a1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f28ff325-85b1-4032-aee3-e8945d2a5ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb30576e-963f-4bce-b424-04b4818b078e",
        "cursor": {
          "ref": "16a265e3-e321-4f82-ae5b-112d45eb54c1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e9b5275c-c5e4-4d62-85fa-e32aec7f49d6"
        },
        "item": {
          "id": "cb30576e-963f-4bce-b424-04b4818b078e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1c6730e6-8434-4980-abfd-20f48c0e7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35b0085-ae6d-45ed-aa3e-bd7bfcfdc6bc",
        "cursor": {
          "ref": "f12f5550-a5e3-4b1e-9abb-a8252d5a1457",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "298ef382-d522-48b3-9bed-40c475208828"
        },
        "item": {
          "id": "f35b0085-ae6d-45ed-aa3e-bd7bfcfdc6bc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "accbf4c3-c679-405b-814f-77e677bf1318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6268e85d-bd7f-4fcd-8a97-f36567846320",
        "cursor": {
          "ref": "ca4d82d0-8fc5-42c8-8d8f-a2163011dd89",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "441e40c6-5902-4b47-8ba7-73c26d27d561"
        },
        "item": {
          "id": "6268e85d-bd7f-4fcd-8a97-f36567846320",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ce4be4bc-08c8-4aff-8d75-ad03a053cbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bad3ed-d580-4d7f-87de-e6590aa3262d",
        "cursor": {
          "ref": "43fe060f-67cc-417c-87f9-3043cbc2c628",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4f8c854-ceca-4a7f-bf7c-fad191a29241"
        },
        "item": {
          "id": "f7bad3ed-d580-4d7f-87de-e6590aa3262d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "92ad656e-17b4-4226-a331-9367ee5aa6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d103f6-ddfc-43a8-8482-2e4c13da814b",
        "cursor": {
          "ref": "5787f51d-6fc8-4888-a39b-1011de65a946",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "128ed0ec-4811-48dd-840c-0745dfe07067"
        },
        "item": {
          "id": "58d103f6-ddfc-43a8-8482-2e4c13da814b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7d26ab5c-b8cb-4d6f-aa21-a9c26f939a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c319d179-c06a-42fe-a5b0-c28cc1a950e3",
        "cursor": {
          "ref": "cf915b08-cba8-4da1-a018-4caabacf73d9",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cd29c95a-3391-4c1b-b874-fc84b072c41b"
        },
        "item": {
          "id": "c319d179-c06a-42fe-a5b0-c28cc1a950e3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f6d771fa-01aa-46f4-b4b2-b1fd1b4752df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3225ef4f-ee98-4756-899f-8c72a8643bb1",
        "cursor": {
          "ref": "7aa37c88-c53d-4cbd-bd0e-e5e2d0c600e0",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3bb47df1-ca8c-4b6c-a4f8-aa6c9dbf3de9"
        },
        "item": {
          "id": "3225ef4f-ee98-4756-899f-8c72a8643bb1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "37f95ca5-8988-479e-bf60-9c4ef4867491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d230d404-5016-456a-acd0-45dbdad9ff50",
        "cursor": {
          "ref": "71e1da65-9943-4c98-9db0-fd15fb2aacca",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d1e8eba1-1047-47d5-a6af-496036c5cb44"
        },
        "item": {
          "id": "d230d404-5016-456a-acd0-45dbdad9ff50",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4557d28c-86ac-4b44-8f3b-efda90c3cc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367445e0-38b2-49e1-8787-23a2037890aa",
        "cursor": {
          "ref": "e0668c41-fbc2-49b8-b690-e6bd65e34607",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1e564676-b100-4882-b64c-f7469b2dd944"
        },
        "item": {
          "id": "367445e0-38b2-49e1-8787-23a2037890aa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9fe62c72-1d25-4339-b8ac-75f464b9800a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6186a5be-0aad-4ba7-916b-a07203c69449",
        "cursor": {
          "ref": "010218d1-5d90-4509-a6d6-5f8f5126dcef",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "44edf5e1-43fc-4708-9aba-90b907fafe83"
        },
        "item": {
          "id": "6186a5be-0aad-4ba7-916b-a07203c69449",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "da9a4578-7945-474a-a0ee-96dd29d94c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d0270d-9df0-4d20-b542-b6607a5414dc",
        "cursor": {
          "ref": "773763d7-ec79-4665-972c-977b91749113",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "badd0fa6-fac4-4a24-9f7c-e9c8b17fb28c"
        },
        "item": {
          "id": "78d0270d-9df0-4d20-b542-b6607a5414dc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c71a621f-8ebf-46a7-a42b-42363a867921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e89f8f-7b8c-42f6-8ab7-08ff40b6309d",
        "cursor": {
          "ref": "1c3a41e1-1cce-4df1-b988-f741afec6e93",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "53cd554b-8f70-449b-9afa-4288c37bf8ff"
        },
        "item": {
          "id": "15e89f8f-7b8c-42f6-8ab7-08ff40b6309d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "91604eb0-413f-43df-8949-a5c6a2568b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c798a8cb-0ba7-49d7-a373-61937b6d536d",
        "cursor": {
          "ref": "ff2f01ed-9360-40a9-83f3-667f12bd04cd",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a13a0e0a-6025-4ab4-85ac-b90e12346221"
        },
        "item": {
          "id": "c798a8cb-0ba7-49d7-a373-61937b6d536d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "de8f6d4a-971d-4f1d-a19b-e799292fa38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c057e9-ab5d-443d-aee1-698aa7cbf19d",
        "cursor": {
          "ref": "1d6b1ed9-40d1-4ccc-9c72-b17d6f90b68c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "140aaf3b-57b6-4980-b359-27d595dee85b"
        },
        "item": {
          "id": "c5c057e9-ab5d-443d-aee1-698aa7cbf19d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "06f337a0-0472-49d5-8145-3ca2c43b33e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3888e7b5-9462-4adb-9397-d4cc9d1db9c6",
        "cursor": {
          "ref": "8326b94b-a8e9-46b3-b414-26289e56f2f8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9af6ad0d-cbf0-4be6-98c6-b73740fc9b4d"
        },
        "item": {
          "id": "3888e7b5-9462-4adb-9397-d4cc9d1db9c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3d47eb60-1357-4187-a73c-1ea70c90bab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcde53a-545b-421d-9848-eb37c0f09d30",
        "cursor": {
          "ref": "533fa354-8f3d-4459-8e46-1c77179f80a3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e957f167-1320-403e-9f22-51b4514162d3"
        },
        "item": {
          "id": "abcde53a-545b-421d-9848-eb37c0f09d30",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8e5ef844-5f65-4eab-bd03-430c7fe4ec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6019c2f8-bf5e-47b1-a04c-e6cc7a40b2f7",
        "cursor": {
          "ref": "c04250bb-d5a6-4c06-80b7-b5f860954c23",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca3ba901-5dc8-4e77-b026-c7014e806e08"
        },
        "item": {
          "id": "6019c2f8-bf5e-47b1-a04c-e6cc7a40b2f7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "54a88cdb-97ac-4a43-8f13-d1013ad10f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e28046-b1ce-45df-82d4-b09e6367d174",
        "cursor": {
          "ref": "436a1aed-a585-4a38-8c38-09a4d582fe15",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6e1d3b71-9e61-4090-b1e1-a99b1119ba56"
        },
        "item": {
          "id": "29e28046-b1ce-45df-82d4-b09e6367d174",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c0ec0627-9e8d-439f-a023-61eb2e291428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4de453a-f28a-4862-8805-e146ed4a70b8",
        "cursor": {
          "ref": "4feeb139-a86c-451d-a238-3109ff8afc4f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f79d1bcd-cfac-4a0f-a2f5-c421423396c7"
        },
        "item": {
          "id": "b4de453a-f28a-4862-8805-e146ed4a70b8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a68e3ef0-a1c0-4e27-898a-804c6fa07260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad64f54f-1505-47f4-b696-c72ff32703cf",
        "cursor": {
          "ref": "15d72b34-e4b7-4024-9f6a-641c27b5a518",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3d8a7d79-25bc-4e7d-ad5f-7bead4fa7e51"
        },
        "item": {
          "id": "ad64f54f-1505-47f4-b696-c72ff32703cf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a39d8b75-6144-4851-96f4-6975a3c194ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66568cfb-3ea3-4423-b6eb-4388500f641a",
        "cursor": {
          "ref": "7738e2e5-c855-48e9-8b98-0b53feb628ba",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "905b7aca-bd9a-43d1-b027-38f952711594"
        },
        "item": {
          "id": "66568cfb-3ea3-4423-b6eb-4388500f641a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a4f0df3-b3a3-433e-b1ee-72e27da2d2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a700553-4d1d-435e-a875-d0e356a12017",
        "cursor": {
          "ref": "e2f5b6fb-a50b-4443-980e-b6f84d8cacc8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "861c1b96-069a-4982-b1ec-d686c404fce5"
        },
        "item": {
          "id": "2a700553-4d1d-435e-a875-d0e356a12017",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "43218496-d5c4-414f-a85d-e51cf3272d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f700ab-039f-49bf-b176-6664f2b4cd2e",
        "cursor": {
          "ref": "1ee79656-2c8e-4675-bd47-c1032676b53c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e8638d88-0cd7-4fe7-a262-cf6a586d6768"
        },
        "item": {
          "id": "f0f700ab-039f-49bf-b176-6664f2b4cd2e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "98227c42-30e8-4f2c-8279-66035d8663fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913dcb64-7853-4209-b561-2516675a4e12",
        "cursor": {
          "ref": "7b631f0f-2560-465d-9022-e5e201b648da",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "771ec91e-c149-4951-9955-cf880abdc873"
        },
        "item": {
          "id": "913dcb64-7853-4209-b561-2516675a4e12",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cc7936c5-1993-44e4-a8b3-61cb784d9e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6161fb-20e0-4f72-8ece-86cb8bef8957",
        "cursor": {
          "ref": "5886ef80-a51b-4ef3-b0e3-c1c419517c6a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6b69cb12-4eec-4530-952e-76698064dc14"
        },
        "item": {
          "id": "2d6161fb-20e0-4f72-8ece-86cb8bef8957",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ba96ae62-0889-42bc-a67d-b1d7324f407f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0254b14-f818-49d7-9dfd-617eb8fe6591",
        "cursor": {
          "ref": "3ce7c21f-7f1e-4cf8-91fa-16b868fe297b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f9db7ad3-cb78-4e88-8850-eab004e18362"
        },
        "item": {
          "id": "e0254b14-f818-49d7-9dfd-617eb8fe6591",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "39ac70da-bbe6-4664-b429-40a8f144b9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0f4521-362c-49bd-9be1-7d6d5dfd0f1f",
        "cursor": {
          "ref": "9b6ccc58-6e78-4d90-9115-91f33cf57ce0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "19e253f0-adad-4807-a28b-b90341b2bff2"
        },
        "item": {
          "id": "cf0f4521-362c-49bd-9be1-7d6d5dfd0f1f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5d040357-1413-42de-85a2-8c8110566165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ca0f3f-0c1e-4b33-a05e-8ef201e6b244",
        "cursor": {
          "ref": "006f91af-4e42-4435-803f-986774cac53e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9a20128f-88de-40e6-8181-b2778a79ccc0"
        },
        "item": {
          "id": "d2ca0f3f-0c1e-4b33-a05e-8ef201e6b244",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1447a8fe-96cb-4aca-9867-76f3f6535ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ffa95f-f5af-44d0-a722-b64d659ed2bd",
        "cursor": {
          "ref": "f29f5197-5056-45f8-98a9-b58e12095833",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c01aced6-1b2a-4afc-b829-ad387202bc4e"
        },
        "item": {
          "id": "a5ffa95f-f5af-44d0-a722-b64d659ed2bd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bfc933cd-1e55-492c-9dd8-eeee0f553bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e37263b-14b0-437c-a7fb-7de4796c3cfc",
        "cursor": {
          "ref": "1c7a315d-494d-423f-b914-e92a6f5efd62",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "86daffa1-3120-413f-9740-69d5a0e48d7f"
        },
        "item": {
          "id": "6e37263b-14b0-437c-a7fb-7de4796c3cfc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "348624e2-7f96-44e8-8364-c09a8bafd17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0719d15f-02f6-45b8-a94c-211e6a717ef7",
        "cursor": {
          "ref": "0d7e01d2-f528-4e3d-adff-bf300a4af213",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "97659d2f-f8d8-459c-8e3e-8b0f7014a002"
        },
        "item": {
          "id": "0719d15f-02f6-45b8-a94c-211e6a717ef7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a0498bf5-cdff-4240-bbb3-e31626ee3721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71b7782-c2db-4d90-8008-df1b97906f97",
        "cursor": {
          "ref": "4d7b6c20-2b97-4543-9be4-e9d4373eee02",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c9eaddea-9255-49de-a3be-260f6d0850f7"
        },
        "item": {
          "id": "c71b7782-c2db-4d90-8008-df1b97906f97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "186f8e74-814f-4b08-89a0-e981027d691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cefe1c5-9df6-4830-9834-8a1ef12563b9",
        "cursor": {
          "ref": "dd70cabf-f91a-4ab8-b677-1e93e6f9b635",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b5e575a7-1f5f-499c-90bf-130c783c2ec7"
        },
        "item": {
          "id": "5cefe1c5-9df6-4830-9834-8a1ef12563b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e9424b90-470f-471c-b38b-d9cf69d7febc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a02c16-0abe-40fa-90dd-09ccb8243755",
        "cursor": {
          "ref": "c3b798ac-d168-4086-a606-bd2d0318fe5d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d188af49-3640-4efd-8e07-408429a3fc0f"
        },
        "item": {
          "id": "c9a02c16-0abe-40fa-90dd-09ccb8243755",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f4576a1b-e9e8-4ee5-910e-2da400071b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1743624-ee6e-4d57-be9a-9ab258c2ccdc",
        "cursor": {
          "ref": "c4017f31-1c59-4cdd-be11-c18eff6e6565",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0ce003ba-abb7-44c5-a59e-1a2cb7fd8b6f"
        },
        "item": {
          "id": "b1743624-ee6e-4d57-be9a-9ab258c2ccdc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e4828f4e-2629-4bf1-96e1-0c9b016285cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234721c2-3b8c-4240-831f-31dde32bfb9f",
        "cursor": {
          "ref": "6ce31be3-faf7-4fb4-82a4-ab97e83856af",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a152bea3-9992-42e0-8543-c47d325501ce"
        },
        "item": {
          "id": "234721c2-3b8c-4240-831f-31dde32bfb9f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b1388926-ae87-4cb5-96f9-458f59f195d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b759b4-20a7-4867-beea-f20bba61316a",
        "cursor": {
          "ref": "fb28a775-7b81-4b7c-8629-fb55409a377e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c15e7224-4b56-473c-b990-ac9f5ae16a6d"
        },
        "item": {
          "id": "36b759b4-20a7-4867-beea-f20bba61316a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e26d47a3-23d1-49fb-96cb-528afc6a17e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f01caab-3d4e-493f-afe0-84b0ed179332",
        "cursor": {
          "ref": "eba28cf6-94ed-44e5-96de-743f2d9c696a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "904881c4-13c1-4a4a-8e56-42effda2999c"
        },
        "item": {
          "id": "6f01caab-3d4e-493f-afe0-84b0ed179332",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6108b3db-9f8f-460a-a3df-9700a60169fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50500841-5f36-433e-8bae-69f175e13367",
        "cursor": {
          "ref": "827313d7-57e6-4594-9ac2-16b486b710bc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d03b9323-0cd3-416a-8895-28e3908a3ebe"
        },
        "item": {
          "id": "50500841-5f36-433e-8bae-69f175e13367",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e3cb0972-86e9-4a37-a82c-afe31e0c2715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75af8a3-7df1-4aec-85f7-edfcf7f8a551",
        "cursor": {
          "ref": "013b4168-0309-45d1-b5c3-9240be9e28b1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "789fec05-fc67-4f14-a97d-a462769a3460"
        },
        "item": {
          "id": "c75af8a3-7df1-4aec-85f7-edfcf7f8a551",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1dc82467-3a70-423f-b0be-e32e02c149fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2503a8bb-1352-44b1-b9ee-834b29d58775",
        "cursor": {
          "ref": "f110bab9-5845-49ce-9ddc-36f78684001c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1faac8c6-4c94-4d1f-b8fa-f1cb99cc0e53"
        },
        "item": {
          "id": "2503a8bb-1352-44b1-b9ee-834b29d58775",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5a864447-3788-409b-b2a4-c51bfe0fbe75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b80eccc-1b77-4d4c-96ba-991b0c5508e9",
        "cursor": {
          "ref": "47eac0e7-11b3-4698-b6a9-043ac341e53f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "65f110c1-34ca-4a96-b712-8c6ab058e112"
        },
        "item": {
          "id": "7b80eccc-1b77-4d4c-96ba-991b0c5508e9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7b36c208-20fa-47d5-88b0-3f58d772e8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371f843d-51ba-4d80-81d0-b301955bb3dc",
        "cursor": {
          "ref": "d8361169-00ce-4fc7-8325-543ecc0d4553",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "89aaac0b-cd74-4706-9298-858c171b5863"
        },
        "item": {
          "id": "371f843d-51ba-4d80-81d0-b301955bb3dc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5b03b151-6873-4dcd-8b6b-831b8403b7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b355b7e-c45c-46fa-99f3-c357f8e5ce27",
        "cursor": {
          "ref": "5ad217fc-7b85-4c02-aa80-6f70dc53b13c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "473077ab-01d5-4d65-8444-4aef0a2c4213"
        },
        "item": {
          "id": "4b355b7e-c45c-46fa-99f3-c357f8e5ce27",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ce227ca3-6bbc-491f-8d1e-0041aa4af5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f867505-c0fa-424c-a7d4-b7a09b04f12c",
        "cursor": {
          "ref": "f5403125-d946-437f-8103-fd6698797f9c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1fc33c42-1310-451f-b75e-8f4b9e19618b"
        },
        "item": {
          "id": "8f867505-c0fa-424c-a7d4-b7a09b04f12c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "10abb77a-7c9c-484e-9164-a5ad38a801f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1e9ff9-9041-4432-a5f8-3931768106c0",
        "cursor": {
          "ref": "eb2d957b-44dd-48ca-b824-6b34790fe8e8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e4d23694-b4f9-4b2f-ad74-a226566f9ef1"
        },
        "item": {
          "id": "aa1e9ff9-9041-4432-a5f8-3931768106c0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "591088f9-3392-40c3-84df-38fa6c0c39fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e6e34-6301-4c98-a2ab-f0ca64b185d2",
        "cursor": {
          "ref": "f823d2af-d091-47ee-9456-903910b9b864",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c6a0c544-fac7-4306-ad12-284c3c7aba8b"
        },
        "item": {
          "id": "418e6e34-6301-4c98-a2ab-f0ca64b185d2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "35058417-7c1b-4dde-bf36-05444b541a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca905abe-0118-48e3-a570-278f8a649e5b",
        "cursor": {
          "ref": "d5adf416-0c76-4e71-858a-4b245342a5b5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1b0d6ca0-9227-4c85-bb72-8142d58568af"
        },
        "item": {
          "id": "ca905abe-0118-48e3-a570-278f8a649e5b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9dd64a48-77fe-46b7-93e6-f3eaacce8572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade88ea8-d02e-4076-a947-0bac3b233b2b",
        "cursor": {
          "ref": "12f8fe27-8a8a-4460-a26e-3323443e653d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e47b16d9-2b08-4892-907d-3e7fd8643240"
        },
        "item": {
          "id": "ade88ea8-d02e-4076-a947-0bac3b233b2b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "01caca34-72c3-4427-a6db-a11a17f4d1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8556442a-52ee-4acd-8093-beecc36b85eb",
        "cursor": {
          "ref": "9322b4d1-f467-4bf3-9b13-a07ea8230ffd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64c65984-ba68-423b-948b-3dbc5ca225e1"
        },
        "item": {
          "id": "8556442a-52ee-4acd-8093-beecc36b85eb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "80ac624d-889f-484f-a706-3900fb3306cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d352f7-c76b-4c4c-b6a6-ac4176877e8f",
        "cursor": {
          "ref": "f80f4b8b-87ad-4f48-ac36-7043632c6f26",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2d105057-a965-478b-97df-13b890b79504"
        },
        "item": {
          "id": "d1d352f7-c76b-4c4c-b6a6-ac4176877e8f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b5d7ca8c-c69c-46f6-8e04-47489d7bd30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d07991-5a99-4f0d-9c4d-5a8e694aad94",
        "cursor": {
          "ref": "f7b21b84-2ee4-4836-8c43-384acb20d73b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "54ba28df-55b7-4cba-9ae1-87f300fd1e7d"
        },
        "item": {
          "id": "18d07991-5a99-4f0d-9c4d-5a8e694aad94",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9e9bec89-9a44-489d-8040-c02cc77008e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ff350a-deee-4a52-bf15-7ec53b984ba2",
        "cursor": {
          "ref": "843162b6-a44c-4118-b2d2-c8bd2146628c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0730a023-8a6b-4d91-8db1-3780a69a7871"
        },
        "item": {
          "id": "d5ff350a-deee-4a52-bf15-7ec53b984ba2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7d310d6c-8a48-4e82-9850-dea111efdecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884a767e-b3d0-4496-8732-3a65636b9abb",
        "cursor": {
          "ref": "053a476c-39d9-4bcb-9761-c4df08019860",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "17d179a9-b41b-4ea1-bbc0-0892e5f9f9ef"
        },
        "item": {
          "id": "884a767e-b3d0-4496-8732-3a65636b9abb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "36ab1a29-cff5-48a6-b328-ee6262717885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6da7371-9846-444e-a9cd-2209703d2014",
        "cursor": {
          "ref": "67057778-5822-4530-9caf-494961c78432",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1a600f4d-9519-4fea-826f-f9fda702af4e"
        },
        "item": {
          "id": "e6da7371-9846-444e-a9cd-2209703d2014",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8124dc4c-0e25-470b-a663-ca3342ebe979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4319d-3b06-4af9-8900-3eb8df5bc796",
        "cursor": {
          "ref": "05ea5bee-4ff0-4576-82b5-233ea70028db",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c8565c3e-c401-4176-89a9-55a7b4d30f75"
        },
        "item": {
          "id": "cfe4319d-3b06-4af9-8900-3eb8df5bc796",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "171f4e85-a03a-46de-b862-3d07e61f3529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6c3319-04a9-4991-8485-93c925d6c013",
        "cursor": {
          "ref": "66e55355-0b3f-4e89-8345-43d39a8e12b2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1c1a62d8-e3ef-4a78-a144-6e2f7f3f73bb"
        },
        "item": {
          "id": "6e6c3319-04a9-4991-8485-93c925d6c013",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d70109cf-c1e5-40e8-a2e5-d64a33c2c12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8890b7-45d7-40ab-bd3a-c48d02514939",
        "cursor": {
          "ref": "1cbdce87-ce08-4005-aa98-ce4eff8d09d1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0e90a9b8-a022-4ab0-9e7c-91a9cabb7c76"
        },
        "item": {
          "id": "8b8890b7-45d7-40ab-bd3a-c48d02514939",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "788d994d-4f42-40fc-8c9f-d0ffcaac7a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25909f61-7e24-4c7c-913a-876fcc0b97ed",
        "cursor": {
          "ref": "aea95665-00f5-4629-a661-d69b2e55a982",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "53215fa3-48a5-4e9f-bf17-f0f7d7434984"
        },
        "item": {
          "id": "25909f61-7e24-4c7c-913a-876fcc0b97ed",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "72057762-9e7d-4ac9-ae48-22193dd9ec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9efd61-636c-44c3-b92f-2d78b742ac0c",
        "cursor": {
          "ref": "6ac65ae1-ae04-42d6-8c0e-f2a278ffffa3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f7fc1b8d-013c-4d64-a410-da98d7caca71"
        },
        "item": {
          "id": "3a9efd61-636c-44c3-b92f-2d78b742ac0c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b3daa748-5933-4990-92e4-84068780f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d144989-ab9e-4738-8c70-bcd31cf41e35",
        "cursor": {
          "ref": "5a07db3f-3572-45c6-9868-fa28d9a034ed",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f216c790-fd88-4001-8bb9-1eb6d7ded8f1"
        },
        "item": {
          "id": "2d144989-ab9e-4738-8c70-bcd31cf41e35",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "37fccdb8-1ec0-417b-b47d-14c364f5b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623f2475-0b16-4319-ae6a-42d20176f497",
        "cursor": {
          "ref": "8e0511b7-bb1b-4997-8e8e-ac4def803d1d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77601030-90e7-49f9-b115-f473e7214123"
        },
        "item": {
          "id": "623f2475-0b16-4319-ae6a-42d20176f497",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "17405245-1e0f-47bb-89f0-4886f476017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d1b31-d641-4344-a03b-a396a471885e",
        "cursor": {
          "ref": "6789f05f-1216-4040-94d9-556c2b7965e8",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4b1b8470-b8c3-460c-bbdc-ac302eca165b"
        },
        "item": {
          "id": "192d1b31-d641-4344-a03b-a396a471885e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8381025f-9fe2-4570-b91f-bb95aa7cfcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90661842-b1c9-4172-8e16-dc4dbdd8d540",
        "cursor": {
          "ref": "04e9810b-42fb-4c4b-8361-79dc72e2ce82",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a544e7e-f8a1-4418-bb9e-cdb03d7d4af8"
        },
        "item": {
          "id": "90661842-b1c9-4172-8e16-dc4dbdd8d540",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6828cc92-cca7-4b9d-8444-466c3b075f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b9067e-73e7-4575-935b-85b67fe4ee76",
        "cursor": {
          "ref": "15b7d8d8-16a2-4131-8e6c-0c1e4df38393",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa837d60-dd13-4886-b2c7-8f633e978eee"
        },
        "item": {
          "id": "f5b9067e-73e7-4575-935b-85b67fe4ee76",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1dd6ea2e-69fa-4577-b307-a30fe8091dc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d9fe4a-d27f-44ae-9c98-73373f47a27a",
        "cursor": {
          "ref": "cd869c57-feb1-419b-afbb-2d0f187c007c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ce0e209d-4e5f-46af-b01e-1a6711b65203"
        },
        "item": {
          "id": "02d9fe4a-d27f-44ae-9c98-73373f47a27a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b8cc66ee-71cc-475b-a43f-8370f4bdb3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "7aaf45eb-e783-4161-a89b-6f28023fcdd8",
        "cursor": {
          "ref": "5b2dcadd-11ea-4979-b0fd-4051288997f5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bbc5313e-0b79-4b50-9985-b5afcdfd5152"
        },
        "item": {
          "id": "7aaf45eb-e783-4161-a89b-6f28023fcdd8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "618ca84e-f9b5-410d-ba8e-cb69fbd3c88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "6c116162-2e83-42b7-97c1-cc167935f8fb",
        "cursor": {
          "ref": "4fd0e17f-0a6d-4185-b900-97050e0060a3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c0895b6-1f2b-49ec-9990-ff5918c271d5"
        },
        "item": {
          "id": "6c116162-2e83-42b7-97c1-cc167935f8fb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "da457e14-1c24-485b-898c-6bc47bcc14fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f2c3859d-aee3-4b9f-afd0-0353557a246e",
        "cursor": {
          "ref": "69bbcbdb-5b9c-4195-b3ae-67325a390e3f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bbe426ff-1ccd-4b80-93dc-015587bb1068"
        },
        "item": {
          "id": "f2c3859d-aee3-4b9f-afd0-0353557a246e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c677f4a1-1d48-4eb9-86cf-d48e990e3536",
          "status": "Created",
          "code": 201,
          "responseTime": 12089,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e91b14-4bd0-4190-b582-2f6807206fe1",
        "cursor": {
          "ref": "77e0ccfe-288b-4b67-805f-89ae66d313d6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d23be19d-1960-4e80-b085-bd387e06e457"
        },
        "item": {
          "id": "f9e91b14-4bd0-4190-b582-2f6807206fe1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d0e856a3-8719-4ce6-a966-2c3c534dd31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3d1f5a6b-c59e-4862-b595-1a698df878ad",
        "cursor": {
          "ref": "1e18316e-1436-401b-8ffe-4575e6e9c85b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dc5662cd-fbc3-42a2-82c5-0e452c211936"
        },
        "item": {
          "id": "3d1f5a6b-c59e-4862-b595-1a698df878ad",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "57f655e9-a2fb-4d9b-bff3-7647d6dbd464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "9a032d6d-cda0-4b36-8b66-52c2ef28b35a",
        "cursor": {
          "ref": "cfdfb3b4-4086-4a3b-a80c-e89a61ffb1c8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "81ff80b3-62c7-45b4-9c03-cbe537ab3a00"
        },
        "item": {
          "id": "9a032d6d-cda0-4b36-8b66-52c2ef28b35a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9630451c-40c1-4833-a34d-2a6d59746084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988f71f1-0921-4c45-b936-a8b80a26753f",
        "cursor": {
          "ref": "064804c0-f1a9-4de3-9732-1c5b34491775",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7f5ba636-a86f-4d9c-a9da-395752bf42ee"
        },
        "item": {
          "id": "988f71f1-0921-4c45-b936-a8b80a26753f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d0389aa-5b79-4a9f-a85d-b5ca8631dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ed823-4c49-4489-ac01-5373af2ad092",
        "cursor": {
          "ref": "bc2461de-08ea-42c0-acca-1729bd75a55a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "68f6cbce-5b1a-4370-90b1-6ce0f745cae6"
        },
        "item": {
          "id": "387ed823-4c49-4489-ac01-5373af2ad092",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8ca8b33-9b1e-4e8a-b45d-d17d8463cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd69efbd-0074-4d68-ab13-138974835eab",
        "cursor": {
          "ref": "d825d02d-170f-48e6-90a6-1cbccb6edd27",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e27d3787-7b4f-44f5-95d9-48cbec1654ed"
        },
        "item": {
          "id": "cd69efbd-0074-4d68-ab13-138974835eab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ab46e2d-cd35-4f3a-bb8a-fa98d6039e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdcc61f-6e2d-4b7f-bc86-356510f6997e",
        "cursor": {
          "ref": "7b3f2e6f-d7bf-40ca-a4d6-a31f98f3836d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6c94aad6-48a9-4514-ae22-fa1d54f5745f"
        },
        "item": {
          "id": "3fdcc61f-6e2d-4b7f-bc86-356510f6997e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "84e866c6-a6de-4dd6-9df6-6ae5ddb34447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0adfd4a-c8ab-44b4-a50b-40c1ef3ac039",
        "cursor": {
          "ref": "f4b98a2a-2de1-4659-88b3-ae1c99aba23d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8edeb44a-ef78-4f76-b0d5-2fecb6521928"
        },
        "item": {
          "id": "d0adfd4a-c8ab-44b4-a50b-40c1ef3ac039",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13458033-d7cc-4942-afdc-120276c0f021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e307b829-cdfc-4f17-abcc-b22493fb5c4e",
        "cursor": {
          "ref": "1aec40d5-ea48-4eea-bbef-fff0d95dbb61",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "61c0c70e-d479-41d9-bda9-e8daa9b62b74"
        },
        "item": {
          "id": "e307b829-cdfc-4f17-abcc-b22493fb5c4e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "21ceeb24-2db2-4b0b-b1b7-a64610895f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589f8f25-fc4d-41bd-82bf-331c1e6e8980",
        "cursor": {
          "ref": "dbcf1776-bcad-4153-8fd3-a88b4964bf4c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0ce1ef85-9911-482c-8a04-980a4e9c875a"
        },
        "item": {
          "id": "589f8f25-fc4d-41bd-82bf-331c1e6e8980",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2ab3fe0e-310f-49b4-bb92-d69a0082eb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed07922b-f78b-4076-9404-a261c0f10133",
        "cursor": {
          "ref": "cd76c906-89dc-4a2d-9a49-3bc3b79256f9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b8090710-6355-4a59-a9b0-8b03211a2c1a"
        },
        "item": {
          "id": "ed07922b-f78b-4076-9404-a261c0f10133",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "860a5c69-f72c-43a7-a52c-8aadcde536c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bac5f5-bf85-489d-b2e5-83ecb0615ea4",
        "cursor": {
          "ref": "864a3b9b-8f3a-4807-869b-31cfaf7f01d3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "88067b74-e577-48ab-b3c9-6932d4e51f30"
        },
        "item": {
          "id": "40bac5f5-bf85-489d-b2e5-83ecb0615ea4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ac9130f0-2bcb-4fba-9974-674fb3ffba8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5dd777-489d-4aea-982d-ee5edf6e0d0f",
        "cursor": {
          "ref": "b4375451-817e-42b4-ac40-1f5b0f7425d9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac0cd09d-0b27-406a-af5b-648579a3e521"
        },
        "item": {
          "id": "df5dd777-489d-4aea-982d-ee5edf6e0d0f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f818969-06bd-448a-b1a0-32eed61de83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dee8745-684a-4954-9ebe-cf380dc7f411",
        "cursor": {
          "ref": "8ad21fc9-592b-496d-8ddd-aa636da6e30e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3fcd5753-91c5-448e-9d3f-acb36db25e58"
        },
        "item": {
          "id": "3dee8745-684a-4954-9ebe-cf380dc7f411",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "005332b8-7f62-44d8-8b37-0096def80b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5487dd7d-44c7-4fb5-8743-7b3473159913",
        "cursor": {
          "ref": "5abd7c57-f014-48b8-a300-2dca76c0b6f3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48bbd0fb-e551-4886-8c06-a3201d6da754"
        },
        "item": {
          "id": "5487dd7d-44c7-4fb5-8743-7b3473159913",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "48a61686-bb55-4c2b-bcd3-a175ddf5d58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213b82ed-1e52-41d7-bdd0-72718158e632",
        "cursor": {
          "ref": "fd8e2e24-0217-40b7-ba0d-29cf14fa5823",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b3b5a9b-10f6-4197-8ba0-a2ba7b76f95e"
        },
        "item": {
          "id": "213b82ed-1e52-41d7-bdd0-72718158e632",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "383e6139-b461-4a6e-8f14-20e97eb042eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8905d6-d878-44ec-88e3-c89411ee77a1",
        "cursor": {
          "ref": "d8f7801d-f359-40d4-9a5a-236f089b01fc",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "708a51e3-91c8-42e1-b2e1-e009e842b068"
        },
        "item": {
          "id": "7b8905d6-d878-44ec-88e3-c89411ee77a1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3be5a309-b8c0-432d-bfea-e0702e8ac1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c7063e-1974-45d3-831b-d4b11ea39d39",
        "cursor": {
          "ref": "b74b3d69-3a5f-4c43-9c75-d62d78e0e5fd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "832c9d56-f5c8-4b2e-9c09-c01e85bf9984"
        },
        "item": {
          "id": "b0c7063e-1974-45d3-831b-d4b11ea39d39",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09294264-3c96-480b-a259-1eaf6966c13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e6fa80-1599-469c-ab93-cb0ff6552bef",
        "cursor": {
          "ref": "af4778e9-fee7-4219-82e5-e77609276e66",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5ba7a73f-b6f7-4a36-b88d-8ab64bae8a7a"
        },
        "item": {
          "id": "b0e6fa80-1599-469c-ab93-cb0ff6552bef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "968cca09-74d9-4e80-806f-09acbfd80e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cda6b2-20d5-4bea-9bd9-8235c40e6892",
        "cursor": {
          "ref": "77c47374-da15-411d-a2be-4d6c4196e1c2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "82129568-7b17-4654-a741-f57ad17f06f4"
        },
        "item": {
          "id": "13cda6b2-20d5-4bea-9bd9-8235c40e6892",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5013e7c7-aa1b-4506-8395-0f1110904dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd97b59-953f-4c0a-a5fa-bd323e93ea7c",
        "cursor": {
          "ref": "132dded1-7b04-4b0c-bc95-df9529c0058e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e9701d4-5f36-478d-a57c-4c1654bbf0bc"
        },
        "item": {
          "id": "abd97b59-953f-4c0a-a5fa-bd323e93ea7c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b20f671-8c40-4c3d-bf54-8d210f8769d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea47660-e3a6-4637-b8be-e50fa6a163be",
        "cursor": {
          "ref": "e3518ed2-a984-43d6-965a-44ed0cfa95f7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "22c4cf1f-2d27-47ac-8ac6-443cb002f521"
        },
        "item": {
          "id": "2ea47660-e3a6-4637-b8be-e50fa6a163be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "efd51d51-19f9-41aa-8f4e-c672884f1b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ff50e2-fdc8-4648-96aa-6245fbffda73",
        "cursor": {
          "ref": "ea285365-30a6-4f7a-a4fd-23bc239364f7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e58a46e-0a5a-43f6-97b1-683d23b2d40c"
        },
        "item": {
          "id": "f4ff50e2-fdc8-4648-96aa-6245fbffda73",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3797b1c5-9345-47e5-a4f7-fcfa419c43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4069cb62-4590-42e7-bff3-96d976273d54",
        "cursor": {
          "ref": "06b544e6-db7e-4b11-90cb-ec3d7de600a6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9dc4e01f-b811-49c1-881d-89fc669f0062"
        },
        "item": {
          "id": "4069cb62-4590-42e7-bff3-96d976273d54",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da978527-0d46-4868-a364-4be881c866da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667d3536-9324-4bc8-8326-409b9a762049",
        "cursor": {
          "ref": "7a61efe3-3146-4235-b2b6-6974b6d4851d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9b2d3304-7b27-45d7-aec1-2060e386f49c"
        },
        "item": {
          "id": "667d3536-9324-4bc8-8326-409b9a762049",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f08a9bc-fd6c-4e41-80a0-c57d419ee95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e6b994-341f-4021-8c77-dbbdf1b2e7a1",
        "cursor": {
          "ref": "60d6bbe6-c6bd-4735-8380-9c2a00619938",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eb8b7fdb-f13e-4cd4-b64d-3997290ee0a5"
        },
        "item": {
          "id": "d2e6b994-341f-4021-8c77-dbbdf1b2e7a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b0b4a8f8-78f6-4269-9612-5804f9f97eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f87e4-0cb1-41e4-94f1-85305e6ec12c",
        "cursor": {
          "ref": "ee26a9fd-36df-4200-bd48-35373a88fc26",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fa4e18f1-6c67-4d87-8ace-817645122069"
        },
        "item": {
          "id": "eb0f87e4-0cb1-41e4-94f1-85305e6ec12c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e4df933d-0b07-4078-8292-cd9abaefb539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09daafec-e26e-49f3-a58f-3a72458ac4d4",
        "cursor": {
          "ref": "bbfa0eae-ec71-4b99-a1a1-ed98d5239bcf",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "edfc539b-eb7e-43e3-945f-884db27e3b0d"
        },
        "item": {
          "id": "09daafec-e26e-49f3-a58f-3a72458ac4d4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "edd8c883-80d6-4fe7-8a60-30c598c3a545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c565ed6-5389-46d7-910a-19ec881de20e",
        "cursor": {
          "ref": "51bbc2f3-655a-438b-b7a7-0afc51f0bb31",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "325919c4-9dac-45d8-8082-980161e05ba5"
        },
        "item": {
          "id": "0c565ed6-5389-46d7-910a-19ec881de20e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5d67042-4f3e-431c-8d75-d4eee9800bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e0464c-d393-4b68-9636-cf39bfb133d4",
        "cursor": {
          "ref": "8d1cd529-3aca-4d0e-9b0e-eca2379f8f27",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d536f9d1-9c49-4acc-a133-ad5162d9cc01"
        },
        "item": {
          "id": "61e0464c-d393-4b68-9636-cf39bfb133d4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a39d838-589f-4cce-a272-5e71c499105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46378b7-5332-4676-a1cb-3ebbfad42212",
        "cursor": {
          "ref": "fa21a81d-13ac-4334-bdbb-27ceb659ced9",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0a56be18-e523-4683-920b-2ec108bcc49f"
        },
        "item": {
          "id": "d46378b7-5332-4676-a1cb-3ebbfad42212",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f7e7220-9e98-4879-b4f0-3cb0117bf4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cc582e-3183-4d13-b2de-9938c2f66e99",
        "cursor": {
          "ref": "f38cef1d-baa6-4aac-ba99-8800778bb0a8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1b355f6-136f-4ecd-a5db-37d446a8562a"
        },
        "item": {
          "id": "d5cc582e-3183-4d13-b2de-9938c2f66e99",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c581955-3212-40bf-ad1b-38998bddbd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678631a0-4a56-4ebd-9435-e3a1ae5723eb",
        "cursor": {
          "ref": "fec6603b-d979-40ca-858a-b1f6550bb923",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9e1f0cb9-a221-421f-8e8d-16564a104d2e"
        },
        "item": {
          "id": "678631a0-4a56-4ebd-9435-e3a1ae5723eb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "950e362d-79a5-446f-b676-cb3389824d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e1305c-6e78-45ec-9bdb-e9b670b98e41",
        "cursor": {
          "ref": "8cd2ca06-46f3-44c2-b721-169918b95642",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "681cfca5-333d-4bcd-9245-be2dae8a0303"
        },
        "item": {
          "id": "e7e1305c-6e78-45ec-9bdb-e9b670b98e41",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "25f6718f-b2bf-4995-b1f1-2b3f5e09acac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe847bb-04d4-4e0e-b597-0fe00d414ca2",
        "cursor": {
          "ref": "39c533e8-8b2d-47e3-a944-9241c993fabc",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d43afb44-0895-4ad5-8fd0-99da245aa586"
        },
        "item": {
          "id": "1fe847bb-04d4-4e0e-b597-0fe00d414ca2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1c9c03b8-87d0-40e2-8b03-d76fe7fc52a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbcd726-8a0e-4596-80a3-661c2984d33a",
        "cursor": {
          "ref": "1a9062ae-d49a-4731-a63d-ede9aa860062",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4247f316-e807-4762-8447-d4478d502dc4"
        },
        "item": {
          "id": "9dbcd726-8a0e-4596-80a3-661c2984d33a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f7273fd0-8626-4ddc-a7b2-a0e5edd55aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66783d9-159f-4a47-be57-d8033d58fd35",
        "cursor": {
          "ref": "148bd3e5-2d16-446e-9479-4c02512e2a27",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1b835e07-dfd8-4615-8d18-f9d91ac9d8a0"
        },
        "item": {
          "id": "f66783d9-159f-4a47-be57-d8033d58fd35",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "39ac3035-c48d-4781-9a23-c4fb3273afa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1fd74c-b13c-40dd-a054-14d07a3ba80a",
        "cursor": {
          "ref": "e5719208-b977-41c7-938f-50dbeabaab51",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "337cf4de-0dbc-4f31-baa2-ae380b7d0711"
        },
        "item": {
          "id": "1f1fd74c-b13c-40dd-a054-14d07a3ba80a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf22e497-234e-419d-a790-dea45e975f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082332df-fcdb-43eb-81a9-f273689e9833",
        "cursor": {
          "ref": "be94220b-6f2c-4ede-9bee-4769ed5b637f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "72a7e1ab-e19a-493b-ae4b-1026e780fd24"
        },
        "item": {
          "id": "082332df-fcdb-43eb-81a9-f273689e9833",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "20dd9c8e-b697-45d1-9854-747220430361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42521f96-e00b-4a1d-91f3-991863bd5d0d",
        "cursor": {
          "ref": "46602031-a10a-41ea-abdf-c791171a6a50",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "45bacbca-17f5-4e11-ade8-84096fe6d3a5"
        },
        "item": {
          "id": "42521f96-e00b-4a1d-91f3-991863bd5d0d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4626488f-ed70-4bc1-b0da-750d6e7664c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec20a9-16d1-4f18-b8ae-2842380ea13e",
        "cursor": {
          "ref": "a598c185-aeb6-42a9-8f48-2039bbb41943",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "31caffb6-4e43-4b63-8b61-9935336e5f00"
        },
        "item": {
          "id": "b4ec20a9-16d1-4f18-b8ae-2842380ea13e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "24deb9a7-3395-4d98-acb9-2a210bac8182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d305743c-bc55-4ea6-bcf0-995166aa4b68",
        "cursor": {
          "ref": "ebc78252-22e8-4d62-bb22-179c19e9a20c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "71ce9be2-8b3b-4031-9e49-c782d071569b"
        },
        "item": {
          "id": "d305743c-bc55-4ea6-bcf0-995166aa4b68",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "094d769f-bf73-42e6-bf76-24bf58bad44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d12f1c-796f-4fac-a09e-88fb3ee17890",
        "cursor": {
          "ref": "5cc0e8d0-58b6-4724-bcc1-83531868cb79",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "94bd5e85-6d5e-40ea-ae41-caedb403cc79"
        },
        "item": {
          "id": "71d12f1c-796f-4fac-a09e-88fb3ee17890",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0f062d4-5027-4dd5-9a07-74db55f0f5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4228c87-fb71-49dd-8da5-c0ed6dcc2a6a",
        "cursor": {
          "ref": "abf0bcdf-3dfc-4f6d-af28-53710d133258",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4960179-f901-4490-8f21-9db44b432695"
        },
        "item": {
          "id": "d4228c87-fb71-49dd-8da5-c0ed6dcc2a6a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b4653b0c-212c-4952-b6cf-bafb6cd4b590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df190927-ec44-4ac6-9356-ccf1df6f0258",
        "cursor": {
          "ref": "2cecfb87-6228-4127-825e-f0a713b13648",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57eda979-c54e-4dd6-a993-02b4a48e707e"
        },
        "item": {
          "id": "df190927-ec44-4ac6-9356-ccf1df6f0258",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fc35e3ed-490d-4732-9f02-a05eb484629c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b545fd-6c6c-41fe-b4c8-fb6329e0ffa4",
        "cursor": {
          "ref": "2b0dc9d8-0749-498b-bd3e-9f7cce29cec0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d1e16b83-1bbc-4d7d-a470-cb9c68c3f6da"
        },
        "item": {
          "id": "a4b545fd-6c6c-41fe-b4c8-fb6329e0ffa4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "874af38e-7387-49f4-b71c-e233dcc0e99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0db46f-7452-491a-85e0-724b12a76e23",
        "cursor": {
          "ref": "b3d923c8-1986-4f85-9167-e4d0e92e95b2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2696a7e2-696c-4465-9647-99d58dcddb10"
        },
        "item": {
          "id": "7e0db46f-7452-491a-85e0-724b12a76e23",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "72931c57-ef6b-419e-9ab6-958a06d2593a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e59010c-af76-476e-a7fc-941d55da6fcb",
        "cursor": {
          "ref": "0658e178-7c22-4dd5-bfa9-856a003e2f64",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "45c563e2-d1ea-4579-81e8-693b2a915269"
        },
        "item": {
          "id": "8e59010c-af76-476e-a7fc-941d55da6fcb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0a250c3e-8bff-49fa-9cb2-c6847cb6ae04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96b3471-0d74-4ef3-927b-349de32cba75",
        "cursor": {
          "ref": "7d71c275-cae4-4a54-9a9e-ebcfaac2cd2d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b6e2b345-2259-4241-8481-e1c4775eb717"
        },
        "item": {
          "id": "c96b3471-0d74-4ef3-927b-349de32cba75",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d9c73c8-b91c-4750-84dd-ef18882b53db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ccb50d-a424-4858-9581-ea9366cf988d",
        "cursor": {
          "ref": "98ec8ba3-91cc-4b0e-babd-cc750b376de3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3fa437d3-a414-4013-863a-944a3f1c35b3"
        },
        "item": {
          "id": "79ccb50d-a424-4858-9581-ea9366cf988d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "866bd39e-72cf-4213-ad03-89b67f9fce3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2b809b-e213-4403-854f-58e4e16f332f",
        "cursor": {
          "ref": "f0d28811-dae9-4d99-8911-838da82896d0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b6fdc03c-2400-48ba-b775-3f90dbd69bec"
        },
        "item": {
          "id": "3a2b809b-e213-4403-854f-58e4e16f332f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "061ea12a-64a7-4bee-b08a-bcb867b6c64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dbd21a-1c88-4550-b9f1-67b723c845cf",
        "cursor": {
          "ref": "950180f8-61c2-404c-9a79-2da2d45c982e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b5b931a7-2a6d-4dd1-b656-fb35cd2b561e"
        },
        "item": {
          "id": "a8dbd21a-1c88-4550-b9f1-67b723c845cf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "68d3cf1d-7e6f-4af8-8dff-bfe4ae77f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e2da48-c746-4e94-a147-fb9f35c82ca4",
        "cursor": {
          "ref": "c51b4d55-9a70-4d00-ada5-8a6b55c4dbc6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b18f8290-7558-4500-aa79-784aa1b00acf"
        },
        "item": {
          "id": "60e2da48-c746-4e94-a147-fb9f35c82ca4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "29ddefd7-d07a-403a-bc72-736c1e8f1fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5350f840-da93-4f9d-bf6c-75b4c83b3ba1",
        "cursor": {
          "ref": "1fb734f3-835f-484f-be6e-548ffb81db72",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "922d57d6-1cba-4495-afd5-ea2088cc749c"
        },
        "item": {
          "id": "5350f840-da93-4f9d-bf6c-75b4c83b3ba1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d2e9b84b-a9ba-49bc-b56e-d73a06b5faa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea08f93-c6da-4827-94fb-a435de36dd0c",
        "cursor": {
          "ref": "c66355a8-371c-4f55-8817-0410a2b077cd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f77bf58a-7320-4de4-8ea3-55644e560e62"
        },
        "item": {
          "id": "bea08f93-c6da-4827-94fb-a435de36dd0c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0eadcc8f-3d4f-4ff6-8e84-a311022d7507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771f6d44-74c6-49a4-ad6d-32c3e564f6ad",
        "cursor": {
          "ref": "75f5b948-79c7-4917-a584-fe4d50ae5743",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e74ccb4-a2f3-4c51-8b65-cf2dcb4dadcf"
        },
        "item": {
          "id": "771f6d44-74c6-49a4-ad6d-32c3e564f6ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4a94667b-bf32-44a3-b2e8-f2cb0eb08e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fba35a-597c-470e-9830-92d088d3d316",
        "cursor": {
          "ref": "e3fea1a4-7a0f-4978-9950-980b3c334fdd",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f2d3b52a-452b-486d-8ad0-05f31c4cb08b"
        },
        "item": {
          "id": "25fba35a-597c-470e-9830-92d088d3d316",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f6e6657a-d037-4c6c-974a-133758dc109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ad36ec-30bc-4e12-84b2-cd8238ecc747",
        "cursor": {
          "ref": "c8adb2aa-8682-4fcc-9bbd-fc38e854113e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1219d6bb-61de-41bb-af5f-e8af6949cd21"
        },
        "item": {
          "id": "09ad36ec-30bc-4e12-84b2-cd8238ecc747",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ee47a7c-89af-4388-96b6-6e9da8398f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e604d-9610-49aa-9526-64f0dd6cce33",
        "cursor": {
          "ref": "50ffd8c6-f27a-4c68-99bf-5385585c40de",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1ef6bec4-5d1c-4a90-b10a-ea863fdc2dd3"
        },
        "item": {
          "id": "d71e604d-9610-49aa-9526-64f0dd6cce33",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a72ffbe-c2af-4326-90d8-96a16ea9baee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b61370e-6c57-4721-acd7-69831f894196",
        "cursor": {
          "ref": "c2aeb61f-0137-4cdb-8ddf-2ab9bf59a270",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d87c913-c6dc-4527-b130-a2707fa52de0"
        },
        "item": {
          "id": "7b61370e-6c57-4721-acd7-69831f894196",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "afb4647f-987a-4603-8e92-29a75627edc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d04301-abd1-4d4f-8c5d-6045f6cbf171",
        "cursor": {
          "ref": "a5a45ae0-bbeb-4eba-a99c-9b7a560816bd",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "806ede87-77b9-4e23-8a8f-3dba19124133"
        },
        "item": {
          "id": "d1d04301-abd1-4d4f-8c5d-6045f6cbf171",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c57b027c-5e41-421f-ba69-b9ac33490beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7003677a-a320-4672-a99d-aeb98332da71",
        "cursor": {
          "ref": "d8673290-62f5-48f2-98fc-2dd682aaeb43",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "03b36afb-1af1-4676-b25b-a18d248a016e"
        },
        "item": {
          "id": "7003677a-a320-4672-a99d-aeb98332da71",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e00393d9-0438-48ef-a5a5-a359394cd92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770850ec-133d-486a-bd21-3b0baa1cad46",
        "cursor": {
          "ref": "937b5174-7f06-480f-8303-5cad741dd26b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "64b23da8-bd68-46ef-bf08-27d38037b3bc"
        },
        "item": {
          "id": "770850ec-133d-486a-bd21-3b0baa1cad46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1eba3060-f898-488a-9acf-44ee05b4fa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36816689-e471-4ad3-b5db-196673cd4b17",
        "cursor": {
          "ref": "93e4ad2c-032b-4d59-b6b7-00ee3b4ff515",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ecc6e9cf-fa5b-43c9-aef8-53c68bbec1c7"
        },
        "item": {
          "id": "36816689-e471-4ad3-b5db-196673cd4b17",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97ee2d02-75d0-4ed1-9663-cf63abc87d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e944bfad-a092-4b3d-8ea6-de89b27620de",
        "cursor": {
          "ref": "c1881c41-3f5b-44a4-bcaa-e1e6f94880f4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "99e793c4-3388-4ab2-b2a9-d71e8ca6c1b6"
        },
        "item": {
          "id": "e944bfad-a092-4b3d-8ea6-de89b27620de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d104b833-918e-4824-88f9-a70947beaac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ef674d-d11b-4e43-b127-05e4f165732f",
        "cursor": {
          "ref": "4674fd6d-2757-48b3-bf4e-6731dbf0adba",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0f6a537a-2f54-4344-bf9b-6a6d651f4d6b"
        },
        "item": {
          "id": "38ef674d-d11b-4e43-b127-05e4f165732f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d71efcf2-ef03-498b-ad24-246c3ac33977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08705a6-4a53-440c-bed3-1c92209d3506",
        "cursor": {
          "ref": "f1feed6e-60d0-4c05-a886-6984f0b8a339",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6f64b90b-5092-49c7-bd00-e66a20d06612"
        },
        "item": {
          "id": "a08705a6-4a53-440c-bed3-1c92209d3506",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "547d3e07-311c-43ed-aa9f-749234e70e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cfb2cc-42f9-40d2-932f-cad55b6af450",
        "cursor": {
          "ref": "68795ef8-f8f3-4cd4-8c86-d0254a998f10",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8c7fee12-d46f-44f9-9b14-720b8267b20f"
        },
        "item": {
          "id": "69cfb2cc-42f9-40d2-932f-cad55b6af450",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "af147a4e-17b1-4418-a2af-db92795b526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08774f2a-80e2-4714-a1f3-9bb6e417a33d",
        "cursor": {
          "ref": "d44b80a7-40d1-48c1-8b02-2bcc426739cf",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f2ef1e34-1b00-489c-873e-130bb2200e20"
        },
        "item": {
          "id": "08774f2a-80e2-4714-a1f3-9bb6e417a33d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e79da5b2-1a0c-4ef7-a39c-6844c66926ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f55a5ce-bae1-494e-af74-d1c38ee87be9",
        "cursor": {
          "ref": "d0605a4f-7531-495a-929c-79d4ebb1527d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9e68da31-3577-4b5b-be7a-fe8fe2ffc42e"
        },
        "item": {
          "id": "4f55a5ce-bae1-494e-af74-d1c38ee87be9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "04deffda-3720-4d4b-96a5-ff6246efe09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01283fc5-ce79-49ae-9bef-60fc5b1afdd3",
        "cursor": {
          "ref": "e8256439-85d4-49f2-bec3-2d8069fc452b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a767614b-2d33-4d95-bb5c-96ad63177d9d"
        },
        "item": {
          "id": "01283fc5-ce79-49ae-9bef-60fc5b1afdd3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5dcb653d-c333-400f-9b18-0c45b6fbd4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a62813-dcbc-434d-9ab0-53b56bdeaf3d",
        "cursor": {
          "ref": "c1552d6e-63d3-4bed-a51a-f12b80cf8fe4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba84fb3f-480f-4ef6-9095-058065fe011d"
        },
        "item": {
          "id": "b9a62813-dcbc-434d-9ab0-53b56bdeaf3d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "331cee96-369e-4629-b2fc-74c330f62855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508826c4-f3bf-4f15-93b9-359347b42c51",
        "cursor": {
          "ref": "0c27666c-905b-4969-a1f8-548f3dde34bf",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd3db9f5-043d-449b-8110-9f7c968f4af5"
        },
        "item": {
          "id": "508826c4-f3bf-4f15-93b9-359347b42c51",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d6ae22b-6ff0-4fd5-b9f8-abd55bea7ab8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913fd026-ebb4-49bb-b834-be0c1682b64a",
        "cursor": {
          "ref": "a85ee8f1-8d96-454d-b906-34952da6f07c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ac6ce210-3aed-4551-be7d-a1b725d68098"
        },
        "item": {
          "id": "913fd026-ebb4-49bb-b834-be0c1682b64a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d8895b53-8e9d-4cf5-b403-700810eda4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0661252-c3a8-4b42-8cfa-625963a4f210",
        "cursor": {
          "ref": "c605801c-4d6d-4996-bbb1-7f9cd99b0dbe",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6f9c3a60-e416-4749-8f6d-1122a3b9f035"
        },
        "item": {
          "id": "a0661252-c3a8-4b42-8cfa-625963a4f210",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d6db0da0-6c72-4a5e-99a5-a6f01ca54c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e199d851-878d-4f15-a122-b7681e5b0fcb",
        "cursor": {
          "ref": "c59fb83a-e42b-49fa-a430-d8400574fa8e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2014a867-6000-48be-b13f-4b0177b21bfd"
        },
        "item": {
          "id": "e199d851-878d-4f15-a122-b7681e5b0fcb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "37920340-3659-4d53-9f5e-7044e2dce1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddabbce3-55e7-4585-bf3f-d028b9ee9122",
        "cursor": {
          "ref": "63365f67-61d9-4d22-82e7-8bfc3dd5f3fc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9966e46d-e801-4d7a-9980-8f61d0d6ab82"
        },
        "item": {
          "id": "ddabbce3-55e7-4585-bf3f-d028b9ee9122",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "988507e6-7da3-4886-b186-1f649ada99ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4074958-9645-4155-8708-4ac2c5c429b2",
        "cursor": {
          "ref": "b7873098-8dbd-4258-8194-3bcd445dc561",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ffa4da6-ee1e-4319-8d90-839f590832e8"
        },
        "item": {
          "id": "f4074958-9645-4155-8708-4ac2c5c429b2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eec86bb6-ece1-4870-8631-89236bf4edf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2d611d-0bc7-4444-81f3-773c5c901584",
        "cursor": {
          "ref": "ed232782-b444-47ff-935b-b6c1bd8048e8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8dc5e995-f738-4d9b-9ff2-53b49eef0d87"
        },
        "item": {
          "id": "fe2d611d-0bc7-4444-81f3-773c5c901584",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5092ff61-1fd8-4eb3-af02-35509526cd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4904468-4810-4188-9319-88a64a450853",
        "cursor": {
          "ref": "e329eca4-0421-499e-bf6d-74b8c92465d9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1c2cffc0-5da5-446d-aada-02ab0e08bcdf"
        },
        "item": {
          "id": "d4904468-4810-4188-9319-88a64a450853",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "08301650-6678-4857-89ad-f4e5bcca68bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e389095-cd41-4fc5-b3a7-b683a367494b",
        "cursor": {
          "ref": "c4d3079b-dbd2-4c97-af24-46a743814f42",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "40e8222e-95c8-4d29-922e-f2ee70d7ff05"
        },
        "item": {
          "id": "9e389095-cd41-4fc5-b3a7-b683a367494b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bd7f1fe8-6124-4935-81ca-c6d041f4c878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22ce400-c7f2-42bf-a236-8bf42bb5f614",
        "cursor": {
          "ref": "a360857f-0713-47cc-89d9-f0fb1835885b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3c115034-2bd1-45f2-a9ab-9bf035476d15"
        },
        "item": {
          "id": "b22ce400-c7f2-42bf-a236-8bf42bb5f614",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9aa49cc3-0685-44b7-8ac2-e5e07aa87ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99952afb-6555-471a-818a-0d4c6a84387b",
        "cursor": {
          "ref": "36430944-a776-4e48-b1d4-91707595a58a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "55873f1a-affb-4d62-a3b4-86ccfc25296a"
        },
        "item": {
          "id": "99952afb-6555-471a-818a-0d4c6a84387b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7a98aa2c-dce7-4caa-a6b6-42d5a9b4be91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92732e64-6180-443c-9879-9f1bfd4b21d4",
        "cursor": {
          "ref": "71db77aa-b315-408d-8575-0134cc27ef2b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fa2d0baf-b7a3-4692-99a0-aec08ffd29a2"
        },
        "item": {
          "id": "92732e64-6180-443c-9879-9f1bfd4b21d4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2c5746cb-0aab-4542-ab2e-8b4650315a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336665c5-c6ab-4d1e-a0f0-5a973d87f2dc",
        "cursor": {
          "ref": "e330acb5-c7fb-4ce6-9792-f3bd83f31801",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1cf066f0-2730-4afa-9b5f-30a5d346f455"
        },
        "item": {
          "id": "336665c5-c6ab-4d1e-a0f0-5a973d87f2dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ae9b2a5b-ca61-49e4-9c68-991072d78bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df006983-b94d-42c2-a78c-66cda68948f9",
        "cursor": {
          "ref": "6b2b6f6d-ada3-4a63-a558-9866050c03fc",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "88b0ecc8-42b5-44d5-b98a-6ffcffd88ff0"
        },
        "item": {
          "id": "df006983-b94d-42c2-a78c-66cda68948f9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a2708c4a-ad94-40e6-b609-5f0a22a0ad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308aa7d5-642e-4619-bf1b-fa0b10223a80",
        "cursor": {
          "ref": "822d6e57-63f8-4dac-84ed-e1dcfcd80dad",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9eda4d95-43e6-4191-9c73-377a1f01b02c"
        },
        "item": {
          "id": "308aa7d5-642e-4619-bf1b-fa0b10223a80",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fda9476b-2323-4908-bd42-f4df37400227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa33edb-f616-487d-9228-f1789f6a4f07",
        "cursor": {
          "ref": "269ae670-da82-4043-86b9-f27f5bbb1554",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "00c5c4ac-a553-4e07-85c8-4dfa2f1f15db"
        },
        "item": {
          "id": "afa33edb-f616-487d-9228-f1789f6a4f07",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "34e89ac9-1ad1-410b-a5d4-72400bdeb265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc96d4d-0e52-4b78-a319-edb8358b3818",
        "cursor": {
          "ref": "65fddcee-77bb-42ce-a3f3-4ee123bc8bab",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bef60099-a761-431b-955c-3ab8b473dee9"
        },
        "item": {
          "id": "4cc96d4d-0e52-4b78-a319-edb8358b3818",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d22164a8-a802-47bf-9fbf-697658111059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee50ecdc-d2a4-45f5-99dd-032c04d1a111",
        "cursor": {
          "ref": "4983d445-107d-42f7-8b43-33e5bfacfac6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "834a610f-3aba-4e40-9dd3-2920427607ea"
        },
        "item": {
          "id": "ee50ecdc-d2a4-45f5-99dd-032c04d1a111",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "74ec4caa-b6cc-4de3-84c9-6d44d3c264c2",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "46d060cd-0315-496f-8969-7024e8126ff9",
        "cursor": {
          "ref": "6d03521c-5373-4df0-8ed3-a81035fc5bac",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d046ab97-5532-4cdd-bb28-cb7e4c24289a"
        },
        "item": {
          "id": "46d060cd-0315-496f-8969-7024e8126ff9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ae7448df-7414-4e23-9084-f7f44f796643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90fb94e-1de2-4d63-9bc2-d8777add1cbe",
        "cursor": {
          "ref": "66ce55b8-d83a-43bd-aa2c-c6bbb1aa236c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dadf0e22-fc65-4437-9d72-6b657f95f66f"
        },
        "item": {
          "id": "c90fb94e-1de2-4d63-9bc2-d8777add1cbe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1367c2f-09b8-4229-bd09-a272f9f24ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bfb66f-3152-4801-8cab-f540b59e5db9",
        "cursor": {
          "ref": "e9bfaa33-07dc-4c21-b983-f771a9555f97",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4c2c51c0-846a-48f5-8c3d-88e0891b4f93"
        },
        "item": {
          "id": "19bfb66f-3152-4801-8cab-f540b59e5db9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a075a812-5031-47d5-8060-bb0877d13cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcfd811-3d2e-4796-9ac2-03319f0a42ac",
        "cursor": {
          "ref": "beb082c5-50db-40ec-af33-0156cab3d263",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "355947b3-eff2-4eef-bb0e-b709357e33ae"
        },
        "item": {
          "id": "dfcfd811-3d2e-4796-9ac2-03319f0a42ac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f373b599-cfaa-4be6-a388-1464ad4001e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2133341a-d2b2-4999-8dd7-aa6700cbbcbc",
        "cursor": {
          "ref": "033703a7-213e-4e37-ae72-e9f903d41e0c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a9dc989c-fa63-46e2-b252-1b9cc1dad45e"
        },
        "item": {
          "id": "2133341a-d2b2-4999-8dd7-aa6700cbbcbc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c59ea931-4331-46b9-9f01-05656fb367bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d552b4e-7766-47e9-97af-daa5c8b2a3a0",
        "cursor": {
          "ref": "b937d3ce-6007-49d4-b448-b2253ee61d91",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ffaa79c2-ab1a-455a-bb75-755f72f65bdf"
        },
        "item": {
          "id": "7d552b4e-7766-47e9-97af-daa5c8b2a3a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0674e894-c072-43a6-b507-9102564830c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c3ea9a-2780-402c-baff-5cd48de784f3",
        "cursor": {
          "ref": "cf7787b2-ffef-4655-80ba-d09be732eba2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "25798b98-3407-4c64-a2c3-790c05d26773"
        },
        "item": {
          "id": "f1c3ea9a-2780-402c-baff-5cd48de784f3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5db1ee61-f20e-40bb-85cc-11a6ad2a4e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441ffae9-8db9-4f42-9d93-c43a71349082",
        "cursor": {
          "ref": "9c196c50-ce8c-48dd-b944-e5386f5f7831",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0cff9e64-7650-4ef5-b354-26d059022594"
        },
        "item": {
          "id": "441ffae9-8db9-4f42-9d93-c43a71349082",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e390d825-7188-499c-a579-e90cb671d912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838177c1-0c06-4ec5-8c78-655f6dda182d",
        "cursor": {
          "ref": "fd988fd4-8e01-4de0-9731-c72c0186ee79",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4c0ffb5-1624-45b3-bec7-f63b53036ff8"
        },
        "item": {
          "id": "838177c1-0c06-4ec5-8c78-655f6dda182d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "af14a094-3beb-4c5d-ae7a-75f9a408c99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f376f918-8f40-4518-9eef-914d6c9d829c",
        "cursor": {
          "ref": "2a0863a6-9518-472a-86be-5646a51eccfe",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3b094334-8de2-44f6-a769-3b85bdc76761"
        },
        "item": {
          "id": "f376f918-8f40-4518-9eef-914d6c9d829c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f2ac6461-3b7b-421d-945a-43785b02cd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43dd2b4-2f7c-4cc2-aadc-6e6a87e85684",
        "cursor": {
          "ref": "868c7559-8dd9-426f-8ea1-c338313c6cb8",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a49d149-9ba7-4435-b0b9-c4d4642b65a5"
        },
        "item": {
          "id": "e43dd2b4-2f7c-4cc2-aadc-6e6a87e85684",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "51a3dcd5-a643-4986-9852-d804b1fd73ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e7e802-0652-417d-8c0f-3b8488f1ce17",
        "cursor": {
          "ref": "a095b277-56d0-4273-8ab3-963c7e013fe8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0c485be2-02fa-4c57-81e3-9a451fa83350"
        },
        "item": {
          "id": "14e7e802-0652-417d-8c0f-3b8488f1ce17",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0507eb2c-13db-4a8e-aa14-228b184ae83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f58b1a-1ccb-4ff4-885d-49e75b060776",
        "cursor": {
          "ref": "b49065d9-f5cb-4311-ab6b-d5031ed39138",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b33384c7-3142-467b-844f-9afdcb9a2654"
        },
        "item": {
          "id": "49f58b1a-1ccb-4ff4-885d-49e75b060776",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a7550597-0bd9-436b-a094-69e814605d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ea610f-158c-47a0-bcdc-6b1c958312b5",
        "cursor": {
          "ref": "3f49d87f-20ab-4387-afa4-8490afdffe71",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ed216daf-6a64-46ab-8205-840e60cf9618"
        },
        "item": {
          "id": "28ea610f-158c-47a0-bcdc-6b1c958312b5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "388d43f0-123c-4a0d-9e92-a7d1f78c4f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a972ed-dd2d-4527-8b92-b046c659156a",
        "cursor": {
          "ref": "84fba37c-5de9-4dde-a519-92ef691e1ff7",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "072e1cb1-70dc-486d-89e1-4729e051727b"
        },
        "item": {
          "id": "05a972ed-dd2d-4527-8b92-b046c659156a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9ce10a02-3067-4c52-9305-b945311358b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972fc591-5697-42be-8fc3-44b0987b57c9",
        "cursor": {
          "ref": "abaa98c9-3423-4b01-905d-68ac121394bf",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d881cb1d-0fee-4fab-a4ff-bbea90fc60d0"
        },
        "item": {
          "id": "972fc591-5697-42be-8fc3-44b0987b57c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bf31037e-fa9d-4357-a5c7-4757db9dcedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8668cd-b7fd-4491-9895-fcc88d1d4bb9",
        "cursor": {
          "ref": "ef070133-5c87-442f-a149-e0978a04db8b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c34667de-bd70-49af-bed7-bb1a0f908694"
        },
        "item": {
          "id": "6a8668cd-b7fd-4491-9895-fcc88d1d4bb9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e565b17d-a3e9-4a17-8b9d-fd5363f9d3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a12f818-69b5-409e-8ebd-930d346c0aa0",
        "cursor": {
          "ref": "eb467f94-91da-4a37-9f2f-0148702c64ca",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "85a47bf7-c05b-47cd-9ac4-a05f967c3202"
        },
        "item": {
          "id": "1a12f818-69b5-409e-8ebd-930d346c0aa0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "de52932d-a666-4b31-9f13-a29303399987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4511bd3-b059-4910-bcca-ac73e1f8be86",
        "cursor": {
          "ref": "36033284-1f54-45d2-b4fb-e7489cea2689",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6cc8a5d3-532e-4480-ab50-411a34789c4a"
        },
        "item": {
          "id": "a4511bd3-b059-4910-bcca-ac73e1f8be86",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "87d2121d-c539-4ecd-ac7d-bb7f9fa19133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdfed4f-3dbd-4dcf-9d22-228787370a3b",
        "cursor": {
          "ref": "7d0fc087-1eea-46e4-9c24-a86845f95cf9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f89ecce2-0fc0-4e5c-99b7-e261797705f8"
        },
        "item": {
          "id": "6cdfed4f-3dbd-4dcf-9d22-228787370a3b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "25f2308a-a148-4678-b616-6cd60afe1106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d08bc5-678a-41a0-9e2e-30c4451979fe",
        "cursor": {
          "ref": "e6d24db1-07a3-4ace-9ff0-1574fd2a4290",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "16da27df-c0dd-48db-a01e-80bcc7e090a2"
        },
        "item": {
          "id": "81d08bc5-678a-41a0-9e2e-30c4451979fe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "78b343e6-13df-449e-83fb-5f339c35b25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781344bb-8e22-4738-bdfc-ec159ed6b5d0",
        "cursor": {
          "ref": "dc39c776-c332-488f-b781-8cb2d70ed3fe",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d3a2465c-776e-496e-8bb5-b773206ee420"
        },
        "item": {
          "id": "781344bb-8e22-4738-bdfc-ec159ed6b5d0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e74a6462-1978-4536-9c6d-461a08184d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773bbdbe-46fe-4c0e-a1c7-d04a168e90ed",
        "cursor": {
          "ref": "c8893c96-6fdc-482a-84ad-0102a2169a4f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "915f1543-51b8-4f21-a160-f6cb2cb32ead"
        },
        "item": {
          "id": "773bbdbe-46fe-4c0e-a1c7-d04a168e90ed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af77fde9-fd08-4907-ba94-96551df2bff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc50fb1-4f15-483b-ad5c-fc04b4297002",
        "cursor": {
          "ref": "54fe8c4d-6695-4f79-8ae5-e820dc8076a5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fcecd1cf-c43d-475a-9cf9-eef965c60f34"
        },
        "item": {
          "id": "7cc50fb1-4f15-483b-ad5c-fc04b4297002",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "66ac6b5a-d3d2-49a3-a9a2-01777ff7f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c7d320-550e-439f-b3e2-181d1f7fe56e",
        "cursor": {
          "ref": "885874d0-2b15-4dd1-9c81-3163322ef91b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1e1d11d4-0826-427f-95b2-a81458b7bdce"
        },
        "item": {
          "id": "62c7d320-550e-439f-b3e2-181d1f7fe56e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "09b23ac6-049b-4fbc-bee6-54d65e8507a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b37532-5d3a-426b-9484-027ad071e6ee",
        "cursor": {
          "ref": "a0fef696-637c-45d8-8495-ddfb932e50f9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dde763d6-77a4-4cad-acfe-3d3ff46a7e35"
        },
        "item": {
          "id": "46b37532-5d3a-426b-9484-027ad071e6ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6025ade5-2951-453b-9d62-d04143b3dc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d776c-b64a-44b4-83d1-7d31f47ab172",
        "cursor": {
          "ref": "1d225254-7f8a-424c-8b70-7b23b0d0ddbc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "35eec301-cc6d-4e1e-92f5-b3c691717815"
        },
        "item": {
          "id": "bf8d776c-b64a-44b4-83d1-7d31f47ab172",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5e9f681c-66a3-481b-85d5-232513390468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe60191-5641-46fc-adae-830c629606c6",
        "cursor": {
          "ref": "82161132-4497-4c41-aa41-4821b9c83ac9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "00215a83-6704-4047-b677-12ae78910c05"
        },
        "item": {
          "id": "9fe60191-5641-46fc-adae-830c629606c6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "091f7ac4-4641-4879-90d9-8d4803b6dad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c32cd2-ae25-4885-92e4-d4e79c85030b",
        "cursor": {
          "ref": "a87a5c92-7761-40f6-8cd9-f5b9b99eee8a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46b11441-6ceb-46b8-90c1-3b32b380c556"
        },
        "item": {
          "id": "70c32cd2-ae25-4885-92e4-d4e79c85030b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5020fe9e-594a-4a3a-b77d-8bd7ee52509d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d31cea0-81c2-4c0a-86e2-8ed007335ca8",
        "cursor": {
          "ref": "8b310af2-0411-4dcb-8d2d-ae4ffdccbe40",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "56df44c5-7c1b-4983-bf48-064c899f5505"
        },
        "item": {
          "id": "3d31cea0-81c2-4c0a-86e2-8ed007335ca8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a7d2ba59-5ccb-4192-bebd-0a61ada0de49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d74bd7a-189a-4c14-9bfe-64c2bb8d3ecd",
        "cursor": {
          "ref": "a7417500-7510-4590-861e-0628f7221f87",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d14c942c-1c73-4327-8d6e-734399868b9b"
        },
        "item": {
          "id": "3d74bd7a-189a-4c14-9bfe-64c2bb8d3ecd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "374b0aca-fa40-4469-9822-56b86ea0fd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958654c0-768f-4895-8247-027bdc2b9211",
        "cursor": {
          "ref": "1541ae56-9f79-4c49-b0b4-0f0941f696b1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6e3d83c7-4d3e-4061-9c49-c429f0af64fe"
        },
        "item": {
          "id": "958654c0-768f-4895-8247-027bdc2b9211",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "be02c951-7e1f-49f5-943c-114ad6f1e941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07157dd3-05a4-4a21-9737-32d41fafade1",
        "cursor": {
          "ref": "7696f4e7-9efe-4b9d-b534-b1945207f977",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1d324eed-128f-499e-939a-41df34543dc3"
        },
        "item": {
          "id": "07157dd3-05a4-4a21-9737-32d41fafade1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d9b6e824-e7aa-4e95-a3a6-1fcf4167bfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d547c3-d6d7-4233-9b4b-962138c61950",
        "cursor": {
          "ref": "65551d04-2139-41f8-a8e2-c8ba44d8b8b4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d5b42851-f926-4f40-99d8-98b1bce35aba"
        },
        "item": {
          "id": "71d547c3-d6d7-4233-9b4b-962138c61950",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "893716d2-2225-440e-9cd4-b94ba1a888f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321ded0-45b6-428d-bc49-58a540d178b8",
        "cursor": {
          "ref": "34a37850-e57b-4427-bcec-1f747aa9b524",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "573252a7-f492-4933-8097-3596f30af0b7"
        },
        "item": {
          "id": "a321ded0-45b6-428d-bc49-58a540d178b8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e8a8bdec-b7db-4685-8820-a8fa22d7abdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7db26c3-2864-4cb0-8e96-e831f48ad0ea",
        "cursor": {
          "ref": "eba8658f-812a-49c9-852c-61c8aa33ae4e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "09e45be9-4d7e-444a-85cb-8ab398461bc0"
        },
        "item": {
          "id": "e7db26c3-2864-4cb0-8e96-e831f48ad0ea",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4e107f0a-075c-4959-b012-f46242441b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aeb4d3-6f5d-40f1-a230-75f469bc96fd",
        "cursor": {
          "ref": "5cf1d680-101b-4b2e-86ea-b7a538251f90",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "47567983-da58-4608-93f0-6c94de526086"
        },
        "item": {
          "id": "a1aeb4d3-6f5d-40f1-a230-75f469bc96fd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "44fe6a09-04e9-4190-8e78-e7a8cb1454f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd95f3d6-bec6-48f8-8e36-8026e0c2fab2",
        "cursor": {
          "ref": "6939e52e-49e4-4aaa-b882-f1a0bd4333c5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5b742396-6ebb-4a89-ab88-03a486a6871b"
        },
        "item": {
          "id": "dd95f3d6-bec6-48f8-8e36-8026e0c2fab2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "700dd249-3df2-4849-917c-5d8bd600beec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fe9f18-6885-493b-84bd-ce5e73cab09e",
        "cursor": {
          "ref": "6bc60116-17be-4596-8a40-4c97dd80a647",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "82d7f923-bb48-4b39-80d7-23908c6e1387"
        },
        "item": {
          "id": "b6fe9f18-6885-493b-84bd-ce5e73cab09e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "078b0f9f-9299-4455-8a71-988f22b12385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb351c-2fd8-484d-9c8f-efa9b0c30e8f",
        "cursor": {
          "ref": "4694419a-ffc7-4ab2-9a99-91c4ef20ac9d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9de9dafc-b571-4cd8-b832-93ff67deccfa"
        },
        "item": {
          "id": "07eb351c-2fd8-484d-9c8f-efa9b0c30e8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5c6b0b63-a174-422d-9c03-a998f79754c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447f9b6a-ef1a-498f-99cc-3bff9c43a2d2",
        "cursor": {
          "ref": "04560e34-3097-41e4-9758-908be3aa37f8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "46bf0e9a-fd3c-4682-a3ec-1624b4a2b83a"
        },
        "item": {
          "id": "447f9b6a-ef1a-498f-99cc-3bff9c43a2d2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cdb64f79-88d8-46fb-9d19-6aa8c030f749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bddf6c-2bd3-4205-a4fe-66ba57f4964d",
        "cursor": {
          "ref": "2ac548ca-2785-4797-af98-81cb2bb4d2fb",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7769523b-983c-4d78-811e-3cd9fe85ab7f"
        },
        "item": {
          "id": "a9bddf6c-2bd3-4205-a4fe-66ba57f4964d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0af9a193-2ca9-4d49-a31a-921da53d70ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dfdc4e-36d4-4adc-8f9f-da2037a605aa",
        "cursor": {
          "ref": "234b95a0-4fca-462d-9e07-b15e196567d4",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7567207-8320-4af2-a857-5371ff3abd9b"
        },
        "item": {
          "id": "31dfdc4e-36d4-4adc-8f9f-da2037a605aa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b40092f-43f9-4b3f-948b-40e149656b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f31652-673c-404a-90bc-b4435d269408",
        "cursor": {
          "ref": "8e2c9db9-b523-4b37-bd38-ea492e1dc879",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf8de9ad-d9c4-4d60-abc9-ff82528d0fdf"
        },
        "item": {
          "id": "00f31652-673c-404a-90bc-b4435d269408",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9d8d7afb-0c6e-4093-97c1-bae8175972e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3c1421-6a53-4d62-a805-c28dbf12ee6d",
        "cursor": {
          "ref": "857469dd-0a58-49ee-ae82-4e37e81c305b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "21a13a99-7bc0-40aa-960f-3f081d79502b"
        },
        "item": {
          "id": "7f3c1421-6a53-4d62-a805-c28dbf12ee6d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "802d98df-b48a-4bec-9e1f-8b8b07e14a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dba810-b219-46ce-a28a-07c81a09dd50",
        "cursor": {
          "ref": "90fdae64-4b6a-4a6a-8149-ee4b151037ce",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f1568810-57fc-4256-b388-1757258477ed"
        },
        "item": {
          "id": "43dba810-b219-46ce-a28a-07c81a09dd50",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9c039e55-80a8-42ed-9c46-2f2b65be19cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83160995-2268-49e5-b645-47fdbe354840",
        "cursor": {
          "ref": "08b1b2d1-0fcd-4eaf-9e65-e9ef52491ef1",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "51a7586d-2c75-48ad-9587-db2847045139"
        },
        "item": {
          "id": "83160995-2268-49e5-b645-47fdbe354840",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "047e1905-292e-4a8b-827a-f85bc8d27484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a63fc60-dd27-4db3-b541-47ff3857edb4",
        "cursor": {
          "ref": "63f30ca5-50c7-4a0b-8305-98fde8ab5311",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ebc72f1c-e47e-44e0-898c-cdba8554a4de"
        },
        "item": {
          "id": "2a63fc60-dd27-4db3-b541-47ff3857edb4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea497062-5465-4ae5-8e51-dc63ce81f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66efc3a5-64c1-4982-a459-3571e9363f71",
        "cursor": {
          "ref": "dca057c7-2920-4236-87c0-8d227423b971",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bde2010a-2e01-4de4-8b98-9ac0bc5cfd20"
        },
        "item": {
          "id": "66efc3a5-64c1-4982-a459-3571e9363f71",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f1211705-3250-40e7-8360-72a383b25560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8995931a-be88-4c98-b0e4-ab39683c9140",
        "cursor": {
          "ref": "7e972ca9-2dec-4f24-9492-81d866b67d4e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "764e66c6-d798-4b83-b491-5ad0bdbd8011"
        },
        "item": {
          "id": "8995931a-be88-4c98-b0e4-ab39683c9140",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b014f661-b35b-4d54-9824-61b325d9627b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6abfb3d-105d-4b23-a949-7edc03d8376b",
        "cursor": {
          "ref": "128c2df1-b737-4ba5-907a-459c6be4a050",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "63626caa-efd4-437f-bae5-6dd32b1a2da1"
        },
        "item": {
          "id": "b6abfb3d-105d-4b23-a949-7edc03d8376b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ed62971-56b9-43c4-a970-0d7df1444681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd639a80-7dcf-4277-9ec8-707a831cd203",
        "cursor": {
          "ref": "e889d39f-792e-4586-a6c5-a2088b1d4bce",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5f2e205a-61dc-4694-a3c9-9301eac82ed8"
        },
        "item": {
          "id": "cd639a80-7dcf-4277-9ec8-707a831cd203",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c201f363-d19d-4c71-aad4-7dee858dc05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cfb52b-88a3-42bc-b93a-e68b82379fe5",
        "cursor": {
          "ref": "6ddaef1a-5e19-49aa-8125-f02c517ee95b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f459111d-ddfc-49a3-a695-cdb9970b6770"
        },
        "item": {
          "id": "12cfb52b-88a3-42bc-b93a-e68b82379fe5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5f5f5036-0f79-41f2-8f58-4548fcdb7fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2362756d-49d6-4cca-b464-716b35713b7a",
        "cursor": {
          "ref": "1f0d8a77-5617-4097-aad8-a437fe59f767",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a522f674-be50-42d3-9942-98eb419477be"
        },
        "item": {
          "id": "2362756d-49d6-4cca-b464-716b35713b7a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "87f28d8d-f20a-4fbd-8352-69d368853625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbfc31d-6a01-4968-a19b-0ff1e0be926a",
        "cursor": {
          "ref": "f05d2beb-295c-465a-911c-04bad931ca9b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4a8ec4cc-cd76-4100-a01f-66b4bfe852f1"
        },
        "item": {
          "id": "2fbfc31d-6a01-4968-a19b-0ff1e0be926a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d3c1d13b-d5dc-41b1-bcf3-f8398777af5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a10d9f0-3374-4b78-8597-1b6c2e0605d7",
        "cursor": {
          "ref": "702c34cc-8daf-4911-9308-8287304185c0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c435aab4-f6c4-4c14-ab8a-72a03eb4d07e"
        },
        "item": {
          "id": "7a10d9f0-3374-4b78-8597-1b6c2e0605d7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "33a86f10-6009-4399-b726-dc152b9cd87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e1e1d5-dbea-4171-ad61-a318ce17fb8a",
        "cursor": {
          "ref": "555393c7-f7c2-46d1-96e0-3cb6d68df1d6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9eb34221-b84c-4758-b889-e6eeca2a943f"
        },
        "item": {
          "id": "d1e1e1d5-dbea-4171-ad61-a318ce17fb8a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "672e44c7-6d3c-4129-8b30-8b8aa4c35c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbd31a3-3cc6-4318-bea4-d5c513d0188a",
        "cursor": {
          "ref": "95abb9f3-58a9-4926-9da1-f8e66b54f0f0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "757e4ceb-8ed4-4535-ad86-aa8e296653aa"
        },
        "item": {
          "id": "bcbd31a3-3cc6-4318-bea4-d5c513d0188a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "21d737e1-7542-4a75-9899-209f644aea7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab35e488-d15b-4a6b-9bf0-8527b7a703c6",
        "cursor": {
          "ref": "d53a4d82-ffa5-4c3d-8e72-47d5fcd6b0ad",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d996856a-2f69-4674-ae86-ba12ae381a45"
        },
        "item": {
          "id": "ab35e488-d15b-4a6b-9bf0-8527b7a703c6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d53c9639-c239-4845-bd1c-6e6a2f65e350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f02a8e-1579-40d0-a158-8d984d4826b4",
        "cursor": {
          "ref": "845b9039-6f19-4641-be8a-660aa44eb52c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a3561a5d-61ba-4338-9696-bae09381ff81"
        },
        "item": {
          "id": "b8f02a8e-1579-40d0-a158-8d984d4826b4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d7aa7aa-64be-4582-b653-201059378c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656b6b92-337c-437d-bbba-a02468d78f1b",
        "cursor": {
          "ref": "57ef5841-7f50-47c5-ae5e-c980bb2055e6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c6dc7c12-69c9-4073-b43f-79fb4522a4be"
        },
        "item": {
          "id": "656b6b92-337c-437d-bbba-a02468d78f1b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c29d447a-953a-4da7-99d3-e4f4b5c362ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4afea6-0281-4cf4-bba5-8a42410f8665",
        "cursor": {
          "ref": "97dc2b35-00b1-4c24-8b72-7b86089b2673",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "88f954a1-49ee-4337-8fa6-41c4c2670a58"
        },
        "item": {
          "id": "9a4afea6-0281-4cf4-bba5-8a42410f8665",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7369f70d-a8ff-4dcb-a5c4-2d8d09194c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6133fe7-7971-4661-bf15-7d0999a23cdb",
        "cursor": {
          "ref": "f2a73616-32d7-4f86-82be-55b35a429f98",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "630fc5a4-fdbe-4949-aba4-6ebb18797af6"
        },
        "item": {
          "id": "e6133fe7-7971-4661-bf15-7d0999a23cdb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7d13d107-2e53-4fe4-868d-55b9633fff7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3414643-0913-46f7-a64f-db5927c79a23",
        "cursor": {
          "ref": "36bc8639-fb2e-4a5c-839b-8cfeadbf430a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "73025618-f93f-4d96-93fa-bf4c78c7824a"
        },
        "item": {
          "id": "b3414643-0913-46f7-a64f-db5927c79a23",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bac3d823-281d-4e27-9be6-09ebeaf83533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcf3749-5018-48f8-a409-fdf0ecea91c7",
        "cursor": {
          "ref": "8fa9493d-3ced-4ed0-9d05-64bac20b0d8d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4b31c0bb-536f-4d45-878e-988c0f66b180"
        },
        "item": {
          "id": "5fcf3749-5018-48f8-a409-fdf0ecea91c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3e6b8737-da7a-4539-b871-b62176a3069d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302f1a2e-0bd2-4bf2-83fe-1970cab2b280",
        "cursor": {
          "ref": "b5c96095-1874-499c-be28-889620bdd60f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "663bdfcd-7065-414f-90a0-94c5937afddd"
        },
        "item": {
          "id": "302f1a2e-0bd2-4bf2-83fe-1970cab2b280",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4e23e3ba-4247-411a-92db-23b754a1f588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3aa135-6397-437e-abc6-6a22d40d719e",
        "cursor": {
          "ref": "b99384ce-4664-4d02-8f30-ab52e8e0e5f2",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8906fed4-77fb-40ea-9bb8-00974946356b"
        },
        "item": {
          "id": "8d3aa135-6397-437e-abc6-6a22d40d719e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "067d2efa-f5ee-49f2-8c96-588ea9c44afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da26109-8593-44e7-92e2-95266c6331cc",
        "cursor": {
          "ref": "7565e06b-b248-469c-baca-856e52b4efe4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a81d5f6c-f5f5-44e3-aef8-dea1cdf927cf"
        },
        "item": {
          "id": "6da26109-8593-44e7-92e2-95266c6331cc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c07ca369-ef74-466c-860a-9be398f0f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa976e-2ad2-404e-9986-1a80ed61235d",
        "cursor": {
          "ref": "bf9e848e-b2ac-406b-8243-2ab6a01c3703",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "49d68849-cb55-404c-ba31-8ab904587739"
        },
        "item": {
          "id": "d2fa976e-2ad2-404e-9986-1a80ed61235d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "41736950-2090-47fd-a202-618e30fe4008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185c7295-013d-4d01-8e60-10dde4c311b9",
        "cursor": {
          "ref": "e5cb5400-3b4b-4efa-9249-a6c0ceb16462",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dbc63fca-e623-45ad-bb29-f69171105fc9"
        },
        "item": {
          "id": "185c7295-013d-4d01-8e60-10dde4c311b9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "def6ff5b-9e24-4574-b4c9-24b519da66f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6e2750-5b3e-4419-aa8d-cbef9e05626a",
        "cursor": {
          "ref": "c0fd025d-b22b-414f-b41e-dea7120bf2bc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "477ccccb-791c-48b8-8e31-4a3fa5f42019"
        },
        "item": {
          "id": "ad6e2750-5b3e-4419-aa8d-cbef9e05626a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "82242ba8-19e3-426c-8f21-bdf880af021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed86f38a-23db-4400-b21c-7b7e4c15f651",
        "cursor": {
          "ref": "2ec5674b-65c2-4439-8978-aff2b14513be",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d7a48755-0f06-4eef-9234-c373775a8c2a"
        },
        "item": {
          "id": "ed86f38a-23db-4400-b21c-7b7e4c15f651",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a90ad19e-8ddc-4acc-a5b3-e31097aebc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865b2dad-4092-4e5b-982e-5ec56bc8b6be",
        "cursor": {
          "ref": "cfb61b90-2ef8-480c-b72a-bcad503e7b89",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "376d3242-3847-46dc-86cc-f224b450bb16"
        },
        "item": {
          "id": "865b2dad-4092-4e5b-982e-5ec56bc8b6be",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d9a276ab-d97d-4fd1-a094-0cbd8211abbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a59c214-cfee-4c1e-9b5b-2b989ca482db",
        "cursor": {
          "ref": "0f62e677-538a-4c7e-94ba-0ad75032b0e7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ea25cb4b-f159-482f-864a-8566ebfab9cf"
        },
        "item": {
          "id": "1a59c214-cfee-4c1e-9b5b-2b989ca482db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ae355ca-2b0b-47d1-833d-69a6d3da105d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ecef73-b1b3-4ac1-add6-b838b4e99e3a",
        "cursor": {
          "ref": "4c6693fe-ef75-483b-9384-fc87a32c1bc7",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e96be543-f8a9-4108-8860-ecc16c730625"
        },
        "item": {
          "id": "b0ecef73-b1b3-4ac1-add6-b838b4e99e3a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "84b8c36b-d503-47ad-98b1-318da1c0295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceca9bf-e493-4c3c-81ed-73edd7e96ad0",
        "cursor": {
          "ref": "08c78646-a371-48ce-a443-8d9c8f68fb7f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1d6aca37-8c71-4bdd-b3ea-de9fa9a162ab"
        },
        "item": {
          "id": "cceca9bf-e493-4c3c-81ed-73edd7e96ad0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca7a411b-1318-4650-a4b9-a0151350120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec41ff0a-9f8f-4611-97a7-0aaaf533c6ec",
        "cursor": {
          "ref": "c4bdeba6-541b-4784-884e-5ef28c440c99",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a053b4f1-2c69-493a-b213-c53a6dfe3dca"
        },
        "item": {
          "id": "ec41ff0a-9f8f-4611-97a7-0aaaf533c6ec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f3dc4097-0b7d-4482-9e51-a92c46c5350d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52677522-dc70-4042-bbf4-7fe50deb58f9",
        "cursor": {
          "ref": "3474eb00-6765-49b9-b2b5-6bb48324eca9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4f29d617-9481-4ed7-a9f7-ac97dc1b0c29"
        },
        "item": {
          "id": "52677522-dc70-4042-bbf4-7fe50deb58f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b2ee23d7-e973-4345-adae-b0df07af2f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f608f16a-1fc6-46e5-ac3c-c19ed2456dda",
        "cursor": {
          "ref": "5d6a816c-f2c2-44b5-bd47-76a013bf7dab",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0bbf813a-a432-4691-b7ae-e3dea8e962eb"
        },
        "item": {
          "id": "f608f16a-1fc6-46e5-ac3c-c19ed2456dda",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7e9f5736-fb52-40e5-a6ce-3fe0c011c626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e6ebd3-78f4-48c4-b7ff-8a8862d2821b",
        "cursor": {
          "ref": "6de8d581-8177-4904-af24-1008b4aa0fa9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "49ee1a3f-08da-4a32-9a62-43b98a8fc0ca"
        },
        "item": {
          "id": "f1e6ebd3-78f4-48c4-b7ff-8a8862d2821b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aab48543-1a4a-4812-bab7-cdd68c63697b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8115ed-09af-4294-8803-6ea7b63db731",
        "cursor": {
          "ref": "8dd1108c-e545-4e06-8c07-3697038b3a7e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b760d22f-54df-4f59-9402-5ba13d1aba90"
        },
        "item": {
          "id": "6b8115ed-09af-4294-8803-6ea7b63db731",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a870923-c0e6-466a-bfce-8ea8d740d6bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 148,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fd3b0a-1bca-4e1f-a2bf-62d4b3bb479d",
        "cursor": {
          "ref": "c068d03a-7b46-41ee-9b36-0dd613091090",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3b7dfeeb-e671-44a8-83f6-42d1c6181c8b"
        },
        "item": {
          "id": "44fd3b0a-1bca-4e1f-a2bf-62d4b3bb479d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "14a741c6-4a00-4058-bf58-ca5982339d1f",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "297d708a-54d0-4a84-bd01-07732fca2f29",
        "cursor": {
          "ref": "b9900aa9-f33b-4233-ad8e-4bd950c41634",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5fb88bb4-3225-4769-ac42-ec03f21ffef8"
        },
        "item": {
          "id": "297d708a-54d0-4a84-bd01-07732fca2f29",
          "name": "credentials_verify"
        },
        "response": {
          "id": "65baba47-255f-4a1e-9294-cd577cbf38f6",
          "status": "OK",
          "code": 200,
          "responseTime": 2997,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f93e0f0-62fe-4ae6-a6bb-699252beabe9",
        "cursor": {
          "ref": "fd7f2294-f21c-49a1-afe1-08dd3b4aa54a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ffda4424-d313-43ba-bd61-10336c735108"
        },
        "item": {
          "id": "7f93e0f0-62fe-4ae6-a6bb-699252beabe9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ed9aac09-73e7-4800-8990-0a18f2c57298",
          "status": "OK",
          "code": 200,
          "responseTime": 2909,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "738143ee-5b2e-4881-b082-ea04fbc8ff49",
        "cursor": {
          "ref": "1751505e-3794-4165-8f66-cb9c61239cac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4ce8aa0c-741a-4af4-9418-d7a60251d71b"
        },
        "item": {
          "id": "738143ee-5b2e-4881-b082-ea04fbc8ff49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e57bc750-aed5-4378-abdb-68c78a7313d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738143ee-5b2e-4881-b082-ea04fbc8ff49",
        "cursor": {
          "ref": "1751505e-3794-4165-8f66-cb9c61239cac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4ce8aa0c-741a-4af4-9418-d7a60251d71b"
        },
        "item": {
          "id": "738143ee-5b2e-4881-b082-ea04fbc8ff49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e57bc750-aed5-4378-abdb-68c78a7313d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ef14d1-bd3c-4d43-8e4f-3306cfdae6ca",
        "cursor": {
          "ref": "e4c76de9-4c53-4007-aab7-e2f157617f5b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d1f9e157-90db-4cef-bd38-e4eedf923173"
        },
        "item": {
          "id": "94ef14d1-bd3c-4d43-8e4f-3306cfdae6ca",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e6489e3-21f0-4c3d-98a0-afffa42b3663",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae91e2a0-201b-401c-8ca3-39797022f8a1",
        "cursor": {
          "ref": "c6223512-5615-4111-a54f-6c0ef9dfeff8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1d29c32f-af25-42e4-a138-050965c6c0ab"
        },
        "item": {
          "id": "ae91e2a0-201b-401c-8ca3-39797022f8a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1625f2d2-7463-4dc7-a81a-e38f1403ef49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}