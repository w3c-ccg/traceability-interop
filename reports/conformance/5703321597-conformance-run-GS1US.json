{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8a89dc0b-58e2-4503-8638-494728e0228b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2ee71c1c-18aa-4f89-ae87-b74d4cf88fd9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3780eb9f-b3de-47af-bdab-e0d1d10eaa35",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b4cc46d-b76a-4a5e-b247-3bb8e9d5d756"
                }
              }
            ]
          },
          {
            "id": "2734c52e-5ede-4e86-b91b-2877b93d638b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "933a2e87-23c0-4a4f-9c38-b514a5a1e770",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d99663b6-58b3-4ce6-a3f6-6b8671a7b7a9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e26db612-6f6d-4f29-9768-3e2fc82a1c12",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5e9d433f-56f6-43a9-8278-9014cf0284fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4046c6ce-68a7-4361-924b-62be705a1935",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d05e8df7-2d92-415f-889f-82d369864262",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d917c820-7699-4a5d-92d7-c8fdcc14c92d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91f1a5d3-b290-4a2a-b51e-2fdc03f694c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8237ec12-478c-445c-b836-5ba3f32e685b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f3c8967-859c-4cf1-bd8b-c9631ea87930",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8649aadd-0358-4076-addb-0c7299fc71d0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8531a011-4686-45b3-b34f-bae965d8bd57",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "baa33fda-70ff-48da-a8c4-99253424bce9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a212859e-04a8-457e-98b0-e262f3ff4c12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9df05e4b-feb6-4759-ac31-8b44ca7df126"
            }
          }
        ]
      },
      {
        "id": "b43c26f5-7c0c-44c5-9d10-25ae6b68619f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d5d5dafc-abb9-4438-a140-280cf8a502d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41c6e7ee-46bf-464f-8c6b-38f40e50d9d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "553fa059-8333-4f8f-af27-f03eade23209",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7c8702-17ac-4319-8c96-dba5e6563d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "874ca118-0bc7-4afd-8d39-a06c87396259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710869f0-36d3-46a3-8d63-2c9530540e28",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d41366-573a-41a9-a5e2-dc53a1d1e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b589bacd-1108-47e6-baf0-c8e98e8098dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01fd401-daba-40c3-b79b-275b5f60d91a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e4ddc0-c060-4959-b6b4-8ed809e9f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bf33806-fbe6-421e-af21-37a8a3577d28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a534b43-a64e-48c7-87c5-4862174eec8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a6bdeaa-f02d-4a19-bcd0-a9cf9484202b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71550008-02c1-4082-a238-b7fe76bc85ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7796e15-e746-44b2-945a-f94d7c3b5ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97593ed8-d5ac-4efd-b1b5-5e6ada66eff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68291e6c-cb97-4e55-a84f-4cb863cc911c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2bf519aa-24e3-4794-a5df-affa913c75e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6971747-8ec1-4946-83b1-b3f91582b47a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a8d4f9f-430a-4731-a51f-f58c2142c352",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1f6799b1-0388-4425-b6c0-8e09b93824dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9420369-dcfa-49d2-9889-596774834fca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "960bcba9-849c-4ab8-9fb4-7ac5eee17b5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ef1750a-2200-4c4a-87d1-d7555b10e8b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc7d6ad6-52e2-45d6-a694-64e498099ec4"
            }
          }
        ]
      },
      {
        "id": "ce8c203f-b516-47fe-ba67-06cf85213001",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd2290c9-8d14-407a-9454-f9bccfa96f73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acd9f9f6-a29c-458f-9078-395c1adfc2cf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bc1fb1d9-f617-4bd8-ba6f-051654257a02",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae7ced6-37af-49ec-b250-8edae1359936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e37f6f-d29e-47dd-b7e0-f348946131b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac10dd2-b952-44c0-8611-ea717f88f931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76992d16-bdf2-4678-8682-e9efb4dbf02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c245b5-ad51-4dc4-84f7-5682e76ca2ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0beccac-1bf4-4a2c-8a5f-c403401a0048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733d56c2-b05b-43e9-a30c-66e51485e23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a778ebc0-0702-42ef-ae6b-18b1deedc9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f148bba-046e-4c0a-83ee-067b8bba6f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ca616f-20c6-4916-868c-31a595bc242d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02baaaf0-e47b-4794-b366-7cfe4337815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b643bb-0de5-4d2f-9fc6-dab2535fa6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a709f-0cc7-47b5-91df-b8e73c75686b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d69c0d2b-9f94-4112-9615-e81a3be81803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c3ae9d-727a-45d9-ae9c-58f49d01dbb4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94be20f5-b41b-4d40-b4a8-add157b7e121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd87e257-7ac6-4934-b168-eca1e42d9622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011192b-4bb5-46fa-8463-52f91973e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94ffae57-b350-4455-a47c-8f5c0834e859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50939cee-62a8-4f8d-b567-55dacb8dbacf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebf7626-9860-45db-8cac-81b3d19d3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3710df8a-6732-4aeb-a172-a167cd391e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd0af82-bb8e-4c40-8a60-221852a3b72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a6e1956-a577-4b59-ab18-2ea8c288d74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff89a6e-21d4-49fe-a5fe-a41d9d689502",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015fe584-0ec1-4045-9e10-02f5f7eb0d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c906436-1f43-4015-95b2-bda16ba2b1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf82d265-f97b-4ab4-81ef-253e93d29572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92255ab3-12da-4293-91dd-a046de28372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa99e8ed-4ae7-4931-8a7f-25ab2a185a78",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2de133-9a9f-4561-81da-8e368f6f5e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45389d88-3818-4f37-90d6-659e18a8f2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d097ae54-522a-45e9-8eed-e6bcccbbd5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "279b36c6-9159-4ac6-abfe-386d833f6869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df012afd-98cd-4172-8a39-4f25b07025ac",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a21d03f-685c-4ce4-bf65-9e0812aff952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92be29c9-e5dc-4f10-a218-733f29759bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d02c4-a52d-45e0-9287-9178e9eba74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e92b39ac-0651-4429-b661-1770f2378e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc656db6-20ce-415e-9ec7-7baf7000dfa1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194b876e-2ad1-4afc-8377-c14806745a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4751cf43-116d-48f3-8ca5-c22124c3fe62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0417f7fe-044b-492c-8afa-1c283eaae233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86cb5c85-dacd-4c05-ac54-eea7059d1403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bea9eb6-5b5f-46fb-ae80-26c8ef5cdc03",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46304da6-0ac3-430e-ae21-17096469c191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e354b91-8405-4e36-990e-052dee81b0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96042db-a226-4a0a-bc1b-fa5d4313553b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ce8fc1-c73a-4cfc-bc74-9c3eb52f0420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d1580c-cc25-4a18-86bc-c5913ec6dd70",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cd0805-91ac-4a00-8893-6d425d8bd7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac849d5-49a6-4d5a-a852-2b486f7eddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd08fc3-dd9e-4559-b56a-9c357459c844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5ef921d-bce0-471c-a50b-3fb8e6a2b1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a0ef8d-4413-4638-bb13-baf1e8a48bba",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41afca68-133d-4c13-b6a2-3abe37a1267b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afd4997-4e88-4057-a2eb-a5e49054916f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5691b7f6-0f2a-4dd6-83b8-73f412a33e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a7b871b-7d7a-4baa-8cb1-271e53e63b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3264f0f6-b66b-42b0-8636-c4e499ce88a2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b497e011-e961-49a3-ad9d-ab2e8e6112e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629b9305-507c-48db-891f-d7074ec7f05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a763ffd-7aff-40ca-8ebc-9007e12c1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a417319-4cf0-4631-b9a8-9b2a9ddcf901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f61ea2-fe71-4b06-993f-94821fdadf66",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92778a40-2d99-4f29-9029-7a469e3efad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70138ca8-8d3a-4fa5-baf9-c70b1432c3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbe1479-1bbb-4722-a945-5c7d53200b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "748127e6-38ca-4fa3-be69-fa0d4217091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f6349e-740e-4af8-8907-0aa45aeb18e0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343fbdd4-bcee-49d1-9f5f-7a4a5fd6d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98629cb6-28c8-4511-affe-d2a3c24a11cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa176c9-7239-42b7-9856-84fe6b7ebfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cade6f84-552e-442b-869d-5250cb6a3dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff95ad07-ac67-4b6c-937f-67ff44effc4c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f084787d-0e62-4c00-a704-f7f44e8fb453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bc4e5d-ead6-4508-86ef-7e05b9976d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaef3e9-59c4-4fdc-a75f-359d8edb1666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "142f08d3-28d7-4e7a-9a6b-90cbbc3c4c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5594f42-d6d1-4b52-b118-825a9e7606a0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e543c2-2736-425e-a736-bb3abb7a29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac61e65a-943f-49ab-9c4a-7c887c728503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2396f3e5-0ace-45eb-9bdd-e4216bcba047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b03d8eb-6472-458f-9962-ed58d7db3520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f073fa-b42c-4a81-a9ad-06d9459ccd37",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f87fa1f-655e-4c12-b52c-d0f0ab27fe35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09179874-da13-4b33-a514-2262d384f4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88293f19-762f-4749-95ed-551c8ff38915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca5335b-fdf6-45a9-84e7-7ccbd8fa3cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfea90ad-e2d6-4eb4-903d-8d3252b52d01",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39398a4-e65c-48f2-801f-4d807f772398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660c6ea8-b83d-451d-a858-41c52f69adf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524a6b18-e0c7-4c34-85ba-5687d982ea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d43249a9-cd4d-489a-8f31-f273d53310d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa43abe-b7a1-4002-8404-1d667615cf50",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb105c6-84db-43d0-85c8-92f7586f5c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3df74a-4964-487f-9615-937f415da6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8b6a93-c842-4114-8291-06bf48f96cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4d72ff-d3fd-40c1-b135-18385fbeb938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03119da9-125b-4597-a534-9dc0cb334fb8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a59f88-128a-4359-bee8-2c7d0b7e1522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6671c12e-4ceb-4659-b1e8-d1fc9d7fc1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e0ff8-ae2e-46b4-94e0-b45776a24e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa8edb8-921a-4241-90eb-d1dde1252c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c8688f-5d5b-414d-a656-2dd1ae8f629c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2702485e-d966-4bed-9cab-721666e4cadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe8b4df-5a6d-4609-988d-623b03dbdb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6621173-f67f-4994-8abf-177952bc91d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4eb434-c0a1-4206-b250-24d8f5d65e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff1e1a9-384f-4fe2-9ca8-28835278e54f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a8668a-74cf-402b-94f3-bb224c5bb3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaa0b0c-cda4-4c51-9bc9-9cf55d27b147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8c2bfc-ef27-4ca7-b8b5-133eae215e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e591b3f6-eb3e-4d0e-9652-7ee85f9e309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f11b182-acf5-4e33-83f4-07d1646a6d48",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e26c922-1adf-437a-83a7-756969c74c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e33731d-8ecc-441b-b210-21e894e41591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e6eddf-4fcf-4d28-b07c-e54406d0b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00869a8-c82e-4fb2-847a-e573e5dbf314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0f7bd9-8d4f-4444-8afe-338b39ed9712",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58d1f79-b721-45ec-b1be-9de1a907ff6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efc1aca-5b1c-4d3a-8b8f-99ba11e79dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4bbe00-5c74-4c07-978e-af40bf77bd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "323c5b02-22b8-4d81-a72c-a86a3dd74905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d8791e-f142-4900-aea8-28d7009e8456",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aa5a0f-f2d7-471a-ba92-83de5ae4bd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663dac51-9c32-46d2-ac5e-4bbdd8dcbf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d99508-1dfd-4cdb-bda5-c22f3a0b91c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf8e0f8-f4e4-4373-84ef-806a3a0431be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c995dd68-dc3a-4213-a26b-0140bf9d1ea1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2afb7a2-840b-46b1-9f05-ffda33124380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b86f394-6eee-4aee-b4cd-b3d064d13c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3caf105-f848-4719-b1f6-2a5395a9261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a93b064-dc3f-4739-ba51-7624f57d87f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba169a-7907-4c31-8150-60c32d1f2b63",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c75fa3-65f8-41f3-b9d8-182d64dc85bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda79d59-d6b2-439c-aaef-d88d31991021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4639a331-2fbc-4d6a-874d-6b5f4ae8cfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "860117a8-0116-4545-9189-f074e9bf4f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffd1ee3-3812-4956-9632-d3b50f9a494d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db4b8e3-3698-4753-af46-1c0c10d89a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e6c608-c25b-4309-87cd-c2924e88018c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837253f9-1ff5-4cb0-abb7-f6cd89d5b1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b501a31-8486-4102-a256-d9712c18f630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c999136c-cae5-4fd3-b003-0adf638f88a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8c587d-5069-4be2-a12a-072f8d27bff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f62030-3b58-4acc-acee-62bba403ddba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd1ead6-68e8-4947-8173-b3e621d1fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "836cc16b-c7a9-45dd-951d-6809705d22c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87308055-8e7d-4141-86e6-8444930d5a0a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91f7df-0328-4ef8-aa78-46377d2d09ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55533a6-86be-42d8-9189-6e44fcfb6f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a30f543-3d8f-4a47-882c-960298f3cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebdc3cb-b3d9-46f5-966d-2ba30c144502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81933807-ac40-4b76-8f36-d5cef21392f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaee66c-0f2f-4707-a5d9-87d393365dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcaa4d2-5f7c-4388-9a0d-c943209087de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c4ed86-c7a0-4567-a136-3bc5c6152da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a96691-bb9a-45bb-9a8a-5d8bc31ec3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b56ab0f-55a1-4a2c-8689-1be484fd3a07",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08f3b3d-5c12-449e-8b0d-8362eec8fd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d952e07-d01b-4143-94cf-f3de55d7432a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a6e2e-0512-432b-8e01-748e8007aba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b619a8-d29f-4f31-93a9-7055ceb49bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe0d508-3d79-4a83-8459-85e07ca271ab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ab19e7-1dcd-474a-a507-e39b363ce349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16333483-cc0b-453d-9fc7-2561a3582a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f9f417-ccd4-4cb5-9377-023e82429326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ebfe3c-9139-4fcc-a236-13efc716ca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4c9ca6-49ab-4acd-aaac-c0f4d6cc4c82",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efd3ae8-afd0-4b4f-8e8e-c720c5e911de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f226443-76dd-4c05-b619-2b11e2bfde16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136a1b36-abc0-4cfa-876f-9f46b7623367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "22d0e93e-1106-45ae-839f-25e5ea7dee88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473cb4ae-1589-48b4-84bb-43dcd9593852",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5827aa-aa1b-4ec8-ade0-5413fcffa3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6edc5a37-d003-441d-adc0-fd55fdbd9148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ca9745-fff3-4797-8f35-3940b5c6ff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf45020b-0534-472c-859c-e462306ea438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e702e3c-b0a9-4202-ab13-1d03dc8697be",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ca6605-c4aa-4236-93d7-688f4c0295a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a3b559-12fe-4356-b000-fd4cb991df83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8b5f63-aab2-4eda-8a7d-5d6cb5e66b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "864b819b-9da2-47d3-829e-ab069de50055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d7c5a7-4714-45ee-a73f-9d8715de861f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d460d6-1213-4ccf-bf1d-c5a4ce9a97c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d56f430-d5d7-4cf7-a20c-85b40e89ebb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b081855-2225-475a-8027-39cafd7fac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf06708-e59a-4905-a836-cd7a73589643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d70553f-969e-47c7-b664-3946e29073b5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9387ef5f-769a-4a9e-b599-7ab4e3e6181b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914c93af-03a9-4ff2-b382-4aee216442d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0133e0-6784-4455-9ffc-02d9aaf1bef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fc71e7-873a-4edd-b64b-296311d9c4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954adf09-e360-4877-a128-3a807ea0a595",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1defdfc5-a23d-43db-903d-7fd4797aa9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a96a0c-50d6-40a2-ac77-3015e00e93e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec90fc5-1c7c-4578-b1b7-3f5f8595ce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a30fef7-59f5-46ee-9e5f-4e07f9fb21d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff38510-99ee-4d4b-ade0-81efd01ba4e3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d57b9f-59db-48a6-9efa-cd1225f8a5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dba8e3-3a1a-41fd-bc1d-d177edddf20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728af7df-35d7-4177-b3bb-6397b770e9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63159bf9-2344-4d07-abf5-f5c8bdb10d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc29bcf-3486-485b-81ad-d62549d6d97c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127b0c1e-d410-42a1-925c-789d1d17e492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ea1831-1a27-4e57-b307-378ea5d5025c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bde686-f4f4-44cb-8207-4147981b1b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b63a7bd-c415-4609-9d49-ead0aad08658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63d412b-f504-459c-9a1d-a3c72d95d10a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a43860-e058-478a-ae1d-284795fee969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f2fedc-fc20-49c3-b916-739acbdbc847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c47a2f-defd-4a75-8b16-63b0c6598c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "787deffd-2f7c-4d61-a402-bfb4e6788226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e7b7e3-af8e-4789-8c6a-74b86c9b8b95",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b84b9e-50f6-4276-a63b-d9908324a65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18dd929-ba01-4dbb-927a-81b9e80b459f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3f59c7-a7b7-4cbc-98ee-c91f9763a31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6155559c-e07f-4218-82b3-3bd4c173f65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b858f814-1c66-4eca-b8e3-88613ffa7f84",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290c74e1-54ab-45cf-9030-1420e7cd319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31e0a4a-ba63-41de-9dc8-98ddd78d0a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcca3be-c6f2-4c1b-90a7-32b6536f1428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1254f263-031f-4d7f-8ff3-f3f07570116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b49a0-d06b-4e07-9cd9-d2da28333ab5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33ec10b-da2b-484f-81f7-cd300997523e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7cccd8-3148-4efe-96b0-a617fd182f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9f0d47-ee74-4a4c-acb4-963db6fe284d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "926a0b99-0006-4765-a0b1-cc7f9fd691e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01409644-73d2-467e-8462-023f93a8fd10",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328579f8-2cf0-404d-8dde-0867e5e6babe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071140a2-9bb7-46c3-859e-82fc9d375651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034c0b25-bf20-4ec3-93e1-4f316a569428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91fbd73c-df32-4133-8456-f0cf24e35215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141f2907-0cc6-48e6-811d-f3d337d30697",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6043ad5-cd2f-40ae-9d4b-980b4fa31c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b40656-3b84-465c-bec9-52eff20522a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86baea0-2b15-437c-a2d1-cf32599cb9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "617db28e-1c5c-4bef-bab2-afb9e139b917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4b2eff-e000-40e0-8092-cfb7ccd0a548",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2806c5f7-2b10-4aab-b349-392158bb9071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96821821-b268-48a8-891d-e977b0e96648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3abed-9749-4fc5-a157-28b049d70083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4f3954-18ea-4308-897f-c7bfd68dd4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34e943a-068f-4392-a4c7-c86bc777dd8f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56395b32-41cf-4f57-b3de-f3bc1429d45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0f5e85-ec4c-4188-a5e3-0ec8fc8861f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a93be-b642-4a25-bf36-70aec87555b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24368723-e2d8-4c06-8815-20c8678f4d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55452d8f-b4cb-4cae-9f18-6f7f04f444b7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a717908-1d38-46ad-954b-110f2763a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568ea36b-078c-487a-9694-770e844f2653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d149bcca-b30a-4db6-ba6a-47847cb8906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e21033b-ae2c-484c-89af-752304d139dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc282fd3-86c5-4afd-930a-27590c48bf29",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aab859e-65aa-4559-8e2b-6245d53a06a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e66e5e-8c94-4e9f-8f56-380d149bb8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29afb8ed-c240-4ab7-a7b1-ca64a7eacb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b92f9b35-4b10-40ec-ba76-1630b035316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf539da8-fc9a-41f5-946c-bcd6ad792cee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87475e1-22aa-4289-b69f-e04e94c5b945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586d0e9a-e368-4654-8e19-0bf1bcac31e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93075be3-30ea-47ed-8ae4-f58aaf6ccddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc725bba-3d9d-48b7-84cd-4d1d0cd552f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5e97c2-9abe-40f4-abe3-89a36b37a519",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a97eae-2034-4b40-a286-c867a6869abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ea8412-8403-4471-b97a-4fb88b779837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93dec1-53bd-4df9-9e9c-880638746899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "546304ec-17a9-4202-a65a-b49ea09452d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8e11e3-244b-462a-bd39-d50ca1674fa5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964c0526-d0ad-49c2-a413-9f201224c659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eac53e4-c2f7-42a3-9325-076e6315b517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005250b-bc99-48e7-b13f-8a046269ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a40dae-af0f-430b-b485-6b2c99cdd416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69f6edc-7d5b-4bbd-85f2-10754cfb51fb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea89feaf-f93f-4d4e-a248-a6d6e533b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa3a935-2d3d-4574-99c0-879dee6b9f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e0c3e5-a548-4899-8d90-0f274a39ba87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "875a1132-bde2-40bb-8c89-5db459299e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4456d6d2-dbe0-4649-a911-a06401cffd19",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4624933c-2b02-4b99-88d6-bf95fee6c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88629009-a751-4bd9-af2e-46601f410e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd1f9a9-5549-45d3-b921-d9504628fbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c589c0f7-2aaf-4f06-a780-0ecc51a91f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfd0929-0cd1-400a-9e45-2ac402ae7240",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a246073-dc62-40d7-8a87-76f03741d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039cb92d-f4a4-4065-97ac-691bac9c87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fc16bf-4181-4162-ae3b-a9e6154a1878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c67c638-06d1-4e0d-bd7a-6d54d4cea28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8117d2a0-a831-4f3f-ac26-0c01a0cd5e56",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab14df6-6640-481a-9a58-5960abea5ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea9e798-b62f-424c-84f2-f6fb99ee02a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114dc181-59cc-4960-ab92-0f5bef1d31f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa08744-8662-4bde-ae42-d55fc32b65b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f37a21-2ca5-471d-96cf-06e8264d1e34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b70146-be4d-48b9-b0a3-97db249e3552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c002c4-9a25-4a89-a7eb-e11e20c0ac1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7da52a6-fb4b-4a4b-93c6-60067ea86079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84f77f1c-520e-482b-8bc1-954ff4359499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaa341d-0660-4aaa-a5fd-86b252355810",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a58e88-712a-4e85-90bb-cbf462e3fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0232d8df-f5e7-4667-928d-bc2120b1e24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59fea90-6f05-4339-ac3b-1812b956c439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7462bd-bd4b-4a83-9aa3-508465f5c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2171d9-e4b7-4866-a044-d97dd621d3fa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514d4b7c-dffe-4cc0-b6d8-58d6c39581e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6db120-eff0-4cf5-b1ec-d7b8ce9b6024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694bd20a-20de-4969-9050-f84acb044935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d72b692-ebc3-452f-b92a-310343e93ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d27be-98a6-425e-959b-6b87426a1aea",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fc3743-2322-43cc-89f8-66bda9d7337a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5190dcb8-79dc-4c22-b038-e4544e96aa68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38fc84c-5dde-42bd-9fe3-01128ee5b3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91df09a6-d06c-4370-b479-84d6a4e578bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897ee3d-8200-49d6-aab7-bbca4aabdcad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89638b96-9cef-4c83-bab8-b0197494a109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500f7b52-0a0e-4f28-968d-80c5353c19be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c60c67-a9d0-4237-b8c6-ceb64928da5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b090a0-8908-4109-bfc4-7efd49026273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e83bac5-2fec-4ebc-b219-b63f3b87f5b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9712e19e-0c5c-4017-927c-50ac46dc3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75aced70-fb9e-4b3c-9250-d126bd998103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693a07c4-b731-4f86-b3ae-bd588d2876e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dba83722-d572-4253-9548-2b6e14296559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7fd22-4163-40c5-a8c8-2038ac5db99a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1a3c15-04e4-4704-aff4-36eebb268749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57290d2f-1735-46f6-9f47-3431350e80c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d17119-b488-4e4d-a46f-c45fb5a2ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72abaf5a-f306-456f-86ec-8dff669a0e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d95dd5-ac37-473a-9f8c-c7900e699e33",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219c63ca-a9d5-44b3-99ed-edd475a8a7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71375dce-493c-4b4a-865a-ba5f2414ab34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92dfd1-56b2-4416-be7d-968e217571ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6083176b-37c0-4425-a232-d1a074beb6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca9d7dd-2a1a-447a-b613-b7b973af1343",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f15ba23-dfbd-4cd5-89f5-9e2b4d853fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a818ed39-a50c-4ddf-bd80-c32ff40d21bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3fc5be-33ce-4c7e-b0e5-b9a78e0eb7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9b2ff1-d39b-4e56-b032-d10144df106a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215bb51f-c4c6-46c6-9299-ba77279d91a3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505e9a95-603d-43af-b4f0-d807d4b0f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0126b3-21b4-457b-9f97-a9209da50dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609c30bc-714f-40f2-a6bf-b0a468d589ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11780bb-6c84-412b-ada5-7e4bbd90f70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c913c32f-ce29-4168-a981-79d51267c663",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84702572-da3c-420c-b040-12ab73ba0c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df64ce91-fc2a-4b76-b146-ae4889629977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0e7a03-d4d2-4005-880c-8c12c91e90e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0611e905-5451-430e-8888-b16a62ef6365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee76c745-44ca-48e9-a558-b5a5a84b9ccb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5348a492-0bc3-47b7-86f0-4d79c12d1ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89367a6a-be64-4a66-bb69-6f55cdce6911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758e329-95c7-4e56-bf76-9f4a03095aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbbc7b8-6217-4226-bff8-233f2137f750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c87c41-a485-496f-bccf-1920b7312157",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2562c315-7bc7-415a-8477-e3be7574c565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a922986-a840-454a-bc83-af413103821d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17358e09-3d28-40c4-9b3c-efdf3b7c9f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60e3a65a-c394-40db-ad72-d4c3d79543fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054563dc-8197-475a-a9bc-8120e8274e45",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d3dd1-5d82-47c0-9596-8ac8e0753fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f11934-4a70-4270-b93b-d4730adf5de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b821809b-272f-420c-988d-6e41bac66297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d0c89a-494c-4992-8d10-aa8f3954767c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118416ca-f545-47e1-910d-d253ff9bfd8f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bc5428-101d-4666-bc3f-b87735ea64f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6376df95-2e87-4ee8-8440-a0e70eeba0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8b9a3a-3f74-4829-8d44-674ba31dd01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b06778f9-d4f0-4c26-a59b-659a037a9320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e355cdb0-26fc-41bf-aae0-aa9963d76094",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406c7e6d-e4d1-4503-b686-2ca7d7a521fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79c221f-fc54-41c3-9f31-5e153416a360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63340578-bde2-4065-92c4-ad26d69b71c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8de170-29f7-4ba0-97ba-d6629056efe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5711f166-7b22-4c9b-b22c-e60424813239",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162e21cb-decf-4f70-999f-e28e1bcc918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edf9bbf-8bde-4485-8af5-08f7a2452fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b081681-4f2c-4e77-8df5-9154e879bb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8593ef7f-452c-4f86-8189-61edf286c461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bf5d9b-50d2-487a-8445-513a372dbc85",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368b0a59-8fc4-452a-982e-a4c03e757df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2968663-1077-455e-a824-232250640357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76909497-5e08-4f40-b2f8-56113cde31c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ab7d94-0bc4-4d95-a51d-d2829ba0cb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b072c47b-9a92-4838-8159-63cd0d5aad86",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd2c58c-11a8-4295-a962-82d6c80e4583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed79003a-f42a-4170-b586-51a16d990230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e0e773-366e-44b0-8c2f-53f664e2d420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b36536-c264-46c0-a47e-6cbc81a78e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147bf2c6-3442-41ae-8bb5-9bb3dd13a1cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f9f29b-d7c0-4d3f-b67b-0664f81175bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5c17c9-2a5b-41ab-8aa4-60b1138a9b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20902bc1-7ad0-4cd4-b886-8fa85f0c1e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d124edc6-e46b-45d9-9c6a-03a1acada1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed785e1e-9d4a-4388-8470-3eb69ebc9f14",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6717b4-d5f6-4a84-8b7b-5b5565956048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c4ded9-4cf9-4019-a9d4-3ffd868e55cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d47112a-6c4b-446b-bcbd-872c06593cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff0e207-40df-40be-a22d-736154c9b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63cad42-012c-450a-a647-6550dfe77d86",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdaab26-7c6b-46f5-be1f-62848a76c463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b409175-1009-4336-adfe-a4e803b32b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ae79d4-fb1a-42f2-ab7f-230d2be10c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef119e85-3575-4ef7-9ca5-1da0812b6f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e43038-6f1f-4a0e-ad40-5125f4456931",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e871e09-73ce-4a15-8e9d-6e2bdb438551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fabb43-a2f6-4613-a2e1-f051abc6684e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc0a97b-7a53-46d0-bc28-394d5ce51446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c663c4-d911-4556-8dc0-daa40d684ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be3d1c4-f7f1-4735-8ecc-a72a1ce22c43",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6982a9-aa0c-4926-bbb6-72a59b589f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e61db8d-9df9-4a9b-baa0-3d44f22b03fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca5fc4d-cdf5-4195-a9cf-1b33ef05724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9cbc8a-ee74-4a2e-97e6-152560733551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa42c97-d0df-4a24-aa8b-2e6dd18505c3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2402fdc4-c951-4330-852a-e27e277119a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a49b6f-f5dc-444c-803c-e774f41dfef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24736cc3-0db9-4835-87da-b610b13b3cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f95ea99-7fb8-4153-8d38-e65916c83233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37950326-9f8b-4a06-87cc-d1bc22f57fe7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ce2c53-33e9-4d2a-9c4b-454d0a3ebd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed4ccf1-1161-4238-963d-d3d1f663bafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf043f8b-0d21-40b7-8f12-d9c400d5ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3735a900-8052-4594-9487-759c1826b49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f3d5c-0996-46df-81f9-c43fd8c8e30f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586b7c83-20ce-43cd-8b98-c0f3f30b6f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be458d49-f422-4f50-b661-658310085c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f096ae4-4f4e-48f5-9506-966fa2ca450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70282ae3-25a0-40c5-9442-a6ca0e4b14c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f368e103-db78-44b1-aa01-db05bdfda052",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32675090-e081-4cc7-a767-9fcc09b36fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5982d538-0d73-4b1e-851c-e56c1db117ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206f593f-860c-4885-a9db-31e1902eb512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1d99a6-c325-4c65-acf1-88b3885baf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef404bc-3f59-4c64-9f0e-3974427b4fe3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7745476-5889-43ea-9e80-70d88dd5f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e483ea0f-8a27-4587-9b43-daa2679ddf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c0b61d-ff36-4bf4-a3ff-ac522360b079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c53bd78-c9ce-4fb6-a05d-ccc65cdf7b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbba3d7-5146-4dfb-bd26-437c19ab85e6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b948393-4e14-4d56-9487-2e3380cb6444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd6fd7a-705f-40a7-9c99-daa5ce0ee71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68035f8-33d5-440d-b9f7-63228e6d9380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "926c9e62-84ff-482d-84a9-95c2781ca4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb65474-3f86-47dd-a530-db67ff8c6e30",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac27f99d-0711-4006-a140-434d7fd2e8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca53cfe1-1220-45a2-838e-7d91324e9e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85107c3-bd9c-4149-8bbf-ccf9bb61db75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0ded49-aad2-4673-b463-ecb06486a7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1741bc-c227-4e8f-adea-a31e305469d3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41c41b-0d98-457a-b011-4223f87f074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce82eff-ad61-4824-8d28-aab63ad8b006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ea9bd7-fc35-489b-a6f7-d357d3f8c452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd37422a-9cfb-4693-9c09-e1c5009520a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a7c8ea-1535-4aff-9ddf-517500902e42",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2629165e-cba8-4941-9efe-0834927b49a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "424f6650-1ca1-48d4-be08-5a0e91d42bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9c16ed-63c6-4717-9d24-1010c7030120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8457375-cc75-462d-95ac-ab9450a8f50d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6bab221-0442-4d1b-8211-5e366678d45b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9883a33f-189a-437c-8f47-48c28e070a46",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7400cf-3c45-400e-8b67-7eee845b029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd0a1b95-544a-4a77-93ec-66ee937879f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeb9908-40b8-4329-a091-3e0253004bcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fd6db46-6692-47d7-9fa8-2908c49a3fce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49ed69d4-7e82-4665-b9a4-792f1744bb1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ff88503-44f8-4e20-b7b2-452e8bccddf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed40082b-3845-4009-a9b5-6e21b43f060a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b8f3968-b098-4285-becd-8e6c1360c08e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e230f120-2a5c-4a10-80cd-db6305bbf47b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd250c27-282f-4fb3-9905-593e15d694f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3717a2a6-3e50-45ae-ace4-9f689c833080",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b20c7f05-1b5c-4575-b6f6-22a7e58b3778"
                }
              }
            ]
          },
          {
            "id": "cdcecf0c-f638-4a8b-8b8f-e65cdd859818",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92ed2a66-55ab-48e8-a6ee-20696d24df27",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b558dd68-cbe3-4e73-9b65-e74008238379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ace26d00-00d2-4364-ae33-c600011eac2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e9c8136-c654-4ab5-b155-81cc931cb761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57499be0-bbf4-402d-b4b8-5f8e1ffd64a8"
                    }
                  }
                ]
              },
              {
                "id": "907ef0cf-10e6-4f2d-8965-97e7baea3ff3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98414e93-c635-42ed-bf99-8f5f688abacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37cadd9b-f1fb-47b3-bb2c-9b9295500bf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b36dfa8-95e2-4fd5-aa66-e367459763dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdfb3958-a60f-448f-ad4b-0f4258c32e46"
                    }
                  }
                ]
              },
              {
                "id": "d2da24f4-2848-4884-8eee-5b348895afdb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aac28e5-9fc0-459e-a79e-94dbd3d1b4c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "584c48ba-ad0d-41c8-a37f-3fddc98f65e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b29389e-f9f2-4f40-ba65-3b8445b81413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc3da225-921c-436c-8962-db90ac2c0940"
                    }
                  }
                ]
              },
              {
                "id": "207d94d7-570b-4d92-82a1-d40cf774ef9a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecdee4d0-c253-4322-8762-07df2882dcb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9383fb8-37d2-422b-a405-077611f32971"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67337081-9e34-418b-84f4-d3ded33742be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "97c185ef-f84b-4589-9c46-788f26d5c0a9"
                    }
                  }
                ]
              },
              {
                "id": "9294a434-d10e-41b3-a51f-b40f2ac1c5e5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ab23b13-a31c-4e0c-bc51-e525ba96c08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e424b8c-a739-4f73-ba1b-30787109664b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4c32a15-5d2c-4597-b9a1-1f6a31559cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "22b1690c-094a-4ed7-94c2-792bbc1a6013"
                    }
                  }
                ]
              },
              {
                "id": "c0124a6b-fa74-44cb-b008-1ac86b48a86f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7f6c110-9296-496b-bf0d-3babd99c47e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4f38d3b-e549-4a3b-8324-ebe00050848f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fae68752-6059-47b4-9d58-83ad240c1a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "744b8427-e9e9-47f6-8572-37cb450da978"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e80f9c28-6329-437e-8115-8e5c22e77ae7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f2ee365-f583-4bf5-9146-1110c9d01323"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00dcabff-393d-41b7-aa06-abc1e9a91d48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd3f18a2-f15a-4a5f-b8cd-89f09ab4a4e0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b44d135-235e-4988-a1f8-54623501f0ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3c347c6a-18f4-4cd2-b346-ca27e027969b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37e250e2-b526-462c-803f-6d7b2b5bf645",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ae0f622-2111-466e-a0ba-31ed69e71005"
            }
          }
        ]
      },
      {
        "id": "0c9654fc-fdbb-4a2b-a4ac-345d45630253",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "00651d34-aee4-407a-b3d4-f045dc888843",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80ed39e9-f67d-4350-9519-cf2d8c007dcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dd90acb-fc75-4447-ba35-a57581e545e2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c36785a-f66a-42f7-b49f-4a04801a6251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4952d688-8e79-4865-a5b8-840d4f0c9a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065e06f4-6bec-4f65-ae58-fbbf98bb9085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c40c8c11-1ec1-4110-849d-88c48c105542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5388f29a-96c2-4e24-a793-808ac907ce25",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cae2e0-12f0-4997-8334-9b123c635f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472b46de-ad33-4542-beb0-de562d94f8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e3fd1-9ffd-4af0-9801-14843517baf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe7d9de-da56-4b67-a809-c26248d45da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24271d0-83b5-4dac-88b1-00ba1fa018a2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00689dc1-df94-40c5-b92b-257145cad553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda62277-77e1-4932-ac06-3f3ab4fc85de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6b831-7a3b-46e4-941a-d2c15c03941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b924c3b-3dfb-4ff3-8094-be7d05e131e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57855edb-29ee-4b81-afc2-328001836291",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e62de0-958f-4f32-a48e-610c40962097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f368a8-3337-4dcf-b95b-267447a9855d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f15ca-a661-4415-afa4-5227bc6603d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d0e4d8-a068-4558-9f9b-bb1c0fa56bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bf1fcb-4a7c-4606-8598-64238c570758",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879ec0c9-ca0c-4c5c-a8f0-466891919e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be241596-58fc-45aa-8512-2ee6649ccc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30edbd61-7dc6-4ac0-b676-86c55465f03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f84be1-f97d-4cfd-98d5-90487c9cbb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80d5a02-08c1-424e-be55-8e988ba57edc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2376f1f-7550-4816-8e6a-c292f5daa930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc15169-041d-4982-8527-cef48731120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17d63d2-90df-47e3-a0e1-e0739121aa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84b8e6bd-cdde-4e23-8cce-e81517e4decf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2a979f-01a7-4abb-9ef1-04161fffb5ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9bf3e7-fc00-4cdc-a077-15f6e890e13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dada3d1b-b136-418b-8f38-ae6e003c7874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fddce0-20f0-4c5b-b9a1-8ed8280f2d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "22eb4462-f824-4c47-86ba-2871c29356f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff6f99c-3ef9-4e57-b5f5-4de66558aaa4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3417d544-be99-4f6e-86cf-a4ddbdb6b70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acee7f85-ea93-4066-8ff3-592fff6e1889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78ca418-2e4c-4c56-97da-33abbdb5cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad79f436-e44e-4c30-a906-2c647b4e87d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c0ec68-fb1f-44c5-ad71-23bc72a3ba04",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0817ec8b-cc8d-4f2a-b5fc-3fd16efac8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf04a2ed-19f4-48c7-907e-88998fb4cbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eff0e0-3ec9-4eb8-b984-8c0ab214220c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdeab9b-6fca-4988-af1d-5d325f11974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7022d5-3e1c-47a6-929e-ca7e5d542d44",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c62b52-74a4-433a-87b9-9d125b74515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef78639-5fbf-4f98-ac20-13f6352d1d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146b3072-d682-452b-9d1d-b0fb02f18417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f206d6e9-6ef1-424c-8a29-5b74c716e9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a009b0-1802-4723-96ce-5749853bd2d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ad643-85d2-4cd1-9bde-f850b69c4a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825e0207-8ebc-4c8f-abe5-b9a378b175d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163ee0dc-56da-4888-afb7-2a71ad0c72f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb85b9e-bc52-4b07-904e-7b9af4e62a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3613af4a-7bd6-46a4-b73f-9b660308b0a0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd0213-c034-4914-bd5d-94ed99878e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d95e3ba-5de1-4f66-837d-9dea3c85ebbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cf2e8d-d824-412e-89ae-d7e16b64849b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5ae7ff-d42e-4a7e-addc-9c793f0b2f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01621fb6-38ec-423d-a58f-2eadf1e1604b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943739ab-93d4-433a-8a1b-15e9cc9346ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4eb45c-d624-4ba8-b709-a21e2ce73c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f82396-a82b-42f1-835f-789d39efdc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8377b94-43fb-43ad-9943-b2ab4b4985fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2093235-9d9f-41e5-8669-0e86eb6b295e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3efc1c5-ffef-4173-bbdb-4f4ed17622bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a770b5a6-ef1c-4b92-a897-b3cc74f38ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c7af46-2554-493e-a6d4-6d1a95efa6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d400206-af40-453b-85b3-2d322ade6e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ddeca7-644b-4cb8-9ae6-2ade071786e8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267488c9-e29a-4409-b3c8-9011fac1caae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14ceab1-5790-4d7f-b97a-2519cbdf2d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f5f206-59dc-49d9-a866-fa3cb4c95c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa94d972-96c6-4cd1-b1c4-5f6fe02b7ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2026e82-ec0c-4966-9d0f-16ba27466bfa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e17d09-0555-494b-8d85-2954dd4b4a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77f94f2-8ce9-41ae-9b03-e7c753401142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba28b6e6-0fdd-4af0-a488-d29e7fd96e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9483937b-5a3a-4013-8aaf-c2af9977cbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0622d30-f46d-498a-9524-2a0ad1c43f94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1eb925-360d-4f26-b63e-4ced5412696f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef60eff-7ccd-42a8-b5df-c55531f2d9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f341f1cb-9d7d-481b-8793-018d998beb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac56ef1-6132-4213-b2f2-79b4e66ce2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083bff27-bf50-47a0-8adc-5c9413743156",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c53d95-c018-4006-89c9-9725bbc85f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e2912a-daaa-485c-8885-8396631b5c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a1164e-0a37-49c4-a8c8-06002a38a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c4a8ba-2dbc-4281-837a-3b00d426923c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43f9e5a-4eb6-4969-8739-6899bdff8e45",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30adadd2-11d7-4857-812a-24fcc18e1aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eafca3b-ae4b-428e-871b-33e5f9abd75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f6acc8-59df-4e94-ba0e-1d1b1760ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f00db8-b036-47da-a474-b80ef8bf34be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b4f32-94b0-4c44-b696-0e57b48e9de2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bd6f37-d7b7-4582-a6ca-b2235f688578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabba9a6-9515-4605-9c1f-e9d2aa4754f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3197defa-0831-4b1d-8c69-5e71af108894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f001351e-b9a1-4510-98ef-0a56a7563a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578f610e-57df-4f7a-a6c8-aacd92582896",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfd64ef-6e0b-424b-9a24-b76412edd4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4001859-394a-41a7-a4df-593324b9bd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43ab1a8-b2a5-4d46-8aca-05d0e71e1ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85faf221-d7b8-4686-a4ba-4cb66b61dd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14992995-b07e-4fed-966b-64ba8d1e2636",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7a778f-ef43-4ab5-b64e-32ce96db2280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac4d228-ef78-456d-8e91-b4a0134e3926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125840a-2857-4532-8384-ba9d35c197c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde73635-6044-4297-8559-ef3fd4389670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb7b1fb-dfd0-45f0-8d39-432f41839f8d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017738dd-ae75-48df-9883-4dc5832b1c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d7b9d7-a6db-4faa-90b9-c213728289a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abba1fa-3f7b-4a3e-b255-7cad2bbb7cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf2c5ca-c52a-48c9-a0c3-c8b44f43330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80093382-a828-4357-b256-900d8947b891",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31abf7c7-094a-4277-8aad-12d913f57446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdf9c4b-be54-4578-a659-4f54a8a385a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c173b99b-d6cf-4d7e-bae4-89dc353f2451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbaef0be-8782-4191-82a3-feb90bf4cf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a3e5c3-9aa9-4ae6-8541-2249d7d9d1e8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0717b7-46cb-45ca-a26c-e52811f304ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696a16f7-9fc0-4322-973c-5b749de33336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae06856-e3e7-45e9-a615-b4d2c7311690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1299022d-9672-4f6d-a476-a32620eee6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff951dd-1509-44b5-b457-f7404887bc33",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2ba865-c3b6-4d2c-9fff-382a4ddfbce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8daeac29-9215-416c-ab79-0628fb5eebb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16535b88-802f-4046-80d4-19f85aee0d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4898242b-f531-400f-95a1-86f8b325574b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755acbab-d608-4785-b71f-04ad6849d9ce",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54374e-c116-457e-9c31-a4e5b849bd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55488b6c-f84f-4d51-93d1-8e2207ed753c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e77a44-076c-49de-993d-80d919da3e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b81c65f-6483-463f-9450-253a8ae37c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3920c4b6-c093-490e-9574-798969b4def2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1433484-90ed-4d18-8dca-b09a5614c657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c0e708-61e9-48df-b2cc-b85084568d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ec67af-85aa-42d4-aecd-7e855288aa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ba3539-57fb-4575-9804-b2f6dd00910c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ac7192-091b-48b5-8009-d9dbb5199e33",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01ceeb6-50d8-4ea8-b179-f6b328aca5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65ca44b-c9a4-4070-b674-199ee5f75264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27e559-6c42-4c3d-a8c1-6b4b5742edd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fd6cdb-6fd4-42f8-a631-40afba6a0e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5a4907-8934-458e-aafc-fa020702256e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554ac389-a124-44bd-83d5-c924e74e5b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f759cc76-33d2-4899-852d-28bd41205fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b43d56-a379-4dd0-b970-9adfbbc76299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d824e0-4e8b-4815-9a70-1bf58e789993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f890a1-029c-4779-84be-3c119405d09d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac687340-f6bf-4c11-945d-77ceb429adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0445727-1686-44a3-a059-bae7f77b6240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0d8f11-16dc-41c2-abe5-01fc5f288913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0555fb4-2557-4468-99ec-77f06eaa060e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3213a6-61fe-4c74-8264-b8a71aa4a022",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314779e4-e22b-4d85-bd32-ba23f2023d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07ef9c1-237c-406f-a18e-1fbdd0ae6ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9644cf1-4401-491b-b4f1-c789768eed64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc528bd-342d-4060-9f95-44eb2284e49f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3eab36fe-3dd3-4057-a030-d0804650d64b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c240586-a8db-4ddb-9232-5d516553d752",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b92f69-3e47-4e00-a574-c1b65852c067",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ae674320-24a6-4479-8bd3-1adc86dcb399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ae3732-0460-4bc1-b48e-23c90394433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5132b266-e5f6-41db-a8ee-32aa65fbc753"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a2ba91b-defc-4257-b9b3-ba29ce667919",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6193365-257d-484d-84cc-bf6c393395c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f8c8c7d-28af-4d53-8643-2d3b403f1637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcb87870-33e4-4f53-848d-3b129d67f59f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56c38308-28ef-4f06-b1d6-0836a2257f6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06950690-d565-42ad-9b49-552aab51f39e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6b9d75e-05d4-4e72-b442-c41e46fcd111",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af71376d-505f-4a5c-ac5f-8c093e1dc4a2"
            }
          }
        ]
      },
      {
        "id": "449e4aaa-267d-4e72-9790-c52d341f196b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ffd2e147-223b-4635-864d-d5f93d79889f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "179d3069-7a8a-4de8-aa79-b9d28539d0ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0596c0a3-3f97-439d-9305-a0d92f7a6b2c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337f63f3-23cf-4c06-b51b-6869d79d0198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e0c893-17c6-4769-aa24-8c803e49552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3eed77-9ddf-4068-a591-cba3ec518c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7527b8bf-127e-4bb5-900c-4b1fbf5b9f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cd88ad-f38d-47cf-8172-ea05f04a90e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9ec240-de8d-4640-a9e2-42adfad54043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e41efc-144d-4d73-bbd5-c9d10d53d78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4811b740-7f59-4002-99f9-e8e27898e82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be978c7-0424-47f5-969a-b8c9276058e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0749a4c-6b44-49fe-8b79-52b1b489cbc2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e730e530-73cf-4168-a0a0-770b675fd82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985269bf-41bd-4008-b415-b23933a3a3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2ab2ee-e545-4169-9673-8c11b5e38014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65dd31c-b7ad-4938-971c-fcfddec2b5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77407af9-0f36-414d-93e9-56431b6657bf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c04aba-7985-44b3-a136-27d9f696f19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47727c0d-3da2-40da-b04b-76512cadccd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b876a2a0-1525-4336-a7e2-c16f802ed28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2938d4f3-798b-4032-9a11-38a10f8682cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbca9f7-f717-4e17-ad43-dcb51893479a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf059d-b537-4a11-b67e-6d69835283a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb1296c-2c11-466a-a1dc-c84c355e365d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6acb493-7446-4b7f-812a-e33a750595b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e998d4dd-f77c-4aed-82ba-75c6b52cb3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcfa118-c796-480f-b190-f0fa3f08b519",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b788b9e8-8775-43cb-a2d7-5199d7d4e7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46e2c70-35c0-44f5-8ec1-20a37a2f4d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b21c203-62d5-486e-9969-2a5a897d78ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5672fe-e6fc-413c-9c47-6c993735c35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630062e7-ce73-47b7-aebc-661d8af17e98",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef06a70d-4a04-4941-bc3e-8b0f814a3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8019b9-f6f6-4b02-bb18-0ee568a2fcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dd091a-097b-4ee1-be49-e07cdffd7a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "968dac22-d37b-416d-8a90-86d2293b774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da40cc1f-dab9-47d4-ad97-914024c11e66",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a59022f-e646-4a68-83fc-1802e0d6f8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8f477c-fc55-4b4b-b545-6629fbeff26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77886ec4-f8db-4dd8-ad8e-586532db43a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "620d1b75-8dd7-4fa0-876b-231821b40227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca504b43-649e-4cbe-9244-24ef22527b34",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7233e50d-f6dd-4cc4-b28c-135b005730fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1efc9a-e948-4dd1-a617-ac0797da66a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9b075b-66a4-4416-93b9-80cdde23f51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf5a823-48ed-40b4-a004-b6915d7cc409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae0131b-0f87-47ea-b9e3-c0113fae8b36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82a815e-e5e7-42bf-a20d-2092213b905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab26fbb1-3b57-4263-8e25-4bbcfdd36c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0593648-ea77-4414-8c55-42f8ff4d182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeeeb82-acc6-44b3-8e2f-e3d781d2bc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3ab925-02b5-4a68-873d-61578f1e1d86",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2cb41-8387-41d2-877d-5d9812c5c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85af50bf-4e52-4ec6-a31c-3fcfd3de4ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c0d97-f9d8-4bff-a398-eb86f0dadcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "53fab0f7-a812-456c-bab2-d5b6cba734f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65198df-72f6-48fa-b822-cc3d2135104d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc7d6a-9050-42f2-9e50-84f698c163ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cf27a8-b9a0-4af4-afc5-3b7f64f0ea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8a393d-de08-4bf6-94ac-d6417e6cbc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab43684-aaab-4c7a-9a3a-9bff0a9d0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7b23ce-1b89-49a3-8016-c43f40d52177",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e68cafc-f115-42fc-a205-9dc64121414f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c9455c-4622-40db-b4ab-8f1d8194871a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5bc8b5-ad59-458f-9a30-3c1043b26ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c13bbc8-cbaf-4584-85af-342232be00da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d932e08c-4dee-4229-8935-bb4df33ad9ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfe017b-6d12-4b40-a7ee-cde7b1b5caa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e934a1-4099-4f26-9c34-c3d666d18b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5911a99-a140-4f90-975b-e5e7d29e2f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d592febf-14ac-445c-8b68-a411db780902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6974a76d-9b1d-4acb-9a75-e2e7a64f07fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414ca167-57cb-4105-9420-7e28d8e3d50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716b22c5-9bb6-4c54-8213-71f98751f0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875903dc-3300-43a0-8e7b-6c0704a5c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a2a543-4301-472a-90eb-d20be8225481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54a8e93-5699-4760-9b68-b64dcc0e249d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1efa1c-cde1-4682-80c3-ad15c3087654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77dc5fba-06c6-427d-97a1-2b62c862e2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a9b9a7-5f67-4e54-b4a1-5036ec04cd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2742bd-4b97-40f7-b531-51a4c5f57f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27ecffb-cdee-4a17-a6d8-eb3835ccd556",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cc373b-7d14-41f6-98cb-f648a711aadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d1e3d6-ab81-44c7-b393-74c0f2b44b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f450cec-87a0-4b5c-89d6-104ddefb83c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8f3fcb-7694-4036-988b-a1cdd69bcbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f46c38-800d-42ec-b4e3-a2675ba7a116",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f091c543-efb4-458b-abb9-0b5bea7138f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6543a929-8a53-4dcd-b845-3230823acba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c058dde3-a4c9-4370-9b40-917657eb3022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9ca100-210b-433d-b287-4f0ac48968e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32b7c11-aed9-42c1-b322-ad237c82ce75",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bde928b-b449-497e-b1b2-4dfd4ec86c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd40a0ae-5e0d-4e91-bc86-f9f99d910abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db8e729-ebb2-441a-9225-0c8b7a39e554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6367a45a-d06a-4873-8b6e-808bbeb3079e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ffb557-68cb-4b55-b1a1-673d3c036ff8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe07b4-ff88-43f9-ba2d-c785f469783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b80685-4820-4e92-bafc-8e0ff648aa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dcf2a3-93f1-415e-b8b0-ced1061d9b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cef990-b020-482e-b869-b97e17edd45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a56770-680d-4ccc-8978-722ada8cfba5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8db9fd-1add-4a76-b263-2bd30c1e4c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76b3379-44d7-4863-bcbf-678e2c44b302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930c7813-8410-49fc-aeae-ff2ec015ceda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02bb6187-0cc4-4bbf-aabf-47905dec4993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6f43c4-654a-49c3-88f7-cd50261a76ce",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca79c42-397d-492e-b156-7a0431dc86f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d4fa76-e3b1-4f17-a0a2-4611e359d423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b28dd6f-2e66-431b-9452-247b0a1e326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5fa540-50b8-4135-81fe-e83f0bea7c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab69289-2339-4490-9745-06f58f8a4607",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d22f0b0-a0e7-43b8-b7ca-614f74a3790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81499632-49cc-47da-8486-e20a46eacc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399b5709-b21a-4cd4-97f1-961cac6a52ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc7b5a9-2338-4000-8de4-ec4738bd13d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219958ac-5559-460a-8656-5f13849e6a23",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8058677b-114f-4905-b69f-ab63e53ed1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e096f2d-d6af-4363-ae37-37abbd0e18a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3725e719-182d-4d7c-89a7-b5ad023ee3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f4fa49-5afb-400a-a3ed-d9be48ff7623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f360c5-30b9-4e2e-9471-823bf730edf7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f41ca51-7bb6-4d87-9736-7f67d12281b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8817df71-1b64-4edf-aa61-1598068d2717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f671de2c-9f96-4f6f-943b-57a0ba10075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf15f004-5000-491a-8f42-a3df01c2a07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f03992-bd5e-4b4c-8c93-8b9294a7c044",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e2ddc8-06c7-434a-a58c-57f5e575ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fecf23e-a275-41c0-b280-22b3b0018b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a22aa9-21b4-4912-96a2-36e32e343c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d9a116-509e-41a5-aa48-807f4e4ed24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df77f75e-e4bf-4227-856d-71d7d4442c81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e4ea8a-679b-492e-a30d-d3b0629c161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14d2856-8626-4599-bd06-6df7f371efb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f588018b-bf6d-4750-b887-869eb31bff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da3cb89-6d01-4050-9960-a6597bed7e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927d1ead-cf9a-44c8-af6a-179c2c0e1fd6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637e867a-c2b8-49b9-9472-224e9bd32f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c04a6fa-4413-4283-aa00-2324edd2f8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e22c93-d5e6-4cf6-8dca-7cb5b21f263c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00462f80-a68d-469f-af45-9e38745bafc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15b8f0a-9548-4fd0-9e09-9f651ed3dfca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f5595a-478f-4494-88c5-5a917d8ee010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda887aa-54f9-4cad-99bd-74f770ef5cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81305ca5-3952-4275-b0a8-041cbc9e4748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1d1932-5a73-46e8-a4e9-8ba4878992b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9f48de-48e2-440f-b939-0fad37166041",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f124a6fa-0f57-41b6-94cd-7828d48e9e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9295918-dfc8-4e85-88f5-66e7a67816af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb05cbc-b642-42c2-9efc-1bfe62a2a0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "881c8eb9-ff77-4756-96f6-59f643574642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e1fda3-19f8-4e6c-8040-420abf71db11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0090e1-10f5-4c59-b0ea-7d52a0f4f77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d871c146-5d03-4876-9c88-7c6b72e71fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157e9a13-9450-403b-af82-b91432bb6c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a14f69-1814-4cf4-a86c-1a0f1b85ba72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f2bfe8-b4c2-4c65-a9a5-855b9f3b62bc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b105c-fe64-4b20-810f-770b5323adab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152e26fa-a6a5-4333-84b0-09a6e17f58e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a24720f-4eb9-4ecb-802a-7903ef5e1239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03cc8e6d-93da-4766-8001-2251fdd97bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ab4e96-4301-4458-ae88-dc583e1dbfe1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b45439-7c20-4ddc-9349-7018f6808b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10756643-1935-49f0-a20b-85beffa25115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a867c7-4cb0-49e5-b357-eff58f708e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda03073-88ea-4209-aacd-11862342ebe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf71331-055d-4b61-a92c-aec5539dc497",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4a9ec3-ad7e-4a02-b3e3-33d8f257910b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf8c523-49c7-4084-a224-2e35090f1873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7b4cee-7369-4642-8008-872360dfba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a805124-acb2-4506-9b2a-a4b5f5c2414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c2c3e9-8525-42db-af36-508d8b81ac14",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b0e143-9fb7-473d-a6ef-b47e9c26eeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a850c576-d91e-4a3f-b087-0864efc5b5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23de56a-fabf-469d-8836-68c3c08c1430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8be3cc-cf9e-4d6c-91e3-f7dd5416b8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d254ecc6-9257-47b2-b6cf-144bf5ee413a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c553d6-dbcb-4613-867a-8391de21eba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa43509-f096-4de9-8fb1-ea210e990433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc74e92-7822-419f-815f-72562f62828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e77967-2871-4e61-96a3-2f1447d24ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c09b949-18be-478a-a849-b99162fe7358",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89866d8-6b98-4262-97ef-45da7f02c7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b42c4db-eb8a-4bf6-9f07-4e97baa3c170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efcca8f-2db1-40c3-bdd8-0405bd6404f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9069bd6a-a994-47b6-8b30-f998b4a83292"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fb3bc8b-ebc1-4e4d-af13-ee1f44251dc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07640a9d-30ff-4b8e-93dd-46b924cd9585",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e590f16-97e1-4f6d-91ff-be071f5fd9b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "130f25bc-233c-4735-9b8e-865e4bfb846c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e2eef-3afd-4462-ba1e-eb39138c8f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29a49d20-c560-4f0d-a879-33fa6aff3ce4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f003ee6-84df-42cd-9791-8f180ab62bb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcb339de-2c13-4c35-8b37-18033dae65ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2be370c-5c1a-4979-80d4-6fa33b0c10e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c7f6a11-103b-4575-b125-e251119379cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7cadc66-58b2-40d6-a846-a6d14fa61e41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9acc4b84-82fd-4a63-8a42-82b1ae956f8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4dbb321-e0b4-40b6-85b0-d43322d0700b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b44b07d9-a178-4c77-83bd-4c772d402a58"
            }
          }
        ]
      },
      {
        "id": "6b48919f-eb7d-4a1d-8ace-da1e0dc2c01b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cfa6f9b1-a09f-4347-a6d9-13f1ed65ea4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3e318be-a252-48c8-a1c8-524390d8abdb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7de10bd-8bd9-4364-8659-11167632bb22",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b99bd6-7230-46d2-a223-9ba8dad78377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e6d463-5de5-4c33-b91e-7302fbcd5385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07aa863-f909-47b6-b14a-16e529d1e371",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f15e34b-6675-4660-b04c-2609076b661b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dd07da-6a1b-458c-abb4-03765881015d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38e5915-187e-4987-a804-70bd9b93281f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4fd699-bcc4-4d31-b295-31360c6080f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a78c33-4a45-4456-9d53-df92eeb1c9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9a6b13-6a90-4791-83e4-e515c9e33e93",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191c96c3-2559-4c23-a2e3-feba49f2545a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cbf708-d7e9-47ba-8a85-92de7ced4426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34049c08-11d3-4441-a15f-753715e70d4e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504fc5aa-1a18-4c0f-a466-d30773b0fa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067dc363-8168-4143-b344-326f169b338f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1d5a98-b6c8-4057-a67c-a9a36e7de8ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f27384-0a86-477c-93fa-f6137e1385f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73d5c3b-5fe6-4d9f-936c-4816c95d4ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667402d4-6a81-41b7-a376-07a369a92a6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bb918e-0ee5-4ee1-92c9-6a33a00c9463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c0b987-5989-4604-a869-65d761b378d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f39e8c-208d-49b5-9e91-0948868630e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014055d0-11b3-4a15-afc2-1ba631fdaa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2558248-97bb-42f1-a8f0-e033c2a49465",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a0e16-3dc0-4802-99b7-1ca30ecff551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ea25e0-5cda-4fe4-8a85-555d2ebfe925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3bad05-5d59-4e71-872d-48a01e9266fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48037cc-4657-4e48-bd95-a7581c819c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31337829-f904-4112-8178-88f4dca73fc8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763679a8-f7f2-4f1a-ac6a-d4990faffff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4d2407-44fb-47a4-a869-3dd190b69e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663717fa-d0a3-4b84-ae44-81054fec446e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dd7bc1-72b7-4464-8fa3-e122b84116ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87b6a30-ada1-4969-a883-cfe222ac3051",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3192c2ab-27b6-4e2c-8e36-468daa389514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c512a07a-5709-4960-a82e-e0452387bfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21160b99-b809-43bf-987e-38ac70666e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f41cee7-2597-4657-9b8a-8a03002b5d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e1ee95-a6e7-402a-a77b-6660c8a8ad19",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57e06d8-4b58-4ff6-b496-5086273f5c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e167e34a-fc49-405b-975e-dff9f6b9afb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e340c33-4d4f-40fc-aa4e-36c1d4e0153e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45cd2ecb-f112-4ed0-97de-7178d8398c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5019bda1-d75e-426f-98f3-27677e75daf9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53245295-0c41-4f3e-aa95-0a33e3486775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e86be4e-f93f-4f59-bcdc-d2fe97c28c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d193ba-c3e5-4179-9cec-6e624c634b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582a44cc-d97a-4350-bbb3-29aceb3231e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b908f2c7-4110-4296-9681-ec0b85a16891",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b957c0d0-cca4-4c76-8acc-6b57da621bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05519a56-78ad-4937-982a-d3dd59cb2590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234a5184-f7f3-4522-9357-c750c8c35d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b1626a-dbde-4a91-bc5c-c5f6a7e93334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc830de-547b-48e9-8342-74a6f9fecc41",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f60c988-337b-4f0b-b9fa-c6c87ec4d358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66694e2c-2e6b-4ed3-866a-1110c5d119eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b4edb2-8197-44ad-9b1e-94305bc19f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc1632a-af2a-4fb8-88aa-e0614504e382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc849076-97a5-4c2a-b889-cda941de3cd1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249332fb-a2a1-40eb-9873-b2447020ded4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9358275e-737a-4533-8395-a026245d5c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c069e49c-3d7f-478d-879a-d0ecdef35096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b4f7b7-88e6-4f40-be54-b28402c939eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c32d47b-ff73-4da5-ba68-7b44b5c5e889",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d2374a-b35e-491e-8816-502addbee1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c93ca9a-f92c-47a0-a011-1087c0a022da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac4b9e5-7f77-4ec2-9526-354acdc53477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf2df2-32de-4592-8dd6-bef3af6b18cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d7909f-e137-40fd-9f58-073fae5d92d2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb1bfc8-128e-45e7-9df5-01d879bca75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fede8d-f6c1-4d27-b4c9-7ac464cc49d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ef8522-67e8-4b29-b7fa-1e02031b0ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347de8de-9065-4c83-8aa4-980a69a8c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974cbf59-9f27-499b-aca6-3745c6e87d77",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb427d4d-39be-4c82-a729-45330538a461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431bd2b0-b2cf-4d05-ba2e-3052752b1a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88161612-d528-4667-a522-e6aab6a0169d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e052b135-32c0-47e2-9e71-a8e2cd56032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b78c91-9b99-4d3b-a66b-e959b98b645e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ac8ff6-bef0-4507-bfd5-b42c9f2dad63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793cd3bc-5448-4bae-9056-5be89250310e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d03d645-2028-4e61-a38a-11f291737eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34121d9c-ef88-4dea-9c06-3e298b54d6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce58e322-9e18-40ec-b121-c00bdd03f2d9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3594d5d-2a54-4871-95f9-6279ec90b5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10c3b42-d875-4e89-9419-f46bb1f475b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be7f32e-6937-4d7f-ae13-854837979aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b57ffd-5c43-498f-b1b8-7bc331273caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b74867-0583-4ce6-9a4e-222525ddcede",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d23860-c74d-4ebf-a8e9-1914d083537b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337c14e2-e2c6-476a-9e45-0165cb8c9a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1a720d-5320-4f3f-a12c-66647b0ad7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2545759-471b-48d8-bf6b-259caf5b7ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46470880-3f1c-410d-b876-aa910766c1cf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabad964-4f59-43f8-8930-cfc51c959f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9323406-3aa1-444c-a339-cf76b8844441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a90e0-ed2e-416d-8163-10a3eacb57fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381795e3-7998-4c0f-b859-08f07824c5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af62061d-5fd4-4396-a371-25c31e81b07a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4cad8b-5836-487b-ac96-a6249941ab65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc8d01f-7265-40ab-a5dc-3d882b1d7cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39045046-9709-40cb-9e36-e8e073c8e7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de108ca0-a221-4d45-bd5b-715ea56ef790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821ac4dc-06e7-41ee-8fd4-afe2184001f5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf077aef-0e66-469c-bd7e-cc05ead212d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170fc801-a2bf-49b4-a3b2-ee1539a9104c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c46452a-0520-42d7-8ce0-d4db94b61490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00a62ed-bf82-456e-bdef-4ba12f6dc497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d640c6-8efa-4429-be0b-4c4f952eb7ac",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3befb646-c251-47d5-95d5-d2b9d15e8f91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a8bdefc-6be6-4686-b048-ca4d8c984a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee8fc93-3717-491c-9305-ac7f87ff67a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dc3674-23c8-4b24-b046-6cb09267c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc11f399-7fb6-494f-b7f5-5d04342e4ead",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90843cb-f05e-49b3-bf3b-0df0401e733e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ee110d-8cbe-4ffb-867b-94b098f7c271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d8eb24-65cd-4a56-a38e-e812743a93e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272473b6-a2db-409a-b1f9-090d8a3c4175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2181756-651f-4793-b5ea-c9498733ce22",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3787c0-627a-45bf-b1a7-9b44fdc95738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc07a718-f557-405a-b82b-293d290f1e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595ff77a-a034-4c7e-a521-5158389bd8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed264ffa-58cb-48f5-b5c7-f7393ce07ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6ed1bd-bded-49b4-b295-4c42b960ae65",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849209f5-4e3f-4c5e-9efd-8c79dba581fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ec2080-5a53-4329-9f29-a133dc736729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad16efc-5337-4a5c-97d8-6c0b74622cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8ba0d7-592c-4617-bad5-dfed72d843f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4d8435-47f3-47b4-b545-10fcfdd40757",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac790de4-384d-410e-b3e5-7a3f9ab8a109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0444a3f7-d0d9-4015-99f4-25d3d9e32649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bed7df-6f3f-4ed2-b558-bec5e56808fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a98d41-fa59-434b-aa86-51a7dff5888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f47596-11f0-4aeb-9718-89d131390256",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4ac780-6d11-41d2-a252-da7bf306a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef0bd8b2-22bf-4429-82e6-26792c9d350e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b212e18c-33a5-4a3f-b97a-8c5a31b0bf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789947a9-4d61-404c-909b-b4b0fbed1838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c97713-cee5-43d5-86c6-f3b309b8edcf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8929815-3954-4c99-9ab9-5f125927aabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b824abe9-302c-4f1d-b1ef-2f06d258ef04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec23e2a-e0a5-4da3-a774-15d9eff7d6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b280cf-6eaf-4fda-b90c-4ff108352d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e0b99-ccbc-4b14-abab-c89e7b9389d6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874402b3-1ab7-4cfb-996d-51baf24a97c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14f2c532-c7de-4e3b-b568-40fbc0e58743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8b28f1-f077-491a-b3ba-5227643e4f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aada9bae-7a01-4ac3-a412-c877b6f2bfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f29465-81fc-410c-81fd-8546aa924fe8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80485d0d-c818-4ac9-b035-2fd0acf67713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8ebbd6-1fe0-4c98-8d4c-f3885667343f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e6222a-27b4-4d61-96a1-b5ad9eb5cf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6e4268-d5d4-4d74-97b6-1e622a98af52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beab6dfd-492e-4863-b480-07e0d7a143ff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766e5feb-2b1b-4c0e-9eb8-d1e1a428b448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c923f0-9a82-4ee0-ae7a-992c91076347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a0c41-e832-48c4-a042-70709887d968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b757765a-a794-4050-b2bd-595cac54a3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5320afa1-6514-4342-abd5-7565e350a91d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69862ffb-a8dd-4d1a-a830-fb86da6a81e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c091c1c0-1113-4544-aa0b-1cef982b6e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40d9579-932e-474d-96fe-ec569f80b991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956f1978-65af-42cc-add7-cf21522790bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bc2008-cb2f-4cfb-9830-a051868529e2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c50e09-8e9f-4837-a3d5-148512c451c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e401b6a2-c457-4470-a454-2b49fb7360d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7285ea-a629-41ae-94aa-853b234c448e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3824d6e3-e6a1-4b76-8596-38906f3a6189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c2ad45-9988-4cf1-8973-f75e069f91a9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33d643a-15c1-41d1-a144-d9ff199d90b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb841f49-5fb0-483e-b1db-12a5f03fee9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d753f5d-5a6f-419c-b920-a420a83616a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3609af8b-86d6-4af0-8c92-d4ca79dd491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a0c04d-b4df-4484-8993-f83d420c64a4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f13c96-cf94-4282-b5f3-1274a15c473b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1156414-6159-4f0c-b5c7-d54fa95ab5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce698a2c-d5da-4765-8296-2ca2a7414b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14c7ad5-923c-4d63-b120-9aa662a8121c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1292d7-9a39-454e-85b5-96378196f052",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b298381-117c-4e40-90ef-e160b50bfb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38f4881-0990-485d-a18a-2a1ae4135909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079377b7-2015-4f09-8aeb-d166791492e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9311f8-8981-4e38-9b7a-6924ce39c6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62667d6e-b82c-4b36-ae23-8830721d9bca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f67721-2f5c-44da-9365-b5c7d80f57d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f861fc-96f5-4faa-9d69-bfcc080cded5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beb5e2d-be02-4007-97a1-838688132162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385f00ee-cbef-49ba-a8da-c0dbe6b50aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a6750-ca14-4eb2-b58a-55d1ab21490e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d1b381-f46b-45d5-868e-04834ca04317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ea3c6e-3ca8-4eae-8b8e-64bc73a74e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cdb531-d730-4de9-a25f-31d16ae1cdad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9090d4a0-13d1-495d-a721-d2849ea4edd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b704feb-45ef-4636-9aa1-0e6006985a43",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374aa25e-3f88-4fad-9a7f-aa86478304ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5cf7e9-8c69-4f32-b4cf-3274f59dfd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81616715-56f2-4501-bbcd-0b6e3de35626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34de961-1945-4700-aa74-558960609b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9d47c6-5914-4b6c-b297-802ea63fe471",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d2e8a7-39a8-41d9-b9b2-efa613fcab42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64aca50-07c9-4669-973f-5325cdca5f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55440654-6ed3-4545-b1d2-78b31e3b231a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bda127-1e92-456c-8bfc-e64d93480969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfb45e1-81f0-4d1f-bf64-cb897c830601",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e04b684-b3db-49bc-82cc-f6e653bc3acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8050553-0526-4c75-a971-447e2428261f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3843d7fb-7627-4f6f-af76-fe2a4b812328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5071a7-d52a-4794-87c9-2393f0eb7acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51284844-000b-4de2-b4d1-916691f19496",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e5b137-b6f5-4ef9-85aa-bf712a034050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2502e02c-90d9-4590-a327-9cb950f2e4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf71613-00bc-4c30-bdca-553df2f6062a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0e1f73-1234-4c77-8bc1-26f259d2e1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018793d8-ed3b-46c5-90e1-486d82ed21d4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4edf731-3609-4ead-acd7-0eb1da2640d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1c9a5a-26e0-494c-bfb9-53b4f4c0f0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517cdfa0-5c37-4459-a342-421a43dafe43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d3c6c4-4d56-428e-8e17-cf426b68fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139bddbe-a35d-4c9a-8436-03fb63e6b7e9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58943bed-dd34-40c1-8cb2-4b072574ca7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2effb1-fc71-44d1-871d-5f4cad21fe84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e364ecf8-457c-47b2-afca-e6c70b37f068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac990325-6071-46b3-9d05-e71b0ca295f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d2e2fa-005e-430b-9af6-69d097bd9c4f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2231e1c1-d99e-4ae6-97af-9805ca37e88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11676fe9-2c4c-4d45-8bec-9a15597495cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4102967-2e5d-4a3f-9aed-4fc1567bb0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261bede9-a7c3-4511-bc47-a2d3ab509e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d323fb-cedf-4fab-a1f3-4a43dfd9b965",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aea111c-8c2f-46f0-9685-d4b6bfd64665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe06a5b7-45f0-491b-aa49-ef22b6472d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69001505-ef3d-4afc-8242-15869e5ac920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0b4bc3-249f-4368-b2d1-c9a8d7ff14e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d365b87b-3c9c-4359-88e5-930159240627",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff247697-c7c1-49f4-8b03-73c9ace76304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1619bd7-3add-4b19-9a4c-b04cbb97a0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75325de6-5dd9-418a-9234-21847d13bdf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df523e0-0c6a-4d45-9ea9-19c76f1b2d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a8c9ab-dcb7-4112-bc9b-c98330af1b4e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dea9167-3d7a-4c8f-bc49-37d7d375dba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ade3700-6508-42a5-b072-ffe3425c78cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b2514b-bc56-41e9-8520-060573353235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af3adfc-e06f-4beb-987d-2d22de27e6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9c70d4-3b8f-4f46-b8ef-ec522730cd5e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1da286-9b2c-4093-999e-e128d3f30a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acdf3c8-6270-458c-ae0f-b51fc46edbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d0e31-87af-411d-bd18-fc7a4edfb9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63af957-f2b6-4d05-8db3-6d31cce24781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299f5953-1e5a-477f-af5a-10e86749edfc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8111af3c-1a64-4123-983f-f22bee308346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8774365-72b3-4e01-9a4c-ba47e21c1220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9066b5-5d97-4ce7-9ac5-9f8cc30eb107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a979ee-0941-4178-9ba0-aeace6ce356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d16e72-8df0-4df4-a7a0-00ba03bc0b31",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca16783-16e5-4c37-8275-17f06ebf9695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5743b38-b3a9-4b7b-a943-ba39cfb4fe85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f1421d-716d-49c2-a781-6069527c0799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1886cf-c266-4187-992d-a609d3b45033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb20ab-1063-491b-9ca9-5ae2001ca795",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6728a099-6a40-4cd2-934e-bb7fd8a99393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2ed737-6df8-4e62-95dc-d5b298a9339a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d45543-9eb0-48ae-97f2-20fc534535da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de5d288-8207-48e5-a954-15f66ae89516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a4e0fb-6456-4481-ae4e-60ac5f1cd1db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e1bd93-8f67-43e8-b6f7-745534b16384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12d6d9f-9231-4256-aabc-2cf53848ec24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a4be8-4708-4947-b3cf-ea64d8c28bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bd1cfc-4f98-4fda-b9de-dae940f8823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265159da-3651-422a-ab52-8941d8fde327",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9814d8-efe5-496b-bf19-4900e944d03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedeb975-dbed-4595-8011-f8e56fe2c945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769917d6-6271-4784-a31b-aabbb5ec7ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43b03fa-8cc7-49ab-86a1-840581ba122e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b180876-23ef-4910-b494-3831be69005a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e243ec9-bf7d-4685-a0a4-e58807e90b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0de23c-ff57-4d1c-8776-416b0dbf25fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391dbb72-0092-4e85-ac2c-84a225a874c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6c6be3-1618-4a86-b428-c185dec2dd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fbcb9b-1774-4252-92fe-001276432a44",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422728d1-fce0-4580-b836-b247be34bfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb1ab13-75df-4730-885e-8c202cd13393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b06d9f2-5a15-450b-9a9b-a4b244ad4fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6865b658-4fc0-4b9c-8ea9-f1f9deaffd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eb8d49-44d8-4f40-a0d0-d0f4f12f7e40",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462ec247-6ed0-43fc-a7d1-f3d5211590bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee41ea32-74e0-4e8f-bfc0-34fd56a7bfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0edd62-06d3-48ec-a14f-c91adbc7c313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69268463-f20c-42bf-a17b-5012d4351cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8435395a-59ff-44ee-b71b-3f2add5eb99a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3db115d-184a-4884-8440-e49a1e6c9bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2155b817-9938-4c07-b935-fad16c91684f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c61f21-66c3-4ae2-91ca-6634f0833f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7273aa-cdaa-4641-b479-9e4d0a0acb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a4223-33f0-4113-8ec7-cb1aca1a10ba",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01405614-ea51-4d48-8275-cf950616f7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c802728-39ae-4b38-8ba7-3350b3a6dc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d428c48c-f0f8-4ba2-9d04-9cbdf7c3cbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0e86e3-fb62-4f2e-8412-8a6c68e529d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54725835-c1d3-44c7-ae03-594d33562d77",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1005918f-13b3-4cc5-942a-c1e2c7696c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2708975-aab8-449b-8b19-8f0e21861590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87a94f4-c901-4753-8d52-133997c62091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd4421d-ad1c-48d4-9c81-df78f703096d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a5cd1-282e-439a-b1be-2dd005e02b84",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65adbfe1-2c8e-4ee4-be44-0809acd1ca76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f675ccca-b15d-4415-89b9-694cf4b5e14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78595523-2b6c-4c37-aec4-c235e94ee44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7e54dc-0f1e-4fe1-9c04-d31434155ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57706395-7cbf-4af3-9719-158c0a6601be",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abd72df-1782-4ed0-9c4c-7a30b8aca1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7dc443-0e66-4dc1-8896-7322aed357f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd14d02-d58f-4def-91ca-b1eb8c038f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc877ee-2c82-428c-8060-c009549b8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106360ec-d55a-4a8b-9cdc-6b52215328d7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54b8786-c5fe-41a9-ba99-008608f5366c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc9cd15-dad0-43b0-8ada-e6dc2a7afb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ef2930-4125-42f9-9756-dfd2737f8374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4fb449-1193-4b0d-a226-953f731e7e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bc5d39-0fff-463a-9ed2-069ef3d24655",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370cf13a-b58c-4f58-b740-6a3f36272aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0760c0b-df1e-4b60-9f7b-ec61a6e122f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553eeb28-ff73-4a65-8d69-20d4549a72c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae0ce55-e7a5-402e-9122-3946773f6312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8add9ee5-a3bd-4811-9791-720bd4e978e8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d0cb84-2b50-4369-81ea-b2d94af4c1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da4e11b-6610-4be4-9695-53d5ad259f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55a5be9-bf81-4b75-995c-afddad5c19f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcefed55-225d-4622-81e4-ae2d16a0f24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759e62e2-d448-4ec4-9a3a-4b930aa3f3e7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e549268e-5e70-4a31-8015-c316180ddb3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fc224c-2943-4ecb-87b9-ff399ca3ac34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7653d247-b362-4b87-b42a-c18b324ae0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7493cbf4-1898-49cf-a263-7dabc507e6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35b5a5d-03d8-470a-a0f5-5ca076a1f416",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8728ca-386a-44c2-b24b-0bf8bd68b5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3122f106-70da-4695-b6a9-d0a62ee187c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456f141e-6be8-4546-b1e4-3d72b2f54a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59318b1f-a307-416e-a27b-2ee2b0e5309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538e1d2-0bb4-45b2-b21e-dc2a8b1bf414",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ed48a6-8777-4740-901f-32f2db00195b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a28c52e-e5dc-4f48-9c5e-6fcd3563a7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21132d4-62b8-47db-ba9a-8fef683b943e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee535e9-b522-4e09-ae70-c064d357d38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35055fee-684e-4261-8d85-2abc592db714",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cf308d-f127-4c22-b71c-7407103fecad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef63a10-19a7-4e9e-9f79-368f1b752214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf40a09-c914-4d00-9efc-8dcd12fe6544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757517e9-6086-4b74-a154-f9f850b00609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1fa792-d1b7-4f6d-a333-33167c190362",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fded2b8-bcb8-4997-8ba6-b1acfc129c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d309f39-1729-4d74-9e08-1a264a2977a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad36481-be01-4118-a2b8-c70ac6854055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4066ebf-8702-43cc-a4ad-959a3f4d6081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af7a3ba-00e5-4f0a-a8f0-57c83ad22bb8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a54b83-642c-4be3-93b4-f358677b8148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2745d7d0-aaf4-440d-af4a-24fb94a158c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e928f6-c22b-482e-8dbd-2b359e055558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0b3801-4955-4e13-86c7-a1a016f708bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d274c1a-74f3-4b9b-8ff4-ef58e64112a0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c099a3d2-98db-47e4-a907-def5291e1c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf3bfab-a122-4713-aef5-8069e245a4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eabaa9f-2da7-4f5f-8799-471efa3973e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be482be-df18-44f6-9e4d-3b18b0097b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a120034-c41a-4020-adf3-f1b702445564",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46bc579-68b8-41fc-b47f-83c8d8bfd6ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c995d0-c9d9-40df-af40-8ae7d6f3355f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0bcad6-53ad-4934-a2f7-f8bbe1cb89d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc0db29-509b-4f65-8e94-caefb0a7a9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101220e5-535f-4594-aee2-477f0dac92d5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac186cfd-c43e-4148-a671-cdb8c5a000a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3656d7e9-5243-4f04-92ed-902390962115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd00cfb-cc1c-46a8-b122-a8268a13789d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f934231-def2-4008-b8eb-aa6065900c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa3ac33-6cf6-4ddd-a057-167fef29eb75",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac11cd8-5cfe-430a-8c87-61f91a9db0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f14d11d-eb8a-40a1-b0a8-c1de3e922410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9d0d88-d437-446e-ab27-90a25413b5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47101654-6e86-40e7-a4f2-116260edf49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd13c1a-4528-432f-9cae-28705515626b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba2e314-e1e6-443e-be89-01467830db00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8e0a22-fefe-4680-a7b5-42591f4d2e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6d33eb-c85c-43a6-b4d1-62bd78fd2a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18954d16-eaf0-4e53-bdb0-43179e69dc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9e6fa2-b79e-4ec1-bc77-8b9cc649e1c0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046f6273-7bf0-42c9-9656-195ccc6d07df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a8cecf6-b276-499e-b1f1-52c664a9b03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c66ee-4958-41d8-bbb9-f2ebaea37f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8eb240-8469-487c-81ca-7d8a05adfc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5c4a1e-f2a6-4694-a595-5ad2c6c453d4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1d9797-7ab1-49e5-8574-ef64f5d1a3aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceced5b6-a6e6-4dfb-bb23-e73faf42ccd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a16b4f8-d12f-4df4-88b8-fe0cf603d1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b74b83-4dc8-4c8c-8a9f-abb5a5c643aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2e04f6-2ab6-4464-9871-067d07fcc391",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcfe30a-74dc-442a-b594-0f417fd17218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf25a2be-7041-407b-9573-1b0f96a34023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e650b1-94c7-4672-957b-2ba868340344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2f7e78-8dc4-4b16-b701-b8c268df7a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7a1ff8-200b-4ee0-97f8-a7b7d2d5fce4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1de0bdf-f33c-4db5-8b37-81c9c0931369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80349b2-4992-49c7-9deb-c8598e08b0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71119c7-5dd6-4078-b506-593b2838fef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244df7f8-580a-43ca-805a-f85ce071db34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c671d589-07c3-49c0-b143-32138416ce21",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df51cb74-2860-4ac7-aa9b-b70bda6cea68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0865b4-eff6-4f3f-a552-7e345a3b9b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aeaba97-304d-421b-8193-b7ebc33dbe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a0c3bb-5b6e-410d-aee2-94effe1695b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a4844e-7b35-4410-ae50-38ebb3b8bba9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cede02-5d36-41a5-8313-f81d1ba99821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2dc06b-905d-400e-a2fb-5cf2e35a2a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a1f168-0eac-4fed-a61f-24609b0cc6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1f6280-8d2a-41db-b249-e4dce35578b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b09137-f121-4523-a4ca-34c677277463",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca766af8-6437-42c6-a7d6-e58f6afb068a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad72e277-03aa-409c-bd86-6def88e297bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f77044d-9bd3-4231-8b64-c411f8929207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66730270-3a5a-4c27-9637-13ad6c142a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e34413e-f91c-4042-bfc8-4ec46d0d6664",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144bce1e-aaea-4b07-ac51-611f623f5e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7283e5cf-3364-471d-8963-882a531d42a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53200889-c039-4890-a09e-2fcea0a4d27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e4eae4-f2ce-457d-8ae7-a0dcbe57c398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62400242-02fc-4f3b-86f0-563f56d43f8e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f741444-3bd9-437f-8718-cdc83e003578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be0d728-5ddf-4e10-b2b8-be8d3d0ccb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdfeeb9-fde3-434c-b4a2-4c07af6804b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76336052-93ca-41b0-9665-d5612c2b6d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8955fcf-64bb-4c4f-b48b-1f2e2cd7eeb9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5217fba-5f86-4492-90ca-49899a73312d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88170e54-b183-4830-96a6-d737c615d0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0963ceae-97ec-4bb9-ac1e-c1240d748f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f80e5a-5caf-4027-a68e-e55b2ff5f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca35493-ec4b-44de-8641-cc3905a12720",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44315b1f-800b-4e3d-aeb7-4113e2f02103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d81404-cb1a-48a8-9c72-73d0d11c39ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d2f85c-4155-484e-81fa-be6f4a9d9ee6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b812695-55d3-42fb-8e8f-6916ca22e4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096c69e7-a0a8-4004-995e-86a2b1bedf6a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb49f2f1-10e9-4ca8-9351-8dd4372d78b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a41e50f-c4de-4323-bdf7-9e6520ddfd32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67e8cdf-be35-4c7b-86d4-459354b50b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbcf31e-9158-4456-9894-adc85722339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18bea9a-7198-4f72-9687-127300f1ebef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab9e6f5-7be1-4170-9c39-7a4ea799418c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78688b76-2908-4e3c-b990-8e49b5168e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4755d966-ddf3-40d8-96e5-9429e0afa751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b228ab8b-e97d-40a2-a860-e23f0246ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd976a-ad6e-4ad6-8a50-e24f1470a5fc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf7ebd-7093-41c3-ba3e-d34d174e3596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef0dcfa-b4e5-49ef-b03e-55f383fb949e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec71e5-9bc1-4416-aa21-a5183e0a7c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5b603b-162f-4543-97c4-60dac5c8eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedbe745-72c2-45cf-8b19-49eb18f80f36",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e484e1-3012-4705-9577-1095fe3ae6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92247dba-8f58-4dfb-ab3d-f31f1c7802a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba41d272-560d-4690-a0fc-359a76b09b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcd2f60-f751-486b-abb3-a73a889d40be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cc0a8d-2338-4637-8964-e79b0e45ee81",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c9fcf3-4e61-40af-a919-1aadc124a02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24bb6c4-2a5a-4f9f-abfb-991cf6aec540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b77f6a7-9853-4d62-8fff-0526ae108dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f48530-da34-4415-aa76-404d8966dbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83a4766-3519-4ab7-a016-0d56078dfb1e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28089041-2922-4b60-9b1a-a492aa45b0d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07446f3e-6b9a-4742-80fd-ae2b05bf9b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d957b4-dd1f-45cd-bb1f-de731ff4b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dd4d6b-eb21-45e4-b482-6336e40fabc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6afe39-a3de-41bc-b5b2-8c973b8c4f5b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08064920-cbd4-4a8c-a23c-4a70ee532f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec4b0e5-8734-49c9-b60c-49cd3d57b5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54caec72-c531-4360-b8d0-1729ec086678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81c4ad8-f5a6-47bd-8213-4d6e090ef456"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10e61039-6e38-41f7-a9a2-87995ec4b270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbe16e83-a622-4342-a50b-152f84d6825f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a4d93d7-0ab8-4919-88f2-96d8d289a1e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cd4341e-10b4-4348-b812-52b208ba8543"
                    }
                  }
                ]
              },
              {
                "id": "26bd88f9-8ac6-4c36-9328-44f4a17b0e5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8108021f-c571-43cb-9f6d-8a440501d099",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe36e4-f1ac-4212-8af4-ca199e6e3974",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c3982d14-da5d-4147-adb8-9d28067e6df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c63d13-7061-4459-b4c9-d6c70f084ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f73f059e-690a-45a1-8534-29e13fde33e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44d3d11b-91bc-4025-89ce-23e396c1b286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c6444c-edef-4aab-9d3d-1e520744b5c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b135f4f-6d0e-4f44-80ce-3328ddfd9bbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca74124-b0e1-46d8-9d52-bbb9b27e0717"
                    }
                  }
                ]
              },
              {
                "id": "573de1f3-5df3-4ace-aa3b-ac5e201d50b5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bac493fa-deb9-41ca-a25d-bea8e0e28d56",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e5d316-8aa1-4a70-81ff-40f91e6021ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8dc84b5d-aeb5-40f1-be3c-0b4159a609ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1454de65-b20b-4f96-b260-20de7a83bafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e7d745-a2a7-40d7-b9a1-aaf1a9bcae8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "839b8d2f-c138-4d12-be3f-7de7c99c7641",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d167778-f684-4835-9fee-1b8c49bbea38",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12ee1fbe-6600-45e0-804d-b6597bfa7b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f3ea9000-1741-44c5-b8d0-8a2a973b1044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5aa04d5-0974-41c1-9d87-a6a92dc51de2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "831f1c06-5a1e-43cf-9620-8cebe7c2e2db"
                    }
                  }
                ]
              },
              {
                "id": "1bbb1d05-4c42-45e0-af12-7ed9d3f7279b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83e2c5ab-4a67-4539-b1bd-cb3d327f66f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1852606-1eb7-4823-beb7-adbdb05417b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9b8366-f7a4-4277-ae31-305558db1a8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94e7c9ca-82e2-4fa3-883d-668edb2d8a42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c24f4d04-5c64-4256-b2c1-67dc26ca0835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "45fc0287-0b02-4f03-ab0b-d41ddab8079c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cd69acb-4b26-41d8-9bab-5de009eefa9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72f2e7ef-10fe-46cb-84b0-71aeee03f699"
            }
          }
        ]
      },
      {
        "id": "b256fab0-fabc-4465-94b0-1a51cc697759",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a1533be8-ae21-4b91-a773-a8b74046600f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2ae19f3-42bc-4da3-a6a7-3d7676f26b31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d355b648-cd2b-4f46-adc8-7792e6c4c906",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950b27c2-6f41-423e-99b1-badb1fa98485",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "15f4fc1d-3e14-4531-9736-95235368045a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524bf530-798c-414e-b5cb-9eb0e974add5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "320340ea-35a4-446a-b77b-6cb35d0bea55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c535961-e376-48d4-80a7-3aec1084d3f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7522f1cb-cd0d-4b60-aa99-88f71acb1ad7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40fb426a-343b-44f6-9949-5ad46547cb02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25e7f42c-53a3-4daa-896e-2a1eccc38030"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92103b5f-b3af-4a28-ad7e-05556ccd1e7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f970db29-8f59-41d6-a6db-1a36c7590c40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "201f6194-8660-4901-b432-6e87a62ba546",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26c3376b-45f6-4537-86fe-d98323f1b742"
            }
          }
        ]
      },
      {
        "id": "8e536ba9-1943-46b1-ac3b-43b8f8c05a21",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "146b4d3d-e909-4448-8f23-6f042495dd43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60941b1a-e2b8-4d3c-ad75-72c3f550e8c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7e4f580-538a-45bb-9115-06b42d540f08",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ae7d1-c9f6-483a-bd7f-8c46a3c08b25",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdf91afe-4e07-4ce1-81f0-c021c0613b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6915cd3-6053-44a5-8afd-4423714a13f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6d70965-2729-41b2-8034-09c64c472255"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63c57717-0dc5-4d8a-8831-efbe74c659d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe4ce0fe-e26d-48e2-9e71-c3dfc4a1aad8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c00106-f716-4719-958e-14b2c631e3be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "796b5b98-2a62-42ca-932d-d3ba50642cf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0310f75f-176e-496c-b784-f665b200f8b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "263195cf-b233-4619-a7c5-2c5e85eab03f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c2035ef-da02-4178-80d4-b5772837a2b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75e24d93-f154-47e8-b9a2-b94b6a53efca"
            }
          }
        ]
      },
      {
        "id": "51031dde-9164-4b8f-827c-9a16c9a8a3f2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9a964d11-5d04-4fc2-9405-cd76dff850f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3b35323-69c3-4d6c-ae9a-60fb73342e26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fcf55fd-f663-408b-85f7-352b4e0fe992",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d52475-3c7f-465c-aea8-ebeace10ac6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa604d0-2f12-49b4-8a62-95ea779d9978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31a4396-c21e-4373-bf53-8f0f4a289150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9459fa7a-88c2-458a-bffc-30cbc3851fad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bc60793-b907-4352-9bfb-b460868ed491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47fe47ab-1370-46ed-8080-69da9ebfbabf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65cce3f7-b0fc-4a40-b1c2-a8699536ef32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5788435b-af9f-46fb-91de-e32697012aea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3599c2cf-4924-47e2-af3a-c6188f7f825f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90ba9cb9-5e17-409b-a47c-1142d3b529b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bf21019-4874-4c3e-8d24-0609366cf172",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "334be7f1-5e1e-4ff0-9f3e-a88594a546b0"
            }
          }
        ]
      },
      {
        "id": "8bc4f81d-464e-4bd0-9de5-0596031f15b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "776bb94c-b45c-4cde-89cc-a7d3bf4a460c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "994ce34f-c89a-458b-8ee2-9bf65283b38f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bf9b5faf-a400-4dab-aa87-d032f1bcd9fb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72730266-a85c-4739-a6eb-ce86af2e1615",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e81042f1-0976-4ab4-90e1-ccfa9a8b6b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 250.66549295774672,
      "responseMin": 10,
      "responseMax": 9429,
      "responseSd": 970.0465126459595,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690677717871,
      "completed": 1690677800499
    },
    "executions": [
      {
        "id": "2ee71c1c-18aa-4f89-ae87-b74d4cf88fd9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86ccf860-712e-4439-8118-feb1186a4296",
          "httpRequestId": "a73f633e-1b0c-4923-bf44-fc0b17a60b24"
        },
        "item": {
          "id": "2ee71c1c-18aa-4f89-ae87-b74d4cf88fd9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b9623da-ce19-4cd2-95f3-aa6d2f348ff5",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "2734c52e-5ede-4e86-b91b-2877b93d638b",
        "cursor": {
          "ref": "f3b035e9-7170-41b5-9c2f-2d4a5d4a5b36",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "15a76369-bcdc-460c-b87d-d4f8c40b0fe3"
        },
        "item": {
          "id": "2734c52e-5ede-4e86-b91b-2877b93d638b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fae6b15b-a501-4a74-bbf5-5e6f0e3e4ad8",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "4046c6ce-68a7-4361-924b-62be705a1935",
        "cursor": {
          "ref": "fca12750-26fc-4133-b434-cd7d6b6a5e3a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b171bdc7-f74b-438c-aa22-688299c1aaab"
        },
        "item": {
          "id": "4046c6ce-68a7-4361-924b-62be705a1935",
          "name": "did_json"
        },
        "response": {
          "id": "a400e52b-f07c-468a-883e-02d66498e394",
          "status": "OK",
          "code": 200,
          "responseTime": 382,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553fa059-8333-4f8f-af27-f03eade23209",
        "cursor": {
          "ref": "84a8e6d1-bd12-4bd0-9024-4761f856d0b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff23a18a-9004-4029-8726-dc840f5b4395"
        },
        "item": {
          "id": "553fa059-8333-4f8f-af27-f03eade23209",
          "name": "did:invalid"
        },
        "response": {
          "id": "39b2b60d-1aa9-4e3f-8414-d2d9ba643195",
          "status": "Not Found",
          "code": 404,
          "responseTime": 744,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553fa059-8333-4f8f-af27-f03eade23209",
        "cursor": {
          "ref": "84a8e6d1-bd12-4bd0-9024-4761f856d0b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff23a18a-9004-4029-8726-dc840f5b4395"
        },
        "item": {
          "id": "553fa059-8333-4f8f-af27-f03eade23209",
          "name": "did:invalid"
        },
        "response": {
          "id": "39b2b60d-1aa9-4e3f-8414-d2d9ba643195",
          "status": "Not Found",
          "code": 404,
          "responseTime": 744,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710869f0-36d3-46a3-8d63-2c9530540e28",
        "cursor": {
          "ref": "3b2a689b-3288-4664-834b-759a1193b71a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7d8417f6-c4f6-4672-89fc-30e1086a88db"
        },
        "item": {
          "id": "710869f0-36d3-46a3-8d63-2c9530540e28",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "87bab197-a153-4642-88f8-a5acc605bd50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01fd401-daba-40c3-b79b-275b5f60d91a",
        "cursor": {
          "ref": "b3185aa2-9869-4190-aacd-97f848f53de9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d02c888-6a97-4761-b27e-a39f17a92bd6"
        },
        "item": {
          "id": "f01fd401-daba-40c3-b79b-275b5f60d91a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9d9e4e84-956c-41ef-9c39-29d07ad05214",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6bdeaa-f02d-4a19-bcd0-a9cf9484202b",
        "cursor": {
          "ref": "a95636bd-7f2f-41e4-8ec3-fb3082fbef97",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "86f177f1-666d-4d61-af4f-cabe5ae8fb52"
        },
        "item": {
          "id": "6a6bdeaa-f02d-4a19-bcd0-a9cf9484202b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dfddc500-dc14-418e-94fd-31d17b640b2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6971747-8ec1-4946-83b1-b3f91582b47a",
        "cursor": {
          "ref": "13130429-29c1-4f82-ba4b-011495d0f2e0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "affa8181-624f-410d-ad9d-3a7023aa3e45"
        },
        "item": {
          "id": "d6971747-8ec1-4946-83b1-b3f91582b47a",
          "name": "identifiers"
        },
        "response": {
          "id": "4a68eeff-8ae3-4103-8b0e-c715a5f452cd",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1fb1d9-f617-4bd8-ba6f-051654257a02",
        "cursor": {
          "ref": "bc22bff7-6106-4671-97b8-70232e6d3348",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e619b202-5c22-46e3-8307-d09c6e0a1194"
        },
        "item": {
          "id": "bc1fb1d9-f617-4bd8-ba6f-051654257a02",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5773a992-b8d1-4b57-9ff8-5a0b70793d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c245b5-ad51-4dc4-84f7-5682e76ca2ed",
        "cursor": {
          "ref": "52c38b39-f89a-4dd6-ab85-1e915f052b4f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dd4e1c1a-93ce-40ea-aa5a-61571434e2f6"
        },
        "item": {
          "id": "83c245b5-ad51-4dc4-84f7-5682e76ca2ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7d5a4142-9513-4295-957e-65b324229cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ca616f-20c6-4916-868c-31a595bc242d",
        "cursor": {
          "ref": "156a172a-9892-4619-b1aa-c0439b6580a2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f2f65f5b-9792-4300-8322-963b0acf1250"
        },
        "item": {
          "id": "97ca616f-20c6-4916-868c-31a595bc242d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "43ddd3c8-4f43-4121-ae69-eb553bcd9a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c3ae9d-727a-45d9-ae9c-58f49d01dbb4",
        "cursor": {
          "ref": "2eeed605-0dbd-4515-98f0-552ae66f7fc0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fd2ea104-f8de-40db-a4c1-39b43f972da6"
        },
        "item": {
          "id": "53c3ae9d-727a-45d9-ae9c-58f49d01dbb4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2393d98b-b71e-4b47-baec-f40565fa7c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50939cee-62a8-4f8d-b567-55dacb8dbacf",
        "cursor": {
          "ref": "48caae6f-1d67-42ca-b10b-572ac81eaffc",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "42405a18-a1ad-482a-9690-c6ae1c8eb464"
        },
        "item": {
          "id": "50939cee-62a8-4f8d-b567-55dacb8dbacf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0903ff9f-f09f-4709-903a-e16bbd81fee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff89a6e-21d4-49fe-a5fe-a41d9d689502",
        "cursor": {
          "ref": "6827c487-744e-4f4c-8002-713a40339d13",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf4b5c96-1560-4cc8-93b5-462170bc3253"
        },
        "item": {
          "id": "6ff89a6e-21d4-49fe-a5fe-a41d9d689502",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe7e400a-e930-4a7d-899e-9269126a8f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa99e8ed-4ae7-4931-8a7f-25ab2a185a78",
        "cursor": {
          "ref": "f8f4da05-1216-4602-8949-cbd191467835",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a3f8150-d4f7-48f5-bde4-4b1f082d6999"
        },
        "item": {
          "id": "fa99e8ed-4ae7-4931-8a7f-25ab2a185a78",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4c1a065e-76db-4a64-aab1-89107609bd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df012afd-98cd-4172-8a39-4f25b07025ac",
        "cursor": {
          "ref": "77a8b3bf-6ed6-460a-b759-265db32683ce",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "832ebcb0-ee99-4c77-8051-29129a5ebd99"
        },
        "item": {
          "id": "df012afd-98cd-4172-8a39-4f25b07025ac",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e1ce395c-caf5-4b91-bcd7-6a2a65bf094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc656db6-20ce-415e-9ec7-7baf7000dfa1",
        "cursor": {
          "ref": "5a121360-fb40-410c-b207-31ec9b3d5823",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "59c2702f-531e-483d-afa8-a9094703122b"
        },
        "item": {
          "id": "bc656db6-20ce-415e-9ec7-7baf7000dfa1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6fe64163-b14a-4cf6-aa6b-d4c848c527d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bea9eb6-5b5f-46fb-ae80-26c8ef5cdc03",
        "cursor": {
          "ref": "a794dbfc-1027-464f-8161-cea8e7dc6aa8",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bf917475-29c4-45b4-9df6-d5dc979d67ef"
        },
        "item": {
          "id": "7bea9eb6-5b5f-46fb-ae80-26c8ef5cdc03",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "704ff1dd-5fd7-4e09-a632-04fc6aa31864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d1580c-cc25-4a18-86bc-c5913ec6dd70",
        "cursor": {
          "ref": "e4cbe7f3-43a6-4a64-9209-55eb7398d64f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bd2483ee-3e41-4a15-a02d-48535b8049e7"
        },
        "item": {
          "id": "d6d1580c-cc25-4a18-86bc-c5913ec6dd70",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e23e9771-5d2b-435e-ba8e-e3b08d31ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a0ef8d-4413-4638-bb13-baf1e8a48bba",
        "cursor": {
          "ref": "7ecd7d04-941c-4c37-8435-214fe38b017e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "85505bda-78c3-4444-b229-2229682006f0"
        },
        "item": {
          "id": "77a0ef8d-4413-4638-bb13-baf1e8a48bba",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3966f951-6e39-4200-a003-219f53111b43",
          "status": "Created",
          "code": 201,
          "responseTime": 963,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "3264f0f6-b66b-42b0-8636-c4e499ce88a2",
        "cursor": {
          "ref": "bb870cb0-fb6e-4ac9-9914-7e44943296c7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "37f06cf7-e6ca-4dab-b647-572d706aa757"
        },
        "item": {
          "id": "3264f0f6-b66b-42b0-8636-c4e499ce88a2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cbbaae3b-e3db-483e-851d-665b3756b98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f61ea2-fe71-4b06-993f-94821fdadf66",
        "cursor": {
          "ref": "f875def8-8565-4c70-9113-ca8f60a5aacb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7bdf15ac-0e6b-40be-904f-e396650e88ec"
        },
        "item": {
          "id": "a5f61ea2-fe71-4b06-993f-94821fdadf66",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "18af91a5-466e-4c2a-8ff1-7621a67773e8",
          "status": "Created",
          "code": 201,
          "responseTime": 9429,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "29f6349e-740e-4af8-8907-0aa45aeb18e0",
        "cursor": {
          "ref": "755faf87-df6a-4edf-9d95-f6da676a755d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "723a9dd7-caf8-49a9-8ea2-5b98c5d3c22e"
        },
        "item": {
          "id": "29f6349e-740e-4af8-8907-0aa45aeb18e0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d11c71a1-5bfb-4937-bb4a-bf05276f3448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff95ad07-ac67-4b6c-937f-67ff44effc4c",
        "cursor": {
          "ref": "85c965f2-c660-4e09-9e82-6061dee2446f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "15ada11f-53fd-4818-984e-a0e0f28ca4d6"
        },
        "item": {
          "id": "ff95ad07-ac67-4b6c-937f-67ff44effc4c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "71a98d1b-96ae-4980-9858-f9b8670b0f04",
          "status": "Created",
          "code": 201,
          "responseTime": 6443,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "e5594f42-d6d1-4b52-b118-825a9e7606a0",
        "cursor": {
          "ref": "c2d7dea5-7f7e-4469-9f38-5f1f75ea929a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "25cd94aa-51a3-4c43-91ee-97c3547cd300"
        },
        "item": {
          "id": "e5594f42-d6d1-4b52-b118-825a9e7606a0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "940503e9-e6e6-4aa9-8bda-e43c65d9ef1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f073fa-b42c-4a81-a9ad-06d9459ccd37",
        "cursor": {
          "ref": "12d194ab-8730-4a28-a3be-d0a478a81a9f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f72fd35-08b2-42f8-a00b-fbf240fea11c"
        },
        "item": {
          "id": "b2f073fa-b42c-4a81-a9ad-06d9459ccd37",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1982954f-7cf7-4750-987a-f5fdaab39dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfea90ad-e2d6-4eb4-903d-8d3252b52d01",
        "cursor": {
          "ref": "f1abc621-6fa8-45e3-801f-b392f862d9d3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "48226edd-8e16-4346-9ef8-dfe2969446da"
        },
        "item": {
          "id": "dfea90ad-e2d6-4eb4-903d-8d3252b52d01",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bea5b466-ccbf-4765-b884-cc245c903a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa43abe-b7a1-4002-8404-1d667615cf50",
        "cursor": {
          "ref": "e0469e04-3175-4d48-9766-b630d2784d25",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b89d983f-45b7-4135-befa-e5b5771b7461"
        },
        "item": {
          "id": "9aa43abe-b7a1-4002-8404-1d667615cf50",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8b8e2f92-e428-4f32-bfc6-9b5b97ecb075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03119da9-125b-4597-a534-9dc0cb334fb8",
        "cursor": {
          "ref": "9ec189d5-2779-46a4-94df-30fe1b313e74",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8415c900-5062-4b33-94cd-443c25754fd0"
        },
        "item": {
          "id": "03119da9-125b-4597-a534-9dc0cb334fb8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e24441cd-1561-4892-aba0-e961cdcb2837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c8688f-5d5b-414d-a656-2dd1ae8f629c",
        "cursor": {
          "ref": "1ad90e53-62da-4b90-98b0-1b54dc20ca39",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e3a0e10f-5087-4494-bc77-5674b9f0fb46"
        },
        "item": {
          "id": "67c8688f-5d5b-414d-a656-2dd1ae8f629c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c7d046c0-cae2-4d18-8761-b4833b9a0108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff1e1a9-384f-4fe2-9ca8-28835278e54f",
        "cursor": {
          "ref": "b4db3867-a5b7-49b9-ba6b-c3d2cc39483e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c7f59bcd-6f17-4301-981c-0519244090cc"
        },
        "item": {
          "id": "5ff1e1a9-384f-4fe2-9ca8-28835278e54f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7c4a1c1d-5b22-413a-8c02-572076edf2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f11b182-acf5-4e33-83f4-07d1646a6d48",
        "cursor": {
          "ref": "9fa4658e-91c4-4d9f-a196-aebd6739dc23",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b8577336-3cc6-44e3-add5-5efed2bab220"
        },
        "item": {
          "id": "0f11b182-acf5-4e33-83f4-07d1646a6d48",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9fd7cf21-17fe-4b71-a06a-a77abc59abd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0f7bd9-8d4f-4444-8afe-338b39ed9712",
        "cursor": {
          "ref": "b567e95c-2f53-497f-880f-a90a29cc7129",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "30996d72-39a6-43d8-aae7-719d2f8762d7"
        },
        "item": {
          "id": "4e0f7bd9-8d4f-4444-8afe-338b39ed9712",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "08769a07-1920-46e0-afa0-4b30b4008508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d8791e-f142-4900-aea8-28d7009e8456",
        "cursor": {
          "ref": "586f660b-362d-4cf2-a726-3ffea5da53a7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "930cf44c-5de7-49a9-8c43-0af1feaf32fb"
        },
        "item": {
          "id": "27d8791e-f142-4900-aea8-28d7009e8456",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a0367f57-9e3c-4ba1-b7df-55318f2c6422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c995dd68-dc3a-4213-a26b-0140bf9d1ea1",
        "cursor": {
          "ref": "797d858e-85a8-4082-9575-fbd8ef7e7074",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2533f59f-721a-47fb-946e-dc594135f8d2"
        },
        "item": {
          "id": "c995dd68-dc3a-4213-a26b-0140bf9d1ea1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9ce03258-8254-4fff-9c9e-03f72de81827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba169a-7907-4c31-8150-60c32d1f2b63",
        "cursor": {
          "ref": "41a7ea2a-a88e-4514-833e-da084e262cb7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "593c6725-9976-4904-9644-c016f4d219ad"
        },
        "item": {
          "id": "9cba169a-7907-4c31-8150-60c32d1f2b63",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5fa642f7-60a6-4730-9dd8-976b143746fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffd1ee3-3812-4956-9632-d3b50f9a494d",
        "cursor": {
          "ref": "feb3780c-6e22-42ac-adea-a5f05cd04e6a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ba182144-fe35-480b-8ec0-bcd099b173f6"
        },
        "item": {
          "id": "9ffd1ee3-3812-4956-9632-d3b50f9a494d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "62383cf1-e041-44a2-b6e4-d63eb1b70b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c999136c-cae5-4fd3-b003-0adf638f88a7",
        "cursor": {
          "ref": "30639b63-d495-41dc-bc55-5ad02120ec4f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b839c85-4ddb-420e-98e2-9501bad9b0b0"
        },
        "item": {
          "id": "c999136c-cae5-4fd3-b003-0adf638f88a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6d9d2a82-5946-41aa-bb05-68b8a5235c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87308055-8e7d-4141-86e6-8444930d5a0a",
        "cursor": {
          "ref": "302b0af3-b06b-442d-8ded-55798fb2895f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b4fd4dba-f949-4c33-8e1b-180826589128"
        },
        "item": {
          "id": "87308055-8e7d-4141-86e6-8444930d5a0a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3f0b3dbc-ad22-4926-8462-e9792782f890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81933807-ac40-4b76-8f36-d5cef21392f2",
        "cursor": {
          "ref": "fad2556c-42d7-48f4-9865-07840730da65",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0cb4022b-9983-4715-bc74-ed7d66f75e37"
        },
        "item": {
          "id": "81933807-ac40-4b76-8f36-d5cef21392f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b80f4bc7-3ac9-410c-b969-d29497dc0285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b56ab0f-55a1-4a2c-8689-1be484fd3a07",
        "cursor": {
          "ref": "ca620c1d-00d7-415e-aa5c-3e1916a60d62",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6fa18543-b910-429d-93a4-63ca9162f500"
        },
        "item": {
          "id": "4b56ab0f-55a1-4a2c-8689-1be484fd3a07",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ff3eda9b-089d-4c8f-98cf-085d426381f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0d508-3d79-4a83-8459-85e07ca271ab",
        "cursor": {
          "ref": "02e0aa7c-6b34-4de7-a4c0-379ce3c4bd12",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d1fe79aa-4f02-49ee-a905-7299e839d6ba"
        },
        "item": {
          "id": "cbe0d508-3d79-4a83-8459-85e07ca271ab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "20ee6c59-02b8-4a3d-bfde-639969cf14a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4c9ca6-49ab-4acd-aaac-c0f4d6cc4c82",
        "cursor": {
          "ref": "6b7004d9-cac4-42e2-9740-46e80fba8306",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c3226d74-81df-4b9c-899a-e579b57edb2c"
        },
        "item": {
          "id": "7e4c9ca6-49ab-4acd-aaac-c0f4d6cc4c82",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "64ba79d3-d4b3-45ac-8350-18b261dac989",
          "status": "Created",
          "code": 201,
          "responseTime": 7940,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "473cb4ae-1589-48b4-84bb-43dcd9593852",
        "cursor": {
          "ref": "8731ea65-2771-47ea-8846-2ce737b71784",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b72d1031-13d7-47b7-943e-bed56083a6d7"
        },
        "item": {
          "id": "473cb4ae-1589-48b4-84bb-43dcd9593852",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dfc9d99a-f359-436e-af77-79d2e3cd767f",
          "status": "Created",
          "code": 201,
          "responseTime": 2735,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "0e702e3c-b0a9-4202-ab13-1d03dc8697be",
        "cursor": {
          "ref": "cbd79eae-8372-440b-8c07-e38e166c656f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5d021b72-ab9b-4931-9c4c-a917b2af0e0b"
        },
        "item": {
          "id": "0e702e3c-b0a9-4202-ab13-1d03dc8697be",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b1474979-86f6-4d53-8e11-2b390e4f2d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d7c5a7-4714-45ee-a73f-9d8715de861f",
        "cursor": {
          "ref": "7be103a3-4cde-485b-b9f3-4938e8bd45af",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c25c190-adb9-4c0e-977f-f8ee293a50c8"
        },
        "item": {
          "id": "b5d7c5a7-4714-45ee-a73f-9d8715de861f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ff8f1757-9192-4b34-a25c-8d8682175b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d70553f-969e-47c7-b664-3946e29073b5",
        "cursor": {
          "ref": "af805495-163c-4080-bcff-b1ffefdce7c3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d80affa2-7f29-488a-8dd1-54915592f66d"
        },
        "item": {
          "id": "3d70553f-969e-47c7-b664-3946e29073b5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "275c6add-3c93-472d-8384-084490304614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954adf09-e360-4877-a128-3a807ea0a595",
        "cursor": {
          "ref": "c6b7a708-5387-4026-a147-5a9f5266a91c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e926ac47-c220-4707-be12-ae5aa2a4fcfb"
        },
        "item": {
          "id": "954adf09-e360-4877-a128-3a807ea0a595",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d450e9f8-8da0-4aac-a333-16d15322fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff38510-99ee-4d4b-ade0-81efd01ba4e3",
        "cursor": {
          "ref": "bb804a34-bfeb-4c75-aac9-fca0a3f5361b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "daf6d67d-5f34-42f6-af92-921bd3c7d4dd"
        },
        "item": {
          "id": "5ff38510-99ee-4d4b-ade0-81efd01ba4e3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4929ee2c-4352-465a-95cb-0dd2b702d1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc29bcf-3486-485b-81ad-d62549d6d97c",
        "cursor": {
          "ref": "2dd589b2-c44c-4ebb-b635-935ae49d0732",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a98da53b-87de-477c-88e9-6243ea5ce71c"
        },
        "item": {
          "id": "3bc29bcf-3486-485b-81ad-d62549d6d97c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d893f1e6-7c9a-455a-b8a6-3b53398dbcf4",
          "status": "Created",
          "code": 201,
          "responseTime": 2853,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "a63d412b-f504-459c-9a1d-a3c72d95d10a",
        "cursor": {
          "ref": "6206a11c-456f-494b-9fa9-58648172b0b8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e1800a13-88d6-4d31-9f97-f9acb2065d4a"
        },
        "item": {
          "id": "a63d412b-f504-459c-9a1d-a3c72d95d10a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "860cdda5-7862-4f22-bc63-0276b220dcfa",
          "status": "Created",
          "code": 201,
          "responseTime": 2879,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "f2e7b7e3-af8e-4789-8c6a-74b86c9b8b95",
        "cursor": {
          "ref": "2331766f-2184-4de2-9aaf-ed8fa1164a8d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "71ee3350-e515-41aa-8c13-b55c962bdb83"
        },
        "item": {
          "id": "f2e7b7e3-af8e-4789-8c6a-74b86c9b8b95",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d6f4b97f-ac84-46d6-bbec-f9b6a06f24c8",
          "status": "Created",
          "code": 201,
          "responseTime": 2935,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "b858f814-1c66-4eca-b8e3-88613ffa7f84",
        "cursor": {
          "ref": "1af793b3-bdae-42cc-a43f-81c98a39a46d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c2cd1456-44d9-4337-9723-abf0a3bfbd24"
        },
        "item": {
          "id": "b858f814-1c66-4eca-b8e3-88613ffa7f84",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "196d8874-babf-4c4b-af02-c35d3da5f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b49a0-d06b-4e07-9cd9-d2da28333ab5",
        "cursor": {
          "ref": "8d1e1cfa-1262-411b-bb7d-603bc41f8a5a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d62cd624-cae5-4ce6-8f77-14262899f16b"
        },
        "item": {
          "id": "e11b49a0-d06b-4e07-9cd9-d2da28333ab5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "65d59e1a-e49e-4b19-afcd-d324362a7ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01409644-73d2-467e-8462-023f93a8fd10",
        "cursor": {
          "ref": "cce4e509-9a2e-4b2e-8508-498651da5399",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "82635a5b-b4e0-4164-b475-1e6668a2e1c8"
        },
        "item": {
          "id": "01409644-73d2-467e-8462-023f93a8fd10",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e087c770-41d6-4497-bab2-c709d7b3db2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141f2907-0cc6-48e6-811d-f3d337d30697",
        "cursor": {
          "ref": "b9a04f27-4860-4c00-9517-0fc2848e8a98",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "602a9fe8-3836-4a04-90d3-b02f11153b8a"
        },
        "item": {
          "id": "141f2907-0cc6-48e6-811d-f3d337d30697",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0d792b24-bce5-4f0a-b62e-d389bfd6ba04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4b2eff-e000-40e0-8092-cfb7ccd0a548",
        "cursor": {
          "ref": "79815ba3-cd3e-43a9-b611-a085e0eff30f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42988874-8aa9-4b33-a074-f10534e42526"
        },
        "item": {
          "id": "7e4b2eff-e000-40e0-8092-cfb7ccd0a548",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81aa6330-2787-4c66-9978-7104d9151b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34e943a-068f-4392-a4c7-c86bc777dd8f",
        "cursor": {
          "ref": "ec3841dd-ad24-4b72-9092-e33a340ec5be",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24b21e7b-70ef-4c8d-8075-003cf4212a2e"
        },
        "item": {
          "id": "b34e943a-068f-4392-a4c7-c86bc777dd8f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "862f50b4-d22e-4dc0-a9c6-db2dfed8b178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55452d8f-b4cb-4cae-9f18-6f7f04f444b7",
        "cursor": {
          "ref": "17e5c8c1-3c19-4a39-b48b-0ce782efec21",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4b6fcbb3-4c04-4777-a831-51355ae63e2d"
        },
        "item": {
          "id": "55452d8f-b4cb-4cae-9f18-6f7f04f444b7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5e2f023e-de36-4cea-81bc-77fb86956384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc282fd3-86c5-4afd-930a-27590c48bf29",
        "cursor": {
          "ref": "5bab47a2-33e6-443a-b207-b5290b21bc5e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2eaf087f-01b5-4882-805d-5867e02bb8e0"
        },
        "item": {
          "id": "bc282fd3-86c5-4afd-930a-27590c48bf29",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f7362b4c-bf9c-4036-b581-eb1d0a84ae45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf539da8-fc9a-41f5-946c-bcd6ad792cee",
        "cursor": {
          "ref": "b5291b04-4923-4af0-bb8f-19e783e90083",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3b87f45b-e7e9-45f4-b72c-d70d54383cf5"
        },
        "item": {
          "id": "bf539da8-fc9a-41f5-946c-bcd6ad792cee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2dba595f-7e4c-45c4-8932-8dd101423d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5e97c2-9abe-40f4-abe3-89a36b37a519",
        "cursor": {
          "ref": "bbf89c35-a762-491d-92df-6ef777a71273",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3a68dfb9-bb54-4e51-947d-abff309bf29a"
        },
        "item": {
          "id": "6d5e97c2-9abe-40f4-abe3-89a36b37a519",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "005e692e-202a-4fe1-bdc2-aa0044e1e916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e11e3-244b-462a-bd39-d50ca1674fa5",
        "cursor": {
          "ref": "fc0dd66b-3be0-4ac7-a998-d8c064b0742a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "507afa63-5f1e-4a61-8c35-beacdec5f428"
        },
        "item": {
          "id": "2b8e11e3-244b-462a-bd39-d50ca1674fa5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5ac94e50-8393-4010-aa1d-c753fd064798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69f6edc-7d5b-4bbd-85f2-10754cfb51fb",
        "cursor": {
          "ref": "13c3e134-3b7e-449f-9af7-7c2d5bdefc7d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c6b649e7-c347-49fe-b075-24d8c7be3a52"
        },
        "item": {
          "id": "a69f6edc-7d5b-4bbd-85f2-10754cfb51fb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "963e4ebf-644c-4643-8564-95a44ba860af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4456d6d2-dbe0-4649-a911-a06401cffd19",
        "cursor": {
          "ref": "7f5c18a3-e27c-4b29-88d2-21aa485954c0",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c698e3c3-8bde-4a06-930c-ed1032c50b8e"
        },
        "item": {
          "id": "4456d6d2-dbe0-4649-a911-a06401cffd19",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c75c3287-45c3-4007-83e2-fa6a0cc237bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfd0929-0cd1-400a-9e45-2ac402ae7240",
        "cursor": {
          "ref": "433aadfb-facf-497f-ade3-f9a40579d0f1",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4629eb53-9644-413b-b164-49931300cfda"
        },
        "item": {
          "id": "8bfd0929-0cd1-400a-9e45-2ac402ae7240",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "897d2c33-a44c-4b38-984d-b070b8b27ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8117d2a0-a831-4f3f-ac26-0c01a0cd5e56",
        "cursor": {
          "ref": "b42ab57f-5296-403a-87fa-19a67b103e02",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "38e09212-087d-49bd-a59b-62eea08bc590"
        },
        "item": {
          "id": "8117d2a0-a831-4f3f-ac26-0c01a0cd5e56",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3867212b-287d-4bda-9b07-183b890f2179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f37a21-2ca5-471d-96cf-06e8264d1e34",
        "cursor": {
          "ref": "7dccaddc-4f7d-4db0-9ca0-414f5ba54324",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c62d3ffe-b3de-4384-96af-47aee5442caf"
        },
        "item": {
          "id": "f0f37a21-2ca5-471d-96cf-06e8264d1e34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1a9eacd7-2bf8-4e59-9a68-ca2276f1135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaa341d-0660-4aaa-a5fd-86b252355810",
        "cursor": {
          "ref": "2d7f2078-86c2-47ec-9a6d-a1923a099686",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2bfd53a9-23d2-4c79-9c5d-5d070787d40e"
        },
        "item": {
          "id": "feaa341d-0660-4aaa-a5fd-86b252355810",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9871139f-e33e-42fc-9dfe-af3685596b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2171d9-e4b7-4866-a044-d97dd621d3fa",
        "cursor": {
          "ref": "0b89a8df-b7b7-475f-8b49-cf2a2db67399",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "22d30178-e0ca-4d1e-8212-3e5c71a6aaef"
        },
        "item": {
          "id": "9c2171d9-e4b7-4866-a044-d97dd621d3fa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "96419a8a-872b-4f49-a6f5-e7eb600487a8",
          "status": "Created",
          "code": 201,
          "responseTime": 3008,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "6b6d27be-98a6-425e-959b-6b87426a1aea",
        "cursor": {
          "ref": "f8158380-c37f-4e2e-970b-224be70e4a16",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "606f6327-9317-41e7-85d0-e9218ec21a98"
        },
        "item": {
          "id": "6b6d27be-98a6-425e-959b-6b87426a1aea",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "07c854c2-c6fd-4ab6-97d6-569bcbc11bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897ee3d-8200-49d6-aab7-bbca4aabdcad",
        "cursor": {
          "ref": "08ea63e0-d823-4444-8bc1-f7403b3ccf55",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1dd6192b-0c7a-4d30-9868-0d2b3b0302cf"
        },
        "item": {
          "id": "8897ee3d-8200-49d6-aab7-bbca4aabdcad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "24ee6e9d-8c66-40ca-804d-753b7f52972a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e83bac5-2fec-4ebc-b219-b63f3b87f5b2",
        "cursor": {
          "ref": "41beb167-5965-483c-98de-0823844ed105",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6f669a70-0181-4567-ba62-fb9abaea7902"
        },
        "item": {
          "id": "7e83bac5-2fec-4ebc-b219-b63f3b87f5b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7d4d4303-1931-44ea-b685-d24fd42a03c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7fd22-4163-40c5-a8c8-2038ac5db99a",
        "cursor": {
          "ref": "60dcbcba-df21-4555-b03a-4b364dba3f30",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3fc0b714-049a-43a3-ade8-6de4b226ee63"
        },
        "item": {
          "id": "a4e7fd22-4163-40c5-a8c8-2038ac5db99a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b0c4b06-2636-4502-b908-684f2825ab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d95dd5-ac37-473a-9f8c-c7900e699e33",
        "cursor": {
          "ref": "0f56a3f6-f042-437a-8df7-b3bcc49a3eec",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e55e516a-1a8b-4e05-93c7-ffface8b494e"
        },
        "item": {
          "id": "24d95dd5-ac37-473a-9f8c-c7900e699e33",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "562ac739-e3e5-4c2b-b0f0-8f4e3918f291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca9d7dd-2a1a-447a-b613-b7b973af1343",
        "cursor": {
          "ref": "176f14d3-ecc6-479b-a819-7c504a4f5d25",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f5278b62-1a6d-46ce-80ff-5a4ce7c3e96c"
        },
        "item": {
          "id": "8ca9d7dd-2a1a-447a-b613-b7b973af1343",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1a77c5c-fcf3-44c3-963f-bd1c38446020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215bb51f-c4c6-46c6-9299-ba77279d91a3",
        "cursor": {
          "ref": "06e93974-a8d5-4c86-8d87-1fb32091e527",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fea1ad51-756e-421f-a481-70cdba4f1c36"
        },
        "item": {
          "id": "215bb51f-c4c6-46c6-9299-ba77279d91a3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a3fb7708-326f-4587-b426-9fef7f25c586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c913c32f-ce29-4168-a981-79d51267c663",
        "cursor": {
          "ref": "a59ec1a3-16cd-4ec6-9198-7f8652b075ae",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "035853fa-e2f2-46af-a7ef-29168f0076a6"
        },
        "item": {
          "id": "c913c32f-ce29-4168-a981-79d51267c663",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "48ba993f-80d5-494a-8b59-2f5a860f8746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee76c745-44ca-48e9-a558-b5a5a84b9ccb",
        "cursor": {
          "ref": "004d6b5b-e77d-4c9c-9dd7-6cfa5ee93470",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "732f70c9-b7a9-4849-9c32-cedf7b95516a"
        },
        "item": {
          "id": "ee76c745-44ca-48e9-a558-b5a5a84b9ccb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bc82462a-f808-41c3-95e9-e55235c63852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c87c41-a485-496f-bccf-1920b7312157",
        "cursor": {
          "ref": "8572151e-7dff-4213-b0e6-b647152d2698",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d76533ec-4e4e-48c6-8c81-66b1f9d5db18"
        },
        "item": {
          "id": "86c87c41-a485-496f-bccf-1920b7312157",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4dfcbe26-1d25-4406-b90f-b0ccbd18375f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054563dc-8197-475a-a9bc-8120e8274e45",
        "cursor": {
          "ref": "4c639c20-31c4-4085-a29a-53915109bc60",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0c5d00cc-93fc-4cdc-96f2-86dadb03e02f"
        },
        "item": {
          "id": "054563dc-8197-475a-a9bc-8120e8274e45",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "645212fd-fb18-4926-b9da-7b29ccb30386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118416ca-f545-47e1-910d-d253ff9bfd8f",
        "cursor": {
          "ref": "88c57531-6f3b-4d25-b892-f817033545e7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "88a4b468-496b-4e5e-9219-31cfd461d3de"
        },
        "item": {
          "id": "118416ca-f545-47e1-910d-d253ff9bfd8f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "847b7bef-51e2-43fd-b5eb-2399ec84d923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e355cdb0-26fc-41bf-aae0-aa9963d76094",
        "cursor": {
          "ref": "b0c45587-446f-4d64-9264-4ae0eb39d863",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0487f89a-6d17-4e5b-81e6-6403c9a0a24b"
        },
        "item": {
          "id": "e355cdb0-26fc-41bf-aae0-aa9963d76094",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "05cab772-62ed-4d6d-9241-67c5e2ec6447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5711f166-7b22-4c9b-b22c-e60424813239",
        "cursor": {
          "ref": "182ea876-68e8-4bdc-a36d-63c93e1331a6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "761698fb-57c2-4900-b19f-e55f33338624"
        },
        "item": {
          "id": "5711f166-7b22-4c9b-b22c-e60424813239",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9658341c-3602-4a2d-a641-049b3d6c0363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bf5d9b-50d2-487a-8445-513a372dbc85",
        "cursor": {
          "ref": "797cb160-e279-4263-bbd0-d2fcb9b00a1d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb5399b2-4705-4d52-947e-d071984339d7"
        },
        "item": {
          "id": "c0bf5d9b-50d2-487a-8445-513a372dbc85",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0b998101-146c-4143-9bcb-3b4fbd52b30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b072c47b-9a92-4838-8159-63cd0d5aad86",
        "cursor": {
          "ref": "4d2398c9-93d6-44f5-bd15-a8e7c67cfe97",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7357a452-0f9b-4076-bfe0-ebd859bf3a73"
        },
        "item": {
          "id": "b072c47b-9a92-4838-8159-63cd0d5aad86",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9394090c-0012-4076-8591-f04695c7e6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147bf2c6-3442-41ae-8bb5-9bb3dd13a1cf",
        "cursor": {
          "ref": "79de6700-9cc4-4f57-a281-1a3b449b6bd4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38d8e002-b980-4402-b67d-7653f1401e65"
        },
        "item": {
          "id": "147bf2c6-3442-41ae-8bb5-9bb3dd13a1cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b21a467c-acbe-47e3-8652-1f1e16ec0e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed785e1e-9d4a-4388-8470-3eb69ebc9f14",
        "cursor": {
          "ref": "11311f9a-7aaf-4ee8-8825-b0b85fc885b1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "43c46dc9-bf23-431d-876d-24ba07cd8351"
        },
        "item": {
          "id": "ed785e1e-9d4a-4388-8470-3eb69ebc9f14",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0e609173-397a-4bf7-8573-a70ee407b1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63cad42-012c-450a-a647-6550dfe77d86",
        "cursor": {
          "ref": "58382387-b999-4145-91c2-8bc1152aea13",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "23b6a7d1-1212-4fdd-a82b-50650564def4"
        },
        "item": {
          "id": "c63cad42-012c-450a-a647-6550dfe77d86",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d6800609-f055-4628-89d9-76a0e90f792f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e43038-6f1f-4a0e-ad40-5125f4456931",
        "cursor": {
          "ref": "3a1e1ac0-041a-4771-a7fc-22abeec5609c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "650deecb-3640-4e1b-984c-0871a62832fa"
        },
        "item": {
          "id": "a3e43038-6f1f-4a0e-ad40-5125f4456931",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8daebad8-1e32-4970-95ee-352d7d012d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be3d1c4-f7f1-4735-8ecc-a72a1ce22c43",
        "cursor": {
          "ref": "e9f8e274-e34e-4a75-9d4d-e2a79bb69306",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5d124518-bd16-453a-8e86-82c123810ee6"
        },
        "item": {
          "id": "2be3d1c4-f7f1-4735-8ecc-a72a1ce22c43",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "22b9f0e5-c08d-44a9-a604-b068bddfda64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa42c97-d0df-4a24-aa8b-2e6dd18505c3",
        "cursor": {
          "ref": "591a19b6-dbb6-4106-b51b-2a31abfd7259",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d9c16585-d0db-4cf4-ab67-48ab3bd101c4"
        },
        "item": {
          "id": "cfa42c97-d0df-4a24-aa8b-2e6dd18505c3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f032958e-aa85-4913-ad15-8e9f5580cd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37950326-9f8b-4a06-87cc-d1bc22f57fe7",
        "cursor": {
          "ref": "7d987c68-e5c1-46cf-a9dc-1b236ded29d3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a1fd93dc-93b1-4aba-b908-cf07eda50ef2"
        },
        "item": {
          "id": "37950326-9f8b-4a06-87cc-d1bc22f57fe7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a3409dda-8f57-489f-a76f-760f5a410bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f3d5c-0996-46df-81f9-c43fd8c8e30f",
        "cursor": {
          "ref": "06fe3b51-ac0c-47f8-8f44-8b678e642fc3",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3db4e2b1-03d4-4de8-af01-94b5b88f9631"
        },
        "item": {
          "id": "809f3d5c-0996-46df-81f9-c43fd8c8e30f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "00631b92-a009-4885-be8f-587bf59c3317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f368e103-db78-44b1-aa01-db05bdfda052",
        "cursor": {
          "ref": "5c0a791c-f834-4fa9-907c-5a314ab0a364",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ee8674f-1fb0-43eb-9aec-8c90e6513897"
        },
        "item": {
          "id": "f368e103-db78-44b1-aa01-db05bdfda052",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d1c91040-5938-4f66-8193-a0c276e103e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef404bc-3f59-4c64-9f0e-3974427b4fe3",
        "cursor": {
          "ref": "b426743d-5a66-48fa-8ace-04808f882ec7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79ba1141-4671-4486-9654-2cc509cc9af1"
        },
        "item": {
          "id": "0ef404bc-3f59-4c64-9f0e-3974427b4fe3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e1f0d91c-9ff0-45d3-a061-93cd1ca6fbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbba3d7-5146-4dfb-bd26-437c19ab85e6",
        "cursor": {
          "ref": "159ee0c7-5ac1-4c64-9896-8b8112341083",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f3c57cda-9a26-4971-8f4a-efe9b886a8f3"
        },
        "item": {
          "id": "fcbba3d7-5146-4dfb-bd26-437c19ab85e6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "162ec54f-4dd4-4efb-865b-9a1cb9d09a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb65474-3f86-47dd-a530-db67ff8c6e30",
        "cursor": {
          "ref": "17e53d2a-3008-4428-b1f0-d0a38150cf96",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "30074477-ed53-47f1-8859-3844c8d70a0f"
        },
        "item": {
          "id": "5bb65474-3f86-47dd-a530-db67ff8c6e30",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd92424d-280d-4db1-a08e-dbaefe7b848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1741bc-c227-4e8f-adea-a31e305469d3",
        "cursor": {
          "ref": "c0a66db9-a0cb-4780-9cb7-08a3bfa65f4f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0100a5f5-c72c-4263-a8a9-9fe03b19dd51"
        },
        "item": {
          "id": "3e1741bc-c227-4e8f-adea-a31e305469d3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ddae2dab-1d39-475f-b623-9d3cd81891df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a7c8ea-1535-4aff-9ddf-517500902e42",
        "cursor": {
          "ref": "f0738fc0-bd84-4d96-95cd-df2e1e3897c0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7bde247f-c3a4-47ef-a1ee-0ffb536e7584"
        },
        "item": {
          "id": "a2a7c8ea-1535-4aff-9ddf-517500902e42",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "147e5fa4-8506-4111-bee7-ba48749c3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9883a33f-189a-437c-8f47-48c28e070a46",
        "cursor": {
          "ref": "b415f0b0-f988-4867-bfe6-391eba01df91",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6e741bb8-6196-472f-8825-ee808f005a53"
        },
        "item": {
          "id": "9883a33f-189a-437c-8f47-48c28e070a46",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "15488587-de2e-47e8-8cdf-010fdda1daa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ed2a66-55ab-48e8-a6ee-20696d24df27",
        "cursor": {
          "ref": "1294f4ae-037e-4a03-a10f-e70a17544284",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "565d4ae6-371c-4f38-8eff-1080311be1fb"
        },
        "item": {
          "id": "92ed2a66-55ab-48e8-a6ee-20696d24df27",
          "name": "credentials_issue"
        },
        "response": {
          "id": "57df6349-889e-440f-9264-df959dff32e6",
          "status": "Created",
          "code": 201,
          "responseTime": 2017,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "907ef0cf-10e6-4f2d-8965-97e7baea3ff3",
        "cursor": {
          "ref": "51db4acc-9af2-4b57-bc7e-c8b9b948ace8",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b06ebadb-60ec-47d8-92d4-8dc07ce1c265"
        },
        "item": {
          "id": "907ef0cf-10e6-4f2d-8965-97e7baea3ff3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e629e056-f3c0-431d-8da9-6e82d4a71d0a",
          "status": "Created",
          "code": 201,
          "responseTime": 2828,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2da24f4-2848-4884-8eee-5b348895afdb",
        "cursor": {
          "ref": "e986a0e1-94f9-486b-bc01-6c2ddb0bd1b6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6d1eb1a1-fadc-401b-9f74-76380aae717d"
        },
        "item": {
          "id": "d2da24f4-2848-4884-8eee-5b348895afdb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7c9c19ef-4110-4049-a51b-c933c6db4edc",
          "status": "Created",
          "code": 201,
          "responseTime": 3231,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "207d94d7-570b-4d92-82a1-d40cf774ef9a",
        "cursor": {
          "ref": "74c3bedc-6100-4a0e-8f35-64d90f23d41d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "28952e37-c241-4e02-a74d-dba278a30ad9"
        },
        "item": {
          "id": "207d94d7-570b-4d92-82a1-d40cf774ef9a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "710d0ec5-e0e7-4fa8-81f0-a65db9325db4",
          "status": "Created",
          "code": 201,
          "responseTime": 2834,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9294a434-d10e-41b3-a51f-b40f2ac1c5e5",
        "cursor": {
          "ref": "be853390-40d3-4632-aeb3-8637308c8b05",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f1e38ed9-4df5-4bfb-9251-ea3390dc1cf7"
        },
        "item": {
          "id": "9294a434-d10e-41b3-a51f-b40f2ac1c5e5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "02bb50d5-df84-452a-8c60-358754285509",
          "status": "Created",
          "code": 201,
          "responseTime": 2589,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-30T00:42:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-30T00:42:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c0124a6b-fa74-44cb-b008-1ac86b48a86f",
        "cursor": {
          "ref": "1382b77d-ee2b-4b9e-83e0-37de3578bf44",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4aa240b6-5893-4bad-9952-a6d4fe2be98d"
        },
        "item": {
          "id": "c0124a6b-fa74-44cb-b008-1ac86b48a86f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a8d2822c-e905-4d0a-aa10-9e7fe9597700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1dd90acb-fc75-4447-ba35-a57581e545e2",
        "cursor": {
          "ref": "16a6d0a1-0dda-46c2-8c6e-3d8d616809bf",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca232769-761b-421e-b30c-e8ba2a83c99f"
        },
        "item": {
          "id": "1dd90acb-fc75-4447-ba35-a57581e545e2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "09947151-2977-4441-8c09-133836d660f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5388f29a-96c2-4e24-a793-808ac907ce25",
        "cursor": {
          "ref": "3fbd1403-b0e8-4fe9-8249-1274a83b6494",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "390b75ca-a31d-4732-99e6-cfb077c4cafc"
        },
        "item": {
          "id": "5388f29a-96c2-4e24-a793-808ac907ce25",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c64ca3ab-d0fa-43d1-80c5-e71d599f3740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24271d0-83b5-4dac-88b1-00ba1fa018a2",
        "cursor": {
          "ref": "44cd354a-4e70-4a69-9a6f-32923866ed7d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cd321e8a-0c42-44cd-9523-9548e68177c1"
        },
        "item": {
          "id": "a24271d0-83b5-4dac-88b1-00ba1fa018a2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bdae2822-1be7-40f2-b435-36c4be4b9196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57855edb-29ee-4b81-afc2-328001836291",
        "cursor": {
          "ref": "08182408-98d8-4646-a977-daf1eb0878e8",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "173c77d3-8f35-4a42-91ff-cde888521fd3"
        },
        "item": {
          "id": "57855edb-29ee-4b81-afc2-328001836291",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "19a0dfec-4939-47c7-9958-842cdea58430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bf1fcb-4a7c-4606-8598-64238c570758",
        "cursor": {
          "ref": "f4eb59d1-a088-4fee-8cc5-deab82697593",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "779931f2-1676-4752-b93e-2ef7b5972d9f"
        },
        "item": {
          "id": "06bf1fcb-4a7c-4606-8598-64238c570758",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64b37b7f-2cfd-45e4-8d1d-fbda5df35f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80d5a02-08c1-424e-be55-8e988ba57edc",
        "cursor": {
          "ref": "8c5571d3-4aa5-451f-bdd4-f91933735bf3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "78cc300b-f0ff-4e37-8c0c-2e6c2214c9ab"
        },
        "item": {
          "id": "e80d5a02-08c1-424e-be55-8e988ba57edc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8eb93a27-6110-46ef-8357-4c74514b9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2a979f-01a7-4abb-9ef1-04161fffb5ea",
        "cursor": {
          "ref": "2e32b4c5-dab9-4bf5-9333-88d591901263",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d2940f3c-d154-4763-adc1-d9fbc03aadb2"
        },
        "item": {
          "id": "6e2a979f-01a7-4abb-9ef1-04161fffb5ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f9d213cb-f5d8-4440-b3ac-323c4ccf8c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff6f99c-3ef9-4e57-b5f5-4de66558aaa4",
        "cursor": {
          "ref": "29c3437c-430a-4282-82d6-0e17c5183350",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "49f6a9fb-9398-48d5-86e7-e6e10b3dc13d"
        },
        "item": {
          "id": "5ff6f99c-3ef9-4e57-b5f5-4de66558aaa4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9a73394c-d4ed-4c16-9dc9-dd4dc5b7df7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c0ec68-fb1f-44c5-ad71-23bc72a3ba04",
        "cursor": {
          "ref": "3be70cf2-5190-4b23-ad04-d1f89deff521",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "25b40db3-72b2-4487-9b63-ea8aad44dce5"
        },
        "item": {
          "id": "80c0ec68-fb1f-44c5-ad71-23bc72a3ba04",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c79f9a84-ef04-4cb5-a48c-f91a33b90bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7022d5-3e1c-47a6-929e-ca7e5d542d44",
        "cursor": {
          "ref": "49987541-0f63-4a76-b2ad-45991f68a871",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "92abd5b6-8b47-45d7-8026-3b28298232d2"
        },
        "item": {
          "id": "2f7022d5-3e1c-47a6-929e-ca7e5d542d44",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24214af2-9500-4858-bcd5-6eae63baf02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a009b0-1802-4723-96ce-5749853bd2d1",
        "cursor": {
          "ref": "d9b684be-01ac-4e1c-8a36-78c3bef3aa29",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8dcb9999-7cc8-4c61-81ea-5902e1f82478"
        },
        "item": {
          "id": "45a009b0-1802-4723-96ce-5749853bd2d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0a1b038-e4ab-4175-aaa9-995e1f863bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3613af4a-7bd6-46a4-b73f-9b660308b0a0",
        "cursor": {
          "ref": "bbe335ce-f0d7-48a4-92fa-0f6a429cc9aa",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b8265ce3-c7de-4aa4-b031-8917ff0b674f"
        },
        "item": {
          "id": "3613af4a-7bd6-46a4-b73f-9b660308b0a0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f2cd1db-52f0-40b8-8dcd-af26a52f85ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01621fb6-38ec-423d-a58f-2eadf1e1604b",
        "cursor": {
          "ref": "ac444cee-3cd3-4bcd-af2c-6158edbb19f0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2257b6f6-ee8a-4b54-9bf0-a1a9cc540396"
        },
        "item": {
          "id": "01621fb6-38ec-423d-a58f-2eadf1e1604b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "02a47cb6-8f1e-48bb-b21c-f7d2fd27fce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2093235-9d9f-41e5-8669-0e86eb6b295e",
        "cursor": {
          "ref": "09555229-28e2-457e-a77e-07e6cd96ad7c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "90c88dcb-f2f8-4f42-8601-4a8c4c3f86ea"
        },
        "item": {
          "id": "d2093235-9d9f-41e5-8669-0e86eb6b295e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4aa37fad-eda2-4508-aec1-746e83444b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ddeca7-644b-4cb8-9ae6-2ade071786e8",
        "cursor": {
          "ref": "5c9762bd-aca8-466e-af44-ad33ae6869c5",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "22028bd9-901c-4dc0-9d5d-3c225c65d329"
        },
        "item": {
          "id": "d2ddeca7-644b-4cb8-9ae6-2ade071786e8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3d262165-50a0-4595-9510-79c65479676e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2026e82-ec0c-4966-9d0f-16ba27466bfa",
        "cursor": {
          "ref": "8c0f2903-355e-4248-9c25-716e720de6ca",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0146a4a2-707c-4c90-970f-5dd2a78f3194"
        },
        "item": {
          "id": "f2026e82-ec0c-4966-9d0f-16ba27466bfa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "34b1aea7-1bf7-47b9-a9a5-25fca5c3e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0622d30-f46d-498a-9524-2a0ad1c43f94",
        "cursor": {
          "ref": "7be24839-e648-4903-9d00-38c29da03aee",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bd7416c4-7178-4cfa-8ccd-717e3941089e"
        },
        "item": {
          "id": "b0622d30-f46d-498a-9524-2a0ad1c43f94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26a045b1-2670-497c-abd6-13caa0b7c0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083bff27-bf50-47a0-8adc-5c9413743156",
        "cursor": {
          "ref": "8b585d57-a0fb-44a8-952e-df090e9272a3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "821cda24-22b9-4dcb-9e2d-dacf95b07c16"
        },
        "item": {
          "id": "083bff27-bf50-47a0-8adc-5c9413743156",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b4c16fca-6bee-4f5f-ade6-9adac6eeb9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43f9e5a-4eb6-4969-8739-6899bdff8e45",
        "cursor": {
          "ref": "45eaeebc-45d4-4410-a5d2-0518a4c02c8d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "28129d33-7e9a-484b-9526-0583a1aec31b"
        },
        "item": {
          "id": "a43f9e5a-4eb6-4969-8739-6899bdff8e45",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "24f08d78-c1ab-40da-8311-5aff90df392e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b4f32-94b0-4c44-b696-0e57b48e9de2",
        "cursor": {
          "ref": "0b2c9778-13c2-4ed2-b224-084b5b215929",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c590238f-6b73-4773-98c4-9c7a61d751cb"
        },
        "item": {
          "id": "736b4f32-94b0-4c44-b696-0e57b48e9de2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "02634e83-a36a-46a6-8605-cd771fcdbe49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578f610e-57df-4f7a-a6c8-aacd92582896",
        "cursor": {
          "ref": "25421a79-6ccc-4800-a0d8-50d8c723e4ad",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f2ef15c1-386a-44b4-8489-5a2f0edb8701"
        },
        "item": {
          "id": "578f610e-57df-4f7a-a6c8-aacd92582896",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f5d0e661-45f8-4f37-86da-259c93764061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14992995-b07e-4fed-966b-64ba8d1e2636",
        "cursor": {
          "ref": "7fbca4e1-14ab-47fc-8aec-85af8587692f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aa9683f9-090b-44ea-83cb-a0c9961a6113"
        },
        "item": {
          "id": "14992995-b07e-4fed-966b-64ba8d1e2636",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "35f57322-1de3-4448-a038-2d9d97fc7bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb7b1fb-dfd0-45f0-8d39-432f41839f8d",
        "cursor": {
          "ref": "fd80d907-504b-41af-9414-e1d547f89ab4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e5a3806e-1cd4-41dd-9fee-cc31087952d4"
        },
        "item": {
          "id": "5eb7b1fb-dfd0-45f0-8d39-432f41839f8d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad61b10b-c03c-47df-8d69-e6de249cd744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80093382-a828-4357-b256-900d8947b891",
        "cursor": {
          "ref": "679e3886-137d-4ae4-82f4-8703cc6ec73c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "50752a73-d8d3-40a9-8233-eef622697d61"
        },
        "item": {
          "id": "80093382-a828-4357-b256-900d8947b891",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f9a0c7b4-49f8-4929-b23c-64124b131f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a3e5c3-9aa9-4ae6-8541-2249d7d9d1e8",
        "cursor": {
          "ref": "28d69200-509f-4083-b9d6-db82ef198c77",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2f745a8b-bd9d-4431-ac33-ea4064de8566"
        },
        "item": {
          "id": "45a3e5c3-9aa9-4ae6-8541-2249d7d9d1e8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b5602ba8-18b3-46be-8846-90cb4d3a4dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff951dd-1509-44b5-b457-f7404887bc33",
        "cursor": {
          "ref": "a3c69c92-bcb6-46ba-acec-09e136b133f2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4b881049-1ba6-4c06-83b1-0f198db6402e"
        },
        "item": {
          "id": "bff951dd-1509-44b5-b457-f7404887bc33",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ecfc3b83-6601-4db2-bcd2-ae42f6623494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755acbab-d608-4785-b71f-04ad6849d9ce",
        "cursor": {
          "ref": "390ff9c4-f84f-4b0a-a524-54fcdc8bf5c0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d0f62259-72d9-4719-93bc-54fd53c49fa2"
        },
        "item": {
          "id": "755acbab-d608-4785-b71f-04ad6849d9ce",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fa828d4-0506-4a31-ad28-39ecd91a0cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3920c4b6-c093-490e-9574-798969b4def2",
        "cursor": {
          "ref": "e7228b5e-b2f7-4c0d-8c59-7550cd90d388",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6aa6c594-bba9-4c54-a128-e0d29ee132e0"
        },
        "item": {
          "id": "3920c4b6-c093-490e-9574-798969b4def2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0923479-c586-40cf-b5fa-e00f02857dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ac7192-091b-48b5-8009-d9dbb5199e33",
        "cursor": {
          "ref": "2bac06d6-5584-46e7-8d0e-5c14bfc7b2e8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f87b53ad-0fb3-46cd-85a0-b92c62eeeb35"
        },
        "item": {
          "id": "f4ac7192-091b-48b5-8009-d9dbb5199e33",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "87418954-37f2-4990-8148-f17d09c3a9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5a4907-8934-458e-aafc-fa020702256e",
        "cursor": {
          "ref": "57958387-1b7e-49fa-aee6-1a91301c3035",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f2b45a16-32a3-486e-8639-75f74c8f9bd6"
        },
        "item": {
          "id": "ee5a4907-8934-458e-aafc-fa020702256e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "90b1afa6-6d99-488c-bd70-b4589c899353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f890a1-029c-4779-84be-3c119405d09d",
        "cursor": {
          "ref": "287392a3-3553-41fe-8dcd-4440ad0e68d5",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "df2d75b3-22ba-4e3b-a10e-65d363f82444"
        },
        "item": {
          "id": "b2f890a1-029c-4779-84be-3c119405d09d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8db92a77-8b9a-4da0-96e7-916d25cd0bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3213a6-61fe-4c74-8264-b8a71aa4a022",
        "cursor": {
          "ref": "0a523bce-c7f5-4428-96a4-5fed97e0aaf6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "99e96503-761d-44d3-b644-5e4e8bfe81d3"
        },
        "item": {
          "id": "7c3213a6-61fe-4c74-8264-b8a71aa4a022",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7afef0fc-d5f3-447a-964a-bbd52b3bdcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c240586-a8db-4ddb-9232-5d516553d752",
        "cursor": {
          "ref": "16e6ad00-fc9b-4b4d-ab00-a9ef62885f9b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "53d5b6ca-b532-4d32-a642-064df75087ef"
        },
        "item": {
          "id": "7c240586-a8db-4ddb-9232-5d516553d752",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "285ee559-f533-4ad4-8ca6-cc1717fd8179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596c0a3-3f97-439d-9305-a0d92f7a6b2c",
        "cursor": {
          "ref": "a0ab117b-9fdf-47eb-a831-7da1276b15c7",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5f502a0-39b1-4ff0-8fac-e6cc3c15f728"
        },
        "item": {
          "id": "0596c0a3-3f97-439d-9305-a0d92f7a6b2c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f1ee840b-40b8-4486-b4ae-057f14e689b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cd88ad-f38d-47cf-8172-ea05f04a90e3",
        "cursor": {
          "ref": "c0566a17-f345-4c30-844f-3b237e5fc867",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5b2e57da-3e2d-4c22-b72e-e02921d293fe"
        },
        "item": {
          "id": "63cd88ad-f38d-47cf-8172-ea05f04a90e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80112e8c-b657-4def-a5ed-ae9bd5d054ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0749a4c-6b44-49fe-8b79-52b1b489cbc2",
        "cursor": {
          "ref": "46c41b09-27ff-4e71-8975-06d5ebc524ab",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "711f2611-4eb9-4194-a59e-917e0cd1b47e"
        },
        "item": {
          "id": "c0749a4c-6b44-49fe-8b79-52b1b489cbc2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e1808ed1-2af6-459d-82f7-708f3910b460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77407af9-0f36-414d-93e9-56431b6657bf",
        "cursor": {
          "ref": "f82e04a8-d265-4ba3-8321-bcf53a2fba9a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dad9296b-a9e1-4616-acb4-3203da9cc981"
        },
        "item": {
          "id": "77407af9-0f36-414d-93e9-56431b6657bf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e518b819-0d9b-437f-bd95-ed42ceb887c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbca9f7-f717-4e17-ad43-dcb51893479a",
        "cursor": {
          "ref": "dc70696a-5882-4281-a72c-8f605624cf8c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0995457f-0fbd-4a06-8f9f-24345a0ea058"
        },
        "item": {
          "id": "4fbca9f7-f717-4e17-ad43-dcb51893479a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fb90300d-bff7-4c9f-878a-9b133d8901a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcfa118-c796-480f-b190-f0fa3f08b519",
        "cursor": {
          "ref": "41d44b91-3a43-44ff-bc84-0bf5e84af23a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "698c0a5b-435d-4335-bae2-b2b41fe53bb9"
        },
        "item": {
          "id": "6bcfa118-c796-480f-b190-f0fa3f08b519",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "58f5ab2e-9a4a-474c-9377-ddd61859870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630062e7-ce73-47b7-aebc-661d8af17e98",
        "cursor": {
          "ref": "463fb754-085b-43f8-bad8-4628d1a4cd10",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8432938f-c987-4383-89c8-60990eb45c41"
        },
        "item": {
          "id": "630062e7-ce73-47b7-aebc-661d8af17e98",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "70f15f81-853c-4824-8c6a-38431e327c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da40cc1f-dab9-47d4-ad97-914024c11e66",
        "cursor": {
          "ref": "0ec98e45-0198-4a62-8d59-98af942765c5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4951aa59-ed2b-4078-a7f0-b1f51e8ebbcf"
        },
        "item": {
          "id": "da40cc1f-dab9-47d4-ad97-914024c11e66",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b1baf5a-4d18-48c1-af6d-c3f65550bb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca504b43-649e-4cbe-9244-24ef22527b34",
        "cursor": {
          "ref": "31741212-1d6a-4033-9cca-06b746314389",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1f71b710-4241-46f6-bf84-f9e692cdc2c3"
        },
        "item": {
          "id": "ca504b43-649e-4cbe-9244-24ef22527b34",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1691ee5d-e504-45af-a756-355540143048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae0131b-0f87-47ea-b9e3-c0113fae8b36",
        "cursor": {
          "ref": "6a0220bd-50c9-4d7c-aaf4-4a5a7ed8cbc6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "91616c90-d565-49b5-a50f-de55aa51ec83"
        },
        "item": {
          "id": "bae0131b-0f87-47ea-b9e3-c0113fae8b36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c9371fed-f2fc-46f8-b113-5274df72affe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3ab925-02b5-4a68-873d-61578f1e1d86",
        "cursor": {
          "ref": "5c85285c-a7e3-4b8b-a112-97ea3f00588a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0bc59a88-bc62-406e-841c-cdfa89717808"
        },
        "item": {
          "id": "9b3ab925-02b5-4a68-873d-61578f1e1d86",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93221d0e-134e-4abe-9e31-33b916fffa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65198df-72f6-48fa-b822-cc3d2135104d",
        "cursor": {
          "ref": "1bc7c3f1-3ebb-417e-a265-b282e82a85c5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e518b325-857a-498f-a2d4-add105d5f347"
        },
        "item": {
          "id": "f65198df-72f6-48fa-b822-cc3d2135104d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f81bb082-412d-4330-aa14-18bbd6698cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7b23ce-1b89-49a3-8016-c43f40d52177",
        "cursor": {
          "ref": "47128b1f-ddd1-4cfb-ab9c-1f09c0f7963a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9614d2ea-ac1f-4e85-bff5-3b0a01dfd914"
        },
        "item": {
          "id": "ea7b23ce-1b89-49a3-8016-c43f40d52177",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aea8d0ea-ebb0-4c6b-bc9f-04ed45d4b86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d932e08c-4dee-4229-8935-bb4df33ad9ce",
        "cursor": {
          "ref": "6f9e744d-9841-47f2-83ed-9a280e0dc47a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "041446a4-14ac-4b21-a5de-80de8b5d6d5d"
        },
        "item": {
          "id": "d932e08c-4dee-4229-8935-bb4df33ad9ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9350efbe-965c-4316-b0b9-13da02050dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6974a76d-9b1d-4acb-9a75-e2e7a64f07fb",
        "cursor": {
          "ref": "b4b67088-862b-4814-9ab4-22790d1b9bad",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d4555aab-fd27-4fb3-84aa-8ef8d35fb16a"
        },
        "item": {
          "id": "6974a76d-9b1d-4acb-9a75-e2e7a64f07fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c4b2fe17-6cd4-488a-8a1f-f10bdb31fd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54a8e93-5699-4760-9b68-b64dcc0e249d",
        "cursor": {
          "ref": "beaf4d41-0c3e-4fa7-b182-d9bc9cfa0de5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2bf41b6f-32b9-4362-9bd1-cdd76d1d8b5c"
        },
        "item": {
          "id": "b54a8e93-5699-4760-9b68-b64dcc0e249d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ceaf20e1-adcf-427a-8763-d847ffb99e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ecffb-cdee-4a17-a6d8-eb3835ccd556",
        "cursor": {
          "ref": "ea7ad9d5-1b4b-4442-89ef-118df1678688",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1095693c-11a9-4d05-9127-7db3c7abd95c"
        },
        "item": {
          "id": "e27ecffb-cdee-4a17-a6d8-eb3835ccd556",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eabb778b-1be7-4ddc-951a-d93067a42ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f46c38-800d-42ec-b4e3-a2675ba7a116",
        "cursor": {
          "ref": "f9aa9b0b-462b-4fa7-acce-c72d899b4660",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c0730558-f94b-4a4e-867c-fc7c490e49aa"
        },
        "item": {
          "id": "20f46c38-800d-42ec-b4e3-a2675ba7a116",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "14ae3b3c-dbbd-47d4-8ce6-3663b13d4a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32b7c11-aed9-42c1-b322-ad237c82ce75",
        "cursor": {
          "ref": "b6cc046f-3056-4fa1-9fa3-a2c142495f27",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "800c3514-9ae7-4568-ab3e-d88001723e43"
        },
        "item": {
          "id": "d32b7c11-aed9-42c1-b322-ad237c82ce75",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3a49fcda-403b-4280-bb91-2cac3e3d3996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ffb557-68cb-4b55-b1a1-673d3c036ff8",
        "cursor": {
          "ref": "3f2d570f-16e9-4583-b5bc-91af189b01d1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "01b358c4-95df-439a-a42b-b63b9f560786"
        },
        "item": {
          "id": "a7ffb557-68cb-4b55-b1a1-673d3c036ff8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9d886893-52cc-4ca1-b8ae-547466b86595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a56770-680d-4ccc-8978-722ada8cfba5",
        "cursor": {
          "ref": "6e392a32-7c57-4b01-934b-b2f107f2dab0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "def7d4f1-5d43-4d8e-b1c2-1a3a30f5bd2d"
        },
        "item": {
          "id": "99a56770-680d-4ccc-8978-722ada8cfba5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe0df22b-75fe-4deb-af5d-672fb9c33cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f43c4-654a-49c3-88f7-cd50261a76ce",
        "cursor": {
          "ref": "6e9a0aee-6d46-45d8-8bf2-d6ccf8d14935",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7bb5f50d-ea9a-48dc-bc7a-d566c4c633fb"
        },
        "item": {
          "id": "3d6f43c4-654a-49c3-88f7-cd50261a76ce",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8861b663-ca83-4dba-a72f-b1a5be341abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab69289-2339-4490-9745-06f58f8a4607",
        "cursor": {
          "ref": "a579f5c6-4ac2-4041-9217-88df12a5b68f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8b4a6fd1-ea56-45cb-a7e2-02eaccad8488"
        },
        "item": {
          "id": "8ab69289-2339-4490-9745-06f58f8a4607",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a28b2b7b-42bb-46a5-87fa-e1faa9e00cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219958ac-5559-460a-8656-5f13849e6a23",
        "cursor": {
          "ref": "154867e1-0fba-4cf0-ad95-9e22f39690d5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "370b9645-6649-45fe-9d9e-d2a67ff3de8c"
        },
        "item": {
          "id": "219958ac-5559-460a-8656-5f13849e6a23",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cdab95b3-d71f-4988-b9e3-5bfcfed7e620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f360c5-30b9-4e2e-9471-823bf730edf7",
        "cursor": {
          "ref": "a1211a9b-0e3b-497f-ac1d-0af938dfef9a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7a0d4efd-268b-4bc0-bae3-3a474d4f5495"
        },
        "item": {
          "id": "e4f360c5-30b9-4e2e-9471-823bf730edf7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8979276e-13ed-460a-8c5f-245d4ebb8bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f03992-bd5e-4b4c-8c93-8b9294a7c044",
        "cursor": {
          "ref": "176d2577-e845-4b13-b115-2889679d74ff",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "35a6055c-8213-4f2b-8bd9-6a9ce177c119"
        },
        "item": {
          "id": "43f03992-bd5e-4b4c-8c93-8b9294a7c044",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7c5415d1-9139-4339-ad64-f0ac0cbadd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df77f75e-e4bf-4227-856d-71d7d4442c81",
        "cursor": {
          "ref": "f08ebc06-b339-42ce-923c-9d31ea9bc401",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f316ab26-d1b1-4ec4-a7dd-be47ba298e0c"
        },
        "item": {
          "id": "df77f75e-e4bf-4227-856d-71d7d4442c81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "00e2600a-e045-4d6b-8e19-3f9b8cf45c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927d1ead-cf9a-44c8-af6a-179c2c0e1fd6",
        "cursor": {
          "ref": "269c2abe-b6ee-404b-a019-dfcd2e6e36b5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d52558e-292f-4485-9978-cbd1d4396aa8"
        },
        "item": {
          "id": "927d1ead-cf9a-44c8-af6a-179c2c0e1fd6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "634f9af6-ea8c-4372-8768-0039fa36939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15b8f0a-9548-4fd0-9e09-9f651ed3dfca",
        "cursor": {
          "ref": "4b1366d7-22eb-4447-8474-a75a5b54caad",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e36127bd-da03-40ce-9b96-0b3c2953df92"
        },
        "item": {
          "id": "f15b8f0a-9548-4fd0-9e09-9f651ed3dfca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "813075a2-87ff-479d-a310-e922008983af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9f48de-48e2-440f-b939-0fad37166041",
        "cursor": {
          "ref": "72e6c8cc-4d58-434e-8174-ffddc40a68c7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "21285f88-17b6-44ec-84e7-88a930043393"
        },
        "item": {
          "id": "9a9f48de-48e2-440f-b939-0fad37166041",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e6f1c085-a799-4535-ab7e-c132303ef056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e1fda3-19f8-4e6c-8040-420abf71db11",
        "cursor": {
          "ref": "27005fe8-42be-4252-b670-78574c5507a6",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ac37111b-f129-4d8f-8c0a-007d3a533439"
        },
        "item": {
          "id": "c8e1fda3-19f8-4e6c-8040-420abf71db11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d15ae1d2-7835-4957-b3fe-2efd959e6bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f2bfe8-b4c2-4c65-a9a5-855b9f3b62bc",
        "cursor": {
          "ref": "26be62ff-e9ea-402a-b1a9-7c2631d200bd",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "719b830b-afc9-4ea0-a673-335e24e93f74"
        },
        "item": {
          "id": "48f2bfe8-b4c2-4c65-a9a5-855b9f3b62bc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f9a1531c-7c32-47bd-8733-f8f62b2df96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ab4e96-4301-4458-ae88-dc583e1dbfe1",
        "cursor": {
          "ref": "a750d896-7ec8-4ff3-928a-4a84fd3a9e72",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6dd9ad35-4167-4730-9ddd-2127cefa82a1"
        },
        "item": {
          "id": "64ab4e96-4301-4458-ae88-dc583e1dbfe1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e6156c5e-137c-4f44-9f53-c3603868fcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf71331-055d-4b61-a92c-aec5539dc497",
        "cursor": {
          "ref": "decbd0cb-3d2d-4087-bf63-fdd942b51879",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ee863463-50c1-4c46-9f30-d46eb5d28803"
        },
        "item": {
          "id": "3bf71331-055d-4b61-a92c-aec5539dc497",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4fcfded2-80cc-4994-a8f0-1c5dcf3dbee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c2c3e9-8525-42db-af36-508d8b81ac14",
        "cursor": {
          "ref": "5c2d8b7c-06d7-4daa-b063-efd8f0f268c3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7758d2e9-2ca9-41e9-8886-4856bc14fcef"
        },
        "item": {
          "id": "53c2c3e9-8525-42db-af36-508d8b81ac14",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8d1ce96e-5e3d-44f0-9705-ee12a9e76d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d254ecc6-9257-47b2-b6cf-144bf5ee413a",
        "cursor": {
          "ref": "f7bfe8d7-2964-433b-ae98-9d4754930b67",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "195f9a23-8d98-4bf9-be92-3a65d6713234"
        },
        "item": {
          "id": "d254ecc6-9257-47b2-b6cf-144bf5ee413a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eb96841a-c3e9-4a24-af3e-18f7d6af90c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c09b949-18be-478a-a849-b99162fe7358",
        "cursor": {
          "ref": "af17673d-d5f5-442d-b7a3-544b22fd8aa6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c6625df5-c65b-498f-b35b-6f692e45ae34"
        },
        "item": {
          "id": "4c09b949-18be-478a-a849-b99162fe7358",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f32312bf-9b9b-44fd-bf7e-c0ca32f4dfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07640a9d-30ff-4b8e-93dd-46b924cd9585",
        "cursor": {
          "ref": "1487cf14-d0a5-4b6e-8845-febbcf757e9b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "729d982d-3227-4ef0-9893-64495b273121"
        },
        "item": {
          "id": "07640a9d-30ff-4b8e-93dd-46b924cd9585",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d94d8e5b-ee22-4d0d-8de4-4ecbc73f92ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7de10bd-8bd9-4364-8659-11167632bb22",
        "cursor": {
          "ref": "b5b19c18-077d-431c-ab6c-6e58b26d85a3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f4de22be-285d-48bb-97f3-1071b6466823"
        },
        "item": {
          "id": "e7de10bd-8bd9-4364-8659-11167632bb22",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "51c3f9af-2be9-44ea-8d06-80b069b0e354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07aa863-f909-47b6-b14a-16e529d1e371",
        "cursor": {
          "ref": "2e508b0b-cd07-4f5e-b582-e681de4f3536",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "62429018-51c2-44ca-8e7d-a5a5383de534"
        },
        "item": {
          "id": "a07aa863-f909-47b6-b14a-16e529d1e371",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "198a2784-3b1f-4726-bf95-6c5b3f2cd9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38e5915-187e-4987-a804-70bd9b93281f",
        "cursor": {
          "ref": "38bb3e78-d679-428a-bd23-25644ea5d980",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f94d28c7-4125-4024-ae63-758e9b6c3f91"
        },
        "item": {
          "id": "a38e5915-187e-4987-a804-70bd9b93281f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b35f5c52-b731-42e0-a098-a1c2921b119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9a6b13-6a90-4791-83e4-e515c9e33e93",
        "cursor": {
          "ref": "8a52cf4c-fe07-4be0-aacb-fc732df338e3",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4d662836-d7a6-4e49-a36a-8daac6318396"
        },
        "item": {
          "id": "fa9a6b13-6a90-4791-83e4-e515c9e33e93",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0fb5436c-fb6c-4f6f-8b9c-a1b898a16a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34049c08-11d3-4441-a15f-753715e70d4e",
        "cursor": {
          "ref": "bb7544fe-6ec0-436e-ba2b-e6e16c7de681",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0ada42d3-5c86-4c9c-acc8-88a2973cdcc9"
        },
        "item": {
          "id": "34049c08-11d3-4441-a15f-753715e70d4e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "51b04d2e-46ea-4937-af87-11f5cda8ee32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1d5a98-b6c8-4057-a67c-a9a36e7de8ab",
        "cursor": {
          "ref": "a37b6a0b-4cc2-4533-90ca-3666e2fe99d8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "68374ccb-dfa9-4f39-9cb8-82367e1e7cbe"
        },
        "item": {
          "id": "6c1d5a98-b6c8-4057-a67c-a9a36e7de8ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f0522bd8-97a1-4a16-a83c-c301950500dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667402d4-6a81-41b7-a376-07a369a92a6b",
        "cursor": {
          "ref": "1b0cc3c9-a5f8-4503-9ecf-ed5310fb41eb",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2c32154a-a536-4d94-a2c6-427cfaaf4595"
        },
        "item": {
          "id": "667402d4-6a81-41b7-a376-07a369a92a6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9beac936-8643-4aac-bf13-21fdbae7776b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2558248-97bb-42f1-a8f0-e033c2a49465",
        "cursor": {
          "ref": "c87d8ca5-5451-4ff2-99b3-c8056e924682",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bb77b610-4cc0-4dff-924a-ac99bdd7b8ce"
        },
        "item": {
          "id": "c2558248-97bb-42f1-a8f0-e033c2a49465",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a48b489-202c-4200-8b04-20315e7f21ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31337829-f904-4112-8178-88f4dca73fc8",
        "cursor": {
          "ref": "305b129c-fb13-496f-8634-18060a2efad7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "650187eb-9832-4b50-b65c-dca450d7c7c4"
        },
        "item": {
          "id": "31337829-f904-4112-8178-88f4dca73fc8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f55b177b-626f-4048-8387-deb62549e394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87b6a30-ada1-4969-a883-cfe222ac3051",
        "cursor": {
          "ref": "f4eef68b-02d0-4d8b-80d4-1c8da4eb12fb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "007b0f65-277f-4ef4-b235-300170cadc6f"
        },
        "item": {
          "id": "b87b6a30-ada1-4969-a883-cfe222ac3051",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f252555c-61fc-4db1-aa45-bc66d75c1d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e1ee95-a6e7-402a-a77b-6660c8a8ad19",
        "cursor": {
          "ref": "abd73223-11f5-4c0e-bf8f-1e6b1fcc7105",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dea88736-b03c-48a2-8039-8dff80a9e8da"
        },
        "item": {
          "id": "37e1ee95-a6e7-402a-a77b-6660c8a8ad19",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0798d8cb-ea12-48fd-8a8c-3d4d8b1dface",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5019bda1-d75e-426f-98f3-27677e75daf9",
        "cursor": {
          "ref": "22dc601a-1abb-4cba-b92a-faeba74d43f8",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d9d6ef07-80aa-4769-be09-7142254ee69b"
        },
        "item": {
          "id": "5019bda1-d75e-426f-98f3-27677e75daf9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "479f0d5b-6c91-4c26-9789-6a388eb8afc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b908f2c7-4110-4296-9681-ec0b85a16891",
        "cursor": {
          "ref": "17b4b968-ce17-44f8-9afc-a59a47ae4ef9",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "697f1960-d043-42b9-abd2-e0abf9e280eb"
        },
        "item": {
          "id": "b908f2c7-4110-4296-9681-ec0b85a16891",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c3b90d57-c737-43ba-8b4a-27f37af10f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc830de-547b-48e9-8342-74a6f9fecc41",
        "cursor": {
          "ref": "1be0b1aa-1439-48d4-a02f-e16d094fa5d3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1ea91a9e-181d-4be2-b980-15923bde9014"
        },
        "item": {
          "id": "5fc830de-547b-48e9-8342-74a6f9fecc41",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d8b82f20-41c0-466d-8a6f-c7940b512c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc849076-97a5-4c2a-b889-cda941de3cd1",
        "cursor": {
          "ref": "89c5fa0f-8ece-4bc8-a52f-9b6e92c6ebd6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1194b0b1-71cf-41be-b9e4-dc1aa9b3120d"
        },
        "item": {
          "id": "fc849076-97a5-4c2a-b889-cda941de3cd1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ec319d85-740e-4152-9a23-4d2ede3cb8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c32d47b-ff73-4da5-ba68-7b44b5c5e889",
        "cursor": {
          "ref": "437b431c-0c5f-4ddb-8bbe-2f73bd073826",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6ea5d7f3-2016-4d46-bdbc-eadb70cc5912"
        },
        "item": {
          "id": "2c32d47b-ff73-4da5-ba68-7b44b5c5e889",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8c8a6a2d-ed49-450f-aed6-3584f7849fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d7909f-e137-40fd-9f58-073fae5d92d2",
        "cursor": {
          "ref": "d60a4e1e-c3de-40da-a4a0-51f5f728508e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "93993029-3062-4e52-9eb4-8034633f24e3"
        },
        "item": {
          "id": "69d7909f-e137-40fd-9f58-073fae5d92d2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df940068-3a20-4ead-b8ec-2a85df5f3f86",
          "status": "OK",
          "code": 200,
          "responseTime": 237,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "974cbf59-9f27-499b-aca6-3745c6e87d77",
        "cursor": {
          "ref": "72e6708b-f367-4cf4-a20e-4a62cd1ac4fc",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0c13a43c-3e12-46f2-ac2d-c7c8cdaf867c"
        },
        "item": {
          "id": "974cbf59-9f27-499b-aca6-3745c6e87d77",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ef5fe39e-9ba8-4cf5-8ff3-53db34428813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b78c91-9b99-4d3b-a66b-e959b98b645e",
        "cursor": {
          "ref": "eb3fe7e3-788f-411f-bcc1-9b2712c6ab02",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b57d10fa-c3ac-4da2-943b-a013fcb0f7fd"
        },
        "item": {
          "id": "20b78c91-9b99-4d3b-a66b-e959b98b645e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "355904f9-ea68-4179-9836-768b7196e4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58e322-9e18-40ec-b121-c00bdd03f2d9",
        "cursor": {
          "ref": "19d868e1-a4b0-4066-a047-748e5ca19d85",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ba9c97a5-5e91-4806-a7f3-7bb394c4741d"
        },
        "item": {
          "id": "ce58e322-9e18-40ec-b121-c00bdd03f2d9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "afbee6cb-5283-458c-a9da-99e930fac849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b74867-0583-4ce6-9a4e-222525ddcede",
        "cursor": {
          "ref": "629d3696-4200-4a67-bf78-6069eda4ed92",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0a36fafd-eea1-4cdd-a94f-38720040e51a"
        },
        "item": {
          "id": "70b74867-0583-4ce6-9a4e-222525ddcede",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "67fcd13f-689c-40f0-897b-a3b20866618a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46470880-3f1c-410d-b876-aa910766c1cf",
        "cursor": {
          "ref": "5ee2364c-3b40-418a-915e-4d5b55952197",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "be259220-bffa-4d35-9737-7747fb014957"
        },
        "item": {
          "id": "46470880-3f1c-410d-b876-aa910766c1cf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e504c922-91fc-4475-bb90-af60841c6e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af62061d-5fd4-4396-a371-25c31e81b07a",
        "cursor": {
          "ref": "23eac766-0804-4d3e-ab65-7b2d016730e3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6aba864c-fb5f-4d31-81b7-7505517f4fc0"
        },
        "item": {
          "id": "af62061d-5fd4-4396-a371-25c31e81b07a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a0dc981f-9ccd-4b12-99e4-4a7a1dcede08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821ac4dc-06e7-41ee-8fd4-afe2184001f5",
        "cursor": {
          "ref": "11795b66-269f-481f-8e2c-dcbf65b2e147",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bbb74371-4c68-403e-8bd4-8533d4615d5e"
        },
        "item": {
          "id": "821ac4dc-06e7-41ee-8fd4-afe2184001f5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "aa4e72ef-5ca6-4d27-9877-72fd57ad2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d640c6-8efa-4429-be0b-4c4f952eb7ac",
        "cursor": {
          "ref": "ffd714f5-610a-4076-9a1b-e8aa8d6f04c9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f81fc524-ec89-4e50-a7dd-57d4fcd0c04c"
        },
        "item": {
          "id": "b3d640c6-8efa-4429-be0b-4c4f952eb7ac",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b450d1eb-2c77-47e0-abb3-030234f3a40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc11f399-7fb6-494f-b7f5-5d04342e4ead",
        "cursor": {
          "ref": "917ecf1c-9a2c-4dbc-b6fb-ee9716426561",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d8ac01bc-a62d-4fd4-8632-af81322dd37d"
        },
        "item": {
          "id": "bc11f399-7fb6-494f-b7f5-5d04342e4ead",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "67e555d7-671a-4630-b58e-58b8c19d3330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2181756-651f-4793-b5ea-c9498733ce22",
        "cursor": {
          "ref": "8b05e14d-c80c-41c8-8015-71d9931854f8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "25377180-550b-4099-bc56-9da0fc661056"
        },
        "item": {
          "id": "c2181756-651f-4793-b5ea-c9498733ce22",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6e5fd8a6-4759-418e-a640-f3f5920b052e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6ed1bd-bded-49b4-b295-4c42b960ae65",
        "cursor": {
          "ref": "dc165e6b-8955-4cfb-aff2-1d84a85eb50f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66a56902-a771-4ec0-accc-f57b49bfd2f5"
        },
        "item": {
          "id": "5a6ed1bd-bded-49b4-b295-4c42b960ae65",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d771fa3b-a34f-49a0-9954-4aeda759a035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4d8435-47f3-47b4-b545-10fcfdd40757",
        "cursor": {
          "ref": "5dc490aa-7a97-46e2-91d1-dcd915894e0c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3817e147-debf-4297-a023-b651a75a07e7"
        },
        "item": {
          "id": "be4d8435-47f3-47b4-b545-10fcfdd40757",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "80b7e8c6-f624-4910-b801-d924768dd2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f47596-11f0-4aeb-9718-89d131390256",
        "cursor": {
          "ref": "5a7fe34e-7eb9-428e-b821-1ec2aefa9538",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "611ab0a2-8b93-44cc-ae8a-ded686caea97"
        },
        "item": {
          "id": "58f47596-11f0-4aeb-9718-89d131390256",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a8ae33d0-0795-4a74-b1ac-ffdd90f0acf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c97713-cee5-43d5-86c6-f3b309b8edcf",
        "cursor": {
          "ref": "aad8adfe-d4cf-4c55-9554-c3396a998b3c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b6177061-de7f-4135-8e8f-4d9ae8319050"
        },
        "item": {
          "id": "f9c97713-cee5-43d5-86c6-f3b309b8edcf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fadb6afd-9535-457b-a5b1-75ff4b4ba26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e0b99-ccbc-4b14-abab-c89e7b9389d6",
        "cursor": {
          "ref": "7add8940-b0f4-444e-8ebc-baf4a2a74fd5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d9fc8d2d-a6db-4067-955a-de7b8e39d836"
        },
        "item": {
          "id": "cd4e0b99-ccbc-4b14-abab-c89e7b9389d6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "31d638fd-4e94-4a80-8424-49167fe0c27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f29465-81fc-410c-81fd-8546aa924fe8",
        "cursor": {
          "ref": "073e8b5f-1138-47fb-8939-a3ca9de13c37",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0f65140c-aa3d-45fd-8ce8-e6a264e209f1"
        },
        "item": {
          "id": "d4f29465-81fc-410c-81fd-8546aa924fe8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95f0a9f5-b6b9-4d38-aa63-650189665d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beab6dfd-492e-4863-b480-07e0d7a143ff",
        "cursor": {
          "ref": "c6f91a7c-2d47-4480-ba56-b840a38406f4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4a25828d-3419-4a3a-9f8e-117d79f5bc24"
        },
        "item": {
          "id": "beab6dfd-492e-4863-b480-07e0d7a143ff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "25e10cb0-45d5-4cb3-a5d2-8bd4ddad9511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5320afa1-6514-4342-abd5-7565e350a91d",
        "cursor": {
          "ref": "f356f7ba-df3f-4a6b-82e1-71be04b0f801",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c303b165-b6f5-4615-83db-8c4e444f2525"
        },
        "item": {
          "id": "5320afa1-6514-4342-abd5-7565e350a91d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e28561b9-740e-4c15-a926-240a6257a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bc2008-cb2f-4cfb-9830-a051868529e2",
        "cursor": {
          "ref": "34676875-1605-43b1-bae5-7deab1f20074",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d107b66e-ab33-47b0-9d2b-5ae1b1034c77"
        },
        "item": {
          "id": "03bc2008-cb2f-4cfb-9830-a051868529e2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "43920955-9ee1-4a23-9e4c-375728bbbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c2ad45-9988-4cf1-8973-f75e069f91a9",
        "cursor": {
          "ref": "e361dd80-f568-4b46-b845-6dc960298639",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "81789973-5ece-4a33-ae23-3b24e0a2d552"
        },
        "item": {
          "id": "86c2ad45-9988-4cf1-8973-f75e069f91a9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c75d82e7-b974-4c75-8dd4-7729a317b8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a0c04d-b4df-4484-8993-f83d420c64a4",
        "cursor": {
          "ref": "bae9deb9-67ac-4192-8d9d-728cdf69e736",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "59fc943a-45f1-4167-b412-4f52b642d1eb"
        },
        "item": {
          "id": "80a0c04d-b4df-4484-8993-f83d420c64a4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4ea5b103-b15f-40fb-aa66-5187ebd7fffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1292d7-9a39-454e-85b5-96378196f052",
        "cursor": {
          "ref": "debea13d-0e8c-4650-9025-cf1a9b8f5035",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8cc0ef3a-8a39-41b8-818e-3c6116589875"
        },
        "item": {
          "id": "5b1292d7-9a39-454e-85b5-96378196f052",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a8f74c89-5eff-4479-be6b-847c368e8207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62667d6e-b82c-4b36-ae23-8830721d9bca",
        "cursor": {
          "ref": "cab87036-89c0-4b56-9204-bd6c94f078ba",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5694d87c-eed3-4ff1-8057-7ae3e4ec8f37"
        },
        "item": {
          "id": "62667d6e-b82c-4b36-ae23-8830721d9bca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c28dfbc6-da8d-478a-9550-157d86b08ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a6750-ca14-4eb2-b58a-55d1ab21490e",
        "cursor": {
          "ref": "b7b60af3-8405-46c7-b738-be2e4fb317bd",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4a6acf55-de3b-4808-8e1c-2b1d942387f3"
        },
        "item": {
          "id": "9e6a6750-ca14-4eb2-b58a-55d1ab21490e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "227bcf68-6abf-4720-8618-04cc82268166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b704feb-45ef-4636-9aa1-0e6006985a43",
        "cursor": {
          "ref": "8d15c84b-10d4-4316-bd7b-c4490f88e515",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1dda7c8c-bb99-42d9-9fac-42f47888baed"
        },
        "item": {
          "id": "4b704feb-45ef-4636-9aa1-0e6006985a43",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "00df2745-4acb-4eee-a904-60f542e201ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9d47c6-5914-4b6c-b297-802ea63fe471",
        "cursor": {
          "ref": "568dd03a-dad1-42d2-b2bc-92564007188d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d4df3654-e1a4-44c6-8e20-b8c18457aed1"
        },
        "item": {
          "id": "3f9d47c6-5914-4b6c-b297-802ea63fe471",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "705ab22b-b2d8-47da-beb7-8ee508cb1d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfb45e1-81f0-4d1f-bf64-cb897c830601",
        "cursor": {
          "ref": "869bb742-60c0-418e-b850-0c4ad82e48f5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3b6d6e8d-56c4-4c09-a960-1349df9cdb2d"
        },
        "item": {
          "id": "2dfb45e1-81f0-4d1f-bf64-cb897c830601",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f9686f21-df24-4741-86ac-6d71c75fe78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51284844-000b-4de2-b4d1-916691f19496",
        "cursor": {
          "ref": "90649bc0-db6c-4769-be9a-427d2c006434",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8e5f6cdf-3200-4171-b861-ee6d2cbadccf"
        },
        "item": {
          "id": "51284844-000b-4de2-b4d1-916691f19496",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "093ebdfa-efb7-4c42-9c49-10b915e160e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018793d8-ed3b-46c5-90e1-486d82ed21d4",
        "cursor": {
          "ref": "8cf9b9ac-0a4e-42bc-8101-e83c936bb9e0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3e8042a8-3afb-457a-b60d-916efb9282a1"
        },
        "item": {
          "id": "018793d8-ed3b-46c5-90e1-486d82ed21d4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1c2878e1-3f2b-45b8-8cc5-b3d68525874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139bddbe-a35d-4c9a-8436-03fb63e6b7e9",
        "cursor": {
          "ref": "17df01c7-194b-42ee-9164-49436bddd013",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a169e378-09b5-4514-813a-182a2eb0ed8e"
        },
        "item": {
          "id": "139bddbe-a35d-4c9a-8436-03fb63e6b7e9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "15284f63-926c-4764-8883-8fa30163b3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d2e2fa-005e-430b-9af6-69d097bd9c4f",
        "cursor": {
          "ref": "5a0351ea-9ffe-4a39-a645-95ac45b01899",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6d3b253f-0cd2-42dd-a932-b2c98cd822dd"
        },
        "item": {
          "id": "a2d2e2fa-005e-430b-9af6-69d097bd9c4f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4bf52961-de34-4004-8515-523f40ae7849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d323fb-cedf-4fab-a1f3-4a43dfd9b965",
        "cursor": {
          "ref": "8f0e51d9-58ea-4e4f-a237-53a5b193ff1a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "65a40114-4a42-4fc4-aa43-d9291b6b1f97"
        },
        "item": {
          "id": "b6d323fb-cedf-4fab-a1f3-4a43dfd9b965",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bb162d1d-c6d7-4ee3-8c1d-1fd3c13143bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d365b87b-3c9c-4359-88e5-930159240627",
        "cursor": {
          "ref": "8889d8ae-67da-4885-812d-f090c2a3accb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d76c023-5b5a-4df6-beee-0b9bc1364c59"
        },
        "item": {
          "id": "d365b87b-3c9c-4359-88e5-930159240627",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "abf4cf58-7d96-4cf5-adb4-c748cc9fb0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a8c9ab-dcb7-4112-bc9b-c98330af1b4e",
        "cursor": {
          "ref": "517c6b22-761a-44ed-89c1-e689d34b8710",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b68741b2-9078-43cb-a0d8-04f0f44dc866"
        },
        "item": {
          "id": "d5a8c9ab-dcb7-4112-bc9b-c98330af1b4e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "66c5ef03-8c39-47ab-b050-ffcd1fa7249e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9c70d4-3b8f-4f46-b8ef-ec522730cd5e",
        "cursor": {
          "ref": "52089140-4476-4f71-aa79-a96639420214",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d67d5b63-3fb9-48d9-ad4c-62c1b723c9d4"
        },
        "item": {
          "id": "4f9c70d4-3b8f-4f46-b8ef-ec522730cd5e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "246874ab-8754-4e87-8cff-e6310661ef31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299f5953-1e5a-477f-af5a-10e86749edfc",
        "cursor": {
          "ref": "8071ffd6-1050-45ee-8f12-84e16e999ea3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "838c45c5-f683-4458-828c-e28e04a4787c"
        },
        "item": {
          "id": "299f5953-1e5a-477f-af5a-10e86749edfc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f0270538-d9d3-4a34-970c-5f40222d73c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d16e72-8df0-4df4-a7a0-00ba03bc0b31",
        "cursor": {
          "ref": "054f51f0-d3be-461c-9f19-005c73098275",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f5da7080-af5a-4394-8a28-060e61ac7eb8"
        },
        "item": {
          "id": "28d16e72-8df0-4df4-a7a0-00ba03bc0b31",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "481d9c22-99ff-449c-b3b8-3535bd604a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb20ab-1063-491b-9ca9-5ae2001ca795",
        "cursor": {
          "ref": "7bd60071-6da3-4725-bb12-9e149adc0b71",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3be6bc79-05ba-4e53-b0d7-1eca9613b177"
        },
        "item": {
          "id": "72fb20ab-1063-491b-9ca9-5ae2001ca795",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6852480c-0171-4e56-9435-a9725b70024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a4e0fb-6456-4481-ae4e-60ac5f1cd1db",
        "cursor": {
          "ref": "f1c28799-2cd7-4e18-8a06-13cfbb22c405",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "78499e05-8ef9-4c8c-9f9b-6c1206563e08"
        },
        "item": {
          "id": "b9a4e0fb-6456-4481-ae4e-60ac5f1cd1db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cd6b779c-23e2-4378-bc14-f4f3d74b1fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265159da-3651-422a-ab52-8941d8fde327",
        "cursor": {
          "ref": "8b23e734-a5c2-48f5-bdf9-8ed06d4c75d5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "54e5bcca-f1e5-4d48-bb28-ad429505b3e0"
        },
        "item": {
          "id": "265159da-3651-422a-ab52-8941d8fde327",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "87ff305c-bf1f-40a8-8532-8f057d7c1142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b180876-23ef-4910-b494-3831be69005a",
        "cursor": {
          "ref": "a5bfffdb-36d0-41cd-a8d5-bad95093f24e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "01ea0973-0074-43d5-a616-712100d19e29"
        },
        "item": {
          "id": "7b180876-23ef-4910-b494-3831be69005a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ca77ea49-5eba-41ec-82b2-1353c935d1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fbcb9b-1774-4252-92fe-001276432a44",
        "cursor": {
          "ref": "cb30e6d4-3c0b-49f4-a28a-590f08ae2e89",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2e6e898f-6901-48cb-9132-6be34246041b"
        },
        "item": {
          "id": "41fbcb9b-1774-4252-92fe-001276432a44",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7442d62d-d073-4fb5-9870-af89121dcba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eb8d49-44d8-4f40-a0d0-d0f4f12f7e40",
        "cursor": {
          "ref": "54ac8828-4df1-43bd-9e40-bce549cdac23",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e1b70bc5-ed5d-4b16-98ae-08e9d96deb68"
        },
        "item": {
          "id": "b5eb8d49-44d8-4f40-a0d0-d0f4f12f7e40",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5bff5118-2732-43b8-8951-fa90b1eb7e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8435395a-59ff-44ee-b71b-3f2add5eb99a",
        "cursor": {
          "ref": "15941b72-4a9c-4f45-8d1f-742f5486a043",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8724c74a-d6e4-422f-bbda-666376e120e8"
        },
        "item": {
          "id": "8435395a-59ff-44ee-b71b-3f2add5eb99a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "02209e8f-ea47-4023-bdea-bcf11c7cabb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a4223-33f0-4113-8ec7-cb1aca1a10ba",
        "cursor": {
          "ref": "b29c6e12-57cc-4035-a590-4de4f7de887e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "971958c6-f784-464c-bef6-0bc0fe2848a3"
        },
        "item": {
          "id": "3b9a4223-33f0-4113-8ec7-cb1aca1a10ba",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "36e43825-ca60-4ae7-bda4-bea24c98832c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54725835-c1d3-44c7-ae03-594d33562d77",
        "cursor": {
          "ref": "4d2f2b76-7619-4dfd-a9f6-5d2743795a72",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d2ef913b-7ae0-4d70-be70-e7c8f5c9fb6c"
        },
        "item": {
          "id": "54725835-c1d3-44c7-ae03-594d33562d77",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5170dff7-d0e1-479a-bf29-2ccf9b0e5279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a5cd1-282e-439a-b1be-2dd005e02b84",
        "cursor": {
          "ref": "bd394d57-6e4c-4c87-b328-24b1fc000aea",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5925e3f9-306d-4741-b570-22fdb087d73f"
        },
        "item": {
          "id": "945a5cd1-282e-439a-b1be-2dd005e02b84",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1529dfa7-5cb7-4a6a-ae4a-72242f84e227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57706395-7cbf-4af3-9719-158c0a6601be",
        "cursor": {
          "ref": "9ae70a96-fd5c-4c12-9918-3561257179f2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ec63abeb-1303-43d6-aa9e-7df53ba68386"
        },
        "item": {
          "id": "57706395-7cbf-4af3-9719-158c0a6601be",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e7428e39-0f99-4358-9934-8d3f4d82ec3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106360ec-d55a-4a8b-9cdc-6b52215328d7",
        "cursor": {
          "ref": "3ab3c795-df11-4881-8e6a-8508884df941",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f9b28291-bf92-45ba-bc53-c9ac79b58d5f"
        },
        "item": {
          "id": "106360ec-d55a-4a8b-9cdc-6b52215328d7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b3369e6b-d642-4b18-b600-e1eb8c86e881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bc5d39-0fff-463a-9ed2-069ef3d24655",
        "cursor": {
          "ref": "bc657e5b-bb76-40d1-8adb-977493fd7740",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a3c69c9a-3b27-4315-ad6f-6ad9e7c1c99f"
        },
        "item": {
          "id": "d3bc5d39-0fff-463a-9ed2-069ef3d24655",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bf1417f6-7b80-43d5-ba57-699f597fb0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8add9ee5-a3bd-4811-9791-720bd4e978e8",
        "cursor": {
          "ref": "c8c2288c-06e1-4420-804a-9d046a9fc4bd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aaa082d4-5201-474b-93e3-3e0f170aefab"
        },
        "item": {
          "id": "8add9ee5-a3bd-4811-9791-720bd4e978e8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "316c7d11-c80d-4d94-a462-f24dfd16ebfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759e62e2-d448-4ec4-9a3a-4b930aa3f3e7",
        "cursor": {
          "ref": "536800c9-168b-4e04-a210-ea43793f2b3e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0b12fffe-ab9b-47c5-ad46-90345ebdb53d"
        },
        "item": {
          "id": "759e62e2-d448-4ec4-9a3a-4b930aa3f3e7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c5fdf266-6577-4a14-856c-7fd2b8cc0c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35b5a5d-03d8-470a-a0f5-5ca076a1f416",
        "cursor": {
          "ref": "4f7a57e7-b9b2-4b26-a8a4-3bc900c8d538",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "acad0f64-3091-43fa-973a-4a5b5fee4011"
        },
        "item": {
          "id": "d35b5a5d-03d8-470a-a0f5-5ca076a1f416",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "51905319-b760-4505-8bed-7898e68303f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538e1d2-0bb4-45b2-b21e-dc2a8b1bf414",
        "cursor": {
          "ref": "3fddd6b7-f28f-4eb1-bffb-0d9bbda7daba",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d6fdabe9-259e-4833-865e-1715ee2c7512"
        },
        "item": {
          "id": "4538e1d2-0bb4-45b2-b21e-dc2a8b1bf414",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e9feefad-c69c-4050-9f94-fdea51cf3ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35055fee-684e-4261-8d85-2abc592db714",
        "cursor": {
          "ref": "ef68f695-c189-4aee-82e7-fcc4ab905453",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "27390c90-84f9-4672-bf3a-1b3848fba31b"
        },
        "item": {
          "id": "35055fee-684e-4261-8d85-2abc592db714",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5919a6a8-5008-4a2e-ab31-67bea60f91c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1fa792-d1b7-4f6d-a333-33167c190362",
        "cursor": {
          "ref": "69e0450a-c0e7-400f-9cf0-a4bd167cc186",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f6105f91-5d20-4a8f-a284-10e28c74fb48"
        },
        "item": {
          "id": "2d1fa792-d1b7-4f6d-a333-33167c190362",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee25647c-f248-48b0-b1dd-bf52ade90ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af7a3ba-00e5-4f0a-a8f0-57c83ad22bb8",
        "cursor": {
          "ref": "a32be54e-3f0e-4031-98ed-ca7cbc1ae570",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a8b2084d-8917-4b81-8fb5-117df22174a5"
        },
        "item": {
          "id": "9af7a3ba-00e5-4f0a-a8f0-57c83ad22bb8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e9020256-47c1-4606-ba9f-6bd3075803dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d274c1a-74f3-4b9b-8ff4-ef58e64112a0",
        "cursor": {
          "ref": "e471614b-6e93-4bd2-b09c-36a374121fef",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a50a6dd8-8ab0-4816-8157-25d404eaccf2"
        },
        "item": {
          "id": "6d274c1a-74f3-4b9b-8ff4-ef58e64112a0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5c716813-6308-4a68-a8d0-545b45e9152b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a120034-c41a-4020-adf3-f1b702445564",
        "cursor": {
          "ref": "3b528d5e-7b25-439a-a7e6-7a693c9fb2c0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "374d171d-cc21-4700-874b-23c6afea5830"
        },
        "item": {
          "id": "5a120034-c41a-4020-adf3-f1b702445564",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "57984777-e52a-4587-908c-efb9aa2b7a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101220e5-535f-4594-aee2-477f0dac92d5",
        "cursor": {
          "ref": "6014fb43-25a4-4fb2-a17b-87cc662fa82d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b05ed9aa-240d-4e55-abcd-d3024ec1f09b"
        },
        "item": {
          "id": "101220e5-535f-4594-aee2-477f0dac92d5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6be889b4-fd7f-4ded-9419-cfe65d5ac71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa3ac33-6cf6-4ddd-a057-167fef29eb75",
        "cursor": {
          "ref": "15e56cf2-cf21-45bb-a554-ccbed236d589",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9b019a77-633e-4507-ba47-18be4d31b790"
        },
        "item": {
          "id": "8aa3ac33-6cf6-4ddd-a057-167fef29eb75",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e4972c7e-4dd8-4937-bedc-414f356a8896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd13c1a-4528-432f-9cae-28705515626b",
        "cursor": {
          "ref": "ab240e1f-05aa-46c4-ab93-b5ea92bf44c7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b665a104-5644-4464-9a65-1cba7f7e8942"
        },
        "item": {
          "id": "ccd13c1a-4528-432f-9cae-28705515626b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "715cf99d-c3c7-4045-bf94-e38bf71041fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9e6fa2-b79e-4ec1-bc77-8b9cc649e1c0",
        "cursor": {
          "ref": "1e520f56-951e-4991-a98e-e74bb27e5c8b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cf2e4345-2c64-4c37-bba3-0df3b2f4a104"
        },
        "item": {
          "id": "8c9e6fa2-b79e-4ec1-bc77-8b9cc649e1c0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1256c440-4dc7-4b21-a784-093a2b02530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c4a1e-f2a6-4694-a595-5ad2c6c453d4",
        "cursor": {
          "ref": "502c48bf-a365-493d-856f-0c4de7ce5cac",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8fa01707-83c2-43c1-9585-44ce3a63e201"
        },
        "item": {
          "id": "4c5c4a1e-f2a6-4694-a595-5ad2c6c453d4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3ca478b2-9f11-40e3-9f19-de273ea235a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2e04f6-2ab6-4464-9871-067d07fcc391",
        "cursor": {
          "ref": "e8d69bfe-39b6-4c01-ac82-b78354a2f156",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2182c767-568e-4ca7-83b2-4794c54f861a"
        },
        "item": {
          "id": "6c2e04f6-2ab6-4464-9871-067d07fcc391",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c0fe1b6e-4c4b-4e85-a566-92cd55e2ed62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7a1ff8-200b-4ee0-97f8-a7b7d2d5fce4",
        "cursor": {
          "ref": "fe3b0515-dd31-4001-a4f4-5c640be1de69",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1041fbce-2c33-4a1e-9c20-30ddb2f40097"
        },
        "item": {
          "id": "3c7a1ff8-200b-4ee0-97f8-a7b7d2d5fce4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "217ba449-d71b-4adc-a50f-90ea16246e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c671d589-07c3-49c0-b143-32138416ce21",
        "cursor": {
          "ref": "3ebf770f-7782-423b-9ea7-466d34b456cc",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "86001db4-6dea-4516-aa79-787c1bfb3b92"
        },
        "item": {
          "id": "c671d589-07c3-49c0-b143-32138416ce21",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "42310587-59fb-4cb0-b8ba-662ab8cf96f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a4844e-7b35-4410-ae50-38ebb3b8bba9",
        "cursor": {
          "ref": "0852bacb-1b45-48bb-ae9b-b61107e9ea92",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "08fb71c2-5323-46f0-880a-053c0c2e3d29"
        },
        "item": {
          "id": "17a4844e-7b35-4410-ae50-38ebb3b8bba9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1f6b9fc4-7be8-4fb0-a1d1-11fdc57fb6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b09137-f121-4523-a4ca-34c677277463",
        "cursor": {
          "ref": "a2f4592e-2b78-47ba-b359-dafe6441fb89",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "25ecc59d-f336-4d20-a3e7-044f40d3d1a5"
        },
        "item": {
          "id": "e9b09137-f121-4523-a4ca-34c677277463",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0f914acd-7093-4109-909d-65e188fdab4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e34413e-f91c-4042-bfc8-4ec46d0d6664",
        "cursor": {
          "ref": "68c664e6-975d-4746-a163-faf43feee98e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0bf40c60-ad67-460d-a6b4-e6d85bd44efa"
        },
        "item": {
          "id": "8e34413e-f91c-4042-bfc8-4ec46d0d6664",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4e9ae82f-061d-4f72-9c3b-f2a884d9d179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62400242-02fc-4f3b-86f0-563f56d43f8e",
        "cursor": {
          "ref": "ee889571-45ad-40c9-80b1-d8bd59265cf1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "48de0716-d21f-43cd-a69e-bbdbf4b4518d"
        },
        "item": {
          "id": "62400242-02fc-4f3b-86f0-563f56d43f8e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a1aa2e3-abe6-4ac7-8252-d4f3076dfe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8955fcf-64bb-4c4f-b48b-1f2e2cd7eeb9",
        "cursor": {
          "ref": "8a812882-b558-4e80-a65c-ec6ee29d1e8e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "36610fe9-da12-46eb-a9a5-b5e36aa7ec8d"
        },
        "item": {
          "id": "a8955fcf-64bb-4c4f-b48b-1f2e2cd7eeb9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7b82bd9a-b311-4f7f-bda3-b03872e21a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca35493-ec4b-44de-8641-cc3905a12720",
        "cursor": {
          "ref": "de2c5f99-5d9f-43c0-acac-2d3a33e0e9b1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dc6896af-c753-4125-99e4-0e22fc89386c"
        },
        "item": {
          "id": "8ca35493-ec4b-44de-8641-cc3905a12720",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a18c527f-d431-424a-bc93-18147d50268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096c69e7-a0a8-4004-995e-86a2b1bedf6a",
        "cursor": {
          "ref": "788c5a4d-ef34-4024-a2bf-abddcfd5a316",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b5c79e6d-f305-4a06-8e98-c642a0cc1940"
        },
        "item": {
          "id": "096c69e7-a0a8-4004-995e-86a2b1bedf6a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a53efd88-3fef-4a90-bbe0-9c9a4d382293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18bea9a-7198-4f72-9687-127300f1ebef",
        "cursor": {
          "ref": "e0e3657a-18d0-4f03-bb09-c5c865d55c70",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d4207319-8860-40c7-bb2e-d96209cc8858"
        },
        "item": {
          "id": "d18bea9a-7198-4f72-9687-127300f1ebef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6c989369-39f1-4daa-9d2e-ee0ed5bd3b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd976a-ad6e-4ad6-8a50-e24f1470a5fc",
        "cursor": {
          "ref": "dcbe4656-0b3e-41a9-b122-fa8b82e46319",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a7c1d6cf-6a82-4c47-a062-20d723854f83"
        },
        "item": {
          "id": "1edd976a-ad6e-4ad6-8a50-e24f1470a5fc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9fd92a65-daa7-4263-ac01-82d8ce036617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedbe745-72c2-45cf-8b19-49eb18f80f36",
        "cursor": {
          "ref": "9d3f56dc-b5cb-4397-a82c-2cdbf6098e06",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "63e7f434-604b-4b5a-b627-fcd99f948839"
        },
        "item": {
          "id": "fedbe745-72c2-45cf-8b19-49eb18f80f36",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "24a052fb-980c-4ba3-bfb4-d11a3bf7d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cc0a8d-2338-4637-8964-e79b0e45ee81",
        "cursor": {
          "ref": "2ebd13aa-cba0-4369-acf9-2067deec962e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7a6e92d6-754d-441c-ae95-9ca2a23bea4f"
        },
        "item": {
          "id": "00cc0a8d-2338-4637-8964-e79b0e45ee81",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cba2f593-c7d2-4e30-a620-bdb251fc8f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83a4766-3519-4ab7-a016-0d56078dfb1e",
        "cursor": {
          "ref": "bf7d979a-363f-4790-a5cd-a60fdba73241",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b442720d-b769-4393-9219-866c635b2332"
        },
        "item": {
          "id": "b83a4766-3519-4ab7-a016-0d56078dfb1e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "084a16e6-4fef-4376-afb2-277fcce464fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6afe39-a3de-41bc-b5b2-8c973b8c4f5b",
        "cursor": {
          "ref": "71d01942-bfe7-479e-98ab-3ebb0fbbcfb7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "97d8be98-402b-40de-83fe-ad6d3bfe240d"
        },
        "item": {
          "id": "2f6afe39-a3de-41bc-b5b2-8c973b8c4f5b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ab69ca61-1106-4af8-95c1-059b2322d5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8108021f-c571-43cb-9f6d-8a440501d099",
        "cursor": {
          "ref": "203f5ffc-a048-4688-bc39-b8b7bd9935e4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "97680940-2046-4797-849a-5b4b4be2a357"
        },
        "item": {
          "id": "8108021f-c571-43cb-9f6d-8a440501d099",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "37137b94-c39a-49ed-b7d6-5805ec5592ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac493fa-deb9-41ca-a25d-bea8e0e28d56",
        "cursor": {
          "ref": "96c0656a-c655-4be8-a89c-8c7146b6c080",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "528dca07-7e23-43bd-8bed-fea0e6fa416f"
        },
        "item": {
          "id": "bac493fa-deb9-41ca-a25d-bea8e0e28d56",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7c5eb260-49cb-4450-9a7a-8ec5ef0789b6",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d167778-f684-4835-9fee-1b8c49bbea38",
        "cursor": {
          "ref": "abe9fa1a-c943-40b5-ba43-412aea218c53",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8a5fa043-b436-441a-ae24-ad61f481985e"
        },
        "item": {
          "id": "5d167778-f684-4835-9fee-1b8c49bbea38",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6077ed3e-d5d8-4d53-bb87-e91bb2718b6e",
          "status": "OK",
          "code": 200,
          "responseTime": 1790,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb1d05-4c42-45e0-af12-7ed9d3f7279b",
        "cursor": {
          "ref": "d9d87e75-ca08-4093-8421-220a31027d74",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fa835aba-66dd-42d4-aa14-076187eaa263"
        },
        "item": {
          "id": "1bbb1d05-4c42-45e0-af12-7ed9d3f7279b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d1d5918a-114e-4200-8f18-b84943a41574",
          "status": "OK",
          "code": 200,
          "responseTime": 2391,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355b648-cd2b-4f46-adc8-7792e6c4c906",
        "cursor": {
          "ref": "425eebb9-83b6-4f0e-a4bb-252d748a195f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2b93eab0-fc11-496b-a588-d4b66c7c45a7"
        },
        "item": {
          "id": "d355b648-cd2b-4f46-adc8-7792e6c4c906",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b89bc8a-d29d-485a-a8a1-85cd90028f6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355b648-cd2b-4f46-adc8-7792e6c4c906",
        "cursor": {
          "ref": "425eebb9-83b6-4f0e-a4bb-252d748a195f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2b93eab0-fc11-496b-a588-d4b66c7c45a7"
        },
        "item": {
          "id": "d355b648-cd2b-4f46-adc8-7792e6c4c906",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8b89bc8a-d29d-485a-a8a1-85cd90028f6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e4f580-538a-45bb-9115-06b42d540f08",
        "cursor": {
          "ref": "1d858078-6e5f-4862-ac80-8bfbbf694970",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a569a0de-ca4c-4619-aeae-9f422692b56a"
        },
        "item": {
          "id": "b7e4f580-538a-45bb-9115-06b42d540f08",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96576e5b-2582-485b-89bf-22ba209da936",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcf55fd-f663-408b-85f7-352b4e0fe992",
        "cursor": {
          "ref": "464b7ff4-9e0a-4d5e-bb92-fd0430fc4df5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d43dcee2-8a2d-41ce-bdbc-4f55ac532ba1"
        },
        "item": {
          "id": "7fcf55fd-f663-408b-85f7-352b4e0fe992",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe0234b1-176d-4c8c-83bc-ef09841e5dd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}