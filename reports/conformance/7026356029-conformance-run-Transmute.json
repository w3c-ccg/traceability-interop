{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "26da1e60-01cb-4c8e-8ef8-7fa88051489d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a4ff130b-52e3-4691-a0e0-ca587d320a60",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13b5f181-eec2-4045-abcf-d0cc3c5a9943",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "958a61d3-c544-4469-a96b-1ac5111f488c"
                }
              }
            ]
          },
          {
            "id": "d2d91a2d-945a-4c79-96ff-09e29bed47ce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1649f809-ddb0-4c0d-8435-3b0c0e428742",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b0547dbc-0cb3-433a-ac0f-22194475abf0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0519b4b6-8a16-4587-8980-9796495a31ba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ebad0cf9-346e-4709-968f-e8f588c481f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06bddd4a-dc26-462d-9542-439cfac6a9e6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c347be74-bc83-434d-82b0-cbf6f4ff581c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91c930e5-fd8c-4d1a-a86d-741da57047e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b743e31f-b473-4f2e-8ff2-b687ca2888c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90f9c772-7e21-4551-818f-ea2a8f0c8aaf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c64feee6-da62-4150-b1c0-39bd060a30da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8036076f-ed55-46ef-95df-5df28d5b5f59"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dfa2666-b5d7-48c7-8551-c104529fce66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "31cec14b-3bdf-4c80-9a98-135fa285f704"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "001b7802-f4a5-4f8b-8a11-978f15e162fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7387e724-d642-4838-a5c1-dadd2371f78c"
            }
          }
        ]
      },
      {
        "id": "ef08a3b0-c78e-4a77-a5ef-7e62b16621b1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aacfd166-fa73-4728-8ba4-d1cbea89b809",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07e02cfb-84a7-47b6-9614-b7c8f874f70f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "020a42f8-fd5f-4303-bd3e-546bf44b1a71",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997a0085-2270-4d35-8556-d369b55d89c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71cf8f2e-cdf4-40c1-a9e7-b9b88b399149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e02d9e0-d01c-44e3-a02e-f4bfd77d6d0a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0161258d-cfa4-481f-b6e0-e2b3b7dd1107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d1441cc-3396-4a15-9981-1cf8c6b92003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6724267-c4ce-47a1-93c0-081c2fd48be3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabe1acf-dbca-4da4-809b-af022c9ae9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e27f7e3a-dd7f-469f-9a0a-618442cf4d8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f8525ce-afaa-4e0c-8c2c-beb76f66083a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7949a1ad-703f-4293-973c-5966ed4651ec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6c7b8f-4427-4749-9d78-bb6c8ac3082c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d0a34c6-7250-4d45-9092-bb3e49a8f5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751f47d8-e604-49ed-b234-7bd87ebfd623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0a6035-33e0-427f-8576-1a99ae5acfac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca6c881c-646e-42ac-abee-022f45de8019",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce877462-eb7e-4062-8ed4-b9a70880d1ed",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a7ceacb-d4ce-405e-9ebe-9ca2db3049d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d2a3dd40-139b-413d-9b03-5cdbd3477eed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec5be265-a154-436d-8308-9e5119c29ac4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7e9646f9-8bb1-4fd7-a285-e2d4310e7294"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48aee2c8-f8cc-407c-846c-72b9014a9b9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2dd0c17c-c74d-4cf4-afbd-8294e8ece856"
            }
          }
        ]
      },
      {
        "id": "7bb5d5e3-1ada-4510-901f-5b6916d92483",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2602764b-0622-4229-8b53-e186745c155c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e643edcc-f17d-4da1-aaa9-67c417921eed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b0a0d988-c6b2-4402-8197-d75551c4500a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56497102-5612-4837-a4f8-9a089d359e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f998b995-fc8c-412c-b7ad-f5f582cc239c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaac527-64f5-4c2d-8dd2-6e5d9804249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fcf3677-b88e-4c4e-a874-d4fd0056c97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7a9025-0ab4-4914-8287-8a010887d731",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ddc0b7-26f6-41e0-9b2a-6e933e25997b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d751dc-31be-494d-a752-178987b95e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a67f81e-6ab7-424b-9bac-5bdcd2d23284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6aa3341-017e-464c-994a-035c61aa0a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015f28a8-8391-4dfd-8a4c-cc3b27b88152",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4f1271-8dec-47db-95a3-3b85297291df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db306526-bdb6-42d8-a5c2-ec0dcfd94f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93246e11-b7c9-4e74-ae43-3f837d5d1c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56b6495c-d898-411a-8da8-46bbfab5b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15b04a3-6009-478f-987a-216a283de49b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25bf7a0-4565-4206-88d5-25761a885fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71870a0-14a1-4fa0-9b3d-2e6f4fac121e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028c8d2e-7ea4-4fff-b839-49e8bf0942bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e61b8d24-2f25-4b38-8579-cb0339de6b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07374839-cf72-46ee-a6ee-f11048e73734",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a1f3e0-fc9c-4513-8bb0-c5903181364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9344fbd8-35fe-43d4-a8a8-ab71bc763727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d512da-469c-45c7-b6c9-478a27f69c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e12c0684-b460-4a85-887f-dd3df4bf7cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61fa234-8d5a-49e2-a2dc-2a59062f8abd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99077972-6f58-4f56-aa7a-220e5bf69d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8890c6d4-3b9f-4837-bbb3-688772ffd986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83bf70a-cc93-4fb7-b88d-d4f84c5cef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4307d282-3185-4a6c-ab4c-163f53e9d50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673bceef-82e3-4f4e-8c07-b079284520ed",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab4ddef-c2c2-4cbf-a5a2-f2273cf6ff36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b1c029-c752-45e2-b907-fb40ccb6fe52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd76003-c48f-4451-a57b-d33ec3d902f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48b63c0-2069-44bb-805e-8576a123bab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16643f48-0a40-4fca-aba2-f5e088223cfb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad418ae-046b-457b-830c-6d50fbac895a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244cc2ce-a05b-43ff-aed8-d31f97c410c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bbe383-db06-46de-ac7d-6d9b86d91ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8f68f9d-9f7f-4e38-ba14-acd46b98316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228d87a6-2bd2-46cc-b3b4-05433d9230df",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e170747e-34dc-48b9-a266-bdd1a937313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33ec708-7c5b-4737-90f1-424a9501ef3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20aa8455-0fb9-46d8-9b71-1b8ac0bf6507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe9b7f08-0b85-4b32-81d3-86b6b2d6cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d391b1-c9e9-47ae-a774-14d6e1c65b38",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a49377f-708d-48cb-a231-c6bbf1f69b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fe67f4-591b-4f72-9b09-6a085091f66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a5bf2d-7ff1-4057-8c78-a8d07c48a1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f2d3203-f51b-4933-9ee9-1a8694a0bf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06ead8b-432c-4e3d-81a1-dfa46dbabc30",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7aa0f4-c728-4b14-91d4-c3aa0f1ffb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9c4522-f8f4-45b2-bbcd-80cb0a73a59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4846467a-2856-431c-9a52-9dfa8244b507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39df25af-3649-4521-9c3b-9a597f429aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e543bdf0-911d-4ab6-96ad-9ae380b79963",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f282e138-c183-46f5-8465-f520edc95b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42186fe5-f7f3-44a4-8c69-d9376a8301f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cc2f44-7153-46f8-b98a-9db097744279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad56507-30c2-4ec3-9b2f-b7796eb32a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e838571a-709e-4cac-8fb8-b1ce41b9d612",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1526c86e-0e83-4e1c-85d5-a1a2bf9e2a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7d2aff-ec23-4edb-b1b2-fd0cd552e1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf98352-75e1-40a0-9f41-bdb90ec205cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8f40895-2813-47af-8d3f-1eb808e20af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bdbe04-152d-47f8-8916-bfdede3a5315",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ff271e-efa6-459f-8e0f-7122413e97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe90c4dc-7665-4478-bc4f-42324134a938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c1461a-a571-4db3-b4fd-fe7f24c1e921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37cb8109-7af2-445d-bdf8-8cf50185add2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aac81c4-d5a1-4342-bfab-5c0acead9c19",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d370b1-ac4a-47ce-82fe-4461533a8f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb77008a-a714-47b8-a992-2c4de84abf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5f6f04-d291-4a26-a675-6557c2e7af46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78ef6e69-c790-4fbf-be1c-2cf5d63a9deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7006e196-d2a4-49bf-b702-bf2670298499",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fbb90a-03ca-4e88-8b8c-263afda722f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ceb41f-0696-4243-801d-a7f6646a6f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74232ca5-0973-4885-93e3-7f39314eeaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287eef67-d814-4bd2-96ad-9fda5a74afe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac805134-d75d-403e-a672-2c577ff50d1e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7ef32a-6255-4a93-ac45-b8122fc5230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d06ca69-ddbd-4493-986d-51f079ae4031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc6dc7-5a2b-487c-aeb1-b717781bc526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca9e5ff1-1011-4d49-a76a-c51d4ededfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5b5df4-f10c-4ed4-a333-9bd3e841df5d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2e3be2-22d3-46ed-a6b4-62d9c2fc56ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05995295-ebd8-44e6-be74-d8ca637cb016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fab643-b69e-4fb9-abfb-41aa277d6bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d5fa5b-5e39-4828-be18-68e659349d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60278d9a-8393-4b4b-876f-ca331ed7ba35",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961969ca-abc7-4d7c-afda-c0c857e3899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a089c49b-3115-4169-b311-f51e14be3b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7105e9-bb89-45ec-9743-fbff6a3b7f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73dd444a-a6d1-49f6-8007-8b9de042c2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f392a132-ecf7-4d50-a2cf-34b4e149d76d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a74ddf-ceb9-4e4d-afea-7f5440860882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23ec8b6-b77f-4bbb-9a8b-82b1911b0fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c6fe47-b20d-40c9-a0dc-33f48098b381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fade331-e16d-4f84-853e-56df82858a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8fde83-f1dc-44e4-997e-16f1d5cc75f8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02399fa-be8e-4d11-84aa-6977ace544cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d715c2-6f17-40d8-9b7b-12d330843a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7e2f8a-17ff-44f1-9951-0763c1c3e6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b52d110-10e2-4107-a4e1-098350e90608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8f58a5-9d79-40ef-8ecd-69479c0f21b5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a86fbb-7410-424c-baba-de7b02892fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7422bc-0d27-44c1-afc2-fb3af6639383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c6b290-87c9-4b7b-92c2-864f2836b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3690a11-cc82-4616-b152-dd08d781bb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12669a9d-c651-4b4c-a214-449489a8ffb5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a285eef-5480-4af8-8e59-3c53661773cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52db61af-5e81-4b29-a85d-47062b080bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2f75ac-28e3-4aac-bcfe-17515d4d6180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b43fd4b4-b34b-46f2-b77e-f0888b2fbae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5700d1-22c4-42cd-ae2a-5f7201534225",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371c8613-a1e0-4b9a-ab20-028e20a2b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b191343d-c1be-4978-a590-425df9dee3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef70e36e-cb74-41b4-9dd9-56b50ab74de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "352d83f2-0bbd-4e12-ad9c-58fe6fc6c411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d872b3af-c0ae-4eba-ae86-c02f8c602ba9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2828fe-0565-484d-bdd7-bf0ae19d1bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4c03ec-2aae-40a1-817b-ecf32320fe3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4ef942-a853-4ed3-aa1f-0c3f33ffc06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "675945ab-17cb-4c18-adb4-d6e2955df703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091cacf-5f42-4005-b5c6-89e85ef93f88",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36696c0-8867-4511-ae02-f095890c3900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36209d76-12a8-4a19-850a-9d0b84d576d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a91163-3667-40c0-a31c-02915a390f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1de707a-5847-421e-9a36-d8b240d0f481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15647965-635b-4e6a-bd45-a6109eb284ce",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082becd3-c1c6-42c5-aa41-2796ecab04ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870dc1de-0fa4-43dd-9a61-66ae23ed6d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072f5be-6001-47cf-b37d-7baefbe75012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a96684-b26b-409d-8fc2-851c9d2c531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaef2fe2-cb81-41dc-b37f-d88d35ea880e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3036ec8-5696-4bcd-9c12-9ad4afe9fcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b7138b-145d-4c55-9f7e-ab969275d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e827b8-e579-47a2-8ee6-bd9ddf0b67ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3def35-fc67-4d85-9c85-8c18ad843fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f02ce6-d650-4f4c-b4b1-ad361453fbfb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510e6bfc-82c1-488c-835c-c0343bc58c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0733016-4277-4be5-965c-7d5765a317c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e168b6b-508b-4c00-a316-a11351f783f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f049b3-9ce4-4581-93b3-b315143e9b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c00e63-c0a8-45ee-bb17-0fd7dce8e558",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d1ca34-f1c3-43d2-8afd-6bde77b2b6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93b6938-d034-4e32-a04a-c337cc5ba386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2f44e7-307d-4840-b9a8-5601425fdfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6aa5f1-4662-4b1f-9ac0-47bf50f9a9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8f7038-7c9f-464c-a40f-c19ff1ed9682",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea60ac9-e38e-4428-8fab-f425ad64af18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a38877f-e604-46e3-9e0a-d6f4e7cb7ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8688b1de-04dd-4a4b-89fd-435aeb62e715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c47edb-e70d-46b6-89e9-83bc32ebe815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff5532c-f2e9-4170-bf40-8c2bd520fa05",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4394b0ae-f189-4135-b500-496e38b247bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0bd923-16d5-48bd-83d6-59e7aed882f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0ea1c3-9262-4220-8d30-e25a936f318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "978e3591-7a7b-4646-9cf2-ef39d0640a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e703b-0bd8-46f2-b39d-49fd57a93eef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1b3139-4c4f-4725-9201-16bb6fe40a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f530532d-0543-49ae-bef9-a384dfd2feb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262047a6-d7fa-49fa-a0df-25eae1809fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcdf51c-944a-41e8-9e53-b4f7f6540e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07c7c9a-8c14-4019-bc43-c6b973bcecbf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34da260-8d76-4107-ba62-67366dcef145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4de85b-c9b8-4acb-bb90-b899584411c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2757b791-d6a1-44f0-9459-0754968f045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c20c35-37f7-4349-b212-9696edb3373b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae67e58-cbf2-4375-892a-93fd4b877e94",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d65898d-34ee-4b20-9e1c-5065eafa829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72ea96c-fb42-4e25-88a0-ad322d2dfb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876b205f-57e7-4955-88c5-20240c771593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6053bc92-08ce-42d8-ac32-422239b35178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e9bd25-b726-4b02-ba87-46ba29fa500d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec396d4b-0588-48bf-a85f-d8d314c7bf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5883bc7-9e67-424b-a7b5-e11aaa9df55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b714ce-0a4e-405c-96b3-611e1a2b436b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1dec9604-e9ac-41f3-82f2-af7569d9bf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e81b4b-0b85-467e-a444-c32ad79cccbb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e86e09-6e1a-497f-914f-1ddba9cbe275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9945355f-25b1-48ea-9a75-9627326b9d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f69b52b-d2f5-4089-9723-0bb08f931aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f21a565-d359-4669-9e57-5ab7ad46734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bcd97d-3cf2-4e7e-8eb1-1ebbf87391b2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c870fa4-2283-45d1-968c-f1e3992328de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26b8fc4-ebb9-4124-8f0e-6eb89fdf26fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed3cee0-40d5-4e83-b16b-52a9bbfefecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6765c4f6-6822-409c-b4c6-fe20e97d10e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b602ad71-13db-4c4b-b422-fbac93708591",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec6639b-0b9c-47c6-a49c-68e67be44dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e2b0fd-f866-452b-b3e3-7865b3bc1303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488a8071-94ee-472f-bbb5-6e82efa3a6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a617a3d-2932-4e70-8a3f-8221079bcb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be19ea2-85d0-4bba-a957-ebfaa5996497",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196086b1-563b-455f-ad68-19bf77b656f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302e1faf-819f-4e93-a9d9-5448bbe8d4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c17ce9f-ac33-4023-a1ff-c6ae840c4aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e581e95-cad1-495b-baca-6eb05ecb686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c00a0b-ee2d-433e-a378-0ff92feefe10",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da45431-7ab9-4421-9824-5909a848466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36258c7a-42a8-49b7-9e62-472403298c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1014ff48-c26f-473f-b75c-cc2c514a527f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "659fb63f-d9ba-4bdd-bbfc-6048eb58e0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcfe39a-9a75-46d1-8ecd-aef696e87683",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a57ffea-afcc-4a0f-8fe1-4c8d4e764c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aa9d1d-bc6d-4e59-bcc9-8d33f4b5302b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8451a72-df63-46ff-bdb8-c7e57629fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b4d40a-f833-4f19-9d2e-1941829ee70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d014160-75e3-43d9-a47b-4751bceee5a6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3790fe5-bff3-4223-9395-d8da0866163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d929ab8-d26f-4240-a951-ad772044861b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fbb01f-f51f-45df-8399-4eb115f158fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae5e886-a9d5-418d-b736-f9a4eb79438f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c18765-757f-4ef1-adc7-3920041c8755",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42946316-83e9-48e0-880e-b91e7fef81d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647d3235-a5ca-40bc-bf4f-57aee5e99054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f4cb9f-8d46-4c2b-9b32-adab5b7d495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c670ae-8109-43f1-a739-a0d8ce43e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4500350-61e7-48e7-9aed-d6a50897f420",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef0ead-6829-48c3-a2cc-78d699dcfb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cc2d8f-6355-44fc-8e5d-46b8b40280e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62bdebd-6cab-4994-8fdd-ab31e368a6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e389e9-fe1f-4bc1-9e10-5e1a53f442c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e345f1e4-41f5-42fc-8de0-8dec9c8018a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b023b4b-f25d-4ca6-97ea-cd41771a7382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd52ae0d-f897-4caa-9349-a0a2be40fc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd69a6a1-e92b-4e69-8922-9d5b2906bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1698afd-643b-48aa-b7c0-0b6034f9126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bfaf3f-9d7e-40e4-95f3-10bf12df8300",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decf07f5-cbd8-448c-9db1-5c2381e3fc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7985f6a-6971-4bf1-b7d3-42de20827d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5ffa9d-29bb-4728-8a54-962cf5eef523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025b80d8-3c81-4465-9b5f-15861fbf15cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a6acbc-3fdc-4589-8816-4639a1ec4330",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d60a8b-c6a0-455d-8c5d-2d9cdcac3a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a36952f-9f5c-45ac-be81-0f7fa23f2ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c373f89f-983a-4118-bf42-e115b6e3aa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69ac900-6d4f-4405-b2fc-05b664b6f709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a19ec0-8866-4e83-bdbb-65b98379dfe3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0e3360-0adb-4f2c-bbab-fe0155cb7d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdce76c-1d20-4dcd-a272-ed6592a3caec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f786ea-3dd2-4ddd-8e16-102d81e103de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17c47968-e86d-42ea-a0eb-e38895806b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7084ce-ea6a-470f-89c8-6d736cc552ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9538e6-9e03-47d0-84f2-09ee844e6311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040efd7b-fd84-4d64-8a3b-d9a0a0e6bd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ce734-dfc0-4c9f-9076-6fdd9554a28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7d1fee-5ff9-41cd-b6d6-ca014bc5da42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02bcc81-5561-4dfe-a824-d3e7bcaf3dcd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3150f4-5d04-403d-b9fe-50057912d708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8734c6da-eef7-4fa1-8e99-706f094c43ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59286d8-c2df-44e7-8062-3cd820918256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "155c7c3a-ce93-4af1-a980-fd116658f934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a56d38-9aa7-4665-a8de-55ee97f76b71",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cd510a-043d-4255-bbdf-a4e47a4b2f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41c6245-a448-4dcf-901c-95d478a6b891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7308547-f303-46d3-9c6f-669afbe2adff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b472b111-bd42-4baa-9a7d-dfe2aaeaaeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb5e814-6f8f-40fd-ab05-e5aae1e3c90e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ac30be-cb0d-45ae-b09c-a9c96bd4d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d7536b-c2d6-4eb1-9dc4-a67007d4f0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f18f306-5462-47ee-9daf-e171001df955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c60a5c9-a7d4-4cad-addf-4e17b834da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa26efd5-a6f0-4a0e-8e20-0c808584c2e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72b9963-0a23-481a-8473-31ba320ad6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f8ab50-5883-45ee-9089-eb4123632eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8674711-c8b3-430d-adad-d447eb152250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc7ce61-a07f-4705-97b1-57ba986b7a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9670110b-3b7d-4a57-b7aa-8dcbb6423e09",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129fc02f-8cd0-4706-809d-6cfbae971dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8c806f-4fa8-4b23-acff-db4bad05ecfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a0126c-510b-469f-9e51-66315b8136e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50cd148c-67ce-4a98-8891-1d53a8116c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02745286-5393-41e8-9b64-bd40f2ab103d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37761bf-732e-4c33-be45-f26ec3feaad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd9edb-0a34-4360-9ade-b996fb9ffa1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4524c8c-b2d4-4f1e-9f2d-52209f9c1b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d9895e79-e969-4eab-a11c-b59d75e96a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f8c55-0ad4-46dc-b7e8-e161e2f40192",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b37c5ec-a18a-4a18-9eb3-f3fd72210b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d8aa7b-41c5-4a4c-8c81-412a5477ed96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7348ed82-93a9-4a6a-9cca-827e14f964e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c9fcbf-c964-4c32-b9f7-849b133f68ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f12c9f-fddf-4f54-9471-e74925ddd7ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10f1320-f31e-492a-b9b3-4e4d819ab564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4ccc2f-e17b-4eaf-8ec7-f93bd2501bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e55528a-ef90-45a0-a83a-7463d4315b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67c9ebd3-34d4-44a9-820b-3368431d56e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b59cc4-bd82-42fe-a6c3-a340d0737c19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90776b9e-ae99-478c-a9f9-40a519180650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef91f22-9ba5-40a6-b48d-1de6c3128193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f330686-66e5-4112-a85e-720689a9be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ec1edd-7f73-4ff4-a16c-74f9849d3f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09710d4-05c7-43b7-bb90-774dbac887d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38144065-ddf5-4755-a05a-fdc852326d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2ab3a5-59a7-41d3-ad0e-cb50916e6940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce76626f-4aab-4450-8755-9509b39a3187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c40b3cd-48a9-4e6c-a6d4-b478e12e6686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b2af8b-a233-4386-aae2-611cf1496cc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b36c84-0748-4e66-a4be-2d9171e6917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95816f9f-4c90-4f51-944f-cfdfab554ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbce336-8c8e-4baf-8889-d5d8ab48fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8f8c8a-18b5-4829-9545-63985afdf5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7319682e-f52c-47f9-8df4-9bba1b2383d1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36e970b-5c11-48d8-8bc3-666631dbf2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f7cfd1-9132-4b33-b391-54e4a5a6c631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08293ec4-e029-43ba-a2e5-c670adb28470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4af89a-93e1-46b6-8a54-82e19f5f15a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8d1e3a-8235-43f6-be45-239996efa2a4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43730d15-03fe-4028-bfb6-272f52979fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4b539f-168a-4259-8115-ee453b559da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3885c7-653c-4df3-880e-ccb58de73afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87fd5a2-1b2f-422e-9269-8dda68ab8d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567fe6ac-410d-46de-a980-6b6ee3320b65",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b887bb-9865-42a5-99f5-039b60336aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c69a88-5075-4639-b908-aff4a0115b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722913db-fa7b-44aa-ad1f-dbcf690504ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef963999-ef30-4092-9a20-da937b3f2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5833a3-18d4-4501-a6fe-d112e1ebf841",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d2ed61-f077-46dc-8a57-390d97a82bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662f8254-1d0b-4508-9823-f16a4c169b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd34e139-771e-4bc6-be91-5a4217261086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ae50f0-c94a-449e-9566-8050a4a8dbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd45954-c037-44cc-a602-5d701c0061d3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d406460-dcbd-45e4-9278-3ebf94da5eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba246636-5e78-47e2-a924-3addc4ffd9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86e0b7a-bc07-4370-b08a-128f242b6ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f32313f-566d-4982-9ba8-de27ee76e341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554fa355-4910-43a3-bc25-377330e6dc7a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd857d8b-6d35-460b-9fa7-c8bfe6b3d8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6b99ad-a82e-48f8-bab5-bf6f7fe78004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807635d6-8d3c-4ad7-ab82-94c655a31b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6ea524-743c-44fe-bdc7-dbe11f6fd4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583e0937-92ca-4d6e-9e56-a34bb1979709",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfe90b4-43d7-43ea-bb71-cc23f2b4cb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33f5b52-7789-4a09-8543-df0bb99e7af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d18af93-5430-401e-88e2-ca1cee1992bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef39e6e-c557-44d9-beb0-2d0aefd35177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0967038d-dd68-447a-83ec-8f41ad567120",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4bb039-58b3-4e0e-863b-b79c01980c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06991abe-1db8-4daa-a72e-9d9ce2ea5818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e75df5-8517-4dc4-9531-151d377663c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fdd163-156d-4b47-bd53-d2ab97208d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474895fb-f00d-4d73-a593-7a871fe40fc3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255b668f-0341-41e0-9c47-5c08a45a02e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d04f49e-7e96-4e52-a06e-0cd4291053af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f650d90-3a51-42fd-95fc-2e5ce647565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a81b2b-5d86-4706-8fe9-6141a41b1def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbea6cab-c438-4d1f-b04f-779e8155f852",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb3a04-fc1e-406f-b698-b98bdb8b5393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935a27df-5281-48be-8907-1def5f355d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0241d0f1-09ee-4105-a4e8-c579dfdfef97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f73d8a9-c230-4227-9c42-ecb0b97d0637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1310562a-d124-42a0-bd1b-f983945767f6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ff09c4-12d5-47e0-8a13-e54b07fd8bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12806683-8776-4fc9-a09e-fe15e8c53cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b755614c-50c0-43af-825b-70712604cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f55be67-4747-43bd-b818-6b2e5d67fe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62359a18-4923-4101-b00c-930b236eb478",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f204e8-23e6-4d8e-b2af-4d8d2566a1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cb601d-8e1d-4462-8178-e125d2b576ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b9abb9-c9fe-48fb-b265-3755ae900a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d57d20a-d028-4273-ac48-89f88eccc33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eac34f-4e25-40b2-9cd6-b64f8960d6c5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fbd9ed-c47b-4e3c-84f5-9a369e6dc909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3bbee9-8298-4002-8749-8918185900f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da94faa-0b79-4593-9997-dbccf58507ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "914f354c-abfd-4b57-978e-40b63c447723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9de144-75f0-4278-bf4d-05deb001a2cc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27ee802-4e19-4769-a93d-b4b918e5eefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c982300-151d-4a5c-8131-8d6dbadc204d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25a4c74-fa1a-4a3a-87d6-6d8fa9234219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f2f399-9571-4778-9104-3a02644224d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c969220-0984-4205-9def-33861e1af753",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d413bce0-5fc3-4e44-8535-92ddd9043cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db108be5-2b3f-44fe-a374-c74b9d248b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9112e84-67b4-4ffb-ad6e-9a0f1b1b5f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de47d61-feb4-4972-98bc-1d6dbdcd5944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4cb516-6ca9-454e-a769-763d2acbbb66",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d568eee-3bf7-4290-a6a1-39cd03a2502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe99020-4791-4c8c-a291-2dc160a9cff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b81e1e5-8268-43a2-9ebc-1fb810223f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ec7cf8-07e7-4e93-a1d4-55bb527221eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21de43ff-c079-474f-94ca-4cf48a793ce3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e363ece9-0124-4992-b8ee-e521f4d0b364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac235ae5-8c8f-4889-b545-68ae352ace10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725a5a42-634a-4495-83a9-f294c6ec61c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a5ae08-a8ce-448b-b97b-23734421f294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384e0d27-7656-4a7b-a25e-953616086a48",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c50ec3e-804a-495e-be51-30093217c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd79fdf-a4c5-41f0-9566-2881844a53ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab44c57-8675-494a-8378-ae3273c10698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63885003-a93a-4cea-9fe0-ad1ca886aa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dfd8ed-cfb8-49f3-bf66-0dbb7c54ea28",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ecce34-8035-4766-b47f-7c9e43385a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bb66b3-5f87-461c-90f8-702be45aefc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b129da-84e4-4b58-b580-4ad5e2360160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75e8027a-4ca5-4281-b8d3-11d492136b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db56619-3c2b-4222-822e-4dc78f3a1a00",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d09e58f-2f13-4eee-bf58-96cc645eb29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588eda1e-8665-48ca-ae94-50d1aa9ff159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593c4fea-d312-4add-92fa-e2d714bb040e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "583d0374-d362-40d6-ae4d-27302ea8f46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e2eda1-da29-4434-938c-788a8e8804c7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38f8d68-db2b-4b1c-8a73-92111de5660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d023647-f9a4-474b-a612-2748e973f87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8251fb5c-49dd-4e1b-bd3c-681e15edda08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94061ccb-fa3f-4b89-ac26-16a0c2a91787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad528c22-0000-45e7-ba4c-ed1526fa8815",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e906f35-2735-4fb8-b193-78f093ed8943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5ffc84-8d7a-4cd7-8c6c-6d7022c54f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4321c68-a2b9-47a9-8781-4ee77087c491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "209620bb-a037-42e0-ab25-6125a4bda359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af3656e-3fd6-4d37-b01b-58db63ad6502",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978f4421-4f9b-497c-bfef-c637ae70c8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07452d0e-8bfd-4276-9e60-f2f384bdbf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1842d827-1826-4481-b78e-b3cfb38786f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48df1ea5-9ebf-4408-8c2b-d31a6cf62e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422c6783-432f-4f84-b0fc-9b3071d5c331",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ec3a8d-9d5c-48af-ada3-159fcd2c8bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecec91d-d457-4566-8b42-7372b086e55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b11d49-8b01-4794-844c-dc587256e533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4133fbdf-a706-4d6f-8288-3279861c3802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e12c411-16f9-4c68-af42-4d0f90e7ac37",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2568441-2ef7-43ef-9a31-1c7a8b4e46da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc70d7b-94ee-4e83-9ade-cc691f09ee71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ca0879-0395-4ce3-a25d-787a7181e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c09dc5-ce5e-4780-a99e-3ccc6cd77597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0f600-9b0f-4715-b12b-5bd5d2f230a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0ae573-bdc1-4fc0-bf85-f86d6f8bf96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2210a78d-853f-4e43-9bfc-2a661ca937a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1358fbb8-922e-43ba-9996-a9e4b8ea9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5849837d-5771-4256-86b9-fd5a98bedf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f2e57c-7b69-4a6b-ae46-c97b0813b00d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83f5757-82d4-436e-8129-459475a01d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe85346-7944-4da3-8dd5-31d6211d73ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a30aa2-616b-42a1-86b7-ab27872998c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75268914-bc13-464d-976f-d6ea76c94bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d663d946-eddc-41eb-905c-c3ac41ab4e99",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e4d166-3fc0-4e32-bb49-2a058f7c95fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee9fed7-0951-4d60-b887-0982d160704c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4fe71d-8b95-47d2-9bd6-29b30d1fa30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d611b50-1853-4771-b0c3-00bd7d2d4d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6a58f-d14e-4baa-9a8c-490a86c79312",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54584393-8e03-424c-8249-d372f785bf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf0f2f4-780d-4aa8-a4ea-6afa249e1e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e86ef-d068-458c-80fa-620ac94788ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f8bc64-67cd-4901-8fe8-65d37d8baeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40be816e-5e40-44d8-a55d-f0455f646500",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d656547d-6098-42c4-b97f-e17bd81690ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d4cb49-93be-43cc-ade0-6b47aa5cfd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3c627f-3679-4764-ba97-daf791408e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8899aef3-5e3e-420a-adf5-b9ca959a51ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bd4770-23bb-4078-a273-1c6388cd1308",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe181cfb-c42a-4409-87ac-f78bb4bcee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1d7b4f28-3cd5-4ce6-9494-e9cda304d42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2a5491-67a1-4c6e-856d-c2f024dae669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "597eede2-eef4-4214-8830-1bdb36badf9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c2850db-761a-4b40-b900-53ccc8fd250e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a00b42b-ad38-4167-acae-4a631626c1f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd870f2a-efca-48e9-bb74-923f9a2385af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fc0a7fa-30b7-478c-80a1-302fe07798f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addf57b5-16f8-4748-8764-5e6488f9cda6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "717ed52c-8171-475d-856a-95edc2cc9aef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26d3897e-593b-4404-86eb-92ac645d42a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb28ecec-47b1-4562-9fae-2f8b1eebcdb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c5b915c-39db-4224-ae54-0cf35848266b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa579a1f-48f3-4cd7-a00c-177820b00883"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a3f002d-c423-4900-a92d-f02a3f4cd1e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a8e2fc3-ceae-4ebe-aebe-3fff912638a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e463c5c-a320-48bb-8902-41be9f97bd8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84551b36-39ac-4f8c-94b0-0900878c5580"
                }
              }
            ]
          },
          {
            "id": "d4289f47-bcf8-4c57-9d76-950daa66a35b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f8e58d5-d47a-4717-ae54-ce319ed43711",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3a95bc49-08a8-43d4-bfd7-ac9c9b6f29a8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f0616f-7b4a-47e3-81fa-aa415ae842b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3e478b04-7c63-44ea-8481-b4d974f9d66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd4865b-cc90-4ff5-9c04-df1b22255e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b0254e-3f15-411c-afb7-40c9caeadfdb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86fab55f-6a84-40d9-a243-0a9571a318b9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e978b2-acfc-4ba2-88ba-14233103bb1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae5795fe-9404-4cbe-ab99-5ffd24469a0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c0984b8-1942-4c2f-b2dc-ddd07f562661",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e64312e-ac87-43a7-8007-e073813a6634"
                    }
                  }
                ]
              },
              {
                "id": "9c2af230-f95e-43f1-94f3-dda795346d3f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c39d5086-c515-49e5-bfed-d733dc553f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45973f55-17bc-4dc9-b711-8d247a7b3869"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7a48caf-197d-4a17-a0b3-db85c71d15ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ab0a048-2e89-4138-a55f-9528f5df0776"
                    }
                  }
                ]
              },
              {
                "id": "450ef962-1a24-45c4-a9ac-8428e8c862e4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b8ad7f-cfa4-49eb-bc51-56e21ed5835a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05909ebc-bf59-418a-b5b5-fc23dac5f221"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "077b2a73-c1f8-4352-8236-ab22c396cd00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0c7c70b-541f-4a9b-a107-87e8c8613cd5"
                    }
                  }
                ]
              },
              {
                "id": "4bb7209c-6db3-4708-8f5a-bc96d82bd70f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d2ff94d-dfc5-4e65-8b94-30ba1f087c0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e9a5055-3e32-4e93-b9d9-98718ef0ceab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b542a1a-8541-4935-97d5-86f8407a0767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e584b57-657a-45c7-8afa-b7aaddf77f94"
                    }
                  }
                ]
              },
              {
                "id": "00dfc67d-1c1c-425a-9795-20bc81e7b64f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b343902-5f6c-4817-b6ab-eacdc48da3fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41461690-d829-4ba5-8bcc-e1877fbff14c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fc20cd4-87d4-4932-99e5-a4e14777bb76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b31c80f1-2bfb-498e-a843-ff668fdc5891"
                    }
                  }
                ]
              },
              {
                "id": "5854dc45-a373-4792-ad3c-d0ad8aa40634",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a238e670-0874-4f89-93de-be07f87c7f48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5eb6740e-2147-4e57-93ce-babe491316f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef3c536e-b187-4867-9880-713f11f976a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5950889d-4852-4bab-b4a3-0de1fedff743"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "036be6d2-598e-4905-8c5e-414f5c332481",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5008dfb-0daa-4b62-bfec-2dc089055c51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48c2791e-4524-4541-88d9-2eaf332ec82c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3080204c-a81d-41f7-93bb-709b66ac449d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5a796f2-d475-4db5-9b92-c18565ba13d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4fb80bdd-7a99-4724-96d9-9a49cbff9294"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a8aac58-4949-4e08-8c9a-77cd4371269b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe7e8717-45cd-4004-be18-a39d5db7ec8b"
            }
          }
        ]
      },
      {
        "id": "a8e5adef-26bf-4f53-966c-503669250034",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fa4fb150-4886-4b99-8915-1a9ae0b2d58d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c858740-b70c-4254-b0e0-b866171d11d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b482654-242b-4ed1-9dd4-a3418a02c64a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f4a440-dd9f-4d9c-96b4-8d37643eeb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e734386a-32df-40cf-9a6c-16d09a7f53cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d45590-97e4-4d10-ac6b-d2afcda84c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3ac21a-3da1-4fb9-bd76-be0440b5e7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca238078-7218-4e3a-bdec-f28c71e4a7ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683c7b9-6ad8-44e2-873f-fe820fb2d7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a49618-88e0-4b04-9bd4-c819c3dba419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81578660-e904-4206-b7c0-86d9828942f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a6d983-dd4a-4f24-a989-9ee5626692b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3199e7c7-a46b-45d7-9794-14cadaaf097d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcb8309-f4bc-414b-accd-fffeaef2526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697f3fcb-edb6-4d83-8a7d-5e79b466daab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490d4c47-51c0-42ea-8048-748263b10280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37a7895-a273-426d-8fb3-9c77a73cf4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e7ff7e-a7d1-468b-a0aa-6487e414a78d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89584dfa-04c4-421d-8b22-d9d9633ca911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc690a19-957f-4b75-a3ea-731dc84eeb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d4e021-f39a-451a-a058-5a06da38a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35eb1d8c-5fc4-4527-aaf2-99a07a77757c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00946199-9f11-448a-a51b-41048589ecb9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf04dc6-f988-4c84-a2e4-da520e05883b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21747b8-9486-47ab-b7f8-a1a6bced6238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9befc1-cd16-4d71-b415-634624bf5c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf1bf55-f0cd-4def-abd1-49de4f7cad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc953c-a21a-4d39-9ce3-9fc1adb8e38c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ea492a-a69d-4959-9f0a-bbba23348388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f695ac1c-f5ca-42f9-93ce-e510b880e520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92681486-f2f3-41c4-85a7-e9ced627ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc6b0d5-9b39-483c-87e7-1cd53f8856e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44682382-cab2-43a1-8a80-9dcca0d7bcf6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a4471b-5762-49b9-9255-c09836bc447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92c549e-c110-49ef-bcd2-79202f4bbf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d297628-1c75-4723-b804-e09de1fde8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af44e30a-4915-4078-8127-b222d98e52ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe76c50-fd61-4cb9-b0f4-5b4a5d6dd4e0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f4364d-ce2b-4dfb-be15-7e14de8f42b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cc1f2a-6664-4fb8-beeb-c949fe922bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc063cc-3a37-4fe3-a83c-80548bc56aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea199497-7be5-430d-b348-944327657bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc0f4a8-9f95-4d34-9664-add5f31735f7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5a0d4d-c415-4385-8b94-8881654f980b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd787c5e-fddf-49f2-8621-c9413b94f88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d162458-64ed-4a5a-9954-c9689b858056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb84cb9d-d439-413c-a6f1-4507df4e946d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174a4791-c9cd-4bcb-b63b-5fe79798bd6a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5260bc97-30ed-43a4-8acb-862a27a1024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0509ab33-62df-40ba-a01f-b3aa89968f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4431bb7-132e-4f3d-88e0-ee8c9d5d183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a5af5f-7c63-442d-9191-cc57513d8856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa97cc1-dd2f-4113-bd77-6f8ceb1953e3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcdcd50-02dd-434b-83c0-9b964a004037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb20c11-484b-44f9-8cf1-43ab9d4cb0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25c5173-25c5-4f91-b0a4-d0581664f583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d01d8a9f-1d15-451c-a044-e40b7e920e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f131a1c4-7029-401e-a240-c72fb60c2051",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4c58f0-6cc0-421d-ac79-cb4693e7c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54613847-f154-4d62-bd17-71c2dcb58014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046608a3-9d74-4734-a6c5-d05db38a8885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f94cf2-74ec-4f80-a38b-f0a5d6a1f3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebfae42-45cf-4936-bf07-0efb0858bbd0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3239d0-1f4f-482b-a8bc-743d7b8d7a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff2f7a1-bbcf-4f46-bbca-459591b498e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea986f-ff93-4223-aec4-2347a3468c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbf0418-be50-450e-b539-48e0995ee13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05cc18b-2185-4f09-b25b-9978a6eafd62",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b843d3a-a14c-4f65-89f2-e3f3cbb7ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2898f60b-3399-4e30-96bc-4393fa04dfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356f4d24-c5ec-43f2-99ee-8fae3a3be7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "773a633a-4d45-45b2-9c78-2806bb362e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b16139-30b8-4ec6-a4e4-96581edec96c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b8dfaf-ceff-49e8-8f70-d44c36897c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4af34e7-2df7-4ac5-a7db-2294da0652cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d588a6-bd18-44a6-8686-7a041604244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7de1e20-22e6-4b38-a4b3-ab689061a16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4a6d3d-1a1b-432c-8290-4b2f26bf8ebb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393c935c-99cf-47a4-a7de-d07d35c7977c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3957d847-8975-48b1-94e9-b5ab3f2c6dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925c3697-e166-4fdd-995f-59ea4b759ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "095db735-0ee7-4d07-86cd-1322fae8a38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05769ab1-09f6-4584-97cc-f99001dc7f42",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406f7ae6-6b4e-42ae-83b8-2041c277b777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeb5a40-2080-4e37-a44a-934b36917a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ba528a-d706-4386-8cd6-dbdad34b0756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cf64df-182c-4748-bedb-0c5c5a8fe86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afca630-f848-4c17-bb79-b99c24d9a50e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30422277-70d4-4e50-963d-16997853350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861afc01-fb39-415f-82e5-54f4f4c80ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e14f51-01b7-40ed-9388-2d3d2de49ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af5dc99-83ae-4053-97f3-6ba23b58e956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68282135-38d6-4ab4-ab1e-4b347d5a1867",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cc0a8c-7423-46a8-aa2a-4f36a9bef192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d67fd9-169e-4f24-ac80-f0ab871424c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab739785-4e10-4f5f-88ac-bea09ef9e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27167515-14cf-4828-8519-675ac28ed5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a83600-5e83-4426-a0d1-8a1563c41fec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6650af52-853b-4afb-a201-aec5c859a066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6defd8a-305b-46e2-8006-984c8bf80a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d36907f-7f60-493a-bdb6-d6b04df56237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a83916-2346-4548-943b-0c028d47a823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049d1e7b-65e2-406b-935c-2324147ff9da",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60cb338-9fcb-43dc-a615-83973c10a2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14586755-559e-4604-802d-e25e0a73e0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d22767-b59c-489f-8890-fc6bdbfeaded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a1075d-5ec8-4b98-80ba-fee1f5f84c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6931e610-6b4c-4096-b82b-5cfd7b8bdcb0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9e9ba5-b67e-4ed2-b5a2-0d3eb4719091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e140c2e3-f8ea-4cdf-8bae-aa248865a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021d08eb-31a6-4e99-9116-2cc71fbbc1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad627d75-af79-4152-8b67-800322676407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a60e244-f988-4896-ad76-e8bea780fe46",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e4b268-ab99-4ff0-a0ff-620fa61f4221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb4c2e8-9772-445c-beb0-51f37f57959e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2d5844-fed4-48d4-92bf-0fc4639610c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7fbc94-45bf-4500-b003-ed0e7f9a3978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7b1981-dcf0-451c-a000-78017ca16813",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08f87cf-b53d-400e-82b2-3c980fa11b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369718d8-0b01-4bd3-b500-47b367292fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5726cc09-2d36-4d20-908d-ba0d1a8f3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b531dfdc-c822-4393-aa3c-a7768d857fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae353df-d89f-43a7-87b4-591369e465f5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d3fe2e-a2b7-45a6-a756-f7f2bb204d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721c72c2-4dae-4bf0-b62e-a64c04e60a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1af3a6-78ee-494b-a499-574f15f568f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3ccf71-86bf-48e6-8d2e-18eff4088537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3021aa61-3889-47b1-8a0b-0fb180beeb37",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6f17bc-a7b2-4416-82a9-0ddd04411bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75309e14-bd84-4524-9455-7d4c6d53fc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21555e00-a7b5-40d1-b97a-920575d903f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f6f314-eea7-415e-aa4e-17267115eb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a87ce5-f5d5-4271-8f8f-4d56070ccf40",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5864f3-abae-49b5-b82e-7e5a43a7cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91e36b2-c5f1-4d42-9c36-1e5dd07aa0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9075c0-8c61-418f-8edb-ac5930f9b92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5664e1-5916-4f8e-bee8-da39a98cbee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6854f949-c3c2-48a4-af66-a96a0e048d36",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2896dd48-578a-4d16-bce3-2b68e7e9f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e80c60c-cff5-4500-b68f-580565bfe4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a75cc1f-02c6-4f02-8524-8ed2c1ba1d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "972ad19d-bd95-4eb3-aecd-cdb5a8ded6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a8360-d7f6-4e42-a7dc-956d90becf05",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5707c1ed-a447-4973-8819-e2d5a54f43aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b3c47b-eb29-4590-92b9-0e52a61b1afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168d221d-a5fa-4b10-9aab-c6df0b071326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "258db458-a132-42d0-8557-bf6f1ca33cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e3c239-34e1-46ac-87da-8872d1596502",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e867dab-1707-4306-9e68-b649d1803cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ded003-62ed-4b13-b597-69502437f6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be73b9c-3de0-403d-b1b8-dabe8bdd45ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12bef0d6-4079-4e3d-983b-ee06e895a342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0704fa80-f93d-4a51-bc94-0a7fc17a83fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dea9ff1-024d-44d3-a3d8-4e76599d03a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084581f2-be7f-4737-8265-c9e20267be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edc57eb-db96-4104-9933-c3c69cbcf6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "577a075a-9ab7-4c98-9215-df3469bbf756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f882f6-90b2-490f-93d2-dcb69950377f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe141b-d45f-4e96-8350-d9ec5c51893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c559647-c250-41bc-bd18-43af5572ff15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e57660-66da-44d7-a6dc-6daae0347fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b1ccf7-3f97-447e-a36a-366df351c45b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34083c93-0277-4891-b179-f69ea33ef9b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aa8096f-c251-4e66-b1af-bf9ca2bf61d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561e023-f016-4759-9986-e70b699324a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e431f109-2d2a-4484-897c-50be0c8118c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de1eb92-d8b0-41ed-9569-d0c9df126b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f39ff50b-898b-4038-a84e-bc75d3bdad84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e79ad56-f7c2-419d-8b5e-ddc0e864596f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80330ce6-e691-48d8-9a2b-cda97ca249d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89b45174-edca-4853-970e-5e2dce817d3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a33b784-f954-4744-a14e-cfd8038ee88e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7de87151-2c1e-4cea-a06c-b38ae62df944",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f8d4df4-0751-4581-a0fd-64734581081d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bc78750-df55-4133-9b4e-9f22be0271e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bf638e3-2ea1-45cf-9555-1d1c4e132a8e"
            }
          }
        ]
      },
      {
        "id": "ba07e42a-1fcb-4239-a971-7c814000e2be",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "17adbc5e-b747-4f2f-b5ce-ef7580110507",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a267828-1522-41d5-9bcb-222aeb10411f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0186dd7-bcd8-49af-9ef3-18aa449925f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0824508b-5a7b-4e76-a5ad-165f90103878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab135de8-2c0e-4429-96a0-2462c8887c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c733b75-bc5c-4976-aeb3-e09a28ff8a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b9ee09-eeac-4708-b6d1-bd5d83928e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c417eab-cd42-405a-af50-89dcc3f0861d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922fcb25-2e0b-4009-a4b8-03c6fd922807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fc0ad4-650a-473c-9979-4bde5d234ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a0cbc8-0c6d-470b-9de8-0c86681782c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b04332-b9e2-42f9-b898-3c46a647878b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b8634-abfa-4206-a5bc-a8eb0d2056f2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b65e2b-3963-4213-9fa5-4a32f9576d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba84f1a-00b7-4766-8d78-4595838d04ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3242a8-d40c-4066-98f8-cc68f88dbbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd502199-01f6-4c4d-b485-9ea3285bd93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effc85cf-ec46-40bc-bbc6-c92fedfa6b16",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53e0054-fed1-4a58-be65-bc920b4f7ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be6d512-59fa-47be-80e0-5af931fc0c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c41011-9d42-4e93-a901-549fe9169ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7637ff6-f08e-4f5f-a5e8-0819ee1515b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab938a0-9e40-4ac0-84c6-52d70bdc7033",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be27578a-c00d-4f0a-95e1-7e790cdf6c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d67ab9-2a1a-4219-b3bb-322d169acca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d91ee1-9ef8-4b1c-ad68-982992aad33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61aec92b-b41b-46f2-9040-04985128cf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd05b4e6-0783-42c1-8140-0fc20352b6d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f0c08-ea0f-4e9c-876e-98e114353ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4a0e79-685a-4361-afbb-95ed3955d31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad152e-8b76-4e12-8f07-372bdb14117d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "538c23c2-c998-4794-a5fb-173ba24fc39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82551c44-1803-451e-ac74-f85f6f4044c3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d263294d-e5e1-4069-9818-8eb33a8be69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43d780b-c44a-4a3f-be20-736bff30ae02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e0b506-cd1a-42ef-9116-fb19abeaa6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cbe405-7e88-46bd-b317-75864c32ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f651e18-6768-4732-a989-36c3a3f4885b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5be96b0-97b5-49f4-8570-888db3538eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeb2ed9-eba3-4493-924d-238bdf631496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ae911a-28e4-46b3-a43c-4bfcf08769b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ecb8af-3943-456a-b5a8-f5af19c9de52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fbf570-ff97-4939-8df6-aaed4d779141",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c024ce71-0c6b-4c76-a408-fa5789c298ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17dc2d8-d53b-4e68-bf78-891d125961bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6964dff6-be27-4c8b-9e0c-bd76b50d42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "872fd50f-ddb9-4a5a-8b23-3493225a73fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d56e03b-8106-41ca-857d-0217d915d180",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c71aa4-6b1a-49c0-b407-2d1e4f906f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5521fb-b681-48cf-a380-a720b76d7dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eb41ab-0bb5-414f-9990-1cf253e4b7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f47b54-a7cd-4b77-bc83-c1660825edfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61301c1d-9ae4-47b5-b795-c53eb1559619",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9588d0d-ed3f-4f83-be9b-27536c9a125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403ccfec-6043-4cea-9207-f666febdd255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3975ca04-959b-4bfc-993a-bae0f9917212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8840fe-6a78-4c3f-a0fe-4c5e4fe65c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31f7650-2fdd-4f3f-b434-1cbbf1b5b3a0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed27f6d-5825-49dc-b08b-4f720f5c4fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fe8c55-5ae6-43e1-a2e9-2fb5f790524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c960588a-badf-4041-a5cb-6d5d7695d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bce97ec0-a7a8-451c-8ab4-a5c097965f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138a230f-0305-4d17-a3d5-14356e042fe3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f1f659-e053-4cb9-965f-6b1306946e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a6c3ef-3501-42a5-b73b-d6ae2c143003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083e0184-093d-48eb-ab24-9bcab0775951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40d48f1-12e1-4909-8f02-0f9c134fb4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12040d74-d2ab-4010-a1bf-0b6da5454016",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9445c640-11d6-433d-808c-b102c056a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1bf638-066c-4a4c-8e8b-e48e0469c6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b05e343-b5e7-45cc-9bd8-ef24e47a7f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5208be-bd0c-4ce0-8a84-f12e90ab9dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6db995-bfd0-49c9-a131-15ffb272339d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539e3a7-1733-40fe-9d12-db1b08eee9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa3f364-9414-4be7-9580-27beb3ec8b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2127d60-f9bb-4c10-ad46-b7a0e7ba475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7822e25-f867-45a8-a99a-18176f98a3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a22c425-6e19-4b2e-9d64-6e8b47cc40f1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916a7f0e-ebf6-4458-b414-3907c20948be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a831ae-df9c-4816-9624-2a0e63e1cbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb64ab41-321d-4ccb-b0b1-7282a4067eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae4ffbd-49d9-41c1-9f16-c31651e7dcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5916639-ab0f-4b1f-a640-ae04bf36e9d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0b1aca-821f-4f9a-867e-8910698c09c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377a7017-40e1-4832-b9c7-2bb7ea2d1250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8220a2-8a65-4791-89c3-a8e3d99fd573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ef3344-367f-4aab-b130-5fd98325ffe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd4be61-dd02-4a07-b397-239468176ccb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060995c-21be-49fc-9c6e-f2ccd61a1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafb251a-79c0-44cb-ba65-d3505439615a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222ce95b-4ffa-4231-9d13-63789c861afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0851a59c-c3f6-4d74-be08-e8cf9d41c5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536848c8-e22c-4b0e-b462-27b5007921a6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5492364-e481-4558-aec0-b49f7f402090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88349097-3260-486a-af4e-66bb5b905e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99be40dc-af4f-4d41-a9c8-13a7f6b5f91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5320f8a8-b783-40ba-bf2d-1d2529328d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb30602-e24d-42ed-a44a-2dd6172fe3dd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d4ef26-50c2-4118-b1ea-45968ec22fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b95dc4-6d9f-4c00-b9fd-2da99fef3837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc1700c-9526-45d2-a249-6a721b6d71ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a109c8-6e80-4bea-a87e-3c01eecf92ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ae58b5-86de-46b7-b14c-c4b098d94068",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82328c96-292e-4050-8ac9-ffe3314845d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3411d908-6e16-4628-8821-5cec9a184de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bce7165-8429-49ca-9606-8df5a3fbc9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1305004c-7fb3-47f5-b514-1d9b2b51f76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e48947-9ded-4fba-b0a5-fbcd9a418df8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941ba8d5-add3-4b58-a3ef-0ed8dd8b402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa1cb5e-3d18-4baa-81ea-5ce77ea1c4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dbb3bb-3f67-4f1c-bf41-012c91545f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8815e8-c92e-4615-9528-443bbc57d6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07a5487-81a4-4ca0-8b2f-50e89050f7ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da13f213-3cb8-41c0-bc27-8dad04a66362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e90d7b-694f-4f70-891b-e31a0f91510d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f1bf19-916f-4541-8ffb-5ade6a64d8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bfcd7d-1e5c-4f5c-ae38-944ef3bccb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d0256-762f-4add-b952-621c6a033e28",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dae15fe-3ec0-4c83-836a-61f7f8b051e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142228af-f26e-40a7-a49b-29fe566332dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cd9b55-140c-438d-888b-ddda6787c64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a504430f-7bde-4fe4-ba4c-66d49df532b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a96e52-6995-401a-a97f-9ab9bce3906d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bbfaed-ff96-45df-9eaa-e302bbdf1f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1d37ea-f4ac-49ca-91c6-357309d39d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc273e5-a24a-415a-b5a2-25f7d5ee3547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04d7710-4d22-4fd7-bed7-dd88984c26da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275272e9-444e-4b2a-9e60-17671b4760a1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b08042-fc58-426e-b208-0e4d48d1e25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298fabff-1784-4768-b179-6f572525d1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e75393-d1be-40fb-974d-1d98784e3a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b221d1-2e8b-4b6a-b3b2-0f6dc7b09b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8e5bc6-af65-48a5-86b2-7d865b0c7c88",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c36f4e-02d1-458b-89e7-1e3904b5b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186d3a46-cd3b-4151-80fc-63e64a59fd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012ea5c2-8c33-4302-9717-249fa7e1dff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6beb761-bca3-4a45-a554-3d7984fe268b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cd2c5c-c0c8-4213-9256-d83e741730e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336a0369-4b53-4d72-8fba-2daac4ee81e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145a24e6-b792-47f4-84bc-33e9c5c33fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac1e101-689a-4ce1-81ee-b66d8a58afc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5efc3e88-38d3-4cd4-8922-b594a9e9b42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5887c8d-fb50-490b-94fa-dfae276a0a6e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34168f7f-e3de-47ab-8091-4e7b037aae40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24739b1e-d242-45c2-9121-1fe9b336c571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf4d809-927b-4318-9194-a0142a8bb23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f1b95e-c0ff-4fd3-94aa-a4da06794eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4765302b-7a5b-4214-b4fa-2256b6be1bff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e31d076-c696-4354-b494-04c405c5678c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77e2e99-3a1e-4152-8142-d6bffad30522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb7776e-27ad-4b98-9159-30b10e0dc8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc3344b-a736-4eb9-9062-be62b130edc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dc8e68-68d0-4c64-8729-4cf2b45aee8a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6142b373-d990-4745-bb8a-e339ca216524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858e7625-64ae-4aae-9e63-18238167b439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4d7600-048b-4e12-979f-15b795ec571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f01ba56-4066-4a00-9c99-36154a97f387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773d00a1-0b50-4ba8-bbf6-036dfead3d22",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e54fe55-317e-4d9c-b22e-a6291ea65c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230c1112-a37f-4542-a3cf-b5151b131873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40a05f-a6b7-4a6d-9f4e-ce6c9e248e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "699699d3-ed38-4470-9b1e-5b9847948ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2122909d-c460-438a-9da5-240010873ef0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d81c13-e141-4304-b3f8-d1438fcfc56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b797da21-f36b-42dc-93b2-b0c8f7c8336a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f02820b-1d03-488c-9f4c-6689bc9b19cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d91165d1-e6ef-418e-a790-fac235a5f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857b5f8e-e1b1-4bb6-9e11-6c142055f140",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7264b926-ce2d-469b-98df-49c5adad7daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d468a6-e522-4754-98e5-35cd0e98e7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c5a88f-9fe6-4c3a-ae01-30aab397cdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f5022c-3e34-4e3d-b3d4-46c9999f9144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58db23b-58f9-40e6-aa16-3423e7818a1d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a82813-d9c6-4cf4-bfdf-4e62ba562ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d2ff1a-50f0-4e8f-bfdb-03f7c026e84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ddf12-a479-4258-b630-4ce82a5204a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e8dcaa-7bd2-4976-8915-dc08428306e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd606192-c500-4c6d-a6d5-e7a162a18280",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab950e03-825a-4cdb-8699-b0fcdc596ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2726add8-2297-4b1e-997c-1aedfdf955e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae378a3e-d146-4876-b921-c161ff56919c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7012ef57-4fd9-4f11-8900-90e739e07763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df96614a-0157-4017-8546-a1a0c031fa1f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd84352-6539-4708-9732-4ca89d4c0de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e14108-2861-4cb6-b5bb-12014e0cc486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a22d51-49ad-4fdf-bcaa-1560bd6e7792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18346d6c-c156-4e0a-8bb3-16be51eec4e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43e20f30-e3ac-4429-b292-4ea034462957",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fa950ef-9327-4bc0-93f2-87b2a6314466",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419675c7-23af-4de8-b439-84d579cf9456",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7126ac-c6a6-48fa-8a3f-4a5fef0fd87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df74ede-5de3-4c71-b50e-493cbb8adcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c028405-041b-4a42-b89f-421a851a3882"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e0eca4e-0437-4b1c-bf06-1ea0384fb530",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b27cdfe-ac5d-491b-9caa-3538453c7997"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e870dbfc-3014-4ff9-8572-c230e431d229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c2a2f14-f07e-4b3b-8ace-a2cd96ba6f45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b7e8ccf-1cf5-418e-b9d0-e1d7c56ee0dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "577d2493-8fe3-478e-a5d0-549810124bf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47c87609-9c03-49f5-9885-ff392d05d535",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "644e83e0-14ce-4007-a913-b66e1db8a019"
            }
          }
        ]
      },
      {
        "id": "f673500f-a681-4d6d-9dfe-3f84d73d0119",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e8da0719-46a1-43db-91f8-51ffcfa2b27f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d3c20d6-70b7-4150-b206-480890721f6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94ab1a76-a355-4a3e-a836-8b2daeedb5b5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880f7aa7-60d4-42f7-84ee-d2f701a5cfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c910de5f-2be9-4f04-b840-1bbaa97a8a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18af5089-5ba1-41bd-999c-c2830b76b0c3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e1c549-3c7f-43f4-9da0-22585c3ba020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8d811f-9cb3-4fa0-8fea-5d0a5cf4cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9283b9e9-d97d-47aa-8727-a74802e7ea75",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad8b2d-7642-47f8-a4fa-b33319bc4a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521426f6-b6a8-42fb-8c86-d10a4d77f258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f1dcd3-29e4-4ac5-a249-35372a681b27",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67b88a7-c4a3-4ee0-8fef-afbd3c21f60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268dbd0e-a8ce-4560-9e86-583a26ac338d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6820af-a25a-4869-a728-3e3fdba36155",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d780aef-d5ba-4d8c-ab7f-30513a526f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec89c025-3d9d-4884-a3d9-4f6e13344ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bdcd98-da4f-43b7-a371-9851c3da1e57",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3a7aa5-5cda-45d2-b811-85e63f06bcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08787e9-1249-4e6a-81a1-460d198c818f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a32c08d-96f6-406b-9fa8-f7576eb0d4e9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16fa3bf-0412-4d15-a19d-30acd1b87010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3f5d5f-d718-4b7a-b5ce-fb8a84d1d6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6437e751-1347-4d2c-b56e-4834132bb1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8500c259-38c1-4de6-b2e4-b6ef377e09f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6f2ce5-b2b6-433a-ab75-a050ed663b26",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a201cd-7200-4099-b1ea-626e6f55f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10d5002-5098-4b37-b2dd-3f0111ed3a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9090833-0a93-4f00-adfe-6fe035bdfb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6fea64-7e8f-4d1a-89f6-9350b59bec7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06d6d18-c7fe-48ee-8a88-7819e7bc1dcb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5731a08-31d9-4e86-8aa6-059a8231df46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4226ca6-b09b-4a4b-a487-27f4a496e7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f84daf-1978-4cc2-b4bc-f534f78481fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa2fabe-2cfd-4438-a5ad-372240c58a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6e3f9-2587-4c45-81d6-1b9975da958e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66e3bf6-9626-4aa7-96c0-a4b58820804b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08a8b64-2666-440e-825f-8fbd5c799728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd26acf-bd84-429a-9d92-ebf00149464c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45ab179-dd02-47cc-afc2-3885708586e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c77afd-febb-4bcc-85ef-0316561f99d2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53505eec-114c-43ac-9630-4dbd2ce3918c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbd714e-2699-4cbf-b0c9-6057169060b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdf408e-4a0d-4127-ae3e-51438b20c212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10dc4ec-4bc5-4cb4-8d2d-db8e949c8793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f8f226-ba19-482d-8ed5-8cbc13cf5950",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b92d435-a8d5-4c74-bcd4-6d1a1009efbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01956886-b4a8-444d-b255-ff057e11bff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ceee21-8456-42db-976f-061fa83a402a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b669e9-e064-4fee-b3f5-96abdf4b0078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab5ce6a-76d6-4c13-b0b6-6493f0e44302",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b926bc5f-e129-4737-bd77-cd2d1901ad17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a00dba-7f19-4b2e-996b-c47635e34a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200079a0-563b-4795-98c8-b74cb2f2b6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22acd8f-ccd2-49ac-b4ca-97b3e936e7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9f4965-89bc-4d12-a0fb-2c6d6a0602bc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741d3e9c-afba-4782-8ca1-4ce3b5b8c781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8716ae28-40f2-42a3-999a-ddb4a89eb58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac4977c-d992-4066-a168-fcbadc215d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7758b4c6-1248-4b6a-8697-96437fc85aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470ea74b-08f4-4407-95c2-3766c13b5617",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f65ea9-d897-4169-9d19-5a7abf59e072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd4c8f8-939c-4bcb-ae04-a2d714aef2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b34dc5-3b94-43b0-be63-7e433222821c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4968a7-8df2-42fa-856e-174cc22d9852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8669ebab-264b-42e2-884d-785fd60d807c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57876ef5-a52e-4cba-8943-fbd12d62eca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e506f2-e7fb-4d41-9c08-dfbcf5edced8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c7aa0-9bcf-4b74-9629-655a46d0044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5200ccd-c547-456b-8735-57ba951bb607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fc9527-f2be-45f8-b046-2977a9adeebe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f56e1e-9eb8-42c3-aabd-79ea764f1c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d3895d-1979-4a72-b976-a978fa35dead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d05143-4c7f-44c3-812b-a51f324f9288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6575b0-45c9-460a-be89-754951964670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797aebd4-cfb3-4d8e-b54f-d073a8280810",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcb210c-bacf-42fd-9ad1-1dbd86c61f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7764b61f-efff-4bf2-a9dc-13e22d367ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ea3414-da72-4dbc-9909-04f7175aa16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53135509-c1c0-4434-9182-c848ebb53820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63713bc-ff7b-4748-beab-ec7c07d94143",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b730982-7808-46d7-91f1-0df70ffe16cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba88585-e8d7-40eb-abe0-19ab1e57bc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fba15a-a941-462b-b35f-396c4e6a69e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7d0c99-5f8c-49f7-b9c1-026f3c0e65c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac4d7eb-7222-4b9a-a696-c2fab4b52490",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4659b3-6754-47be-b2b5-7dc5f9dd3005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ff107d-dd71-465f-b0cd-4b94e0b04e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a46eaa-e3be-498d-aeea-2fd67cd74a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b90f86-da35-4fca-b37d-f16443c90df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c5c4c7-5fb2-4353-a9a7-ad13f07ef5f5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98409ef1-4d9b-4399-8a26-d86f6336bd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceaeee7-4342-43ed-a7bd-be471182be44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2662cb89-ca96-449b-8bbb-64450f8ecfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d443d80-8f7e-41f6-be7d-7179c40098a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e643d1-f67d-4b63-bd17-715ac87fddc3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94665d58-3975-40ea-9ff3-d01a44575b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bcf6de-b09f-41dd-9a54-a260a9deb60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf5743-8898-4e2f-92be-5539276cee05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046dc6f2-41bb-455f-b91e-be5af5e1d556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5317cf53-05df-442c-b00f-730053f600a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dec3057-ddfc-4e5a-95a5-af30a0d0f0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36dbc9b-16e5-41d5-a464-f1c90a59e0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5311ecc-9a1e-4528-80ee-10bab5099201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79274777-8258-4a03-bf75-207607fbc3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04200d1b-dfc5-45b5-9918-7f0ef6b22077",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e2009b-3b0c-4ac4-8ff1-d3fc4bb2d98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c4b68e-5342-42ab-9177-13b34085707c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e68a13-1cfd-49b9-afb7-2963180881c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4978bcb-9db0-48b4-b657-d42f80063add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d711a940-93bd-4495-82b6-71ebaf87c96b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c7c072-1aaf-4f73-b5fc-18fe24c47d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ddba6f-37a8-408c-af0e-48187dea4a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48afdbab-426a-462b-83a7-ce488feb1ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5790387b-4a90-4825-8ce3-7b17c292abd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2ff61f-99e2-4c9b-b978-588d4ccf6658",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549ac674-5a2d-4a4e-870c-0ed42f2abd51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96684c1-4625-4878-8ed0-22991e8677df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a65a32-cdc7-4a5b-aaf3-c78cec0b91ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e007b2-ac0f-4492-b640-f1a148501ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d1e88-f686-4f0e-b01c-f573ece03b0a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926d4c93-a166-4736-b0aa-1cb0a8023832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e76432d-c167-43b7-8f2b-6a2f8a9c3bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6379667f-596a-40e8-8c5e-0ae74592ad07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7955586b-32dd-47af-8049-690a964a3d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6301026d-362b-46ed-bd12-a2200cad5710",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9bd77d-8385-4de8-96c0-87baa40e5a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1742a9-8701-4ac2-9690-810b4dd9d08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bb9cdd-1ef7-4c71-bbaa-b4e60eedb907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87981ec-ab3c-4dce-bae2-bd874292699c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be002e2f-7a79-4b43-bc31-89191f123437",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf56d9d1-315b-4247-a57f-6d383b0477f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6352b8ef-ecf5-47bb-8ebe-a8e2a3962e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5586aaaf-9ca2-4bf9-a86e-6f932e48a5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e798258-d833-4a43-b881-c10fd1f7a429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbd62d0-586d-4f09-9d2d-a4d8925138eb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb410c9-55bf-4cd6-bd27-5f0a261d9a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09fb3aa-7ff2-4657-b8d5-fe8df34d30b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba99acc-0b7b-401b-9eed-39e95b068b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6618bde0-266a-4135-93d1-44eea88f72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf60691e-ef16-4a29-ab04-a75d333813bd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b35ffb-b35d-4938-b4c1-94478d2ecda1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e3d1be-ea59-4648-b644-3bfd7566dcf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65d0830-1645-47ea-9f58-bf1c4ff4d5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcacd63-40c1-49c9-98c0-1578521fd65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc93c87-3ef9-4739-8e74-764d93cbe46b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd02e1f2-4e8a-455f-8e56-647c7fd831d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70801ae5-69e1-4d96-9de5-1daaaf7ccc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33047eec-d082-4862-840d-fb678bbe9113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47a2dc0-d0ac-422b-8c0a-680aa8fdefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c7690d-4d5c-43d3-8e26-86a57c96541b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37974742-de2f-46a6-b0ab-6d2866a830e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691554ae-8761-464c-93bc-257a8352b310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfab731-c38c-4f56-91da-1a47140bf222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccf91f9-7983-459b-ab43-2e55a3ba0d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d31176-8bf4-46e0-805c-020883666c8f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc31133a-1ba1-4f71-8c13-5dd343c2014e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf58c61-bbaf-465f-9f06-0547cd707b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d37dc25-0386-43ad-b32b-de3f33a91b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3deff549-8985-4318-8af5-c7222bfd6cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3a4e32-473a-4ada-8b36-1594aa49e65f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6ff633-13e8-4dc0-aa29-a594f1bb9394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cf60a1-f981-4c3f-8bed-20c1674e4de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f11c4a-754f-4481-8057-bafbd07d7bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37acfae-946e-47fe-9a3f-29813ac30753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfe0d7b-b7d4-43f9-ab24-fb1c9594579c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956438e6-a400-4e69-a02a-269da6a90d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad59af2-bf7f-40d6-9e6c-fa9712e45d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22746935-a3bc-4968-bbe2-c3573ad4638a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d8ad33-eb61-4be6-8983-f77bfcfd0522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c32656b-4096-488e-aaeb-a4654a747ec6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e06c5-05d4-4a75-99b8-1d531274af75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48909864-04ab-4fc4-8823-a809d3a61e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f94bb3-a27c-46f1-a964-68d2dfad879c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c82c481-300d-4aa4-87ea-c75e9ce1e1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f5b947-3cea-4c03-a094-bc35240f2377",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97def9fa-738f-4808-b529-965c546c70a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d8a259-048b-4d4e-908d-085e317e0bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1443c08a-0e4a-4e5d-8844-66b93753a9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19a00d3-a4a8-4c1b-a2a3-ce9a4dbe8e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54960f81-8380-4616-91fc-180c2de7ee39",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0dea1-c3ce-4369-b74c-4323eb9463af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51faae96-7203-4bff-a571-8a81d96ad663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42712588-30ff-496f-97e0-4a919e294b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc274a69-64f7-44fe-8bf9-cfbd078ac7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f469d99-e998-4c52-80ad-c8b924b6e08b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ed7d15-1236-4ec3-b72f-236a379ceeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aab916-2532-4560-a8e3-08c5fb2955a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bb7c0a-e215-45c7-931c-57363e1aaac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48117d8d-441d-47e5-a9ab-3c76cff847c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312d8360-2259-4242-9214-4e7796485e5e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cf38a0-8501-4f0d-b737-dc00388b4c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374b469e-fd1d-4d9a-9372-1329c02acd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118c93cd-e127-4759-8f90-8990182c9423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f6d137-cdeb-4f23-8354-62009ab1e448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865ab14b-d0df-4f44-bab7-8b2972dfdec0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc79ff00-37a9-4e87-b90d-931ad23c694b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78c3490-eb97-4d7e-8567-5c14fbd2f4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbcd007-dd66-4182-a737-2722efe32efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbfeb55-7f91-4569-8531-7c34f1431e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0da44-a44f-4063-9697-a9531637c5c8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca750a-07b1-4903-9731-dad550d857f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7143b1a-da04-4df2-a7f2-309dc6c83e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690ee914-c65b-4782-8ccf-ef1cf05cf790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72af1d3a-7c1f-496c-841c-e5cd80cf27c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9490cb12-4afd-42d3-9759-a2ace48c6306",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9609a1e7-d6ab-4302-8bda-d0bd8396d728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c297eb-5eeb-4dae-8a25-743254e69e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d0b403-98fe-4830-9ae8-afedd7cecb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39f41cf-85cc-4d99-8c36-6f36511b50a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de28632a-6432-48a5-96c2-aaca76194e6a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a1693d-31e2-407a-aa51-b7724d6eb03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73f70e2-8f57-47ec-853c-dbae37bfa827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e65b54-7de8-49ee-b0b6-1e51ea1ae60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94868c81-0dde-4a7b-87ee-8619212984af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e25038b-4b59-464b-bfed-eea15244b537",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df72fbf-35a1-42aa-a5e2-58552516508e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea9578a-c02d-4a1f-aaa8-75a07dc36785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8666c42b-2f17-45e6-a3d0-8d62a6b66af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dddec5-1975-44f5-84db-5fb1f6d3bc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a6da3e-fc6d-4030-b654-bc2967d6a477",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd59e26-3522-44a7-bb9f-7d124b50acdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89242d21-04de-4d97-8e46-38f9bfe85403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03064c1-19f2-4822-b465-9db4db535261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109b9131-44c8-4f69-a479-5ecb1c11b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031eab86-e586-4472-b03c-f2386645293b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975d6370-ce68-466e-a442-d970f21e2480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984cd551-bfd7-455e-9db7-d2e57208c66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eeb776-0a3a-464b-b0c0-beefff717a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219ee972-4f0e-46e2-afa8-f1f18d9e848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a847a1-5f7c-4568-8a31-79c815a13cf4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ca9052-291a-4838-8746-700fcacb7b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46460dfa-049e-487a-89ab-b7b0a0777613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcb6833-0ef1-441c-9a25-78f0665a4f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf9867a-97fd-4e7b-bd2a-5a09d7b2ae72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87f4f97-2074-4f06-9799-da936f3d08cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5319b5-1fe9-443e-9176-8b66c68c181a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9df0eb-5939-4caa-a4f8-16b1a0f80f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e810a6d-9193-4b6b-9305-d40cffbbbfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b729f60-fe0c-42fc-aab0-a152ce29377c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa04b966-99df-4f74-b63e-a970e885a398",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a499c55e-1cda-485d-839d-6f52b32c8b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1808ce4b-b34c-4130-9c85-41e80608007f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab352b16-8d12-4232-bb0a-f5d3ac59adb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305df33a-41f5-495a-9613-d1056c014594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f5741b-d805-44ed-b459-d1352325b465",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268c6e61-774a-42f3-9351-ca2851ee7468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753fd22a-50f1-4fc3-95ad-ac122bcbb7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c96eead-d493-4101-8aa0-231811a2a32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0599e3fe-5776-417e-88af-348bff9ebd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa9916d-c942-4851-83ef-006cd5a81f64",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc1d5c-e304-46bd-bc8b-f77aee1333ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dac4226-fefd-4e88-8af5-94d5b77764c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254ff1e4-d60a-4a30-84af-0ee0057af72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6156496a-9974-4131-9014-fc7d6e134d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f2fcbf-8ee3-480a-94ff-9d3e1c1233e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a0af4-0493-4418-a23d-97be34efd9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d9f7df-e27c-47ca-8a86-47a94b10518f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae00e10d-4b47-49bf-8718-f490dc6dda1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb06cc9-599d-4822-9b70-832ea5518135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992b1c2c-aeb0-415a-8389-ae2aa13ba48a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba3c7a7-8487-41ca-a987-4c96ba28cfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acf7632-640f-4420-b3ce-796fc1f404a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189a2962-e53a-41f7-8428-5f78cae65862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cfeac5-3da7-42ae-bb07-2812dcf0d646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e219b827-80de-4824-bc11-96f9f8953a68",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f1c95e-13a8-4295-88a1-80d80de5d38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2235d14-c858-4cca-959f-e0d12315b283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3062476-4c7e-4070-8230-ecb7a4be92b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6454a502-9828-4e3c-9cef-9e34c7e64237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993d663b-1c38-4e8b-bec8-c77c0468ae37",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20658c4-d5fa-41f2-9ab8-80325906fe34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e61681-ee9c-4942-bb05-c8a45f987fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cf9108-f25e-4033-a9c1-feae3971d31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa8f724-b9f2-436e-abda-485618e22b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f626745e-d227-4f45-9b83-e36f3c267a5d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4b93e5-028e-4d32-b40c-26eeedf13ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3fa427-8a67-4b69-9ac8-45aca30f0362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97135332-eb6e-4f76-8168-7265287eaa5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6936530-175c-43f7-8ab0-57d1324c3281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c72ed2-b3ff-4fdc-8c2a-a486c4068e27",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d6db3-a565-4837-885a-824b9dd8fc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644cd652-d3ac-4840-8cba-9db4ad72894a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612869b1-bea2-42bd-87a4-8b9862fe7466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a32145-6921-4aa9-9632-f057f7b06f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddfe835-e611-4e0b-8a56-ca22c6238c1e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7452cd-00af-4336-8f49-94f3e5fd0180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab54f8bc-6d86-4df7-a017-be3445e55bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e81949-97e4-441b-b712-ba5c0a270eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ccae8f-74c2-4adf-b92c-a5442f6049aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c752b761-ce81-4a43-bc58-f0004fa5d945",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fb59df-d0a2-46e7-81bd-9b140a515e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0bf9f5-5afc-43e4-a0e7-4fa3e798c5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff35672-c284-4088-9a3f-03ee1fec2abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422bee22-36c9-4fb4-a401-dc158f784ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d399a1c-f6c6-4b3c-8553-d1ce78ea5426",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a698886c-6887-44af-98d2-be157fe47d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f04874-1a9a-4b02-ab09-616008d0a356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29426ae-5833-44d8-a9c8-990dc2e9d021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3f8860-fef8-4465-bfe9-842a332f03d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9494edde-516e-49f6-9461-0b249ea0d31c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a18788-d8ed-4a77-8f46-e4ff5b9923a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42641443-1066-4c8d-ba6b-548a90c22de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffd23fa-ebf6-4f87-9c61-82bf56b3053f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adae77e-6c62-4eef-a8cb-55dbb48ec561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd61c14c-fef9-472c-8879-d46942fa8e85",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50605feb-fb7a-4bea-babd-4430b2401bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbec440c-22ed-4980-973c-b03a2aeffa7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054ad176-b0c4-4a7f-ba62-bcdf47386891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c29c22-db67-4221-bf37-e0ee08d22975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47f0a4d-2317-4b02-a81a-65e01707ed95",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b18a0c-69a0-4b53-89b7-a39be67ef815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8aa474b-69ac-4bcd-a5ac-8f0cb4af017c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b438b49-53c4-4529-b2a5-d88890cbb76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9010a6-7d14-438c-8fb3-9bb8ca7d0707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e7550d-5e18-4a33-9e8b-8ae0f9dd4f1b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1d0a41-0b03-421b-aff9-608c6df7af8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee975d6-50b5-444a-a65f-1deb3870ebc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb756923-3fc8-45a3-b2b1-13405104df74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29aa4f7-7f7a-4284-a313-8f5b5fb56019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1215785f-9116-43d5-83ab-44ae287986a0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d761200-cb8e-41aa-86a5-bf0f1127031a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cedaba62-9022-44c1-9206-db21f2f33d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab1b8c9-c1e5-4ca0-8292-ed349b5ceb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a03bc2f-78cb-4930-a152-a9c98c92201b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75339e8d-241d-4cc1-9e6a-b6bfe30793d7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9a5c92-aeea-4967-8a29-4d491681a482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7259fb-c8b8-4d3d-b7bf-a87eb8cf8174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0a6729-439f-451b-a6ed-d9065d9b23d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603b9814-556a-4982-aa3f-f5d76f6d47f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20bb7e5-c27a-4f0e-81bd-80748ba9970a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875adaec-5971-41a1-9e54-6418dd88a33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14db6c8c-d724-4abd-9ca8-ddc9918b3e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0452919-cc75-445f-a5e0-3ff764860fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c5de0d-cebc-402f-ade8-5daa76d98e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670f8a4a-1ce1-4e49-8d80-2a0955f65b4f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22976bc5-5445-4efb-969b-d01c007ea6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495dd9b2-97a9-407a-bde2-d4c32c1e9034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726b8a3f-11b1-40ff-9baf-823139956306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b317e3-1e94-4767-bcbe-f2cc15e93fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0568b-4793-4f0b-9d7f-bf28c0c8b269",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e8e96b-03a3-44f1-9517-6d559f601a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337b00e7-2ec6-4bd4-9827-2d2af7869847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700fcc93-92d8-4845-a9eb-efdc70f1b048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867ff13f-c701-4013-b03b-de74fd47ea80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36869d5b-f61c-4f33-aac1-4d2446f5f69d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91184a70-db09-4eb9-adb0-7956c6a99421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "120924e2-c948-4d8e-b7ba-a3df3a00c53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054b1a12-1ba1-413d-b848-9c478ff51ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d919f0-30cd-4316-b433-c0b7d519342a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdd51d0-30f5-48a7-8aa0-ef80bb825133",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a7a153-d947-4ec1-9bf2-96f056608974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b060f9-ad2c-42cc-ab52-e25ef60747ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01dcb62-7acb-4148-a56a-f719a7bedd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a63a66-e256-45ed-bd90-0c7e8e86ecca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41040a35-3d46-42c0-8f03-48a3365bdab7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc685e-5d9d-4ed9-9e8a-371e55399bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbc6b61-c597-4d5f-a0de-0127056589e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e39270d-c7b8-437e-923a-2b2fc7eeccbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4556e830-2efa-49d3-ad8f-c8eeff417906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672b3a06-0c76-4beb-84a6-18ee3ad7d51d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3644a48-5106-4d00-8c88-4f59e59d3134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b31a829-62ea-4dab-b3df-cb99f8da89a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776e5846-b07b-4e43-969b-fd10411e7ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d301d25-a081-4755-b301-ff6209328276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e949e7b7-53b7-408d-bf74-e53179df0193",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c86010-66c9-428c-b22c-4776536b5c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66abadc8-c6c7-4fa5-8c15-20dfe7c62f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8669c57-63ec-476c-a533-64ccfcbe7052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98f1a3f-eaa4-4638-9ff4-fa24c3049297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb99090-1312-4a5e-b00f-0ccc31d9eb83",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe16918-0fec-48ac-b0eb-14e8d0a61dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c28c5b-018e-4fc6-b0aa-c544a75bac6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5a2118-34e1-4398-bbae-40f0e5d392d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d154e2-bb99-458e-bba6-a3958875b784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82907798-2a56-415e-85c2-69f3e6f62c9b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab09ecd-8175-42b1-b064-4112ecf9f30e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101aee59-7fce-4597-95d9-7aec60919cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167bec57-e9bf-4df8-93bc-cc05317c9f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e997906-4fae-47b1-82e5-1e4567b80858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca6741a-eec6-4144-b2da-58de2120c633",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd92b28c-5b8f-436a-8dc1-387383f2e43a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e70d60-b54d-409b-8092-5df443ab4308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f7d43b-da84-45b4-a7d2-784f15e4be19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e76979e-db6b-41c1-b54b-1b82ffed8ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8777542b-c0fc-4aa6-9f8b-6b95b344f5aa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4390365-a703-464a-b8dd-17f579ac73a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30df53b7-244e-4b35-8d5d-8e7c2c2a65f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c943a6-6126-4f4d-bafc-b7a9ab6e3121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c44cc81-618d-486e-8332-0c192b25d0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090eea02-b3d0-416c-95bd-c700b032241d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0474a1dc-5de5-4f0c-98b1-8a7068f6365e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ee90cd-d855-41cf-a1a1-1d455f792323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4d057-578b-4391-80cb-419f2e69116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c3b8bc-fd7f-4df4-963c-d21070e81a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3434f13-6e71-4935-9816-26342ab879af",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ef6960-76f7-4ba5-99d9-8fd150857986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925845ab-3d76-4e36-b7a0-34947a2c6117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f1ad33-8042-47bd-a880-dce446120baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67698b1d-6f24-4857-839c-f46b6dacb892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cc0830-c433-47f4-8360-25f342ec493d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d702b8f-25f6-4ae4-9874-f75e566a5c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d70c5d4-f8ee-4729-93c0-25c221e094de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9743043-7d92-4dbf-a517-92d9228a7fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30df1ad9-151f-498b-8834-9162e641ec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc8f300-7968-4ff7-ab0f-857071b3a0fc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b821155-58c7-49f5-9f07-75575cd12a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0842ad58-9961-4ef0-8e28-d43bf6542b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b94975-8dde-416a-aa68-e656dc08cea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb2cd2c-a60e-4282-982b-38b1c4deed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcbf65e-e621-41b5-bb1b-75bb685b7521",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e2feb7-50da-48c4-a300-ee1b7f1914cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5093b8-0079-456b-bf31-57380dafbd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f4b3ea-57ba-412f-8259-393534f84e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7d7cc4-742a-477d-9020-9edebe1a2d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0748f55b-952e-44b8-a456-464202e41110",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bfd640-a2c6-4944-a921-b719e3c25613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7acca2-2927-42b6-a1df-99e67fb9c096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e825f3-7752-4625-a6b7-995b0a05ea7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1283f322-a3dc-4f07-b37b-eba5fab6ed20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a70e4dd-7354-4b33-a218-b186157c93f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bba07f-0942-4b2b-95c9-7ba8ce3f93cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc564c1-5d04-4739-9b57-8dc53f3e0e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59af70da-e42f-484d-a854-b2efde6cdd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd308d6-225c-4f40-81d5-644d4fa89522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88af2ed-bf2f-4a8c-883e-0ad5d7384180",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e260f963-ef2e-4bec-b60d-26ae8a10e7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8529a20-01ac-464f-a59c-bb0099431281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08c359-6685-4f32-b029-85d407f39f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ed0920-74df-4a71-98b4-6e38e3188816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a324c758-91bf-4e84-aaed-03f11e20d776",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a2dbfb-d79d-41f8-b014-80accb9bffdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001e3489-718a-4224-a274-a41357d8b327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3df2cc-ef10-4821-ac79-440589fee086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03536060-90cb-486f-9372-9476c16533e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb555e7-511d-4e5d-b082-2e9aed66e83b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf3399-9fdb-402f-a510-9628ef77226c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd7581b-99ba-4440-a3fb-386c5bacd224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb416d7-c66c-4877-bdc9-3d6258e42473",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093988c6-6a93-432c-afcf-58c3aee2c8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc12015-662e-457c-bc35-bc54d0cfc4e8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d7b642-531f-4d8f-baec-b97527be2cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ead3577-a029-4071-bd97-5ef12aa2e952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d50d103-78e4-49f8-a78f-fdd77c9367e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf77d504-52fb-4f65-800d-5357bbecc868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c92bce3-0c89-4731-a04b-5e31b2103c2d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b306dc6-e9ba-4542-85f9-a161d00ab294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8d17ae-34f0-439b-bdf7-e90d57c824d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2dbff8-ea41-46ba-a7ee-dee1a355b283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fb14f3-1967-48b7-bb79-32f5810f4fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568b1fb1-e37c-436a-9cd7-a9f416051c7d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb967d43-f98c-4ec6-9df0-3def28dc8d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4bc436a-c45d-47c3-b7bf-097558da4c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef80ccf-64f6-49b0-809e-8558dacd99e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22d822a-f14c-495a-a781-6ab1dc0c4a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096319b9-e5d7-4305-b5b4-e3f6a923ab8e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d4aef4-4a1f-4ee8-bfa5-181b29753408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff726d2d-5725-440d-828e-0abcbc6c8be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da06fe66-d2d4-4976-a599-794f0b72f1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55abc164-2989-4ee4-8a47-68ec9b4d7bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9222edb-1ecd-4b3f-b8e3-6090f624dece",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8cc233-40b3-4073-9316-0c041ea723e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2959c7-78e8-40b2-9321-0569ec61abe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0243c4-4fa5-47f8-bccc-2b1221123cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb66c98-da4a-46ea-9090-73470ccb7eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2995a6-d199-4f26-8518-1570070d1579",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa375ce2-8b3f-442a-8bcb-28636c389976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c05a544-0cbe-4833-8410-b258b8727e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbac9b8-002a-4f36-adb1-fda72ec9ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad7b50e-7fa1-45e7-9a1b-23e8290c72b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17547db-4f86-4765-8859-fc6d94508ddb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a9dec-d6f0-43cb-b888-b787935fb649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f738cf1-3cd7-438e-a9f0-d71310ad1df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddafe0b-e3d3-4e09-8563-c8d7243abc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71e35ff-7b7b-464d-b069-e219ab9be315"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6233e729-2cc6-4337-8b82-697955923e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e03877b3-eef0-462a-9136-9d917280882a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e683db11-fde5-4e38-b2e9-cdd25e714c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc3e311f-4d4b-4718-8466-0a150f6c148b"
                    }
                  }
                ]
              },
              {
                "id": "6d2279a9-117c-4435-b883-27a5e6db3c39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "836c62ba-c806-485e-b925-56bb193cf075",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115d5d7-b841-405f-9da7-00f04488c323",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "677bc07d-0809-4158-a626-822e4fe6d635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1b2c86-0cce-4a3f-abe9-61953709517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74d9c92a-b6ab-4065-8c8a-b3e461c4dedd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "681d82ac-b631-4f71-8ed1-29bdc700a93b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "794321e9-59f8-4e21-b1e8-5b2f1000d119"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ef93e3-2ab6-4aab-b111-69d289eea87d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ac08087-8949-439b-8b1e-e4821d23fca8"
                    }
                  }
                ]
              },
              {
                "id": "ea97b85f-c065-4e17-a7e5-8a2f64c2d2d4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1f4e3951-d4c0-4edc-ab0a-10b4d5675eaa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127b09dc-c5bf-4c59-8364-d7ed516c9e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a336c741-08aa-4901-b60e-910d275d62f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1546d1f6-5163-4fdf-aaa6-c60383097576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693feacd-2dad-4231-923c-a11a6443fc26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66817824-5e23-4ee8-b167-fc8d27cf2192",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db9b3c46-7639-4b74-a7f7-42faf72a957b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c58c7e8e-70de-4309-99f7-705384b38af7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "671914df-6eb1-482d-b819-2fd47d025fa8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6353a724-53f1-4a66-ae90-3a53d84bf320",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "330dde1d-281f-490b-8ada-254ea11d8790"
                    }
                  }
                ]
              },
              {
                "id": "ecf8584d-6d5a-4eb5-b620-d3e5db49967a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5d8ce79-e406-4ac4-bad2-8a3648112ed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e2cf7bc0-7c5f-4b87-92e8-f3a3f2406a41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ffed33d-a28a-42e1-b660-e5de4cc4d554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c69da11b-7f0e-4e72-a9b0-b2be5fd24f4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4989d355-1a6f-403f-a2b8-11bedea0989f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "89ace013-a370-488e-825e-a51806bf81ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "457c3b0d-9618-482f-b579-715f564b1dee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30776dd2-49e3-4556-a02e-d4c2471184eb"
            }
          }
        ]
      },
      {
        "id": "cb6b0266-5dfb-4850-a871-a18d0dbd0a47",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ccb81e3e-d639-4aca-b003-fc159eaec0ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "569ca593-47a7-4ba6-a39e-a27d56bd86cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aebf76b-f0dc-48fd-a049-32e02d62f117",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06520497-1c25-4b6e-b578-05e4e1ff3102",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ead03bbb-0bde-4824-a55b-5079fbf53c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fc7f4f-f0ff-4179-84cf-8bdf0ebd6dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "007a0155-97ab-407c-8839-7674eec74c34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31b092b7-4376-45e2-b1b1-074b17724f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cb2218d-283c-483d-9de7-353758b326f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a63cc28-7b20-4d0d-bb8b-4121771d029e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0db50452-ab74-4dda-a730-37306746e6dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49d5226b-7efe-4374-84f4-fab0d03b6a4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "09b36666-d40f-4479-aa8a-fff5c13becc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5821960f-85eb-47a4-80ac-62cad44733ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4acc960c-a112-4875-9ae8-558a9672a6be"
            }
          }
        ]
      },
      {
        "id": "d874861b-8685-4a87-aa5d-c1d2779f1917",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b3276681-60b4-422f-8cef-b0a5d3e127c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e5923b9-415d-4f44-b092-00d70592f22c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3828816-af4d-45b3-b3d2-01e1197c4966",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7b3705-26b6-42d6-8fd1-e1d1edcf4c1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744b421e-18fb-4634-bf13-59a5554a0a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae6901-ded6-4962-85a0-f820bed223ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cebd58a-4b3c-4837-896f-65473916b628"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6973ea8-ecfe-4117-8772-2e8445c8a024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7c14355-a5ed-40dc-8e05-8067c2722b50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f4bf061-fb07-4bed-9d19-8b3ab91cf219",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639cf51d-c141-459c-8091-30e3dddc7464"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3b0f58e-9faa-49bc-ae1b-6cc8c11c1cf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e74b9f52-0090-44b1-82d4-a36d5724f551"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbc0b3f0-f448-4786-b2ad-250a9018d7f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31824456-0641-4575-95a7-939e654cf960"
            }
          }
        ]
      },
      {
        "id": "cd17451f-8641-477d-9028-029d821e5244",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a137bfc6-4830-4c49-b7ca-af64a75dddf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa623773-829a-4352-8280-bfad613d7311",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "baf0977b-ce5b-4cbf-a75c-8625c33987aa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb2f67e-acfd-4f8d-94ec-d8bc97a40793",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0b1aa54-2424-46f4-9cbd-6dfd63731b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6397474f-30a2-4f11-9982-b618681142bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2767dce7-e639-44b6-88e9-24aabc6b41b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ba099cc-e3c5-4a96-9505-c9e6978b3737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1df14928-1499-4df5-a7bb-ca3141e5f19f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cffeae9-e71b-4079-98a9-f201fb748f60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79f7f117-bdfd-426b-a185-dd50937fde2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e444c3b-ffac-4fbf-beaa-480737795e5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c279d10-dcd6-4fe3-8e81-57226151f546"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2326cbf8-bd3a-4195-bd94-9ac71e1fd11b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e448a47-1f9d-4886-ae55-c0c4b43ab620"
            }
          }
        ]
      },
      {
        "id": "ff87ed3a-fb66-4aef-bc00-c8123ad8467f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09e0bc32-b553-4234-b845-978aa778621d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ff16981-6610-4af3-8abe-2ec5d8ed4555",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "901a14be-0064-4a0b-a3c1-40042f68fa02",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09646a83-2c0e-46dc-b485-36d33e762506",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "100a9d84-531e-45dd-bfa8-b9ad325568f1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 254.5157894736842,
      "responseMin": 9,
      "responseMax": 10034,
      "responseSd": 1229.5112467525626,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701218158606,
      "completed": 1701218240452
    },
    "executions": [
      {
        "id": "a4ff130b-52e3-4691-a0e0-ca587d320a60",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "deb48b16-145a-4ea8-9862-ced0b209ce40",
          "httpRequestId": "8782f4ac-2e7f-465d-9153-3b786cd72b0d"
        },
        "item": {
          "id": "a4ff130b-52e3-4691-a0e0-ca587d320a60",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6824a844-e740-4480-a89d-0c49d06a582f",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "d2d91a2d-945a-4c79-96ff-09e29bed47ce",
        "cursor": {
          "ref": "079bbbc3-5ac4-4d60-aba8-4d19a6a9869e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5670927c-3b2e-4530-b75e-21fb5a8b583b"
        },
        "item": {
          "id": "d2d91a2d-945a-4c79-96ff-09e29bed47ce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1babbf10-cf39-4cc2-8020-4f7e188ae0b8",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "06bddd4a-dc26-462d-9542-439cfac6a9e6",
        "cursor": {
          "ref": "07f4565e-e361-426e-91d7-f14551640221",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "787b5f1a-ea01-461e-bca1-04536308a9fd"
        },
        "item": {
          "id": "06bddd4a-dc26-462d-9542-439cfac6a9e6",
          "name": "did_json"
        },
        "response": {
          "id": "1da3a703-9f4a-4bf2-9cc7-6e835ac97a24",
          "status": "OK",
          "code": 200,
          "responseTime": 1504,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a42f8-fd5f-4303-bd3e-546bf44b1a71",
        "cursor": {
          "ref": "c6c8c6d8-a2ad-4af5-98df-169eac91e9f1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7944742-7e36-445d-8614-5e320935f7d4"
        },
        "item": {
          "id": "020a42f8-fd5f-4303-bd3e-546bf44b1a71",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2baa3cf-e3c6-467b-a3de-48bf3f7b1bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a42f8-fd5f-4303-bd3e-546bf44b1a71",
        "cursor": {
          "ref": "c6c8c6d8-a2ad-4af5-98df-169eac91e9f1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7944742-7e36-445d-8614-5e320935f7d4"
        },
        "item": {
          "id": "020a42f8-fd5f-4303-bd3e-546bf44b1a71",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2baa3cf-e3c6-467b-a3de-48bf3f7b1bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e02d9e0-d01c-44e3-a02e-f4bfd77d6d0a",
        "cursor": {
          "ref": "beeec024-84fd-4327-8992-6cf1d64acebb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a2558b67-d046-4ff2-a22e-3ae1ec28ee24"
        },
        "item": {
          "id": "7e02d9e0-d01c-44e3-a02e-f4bfd77d6d0a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "36d958a5-aa08-4f8c-a1ad-59b1dfc26ec1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 193,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6724267-c4ce-47a1-93c0-081c2fd48be3",
        "cursor": {
          "ref": "d7ee5041-7657-4cb2-8836-fe01c85dc580",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cce63ce6-321e-496b-9d06-d0f6b66ea80b"
        },
        "item": {
          "id": "d6724267-c4ce-47a1-93c0-081c2fd48be3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1a2ef799-cecd-485d-999f-448a8f7437b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7949a1ad-703f-4293-973c-5966ed4651ec",
        "cursor": {
          "ref": "2447c817-8996-43aa-ad1b-143112343d7c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0132f9f2-b867-4c0d-84bf-79b688a3aaf7"
        },
        "item": {
          "id": "7949a1ad-703f-4293-973c-5966ed4651ec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a3bcf3d8-640b-4a06-ad93-bd335346850f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce877462-eb7e-4062-8ed4-b9a70880d1ed",
        "cursor": {
          "ref": "60a28615-bd07-459e-bacf-2f2e390605c2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f8095fd-c72b-4335-8f9d-6ad3b12f75cd"
        },
        "item": {
          "id": "ce877462-eb7e-4062-8ed4-b9a70880d1ed",
          "name": "identifiers"
        },
        "response": {
          "id": "104f18e6-4652-4c77-9dd8-2dc71c307ab9",
          "status": "OK",
          "code": 200,
          "responseTime": 1230,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a0d988-c6b2-4402-8197-d75551c4500a",
        "cursor": {
          "ref": "86beeb15-f0bc-429a-b9ab-cfa32e558597",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "61ca33a4-3b3e-49cf-9106-2e3845021d63"
        },
        "item": {
          "id": "b0a0d988-c6b2-4402-8197-d75551c4500a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1a97213a-3416-4dd7-8aba-19aceb3f6a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7a9025-0ab4-4914-8287-8a010887d731",
        "cursor": {
          "ref": "967b5ebd-f6e1-49aa-a976-5d3a62ae04fe",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eac54e27-7542-4ead-949e-4c9ff082a6b5"
        },
        "item": {
          "id": "3f7a9025-0ab4-4914-8287-8a010887d731",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "72c7a110-e9aa-41c8-98e3-667d7d902269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015f28a8-8391-4dfd-8a4c-cc3b27b88152",
        "cursor": {
          "ref": "b240de8c-891f-4833-9a96-6513bd272dc3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "27db79cf-3cdc-450f-a2b2-97616741f1e4"
        },
        "item": {
          "id": "015f28a8-8391-4dfd-8a4c-cc3b27b88152",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e985b564-890f-4c3d-9c81-b7740c85595e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15b04a3-6009-478f-987a-216a283de49b",
        "cursor": {
          "ref": "d1bac4ec-7bfd-4210-b1a9-3a7401191dc5",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f0a1b120-c555-417d-9f3f-0146be05b9a1"
        },
        "item": {
          "id": "b15b04a3-6009-478f-987a-216a283de49b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1c6103c8-5bbe-4a4c-b6b2-7b8e2d1b4ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07374839-cf72-46ee-a6ee-f11048e73734",
        "cursor": {
          "ref": "7a16504a-3615-4a40-a6d0-fca0d7912d3f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4f6d61c8-0525-422c-b8f7-676e73df45bb"
        },
        "item": {
          "id": "07374839-cf72-46ee-a6ee-f11048e73734",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5673529e-b66a-4398-bd24-86c270e6fc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61fa234-8d5a-49e2-a2dc-2a59062f8abd",
        "cursor": {
          "ref": "93d64750-892b-4bba-adbc-c43e2c550878",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e641b0b8-80f3-4bfb-98df-3da078748afc"
        },
        "item": {
          "id": "a61fa234-8d5a-49e2-a2dc-2a59062f8abd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "afc4488f-fbef-4f3a-9d42-b4eed39ff13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673bceef-82e3-4f4e-8c07-b079284520ed",
        "cursor": {
          "ref": "a1e62f33-ad01-46dd-a4b0-4da201673136",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "57bbbd59-f65f-4499-aaf7-5626516f22e1"
        },
        "item": {
          "id": "673bceef-82e3-4f4e-8c07-b079284520ed",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3e76598f-730a-4113-ad5f-a53da7e49ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16643f48-0a40-4fca-aba2-f5e088223cfb",
        "cursor": {
          "ref": "d918312d-f3b7-4506-99d6-6920674d0ef0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9e2c208d-d21e-4d65-b832-fe40a981f5c3"
        },
        "item": {
          "id": "16643f48-0a40-4fca-aba2-f5e088223cfb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a428cefa-5d79-43bc-9501-3b080f49a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228d87a6-2bd2-46cc-b3b4-05433d9230df",
        "cursor": {
          "ref": "d6fdf4ec-e2cb-41a7-9ffa-13b474b3fba5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3ad20fd9-0e91-4168-8290-a98171743466"
        },
        "item": {
          "id": "228d87a6-2bd2-46cc-b3b4-05433d9230df",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "342609b1-967b-4409-826f-8f0d9acc17ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d391b1-c9e9-47ae-a774-14d6e1c65b38",
        "cursor": {
          "ref": "4ad30712-07a4-4bf7-a342-fdb4062e5299",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fb54f204-4f89-4200-990a-23bc26f1ca77"
        },
        "item": {
          "id": "d6d391b1-c9e9-47ae-a774-14d6e1c65b38",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "492584de-770a-465c-9509-a6ac4e3eff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06ead8b-432c-4e3d-81a1-dfa46dbabc30",
        "cursor": {
          "ref": "4609ecc4-312e-4457-bb53-9ee1370ef66f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0513bb27-38ca-4d2b-8c52-ebda79e377ef"
        },
        "item": {
          "id": "a06ead8b-432c-4e3d-81a1-dfa46dbabc30",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bb8afeae-4698-4aa0-b031-64cb03eed9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e543bdf0-911d-4ab6-96ad-9ae380b79963",
        "cursor": {
          "ref": "23f6234c-9bf3-46ed-8d86-277f342654c4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5f12c6b3-0714-4e04-b115-dbe4edcea5f7"
        },
        "item": {
          "id": "e543bdf0-911d-4ab6-96ad-9ae380b79963",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3b6f04cc-a0cf-496d-9d83-66aef5b1ff51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e838571a-709e-4cac-8fb8-b1ce41b9d612",
        "cursor": {
          "ref": "c925067d-c4b5-4086-95d1-c7e2cb4da315",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "589e8f54-9d1e-41ae-b609-5a66a43d0bc6"
        },
        "item": {
          "id": "e838571a-709e-4cac-8fb8-b1ce41b9d612",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d427335f-809e-49d9-9766-b6b3fd7a6fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bdbe04-152d-47f8-8916-bfdede3a5315",
        "cursor": {
          "ref": "4e971dfe-731d-4f32-8a96-3e444bc55202",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "31f9af7b-9bca-439a-92ee-478071f60b91"
        },
        "item": {
          "id": "53bdbe04-152d-47f8-8916-bfdede3a5315",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b0615708-f498-46dc-a1b3-94c87213d520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac81c4-d5a1-4342-bfab-5c0acead9c19",
        "cursor": {
          "ref": "a6cae47d-9768-4036-afb8-c6eed46d8cae",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34ed8676-b564-496c-a5d5-b2c78e28cd38"
        },
        "item": {
          "id": "9aac81c4-d5a1-4342-bfab-5c0acead9c19",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "adb4bae2-f98c-4737-8ab0-f0be0a36b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7006e196-d2a4-49bf-b702-bf2670298499",
        "cursor": {
          "ref": "c621f9c7-c65b-4372-9b36-f7a7611f7803",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b0c864a6-9d16-4839-b005-0de85c83d4ed"
        },
        "item": {
          "id": "7006e196-d2a4-49bf-b702-bf2670298499",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3c95133c-1da6-4e10-a6da-104a2162ca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac805134-d75d-403e-a672-2c577ff50d1e",
        "cursor": {
          "ref": "a773a827-ebc5-42cc-b89d-d06ae90a0f41",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58589444-b604-443a-a8cc-855455b8149e"
        },
        "item": {
          "id": "ac805134-d75d-403e-a672-2c577ff50d1e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67efa7d1-f5a2-4326-ab31-0dd973944d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b5df4-f10c-4ed4-a333-9bd3e841df5d",
        "cursor": {
          "ref": "587ffc1b-e06a-4347-b830-61febfcbd5c4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c9f3f51-72f9-4865-b66d-e11076c6471b"
        },
        "item": {
          "id": "7d5b5df4-f10c-4ed4-a333-9bd3e841df5d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7f3638be-b1d6-4b38-9ddf-9c99e16d4bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60278d9a-8393-4b4b-876f-ca331ed7ba35",
        "cursor": {
          "ref": "e72698e1-f0f1-4464-bc5d-2982294f04d7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f14a1b83-cebc-4224-a256-efedbdef5dad"
        },
        "item": {
          "id": "60278d9a-8393-4b4b-876f-ca331ed7ba35",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8d10f0a0-635d-434c-8589-4fa60390f5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f392a132-ecf7-4d50-a2cf-34b4e149d76d",
        "cursor": {
          "ref": "40a7d76a-fa5d-48d4-8119-da82d950a295",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "317f5fe6-4fd8-4062-800e-807338254dac"
        },
        "item": {
          "id": "f392a132-ecf7-4d50-a2cf-34b4e149d76d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fe1e2f91-f1d3-4c89-aa08-66e304258e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8fde83-f1dc-44e4-997e-16f1d5cc75f8",
        "cursor": {
          "ref": "c94b999e-0153-4f3e-9cb7-9f04125ad598",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "57bd465d-228f-49b3-bd74-82c09e8a7e2d"
        },
        "item": {
          "id": "6a8fde83-f1dc-44e4-997e-16f1d5cc75f8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "64d6cf48-9351-4336-adde-30d755cf9a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8f58a5-9d79-40ef-8ecd-69479c0f21b5",
        "cursor": {
          "ref": "358e71d6-d122-4322-8571-92cadc40e688",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "489d19d3-986d-4a86-9751-8c04517d57a5"
        },
        "item": {
          "id": "9b8f58a5-9d79-40ef-8ecd-69479c0f21b5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bffe65d4-e339-44de-ac87-d685aca753a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12669a9d-c651-4b4c-a214-449489a8ffb5",
        "cursor": {
          "ref": "65f25f3a-83f7-4f5f-a8ce-184d3a4975cb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ec085415-c2b4-44bb-9142-fe19bc9a55c1"
        },
        "item": {
          "id": "12669a9d-c651-4b4c-a214-449489a8ffb5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dbc7abf1-b160-4fc9-a522-51c45f75167e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5700d1-22c4-42cd-ae2a-5f7201534225",
        "cursor": {
          "ref": "ddafdd84-edf5-479b-b0ba-6963b760eedf",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7bbcbc8d-022e-4d28-be10-1e7f723bd358"
        },
        "item": {
          "id": "6b5700d1-22c4-42cd-ae2a-5f7201534225",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dfd02fc8-dff5-4476-93a1-688d5a90ee1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d872b3af-c0ae-4eba-ae86-c02f8c602ba9",
        "cursor": {
          "ref": "b7a01684-ea5a-4314-830d-79294b40d5e5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4c7294c1-3a66-4e9b-b15d-355b538cc8d1"
        },
        "item": {
          "id": "d872b3af-c0ae-4eba-ae86-c02f8c602ba9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5f17baab-140e-47fb-96a8-640346b83997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091cacf-5f42-4005-b5c6-89e85ef93f88",
        "cursor": {
          "ref": "c6cfb3fd-eaf4-428f-ba99-e35b5b150ac4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "254211d7-e7a1-4a1d-a8a7-e43826fff4cc"
        },
        "item": {
          "id": "5091cacf-5f42-4005-b5c6-89e85ef93f88",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7bd56089-acc1-4d3f-a7a1-c56a1b37459a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15647965-635b-4e6a-bd45-a6109eb284ce",
        "cursor": {
          "ref": "10be506c-93ae-4a24-a3a7-1bb48b2e8dee",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fffc8cef-2d76-4889-8c13-923645de021f"
        },
        "item": {
          "id": "15647965-635b-4e6a-bd45-a6109eb284ce",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e70b9c1-5a2f-4f37-8c56-b059049a5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaef2fe2-cb81-41dc-b37f-d88d35ea880e",
        "cursor": {
          "ref": "14440134-45d6-42c9-b34b-f01067e12a0a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "79c1c95e-1dd7-4b54-915c-bf15b76e0e32"
        },
        "item": {
          "id": "aaef2fe2-cb81-41dc-b37f-d88d35ea880e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a7b3fe9-1e2a-4519-ab3a-fdb9f865957c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f02ce6-d650-4f4c-b4b1-ad361453fbfb",
        "cursor": {
          "ref": "d7c61cd7-3768-4773-a0a7-7675fda200eb",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "74a18a36-de98-4256-8d25-8b48f9287c71"
        },
        "item": {
          "id": "72f02ce6-d650-4f4c-b4b1-ad361453fbfb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0e76d6ae-94f7-4601-9d2f-e64de173a10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c00e63-c0a8-45ee-bb17-0fd7dce8e558",
        "cursor": {
          "ref": "0e8b3a8c-1b7b-434f-a4d9-e31dcd911b0c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "37844c35-9e36-4e76-aa94-e0a32baeeda6"
        },
        "item": {
          "id": "14c00e63-c0a8-45ee-bb17-0fd7dce8e558",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "18c58c32-e103-41a1-9cf8-bd2d454720bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8f7038-7c9f-464c-a40f-c19ff1ed9682",
        "cursor": {
          "ref": "e87c8f26-7c15-4e97-b829-a2e8c9cce431",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "35d2d543-f68b-4433-ae08-c05148b3cd43"
        },
        "item": {
          "id": "af8f7038-7c9f-464c-a40f-c19ff1ed9682",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f77288ad-1789-4e53-b7de-d6306314da51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff5532c-f2e9-4170-bf40-8c2bd520fa05",
        "cursor": {
          "ref": "2bd90d69-5ec6-4651-9ab6-dcb88e3c2373",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4654ddeb-ab7a-422d-a07e-9d23d2691f4f"
        },
        "item": {
          "id": "1ff5532c-f2e9-4170-bf40-8c2bd520fa05",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ecefdc8e-dbef-4d70-ac34-04e627722dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e703b-0bd8-46f2-b39d-49fd57a93eef",
        "cursor": {
          "ref": "57797908-b531-46f2-b843-39c171ba1f1a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "74501f14-cf8b-45ec-9b69-4a5124af27c3"
        },
        "item": {
          "id": "9d7e703b-0bd8-46f2-b39d-49fd57a93eef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9afa9c5d-a12f-413b-9571-e3b156719b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07c7c9a-8c14-4019-bc43-c6b973bcecbf",
        "cursor": {
          "ref": "13a94079-0565-407a-88bd-d897a727742f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9f66ec07-9aae-4ed7-b9e3-6f9e3f32be8a"
        },
        "item": {
          "id": "f07c7c9a-8c14-4019-bc43-c6b973bcecbf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1426c979-c94b-4f81-a90d-bc93a88c3909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae67e58-cbf2-4375-892a-93fd4b877e94",
        "cursor": {
          "ref": "94ad87a3-6905-4111-b90b-a33c57e0382c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "483d05e2-1065-4933-8eb8-ae1b97e22610"
        },
        "item": {
          "id": "fae67e58-cbf2-4375-892a-93fd4b877e94",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3875ae12-ca00-4c4e-b994-55aacdee55bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e9bd25-b726-4b02-ba87-46ba29fa500d",
        "cursor": {
          "ref": "dc787ba7-abdc-4ad9-beee-dbfa26b28fd8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2f2cef8b-1c0e-4cbf-8c7f-29f4229764a8"
        },
        "item": {
          "id": "49e9bd25-b726-4b02-ba87-46ba29fa500d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "43ce9d81-f00d-4ea7-8ebb-226e95e9656e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1509,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e81b4b-0b85-467e-a444-c32ad79cccbb",
        "cursor": {
          "ref": "e7344478-7bbc-4bd6-ac3e-071d3b3b5680",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "30b073ef-fedb-485c-8b91-f942e1384024"
        },
        "item": {
          "id": "65e81b4b-0b85-467e-a444-c32ad79cccbb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "439bad8b-6b6b-4c52-8389-593ce0977e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bcd97d-3cf2-4e7e-8eb1-1ebbf87391b2",
        "cursor": {
          "ref": "43fbaa1c-fe25-4e6a-aab2-12047bfbaea6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2a0d7a60-b4f4-4484-9750-54aa56cca2a7"
        },
        "item": {
          "id": "00bcd97d-3cf2-4e7e-8eb1-1ebbf87391b2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "60b14b81-932e-458f-9c63-0d3afd8f07dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b602ad71-13db-4c4b-b422-fbac93708591",
        "cursor": {
          "ref": "b261462a-0f2d-442b-969f-7515836ce4b0",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "daf4b207-a88a-44ab-8259-0ce1f890166c"
        },
        "item": {
          "id": "b602ad71-13db-4c4b-b422-fbac93708591",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9796e768-02f8-419a-a3cc-44171e6f417f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be19ea2-85d0-4bba-a957-ebfaa5996497",
        "cursor": {
          "ref": "50796f1d-963d-4284-b00a-616e6a78959b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e472054-26b6-4bdb-8973-1b2cc55146de"
        },
        "item": {
          "id": "4be19ea2-85d0-4bba-a957-ebfaa5996497",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "32c885b7-5417-4026-a535-ba20c407b330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c00a0b-ee2d-433e-a378-0ff92feefe10",
        "cursor": {
          "ref": "3a8cb3f7-574c-45b1-a118-1c6c008cf4b2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "567763d7-5ad2-4a3c-964a-eeb2dbc1e026"
        },
        "item": {
          "id": "54c00a0b-ee2d-433e-a378-0ff92feefe10",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "10c8d54c-a315-4d4c-abb8-0685bb10c1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcfe39a-9a75-46d1-8ecd-aef696e87683",
        "cursor": {
          "ref": "e753cb6e-02c5-4de9-8dde-29934fa84141",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7840e91d-7136-42f1-9900-356180e13631"
        },
        "item": {
          "id": "ffcfe39a-9a75-46d1-8ecd-aef696e87683",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8604a36b-de54-4dc5-b7c7-b650146fda57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d014160-75e3-43d9-a47b-4751bceee5a6",
        "cursor": {
          "ref": "c337fe93-4368-4f41-b2b2-01a3fca4a458",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aac8070f-8a59-4a8b-9ef0-ca0e577c31dd"
        },
        "item": {
          "id": "5d014160-75e3-43d9-a47b-4751bceee5a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4d81870e-77a9-49f4-9380-72b2bf5ab9ea",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1488,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c18765-757f-4ef1-adc7-3920041c8755",
        "cursor": {
          "ref": "70ec6dc3-6f08-4922-9e54-fc296316665d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ac4562c6-d2bc-430d-9bfc-e9fcc17533a6"
        },
        "item": {
          "id": "58c18765-757f-4ef1-adc7-3920041c8755",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "47d15e68-9697-422f-9da0-f0281d06596d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4500350-61e7-48e7-9aed-d6a50897f420",
        "cursor": {
          "ref": "8c771ef2-1bdf-4fd8-a12e-c9dab10d1ff7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2dc74490-9182-4f41-97e6-18ec3b953d9a"
        },
        "item": {
          "id": "d4500350-61e7-48e7-9aed-d6a50897f420",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e150b181-15a4-4249-8722-8aa403e8d9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e345f1e4-41f5-42fc-8de0-8dec9c8018a2",
        "cursor": {
          "ref": "90aaa1f3-b425-4976-9f2d-aa7f5669c54c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0d7fca6a-877c-4155-b2e3-a3ef61abe3fe"
        },
        "item": {
          "id": "e345f1e4-41f5-42fc-8de0-8dec9c8018a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "22ac619f-8b2c-4a77-bc2b-b97f6f7eb0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bfaf3f-9d7e-40e4-95f3-10bf12df8300",
        "cursor": {
          "ref": "6d83685e-c623-42d6-9eab-90a31d828e1a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eb195647-7788-401c-9448-8e80b3bdea1e"
        },
        "item": {
          "id": "56bfaf3f-9d7e-40e4-95f3-10bf12df8300",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3bf80e3b-17dd-4463-ad56-78dcf0177166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a6acbc-3fdc-4589-8816-4639a1ec4330",
        "cursor": {
          "ref": "eb95afdb-3f95-4222-abde-21209509e6d5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cead1b8c-8804-4b79-95de-17b72db9d5a2"
        },
        "item": {
          "id": "42a6acbc-3fdc-4589-8816-4639a1ec4330",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "396a3efd-f606-4500-8167-e810a15b98e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a19ec0-8866-4e83-bdbb-65b98379dfe3",
        "cursor": {
          "ref": "45005705-9ad3-45e0-857b-a4d57a56c50d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8b1dc7ba-9cfd-4741-8022-d5eba21878a5"
        },
        "item": {
          "id": "73a19ec0-8866-4e83-bdbb-65b98379dfe3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "00f28ef3-9220-4d09-be88-474abe69939f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7084ce-ea6a-470f-89c8-6d736cc552ad",
        "cursor": {
          "ref": "321febd3-f264-4816-b87a-7521e1e79c5d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0ca1b58f-bdba-4b15-90d7-cda6ac6acc4b"
        },
        "item": {
          "id": "9c7084ce-ea6a-470f-89c8-6d736cc552ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3708aae7-bc50-4951-bf9c-69d489379896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02bcc81-5561-4dfe-a824-d3e7bcaf3dcd",
        "cursor": {
          "ref": "51c24405-10d7-4ffb-ab60-8230156d855f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a112d893-2df0-47ac-ab25-2ff68d458eca"
        },
        "item": {
          "id": "e02bcc81-5561-4dfe-a824-d3e7bcaf3dcd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "baa892e4-6d67-49b1-9b75-9ebfbcd7722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a56d38-9aa7-4665-a8de-55ee97f76b71",
        "cursor": {
          "ref": "b61a4ac6-f75f-43a9-98b6-3f3f2382c202",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6b2210c1-3583-4d1d-9f74-d1652f1a8f29"
        },
        "item": {
          "id": "25a56d38-9aa7-4665-a8de-55ee97f76b71",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ee7705c0-3358-41be-a0d0-584e302f8957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb5e814-6f8f-40fd-ab05-e5aae1e3c90e",
        "cursor": {
          "ref": "0a6a0988-9d9c-404d-a6bd-9dc75f218302",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aac6c4ba-56b0-4dd7-983f-8ecedbe58db8"
        },
        "item": {
          "id": "1bb5e814-6f8f-40fd-ab05-e5aae1e3c90e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5bcf093a-fafa-49fd-8410-9d2cd72ac75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa26efd5-a6f0-4a0e-8e20-0c808584c2e2",
        "cursor": {
          "ref": "e1436458-84b8-4435-8ca3-92832a2ac110",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "484b869d-ae21-4388-a486-d067d4c503ef"
        },
        "item": {
          "id": "fa26efd5-a6f0-4a0e-8e20-0c808584c2e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b45f76c9-885e-4856-b055-3b8a924ae517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9670110b-3b7d-4a57-b7aa-8dcbb6423e09",
        "cursor": {
          "ref": "fc95a693-77a3-4c9e-9c0f-5871c126dbbf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a8d871f8-fa1e-478a-9dcc-fcaf60872292"
        },
        "item": {
          "id": "9670110b-3b7d-4a57-b7aa-8dcbb6423e09",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7fb56fbd-89a0-47f9-9116-9ed380e87172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02745286-5393-41e8-9b64-bd40f2ab103d",
        "cursor": {
          "ref": "8158f8de-7533-481c-804c-9279b8725ed8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "28cfdc90-91b5-4451-9279-a14574b8264f"
        },
        "item": {
          "id": "02745286-5393-41e8-9b64-bd40f2ab103d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e53fe262-3f8e-422e-a945-b818e6af4151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f8c55-0ad4-46dc-b7e8-e161e2f40192",
        "cursor": {
          "ref": "e21bac5d-b693-4dd7-9154-b4eb9e9aaba7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ad250d11-5e12-403f-9cac-f818a5eacee4"
        },
        "item": {
          "id": "d31f8c55-0ad4-46dc-b7e8-e161e2f40192",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "214c63cd-e0d5-41a6-b1a6-277a3dc0d991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f12c9f-fddf-4f54-9471-e74925ddd7ec",
        "cursor": {
          "ref": "937cd80a-6f7f-4034-a185-cdd56ca54092",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c17ff605-c989-4736-a092-1b1ba1e9c009"
        },
        "item": {
          "id": "09f12c9f-fddf-4f54-9471-e74925ddd7ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9dc77407-6933-4f3c-8906-083ac30e5e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b59cc4-bd82-42fe-a6c3-a340d0737c19",
        "cursor": {
          "ref": "62ad5ab7-a826-4bc5-ad82-d31d509d2c0b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3b8bfa2e-8e5b-4eda-88a6-b676599c0178"
        },
        "item": {
          "id": "81b59cc4-bd82-42fe-a6c3-a340d0737c19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7145237c-0da2-48c6-af04-f3fa46862cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09710d4-05c7-43b7-bb90-774dbac887d9",
        "cursor": {
          "ref": "1a63485b-24e3-47d0-b89b-5a3dc38290db",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2fc3c8a7-2de6-4777-8bcf-f20635fca28b"
        },
        "item": {
          "id": "d09710d4-05c7-43b7-bb90-774dbac887d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9f3893ee-3ec3-4097-a91b-7ca4f275b00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b2af8b-a233-4386-aae2-611cf1496cc8",
        "cursor": {
          "ref": "faf251db-9eb0-491e-9cc7-63f91d2450e6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c3f561b2-4888-4b9e-946c-ebf2f2a541b4"
        },
        "item": {
          "id": "42b2af8b-a233-4386-aae2-611cf1496cc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7853067a-dfee-4871-bd74-7d2093e656d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7319682e-f52c-47f9-8df4-9bba1b2383d1",
        "cursor": {
          "ref": "87111a0c-6d2d-4575-aa7b-bd12160a7ec7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "11a89a42-247d-4b84-b611-b1f777fa0749"
        },
        "item": {
          "id": "7319682e-f52c-47f9-8df4-9bba1b2383d1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "89c8db07-544b-48ab-87c8-776c51e5af11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8d1e3a-8235-43f6-be45-239996efa2a4",
        "cursor": {
          "ref": "c01f7b0b-96ee-46bb-88da-ff90d6dccacb",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "79633e1f-c984-4931-a13f-666a931c3a25"
        },
        "item": {
          "id": "bd8d1e3a-8235-43f6-be45-239996efa2a4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ffbdca64-0016-43fe-84a7-e2ea7b0c4e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567fe6ac-410d-46de-a980-6b6ee3320b65",
        "cursor": {
          "ref": "1a9c7aa0-a9e7-493c-8925-81071a1cc512",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4f461f35-5ae9-4e7a-8081-25e8b07ed8a8"
        },
        "item": {
          "id": "567fe6ac-410d-46de-a980-6b6ee3320b65",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f02423b4-d17e-4d04-8af2-33979e576596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5833a3-18d4-4501-a6fe-d112e1ebf841",
        "cursor": {
          "ref": "20dd77ef-3453-4469-abfa-8160a0b02655",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "68f2f4f0-fef9-4774-9236-ebb9d4fda9d2"
        },
        "item": {
          "id": "0a5833a3-18d4-4501-a6fe-d112e1ebf841",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5296fc17-c7c7-4908-9c0a-fe578fe75469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd45954-c037-44cc-a602-5d701c0061d3",
        "cursor": {
          "ref": "44cc0e29-42c5-4036-9365-d26eeaa352c5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "886bb33f-c97d-4120-a5ec-3e2e4983fab6"
        },
        "item": {
          "id": "9bd45954-c037-44cc-a602-5d701c0061d3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fab52f5e-b349-4db9-8fe5-3b80ce040332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554fa355-4910-43a3-bc25-377330e6dc7a",
        "cursor": {
          "ref": "c8b8f375-dfdd-4154-99b9-4866342282f4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4236eb26-d472-48fd-b812-ee8f88a4fa63"
        },
        "item": {
          "id": "554fa355-4910-43a3-bc25-377330e6dc7a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00fa952a-e096-4d71-bad3-c7a4fb16fc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583e0937-92ca-4d6e-9e56-a34bb1979709",
        "cursor": {
          "ref": "26f4a17a-da28-4c4c-9408-5cbdd153fb1a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a31731a6-f29f-4a55-a327-2c826682948d"
        },
        "item": {
          "id": "583e0937-92ca-4d6e-9e56-a34bb1979709",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1feec4ac-5a4a-4012-b60f-2bbe4d2810c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0967038d-dd68-447a-83ec-8f41ad567120",
        "cursor": {
          "ref": "85b0d1a2-d6fc-4a0e-bac5-77ea2e20bdcf",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4a9d069d-14ab-4aee-a866-7d0baec5b096"
        },
        "item": {
          "id": "0967038d-dd68-447a-83ec-8f41ad567120",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4ba9660f-993a-4d70-b321-00a86367929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474895fb-f00d-4d73-a593-7a871fe40fc3",
        "cursor": {
          "ref": "dd91838e-957f-496d-ac0d-597a676fe18e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c672218d-d5ac-499b-a763-a9442d74cc31"
        },
        "item": {
          "id": "474895fb-f00d-4d73-a593-7a871fe40fc3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d20e2301-31a9-4ccc-8db0-5479172efb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbea6cab-c438-4d1f-b04f-779e8155f852",
        "cursor": {
          "ref": "4b110ebb-963c-472c-9efa-b87d8923dc09",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6e2d592-ab12-4fb6-ab82-6bc9314998a8"
        },
        "item": {
          "id": "fbea6cab-c438-4d1f-b04f-779e8155f852",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4efcf173-cb73-42f8-9a84-7f72ce4213c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1310562a-d124-42a0-bd1b-f983945767f6",
        "cursor": {
          "ref": "d77e67e2-82de-4151-bd3b-c0c5ffa094e7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b890c6d4-8801-4fea-acef-59e0ce32ac09"
        },
        "item": {
          "id": "1310562a-d124-42a0-bd1b-f983945767f6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1d7e8ff5-cb0d-4d18-9bb0-8ecfeb38eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62359a18-4923-4101-b00c-930b236eb478",
        "cursor": {
          "ref": "c4bef530-2096-4c59-bc28-a26c727757bf",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6a16c5ad-df3a-4188-954f-792871410b62"
        },
        "item": {
          "id": "62359a18-4923-4101-b00c-930b236eb478",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4ec95c66-064f-4bfd-b15c-21ce1840536a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eac34f-4e25-40b2-9cd6-b64f8960d6c5",
        "cursor": {
          "ref": "8af88f81-54b8-448c-9809-e765b252b86b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "22880290-3fb7-4246-a106-ba5fcf4e94b1"
        },
        "item": {
          "id": "e7eac34f-4e25-40b2-9cd6-b64f8960d6c5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ba594740-5fd9-433a-b705-e3fddb9e134d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9de144-75f0-4278-bf4d-05deb001a2cc",
        "cursor": {
          "ref": "b0d1eb4d-deb3-4db3-93fb-aef8a8b1e74b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ae739c6b-05a0-4485-8950-db3e216adae7"
        },
        "item": {
          "id": "fc9de144-75f0-4278-bf4d-05deb001a2cc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c7a24982-ec35-42ed-a0f7-59b06103ff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c969220-0984-4205-9def-33861e1af753",
        "cursor": {
          "ref": "3e57a07d-3ed9-4e73-b372-10f3c53f028c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc5dd233-e60f-4e32-9c6b-31e2d2c12e40"
        },
        "item": {
          "id": "0c969220-0984-4205-9def-33861e1af753",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b654fcc8-77fa-43ab-b7c0-e04a7730561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4cb516-6ca9-454e-a769-763d2acbbb66",
        "cursor": {
          "ref": "6b4e25db-1a7e-42aa-96f0-aa22542b2cc7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3857db73-c5fc-4235-839f-563662ba4f65"
        },
        "item": {
          "id": "6a4cb516-6ca9-454e-a769-763d2acbbb66",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4afd5e86-ffa1-402e-bbcd-07a8cd80fdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21de43ff-c079-474f-94ca-4cf48a793ce3",
        "cursor": {
          "ref": "a36e4563-eb8c-4367-a04b-50ab8c64866a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5e9f0f5d-0159-4a7b-be05-4b7ee2827089"
        },
        "item": {
          "id": "21de43ff-c079-474f-94ca-4cf48a793ce3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b079c300-41c3-474a-abcd-d42c98907c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384e0d27-7656-4a7b-a25e-953616086a48",
        "cursor": {
          "ref": "f62fc0b6-d404-4238-a297-ca8f22832be0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "54cd2cff-ae1a-41b4-8901-add36f473791"
        },
        "item": {
          "id": "384e0d27-7656-4a7b-a25e-953616086a48",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eca866ab-5c06-43f4-af4f-ce9894bb4aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dfd8ed-cfb8-49f3-bf66-0dbb7c54ea28",
        "cursor": {
          "ref": "db8f97a1-770f-42f7-8a9e-5532bd428cac",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6b6b8497-bfc1-4f36-9dec-4369f30e26e3"
        },
        "item": {
          "id": "29dfd8ed-cfb8-49f3-bf66-0dbb7c54ea28",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "799a22b9-5411-491b-8f25-e75378c5c42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db56619-3c2b-4222-822e-4dc78f3a1a00",
        "cursor": {
          "ref": "f3f4c1f1-0ee9-42fb-99b3-50f04701525c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f8d74a05-ca0c-465d-98a6-2f8417f878cf"
        },
        "item": {
          "id": "5db56619-3c2b-4222-822e-4dc78f3a1a00",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7bf478eb-73c8-40af-ad43-614013af60b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e2eda1-da29-4434-938c-788a8e8804c7",
        "cursor": {
          "ref": "12c159fa-e7dd-481b-b0f9-e1123fd4b663",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "51c78be2-6c2c-4587-9f9a-15f28b8bbfed"
        },
        "item": {
          "id": "f4e2eda1-da29-4434-938c-788a8e8804c7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "47d301d6-f536-4d81-b903-222d50dcd286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad528c22-0000-45e7-ba4c-ed1526fa8815",
        "cursor": {
          "ref": "581fc587-629c-439b-a5a2-8f33a06091d8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a7c1188b-d9ad-47eb-bdde-9141b91ae2d1"
        },
        "item": {
          "id": "ad528c22-0000-45e7-ba4c-ed1526fa8815",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "757a9a06-22a7-48c6-8657-0cfd08c7359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af3656e-3fd6-4d37-b01b-58db63ad6502",
        "cursor": {
          "ref": "7666d864-260a-44e8-92f7-fd19053d163b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e10a19f-dff7-43b6-96ba-16db92711178"
        },
        "item": {
          "id": "9af3656e-3fd6-4d37-b01b-58db63ad6502",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "697b5c0b-eb1b-4230-bfb7-0438db339c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422c6783-432f-4f84-b0fc-9b3071d5c331",
        "cursor": {
          "ref": "64f45368-88ef-4bae-b5e9-81502e4b4c0a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "58621d07-043d-487a-beae-669440a6e622"
        },
        "item": {
          "id": "422c6783-432f-4f84-b0fc-9b3071d5c331",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aa472cee-b665-4b1c-920d-57af1d872362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e12c411-16f9-4c68-af42-4d0f90e7ac37",
        "cursor": {
          "ref": "3eb61070-32ac-40db-9c39-916b2625f21a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3ab390fe-b00f-4a43-83c0-1dfd96f3af31"
        },
        "item": {
          "id": "4e12c411-16f9-4c68-af42-4d0f90e7ac37",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "63c32633-e36c-45dd-b68a-40c9585c1dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0f600-9b0f-4715-b12b-5bd5d2f230a7",
        "cursor": {
          "ref": "aaa4159e-1d16-4822-bc94-caa8f2502308",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2ab24697-cbd6-4a5b-bf53-927188b83715"
        },
        "item": {
          "id": "d7c0f600-9b0f-4715-b12b-5bd5d2f230a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "45ea8803-b01f-4a76-9f05-28fab7da4b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f2e57c-7b69-4a6b-ae46-c97b0813b00d",
        "cursor": {
          "ref": "ce910113-f4ab-425d-83ae-de2426aa1c6c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c140627a-339c-47b2-a418-d61e3c05bcb3"
        },
        "item": {
          "id": "01f2e57c-7b69-4a6b-ae46-c97b0813b00d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e13f8508-f3cb-4b9c-a30a-8715e4cf1be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d663d946-eddc-41eb-905c-c3ac41ab4e99",
        "cursor": {
          "ref": "74b07190-4523-4ee0-98c2-602c9a52df12",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1e1fdcf2-d7ed-4360-a4cd-db8b015c1afe"
        },
        "item": {
          "id": "d663d946-eddc-41eb-905c-c3ac41ab4e99",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6f6693aa-04fc-4a20-b54c-5f70cce0ab4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6a58f-d14e-4baa-9a8c-490a86c79312",
        "cursor": {
          "ref": "c7bcfbb8-0908-4906-bd68-dc5f78097d5a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "191ef681-c3b7-4ca7-a7b1-1f2644947d99"
        },
        "item": {
          "id": "41f6a58f-d14e-4baa-9a8c-490a86c79312",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b466b45c-6a53-4138-b84e-b7ecb84ac320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40be816e-5e40-44d8-a55d-f0455f646500",
        "cursor": {
          "ref": "37aac0c8-ee55-47b1-9622-82092e1c1c1f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "759ee965-3b19-4d96-9599-b6171c8d97fe"
        },
        "item": {
          "id": "40be816e-5e40-44d8-a55d-f0455f646500",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a29f8f44-7f8a-4c15-bf72-d67f53c665d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bd4770-23bb-4078-a273-1c6388cd1308",
        "cursor": {
          "ref": "1c88c548-89d3-4136-8628-9dc8f401f382",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ae557ca0-3d4c-45a9-80d2-8d0f6969ef42"
        },
        "item": {
          "id": "16bd4770-23bb-4078-a273-1c6388cd1308",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "32fb9757-74d0-4426-9816-96f4fa7e7b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a00b42b-ad38-4167-acae-4a631626c1f7",
        "cursor": {
          "ref": "9eb9a591-da31-4b6b-8037-14557b848674",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5966e4a7-baa6-4007-a1d0-ba88bb0967b6"
        },
        "item": {
          "id": "2a00b42b-ad38-4167-acae-4a631626c1f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f5fa0097-3b70-47ad-a0e2-7c3046e7324a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a95bc49-08a8-43d4-bfd7-ac9c9b6f29a8",
        "cursor": {
          "ref": "e73d5749-d354-42f8-b00d-252993d32f46",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5218a300-e165-462b-94c8-3962cd3076dc"
        },
        "item": {
          "id": "3a95bc49-08a8-43d4-bfd7-ac9c9b6f29a8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0d0238b2-c602-409c-9c8b-c700cacb10b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "86fab55f-6a84-40d9-a243-0a9571a318b9",
        "cursor": {
          "ref": "16db7338-4803-47e6-bce1-caf776da9666",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bca9f17b-61e9-4d05-af89-04cdbc321a57"
        },
        "item": {
          "id": "86fab55f-6a84-40d9-a243-0a9571a318b9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f34fa3b9-7803-439c-9295-66eb69a0713a",
          "status": "Created",
          "code": 201,
          "responseTime": 10034,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2af230-f95e-43f1-94f3-dda795346d3f",
        "cursor": {
          "ref": "03056de3-5f36-44ab-8a31-73f52126cf28",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "98a3eab6-3e3e-4e15-8bba-3aa3333161ca"
        },
        "item": {
          "id": "9c2af230-f95e-43f1-94f3-dda795346d3f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9f06e270-b30c-4d8b-8b61-d66672a950f5",
          "status": "Created",
          "code": 201,
          "responseTime": 9018,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "450ef962-1a24-45c4-a9ac-8428e8c862e4",
        "cursor": {
          "ref": "c44d0992-6ef1-4fe4-b93b-bd7498a76eae",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5efcfeb7-cac5-4316-87b5-202736c4150c"
        },
        "item": {
          "id": "450ef962-1a24-45c4-a9ac-8428e8c862e4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8d2faf31-de73-410d-aeb1-6862888d1364",
          "status": "Created",
          "code": 201,
          "responseTime": 8746,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb7209c-6db3-4708-8f5a-bc96d82bd70f",
        "cursor": {
          "ref": "b2bfa01f-1f87-4c85-8599-44b7f86029f6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "33c30a85-0063-44ed-ab1f-4fb0df4cb825"
        },
        "item": {
          "id": "4bb7209c-6db3-4708-8f5a-bc96d82bd70f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6082ee73-b549-4c87-ba37-cb04c22ee81a",
          "status": "Created",
          "code": 201,
          "responseTime": 8961,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dfc67d-1c1c-425a-9795-20bc81e7b64f",
        "cursor": {
          "ref": "5a38252e-f7dc-45f4-be26-d0a73d2c4dc5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "24083bee-7fd5-4ab5-a9d2-1c596301f06f"
        },
        "item": {
          "id": "00dfc67d-1c1c-425a-9795-20bc81e7b64f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "72de49dd-596c-4730-ade5-055968716cfb",
          "status": "Created",
          "code": 201,
          "responseTime": 9754,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5854dc45-a373-4792-ad3c-d0ad8aa40634",
        "cursor": {
          "ref": "54277ea3-ae85-4f4e-8376-2f42cfc07389",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8a284180-cb0f-4f11-8e5b-a29414b3ad8b"
        },
        "item": {
          "id": "5854dc45-a373-4792-ad3c-d0ad8aa40634",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "44edfd7f-3e08-453a-b49d-0c089ddbe4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9b482654-242b-4ed1-9dd4-a3418a02c64a",
        "cursor": {
          "ref": "8902b92a-f81e-43f4-a2e2-6139cf019a8f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8f956c74-2116-4daf-9267-02abded814dd"
        },
        "item": {
          "id": "9b482654-242b-4ed1-9dd4-a3418a02c64a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "62a1d7ee-b8fb-4892-a706-878dab1ac918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca238078-7218-4e3a-bdec-f28c71e4a7ce",
        "cursor": {
          "ref": "88ce8f91-c091-4527-8341-5999c20293c6",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bcda2912-b5c4-4e87-898a-6ccd2740b509"
        },
        "item": {
          "id": "ca238078-7218-4e3a-bdec-f28c71e4a7ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f2e4c436-eea2-4f2d-9a18-218e7ddd332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3199e7c7-a46b-45d7-9794-14cadaaf097d",
        "cursor": {
          "ref": "86d2b4a4-4fa3-4441-8242-5522b00e120b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "74bc3877-309c-4b92-b181-37af34f68bf8"
        },
        "item": {
          "id": "3199e7c7-a46b-45d7-9794-14cadaaf097d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d72a1fe-161c-4e4a-b13c-f663bd07444b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e7ff7e-a7d1-468b-a0aa-6487e414a78d",
        "cursor": {
          "ref": "a749c3be-dc2d-4e1c-8c88-b15c852aff2c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4b2ea2cc-d3d6-471a-a3a1-c1f128cab026"
        },
        "item": {
          "id": "63e7ff7e-a7d1-468b-a0aa-6487e414a78d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d83c50bb-42e2-4e5f-b600-1a6c3ef45c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00946199-9f11-448a-a51b-41048589ecb9",
        "cursor": {
          "ref": "99301c2a-97a0-464a-8e53-2997c3551630",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d3113a4d-c217-46e0-b3ec-425d140711e5"
        },
        "item": {
          "id": "00946199-9f11-448a-a51b-41048589ecb9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "268d9f60-89dc-4295-b13c-3ee29ab84da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc953c-a21a-4d39-9ce3-9fc1adb8e38c",
        "cursor": {
          "ref": "7b8c0005-dec8-472f-85a3-d1d9558f501f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "71fb1a18-3b48-4ad6-b656-119aa91da681"
        },
        "item": {
          "id": "efdc953c-a21a-4d39-9ce3-9fc1adb8e38c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c94e2e7f-a103-43e1-b368-310943c671ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44682382-cab2-43a1-8a80-9dcca0d7bcf6",
        "cursor": {
          "ref": "a00d2872-80a2-47dd-98fc-81abfb5456c2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2472d043-bef5-4728-b0c7-47b3e437a6c1"
        },
        "item": {
          "id": "44682382-cab2-43a1-8a80-9dcca0d7bcf6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7ccf401f-f4e0-4134-99f7-27b1c571e41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe76c50-fd61-4cb9-b0f4-5b4a5d6dd4e0",
        "cursor": {
          "ref": "d0d3e279-41da-4b32-937b-a021eb81dbff",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f34b4bec-e54a-474b-862b-af219fc72104"
        },
        "item": {
          "id": "3fe76c50-fd61-4cb9-b0f4-5b4a5d6dd4e0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "978b5b8b-0083-46bc-b23e-d32218886bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc0f4a8-9f95-4d34-9664-add5f31735f7",
        "cursor": {
          "ref": "4ac21710-66b8-4468-9c15-1cf8815a05d7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "01b3a265-d8d9-4c21-85a2-76cd9adbbc94"
        },
        "item": {
          "id": "3fc0f4a8-9f95-4d34-9664-add5f31735f7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48062b98-f9ae-4b02-8286-cae246b20240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174a4791-c9cd-4bcb-b63b-5fe79798bd6a",
        "cursor": {
          "ref": "1be9882b-3bfa-40ee-8c98-48cef5892086",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "09f7c34e-97a2-4f4f-9070-3fac887d1a2d"
        },
        "item": {
          "id": "174a4791-c9cd-4bcb-b63b-5fe79798bd6a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1d3c554-36ee-4452-a7ba-e443a4a5cf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa97cc1-dd2f-4113-bd77-6f8ceb1953e3",
        "cursor": {
          "ref": "b60dc159-dc24-42e9-ad21-ae8addd49801",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a6825fc-2c1b-4680-8eb0-6463869423e4"
        },
        "item": {
          "id": "bfa97cc1-dd2f-4113-bd77-6f8ceb1953e3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f870de3-d398-476e-b23d-5b2ed54d9bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f131a1c4-7029-401e-a240-c72fb60c2051",
        "cursor": {
          "ref": "be4cdbd6-3558-4b0e-9f6d-058960a5c6d0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3067bdb3-461a-4102-9362-6be49cacaf2a"
        },
        "item": {
          "id": "f131a1c4-7029-401e-a240-c72fb60c2051",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a1011a2e-e09e-464b-b884-2d9eaff75fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebfae42-45cf-4936-bf07-0efb0858bbd0",
        "cursor": {
          "ref": "edaaad87-531a-45c5-8a09-a5b8cbf04f32",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b49bfc68-95eb-4d33-a70e-0f6aead4524f"
        },
        "item": {
          "id": "eebfae42-45cf-4936-bf07-0efb0858bbd0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0d2012f-324d-4c84-b86c-4b4ae8ae980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05cc18b-2185-4f09-b25b-9978a6eafd62",
        "cursor": {
          "ref": "454045cc-723c-4a75-b47f-e712b3be472f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f52256b5-b8c0-44c4-affc-16d3aef3fa30"
        },
        "item": {
          "id": "a05cc18b-2185-4f09-b25b-9978a6eafd62",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2269849e-2f3a-460f-be23-fa3e4f11ba17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b16139-30b8-4ec6-a4e4-96581edec96c",
        "cursor": {
          "ref": "ebc72bc8-a490-41e2-bc81-b4fbceda8b2a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "df4d77f5-3a21-41f9-9c25-838222c358d0"
        },
        "item": {
          "id": "d3b16139-30b8-4ec6-a4e4-96581edec96c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f085552d-723f-41da-9c8e-32dfad419693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4a6d3d-1a1b-432c-8290-4b2f26bf8ebb",
        "cursor": {
          "ref": "3199d9fe-26ea-4515-bc17-b9ae7cf4acfe",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4ddc4241-4d78-49a7-afc7-b30f59383555"
        },
        "item": {
          "id": "0e4a6d3d-1a1b-432c-8290-4b2f26bf8ebb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5cf87cf6-5d4f-4a9d-a1cb-ec936ff0b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05769ab1-09f6-4584-97cc-f99001dc7f42",
        "cursor": {
          "ref": "8f7cc617-3d3a-41ea-aefb-7a54b67b9881",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "743c6ddd-a233-478f-8196-b7859988dd3e"
        },
        "item": {
          "id": "05769ab1-09f6-4584-97cc-f99001dc7f42",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f25add16-efc9-48e1-8d6a-b41ff3873f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afca630-f848-4c17-bb79-b99c24d9a50e",
        "cursor": {
          "ref": "17fd45d7-2178-406d-a2a8-cdb098d8421a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "53312c89-2d49-4474-adb0-d03706ba4fdb"
        },
        "item": {
          "id": "5afca630-f848-4c17-bb79-b99c24d9a50e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bccc1331-ad9b-49b5-a1e4-68ca23b44f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68282135-38d6-4ab4-ab1e-4b347d5a1867",
        "cursor": {
          "ref": "2ba7d509-c41e-4183-9da3-6769edf22031",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b0dd6ad8-23f3-4777-803e-71db8f11f243"
        },
        "item": {
          "id": "68282135-38d6-4ab4-ab1e-4b347d5a1867",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b70d07ac-4e9d-45cf-a051-3eaf05267cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a83600-5e83-4426-a0d1-8a1563c41fec",
        "cursor": {
          "ref": "57c3e3a4-0274-4030-a3b7-6a66acde853f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f47cc9c0-8d53-4169-af83-90fe9645164f"
        },
        "item": {
          "id": "09a83600-5e83-4426-a0d1-8a1563c41fec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9b2a308-71ab-4cf9-b02d-d40a749026b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049d1e7b-65e2-406b-935c-2324147ff9da",
        "cursor": {
          "ref": "feb715e0-cc47-4500-a848-2e918987befa",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1e85b61c-450a-4e68-b49e-c632ac1b25b6"
        },
        "item": {
          "id": "049d1e7b-65e2-406b-935c-2324147ff9da",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3fc79ef1-0afb-44ad-bc2f-6651a98f1869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6931e610-6b4c-4096-b82b-5cfd7b8bdcb0",
        "cursor": {
          "ref": "feea8cdc-3283-443a-a268-ff8336bd8bc1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fbad16f0-f38d-48d4-80f8-4ea9a0cb2841"
        },
        "item": {
          "id": "6931e610-6b4c-4096-b82b-5cfd7b8bdcb0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f5d964e-3f6d-4a3e-bcd9-eae4fe72603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a60e244-f988-4896-ad76-e8bea780fe46",
        "cursor": {
          "ref": "964a3797-c647-475b-a414-872967da255e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5025048b-8b68-489b-90e7-bca249ad2d73"
        },
        "item": {
          "id": "5a60e244-f988-4896-ad76-e8bea780fe46",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23f85760-5cd4-4606-9866-ff4399b44fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7b1981-dcf0-451c-a000-78017ca16813",
        "cursor": {
          "ref": "0553ecc7-d214-400d-a6af-f37646f45687",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "572c5c34-47f5-405c-b318-8870953cc490"
        },
        "item": {
          "id": "3e7b1981-dcf0-451c-a000-78017ca16813",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b7da3e5a-6641-498e-8128-a555a7e13fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae353df-d89f-43a7-87b4-591369e465f5",
        "cursor": {
          "ref": "4bf85adf-6679-4e3a-934c-a5bc598f3799",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "99ebe08e-d886-4141-bba2-9a92537c09ad"
        },
        "item": {
          "id": "eae353df-d89f-43a7-87b4-591369e465f5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f1ef4e21-a19a-4719-8efd-93717c7b1421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3021aa61-3889-47b1-8a0b-0fb180beeb37",
        "cursor": {
          "ref": "2f630d59-4d23-4767-96ec-e96bb792e5fc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c8c5db37-843e-40c5-8b26-760748f7b7e0"
        },
        "item": {
          "id": "3021aa61-3889-47b1-8a0b-0fb180beeb37",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e6f23d74-594d-42d3-8470-8970b79ee4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a87ce5-f5d5-4271-8f8f-4d56070ccf40",
        "cursor": {
          "ref": "fc83861c-ab68-4cea-a67a-2737cd20cdc8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4ae30caf-03f4-4714-af41-f97dcfacabd3"
        },
        "item": {
          "id": "65a87ce5-f5d5-4271-8f8f-4d56070ccf40",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c770805-4239-4dce-9a5b-f88510ef0ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6854f949-c3c2-48a4-af66-a96a0e048d36",
        "cursor": {
          "ref": "69d7d486-64d1-40b1-bccf-741ccc2fdb94",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "43421b29-f6c3-43a0-8bbe-c16fd42a7c83"
        },
        "item": {
          "id": "6854f949-c3c2-48a4-af66-a96a0e048d36",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8fe55a39-857c-4630-a08f-c90a2e18d1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a8360-d7f6-4e42-a7dc-956d90becf05",
        "cursor": {
          "ref": "53c4f024-b607-4ceb-b7d7-8202c01e1e0c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1431f197-3486-432b-8600-ce49e675574b"
        },
        "item": {
          "id": "462a8360-d7f6-4e42-a7dc-956d90becf05",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f74a713-51d5-46cd-94ed-534dd879ae60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e3c239-34e1-46ac-87da-8872d1596502",
        "cursor": {
          "ref": "460556b0-3360-4226-81d9-cc830e2bbd42",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b017be67-0573-40a4-8e0a-e07b79f375ec"
        },
        "item": {
          "id": "42e3c239-34e1-46ac-87da-8872d1596502",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "507e6c7d-159b-451f-8e7e-93d467ec2428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0704fa80-f93d-4a51-bc94-0a7fc17a83fe",
        "cursor": {
          "ref": "55546a04-9b61-4db4-8fa1-8d2ed8678f06",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "71c3d126-30c6-4023-b8f3-847fcc4800df"
        },
        "item": {
          "id": "0704fa80-f93d-4a51-bc94-0a7fc17a83fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e0b85601-2506-41d3-8756-e329b96eba31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f882f6-90b2-490f-93d2-dcb69950377f",
        "cursor": {
          "ref": "1c21fd66-d196-46f0-b651-836c396325db",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "edb00d21-92c6-4225-bc23-2f64bf066eca"
        },
        "item": {
          "id": "59f882f6-90b2-490f-93d2-dcb69950377f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0f600a0f-9458-4111-bc90-481049bbd826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa8096f-c251-4e66-b1af-bf9ca2bf61d4",
        "cursor": {
          "ref": "ae32566a-f287-4cee-8c42-e4f3a757997d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1ccf0206-6e21-41b4-a523-e59d5bebfbc3"
        },
        "item": {
          "id": "5aa8096f-c251-4e66-b1af-bf9ca2bf61d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b5eda8a1-bb4e-46db-81f8-5a0c719c8271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0186dd7-bcd8-49af-9ef3-18aa449925f2",
        "cursor": {
          "ref": "3bc9c9d3-f8bf-4440-bda5-9aa0176d2b84",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "561e2f5f-16c2-4035-b695-ce74055c6b57"
        },
        "item": {
          "id": "c0186dd7-bcd8-49af-9ef3-18aa449925f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a85b8eb-8697-4acf-b893-5b4719fcc5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c417eab-cd42-405a-af50-89dcc3f0861d",
        "cursor": {
          "ref": "928019e4-f206-4172-90d6-7124e45d5493",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "57d95b47-1c24-48c3-8839-6672e3e60b0f"
        },
        "item": {
          "id": "4c417eab-cd42-405a-af50-89dcc3f0861d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3fbb9fb7-6ba5-4fdc-bc15-b44bde304eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b8634-abfa-4206-a5bc-a8eb0d2056f2",
        "cursor": {
          "ref": "f26b4996-bf13-4e45-9f83-7b122356d2c5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "682ad174-3bf7-4d22-875d-7dc602939436"
        },
        "item": {
          "id": "e11b8634-abfa-4206-a5bc-a8eb0d2056f2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7333c9e0-d5ed-493c-9052-ebc4cc42c570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effc85cf-ec46-40bc-bbc6-c92fedfa6b16",
        "cursor": {
          "ref": "d07b2802-b678-43af-b69c-39cf99b07862",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "854fe75b-53a7-459d-b377-bf7959cf974d"
        },
        "item": {
          "id": "effc85cf-ec46-40bc-bbc6-c92fedfa6b16",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23c47b45-af93-4c33-83b1-9718fab48fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab938a0-9e40-4ac0-84c6-52d70bdc7033",
        "cursor": {
          "ref": "93ae2f03-77ef-4096-89f0-f1964ae4792e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fbb6ffd6-77d4-4aaf-ad13-0ff3d48fd398"
        },
        "item": {
          "id": "7ab938a0-9e40-4ac0-84c6-52d70bdc7033",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6b407bfd-cb16-4175-bcd0-cf92ad7f5fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd05b4e6-0783-42c1-8140-0fc20352b6d7",
        "cursor": {
          "ref": "94a4ec96-1b43-49f8-a173-06c08e364463",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f881f56b-e667-4967-9579-230e473b2ac4"
        },
        "item": {
          "id": "cd05b4e6-0783-42c1-8140-0fc20352b6d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ca2ccb58-68ef-408e-b98a-7126cdf789a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82551c44-1803-451e-ac74-f85f6f4044c3",
        "cursor": {
          "ref": "c2bfb75d-1c25-46a1-b752-022e73256916",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a0fff2d1-a9ac-4457-81d0-81660c711de4"
        },
        "item": {
          "id": "82551c44-1803-451e-ac74-f85f6f4044c3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9409f1f4-da15-4cfa-920a-9c276e8d56e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f651e18-6768-4732-a989-36c3a3f4885b",
        "cursor": {
          "ref": "f28df4fb-faa0-4a19-b83e-d158da66eac0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ac0f710b-5a82-4a3b-b870-b18b8ca29c4f"
        },
        "item": {
          "id": "8f651e18-6768-4732-a989-36c3a3f4885b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8fe6f597-be1c-4eb1-9da4-69d32c3fdd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fbf570-ff97-4939-8df6-aaed4d779141",
        "cursor": {
          "ref": "60079759-3ddb-4997-a1d7-26909e52ff3f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "276e8760-d038-45fd-bcd7-d6f7152363b7"
        },
        "item": {
          "id": "f2fbf570-ff97-4939-8df6-aaed4d779141",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20fe63f6-bd12-47f9-80b1-cbd2a99b5844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d56e03b-8106-41ca-857d-0217d915d180",
        "cursor": {
          "ref": "b59d8d6a-4c8d-473c-92e2-34ff44549694",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4faa451e-1de5-4993-953f-ab4a9734e889"
        },
        "item": {
          "id": "6d56e03b-8106-41ca-857d-0217d915d180",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5072bbba-804a-4f69-aa50-f5386c828fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61301c1d-9ae4-47b5-b795-c53eb1559619",
        "cursor": {
          "ref": "577df6ef-c48c-48d6-9638-655aa89dba3b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aaeb31b6-1d28-4093-b2e4-151c4328a57e"
        },
        "item": {
          "id": "61301c1d-9ae4-47b5-b795-c53eb1559619",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8a2d55d9-8d24-411b-be26-2bc1d294b4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31f7650-2fdd-4f3f-b434-1cbbf1b5b3a0",
        "cursor": {
          "ref": "e4a910d2-8ad1-4cb0-8c2b-353c079d05d2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0202c7e0-7937-43f7-a99f-dd5d228f7413"
        },
        "item": {
          "id": "c31f7650-2fdd-4f3f-b434-1cbbf1b5b3a0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f40f6279-c522-421b-8193-bd1581ffb5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138a230f-0305-4d17-a3d5-14356e042fe3",
        "cursor": {
          "ref": "cbf8bdd2-ec80-47b4-bc35-b95cbdc12477",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "efd7d2ff-1b42-4bc4-9c3e-e3c998c7f872"
        },
        "item": {
          "id": "138a230f-0305-4d17-a3d5-14356e042fe3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e12c94a5-5c7e-4025-9e6f-be9f520ea20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12040d74-d2ab-4010-a1bf-0b6da5454016",
        "cursor": {
          "ref": "af2781bd-b4e7-498b-8b4e-7833c0e64b0b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "44085480-8029-4da4-bad2-33eb6662c286"
        },
        "item": {
          "id": "12040d74-d2ab-4010-a1bf-0b6da5454016",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "98e5a342-3fa9-4da0-908d-effbbcd16226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6db995-bfd0-49c9-a131-15ffb272339d",
        "cursor": {
          "ref": "d1116709-e8d4-47e2-b4ed-5009ffccbabf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d4cfcec0-fd4f-4528-8a65-6a23fd9f2ffa"
        },
        "item": {
          "id": "fd6db995-bfd0-49c9-a131-15ffb272339d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fe0d8aa8-1722-4dc4-b1dd-c1b217d9d402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22c425-6e19-4b2e-9d64-6e8b47cc40f1",
        "cursor": {
          "ref": "46d6e58c-c4b2-419a-91a5-b684336068b2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "944a41c8-9d6c-4fbf-866a-58faec99e9fa"
        },
        "item": {
          "id": "0a22c425-6e19-4b2e-9d64-6e8b47cc40f1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8e58ee3f-3fdb-4706-9138-24c10132b18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5916639-ab0f-4b1f-a640-ae04bf36e9d8",
        "cursor": {
          "ref": "841360bb-6c4c-4fbb-95e7-ff26ff5917a4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7094f925-7455-42ea-af62-26fb5681e1de"
        },
        "item": {
          "id": "e5916639-ab0f-4b1f-a640-ae04bf36e9d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bee49298-efdb-4dcd-ac42-a53374bf07e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd4be61-dd02-4a07-b397-239468176ccb",
        "cursor": {
          "ref": "f955bbd1-6617-46ba-85d7-b05f578adf21",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c9aec716-24ca-43c9-8f4e-fa9e2b70e1f1"
        },
        "item": {
          "id": "0dd4be61-dd02-4a07-b397-239468176ccb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "33d66f88-0977-44a6-b16b-d27060d7c99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536848c8-e22c-4b0e-b462-27b5007921a6",
        "cursor": {
          "ref": "23a76128-b389-4d9b-9d6e-62a7d1d00e22",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c3d3231e-5239-4758-b2cd-ad0e3e7b2ea7"
        },
        "item": {
          "id": "536848c8-e22c-4b0e-b462-27b5007921a6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6248f060-63a4-4053-8f21-33de0c1dd3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb30602-e24d-42ed-a44a-2dd6172fe3dd",
        "cursor": {
          "ref": "684aa2c1-c30a-4210-bf98-332994a4e1ab",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "13a21fb2-bbc7-45e8-abda-55cd0a61c7dc"
        },
        "item": {
          "id": "9fb30602-e24d-42ed-a44a-2dd6172fe3dd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "06cfea2a-06e8-430c-b341-75a1f8951c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ae58b5-86de-46b7-b14c-c4b098d94068",
        "cursor": {
          "ref": "e11207e1-3d86-4b98-862e-2a801a935d2a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d3a9883c-6a10-4028-8cef-8f217ca8c0bc"
        },
        "item": {
          "id": "d9ae58b5-86de-46b7-b14c-c4b098d94068",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "62d888a6-33f0-43b1-98a5-090112d9b41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e48947-9ded-4fba-b0a5-fbcd9a418df8",
        "cursor": {
          "ref": "07df888b-b3fd-4d29-9a2b-d7a77d393889",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "63ae1ee9-e5f5-4955-827a-2e740d03d20a"
        },
        "item": {
          "id": "b2e48947-9ded-4fba-b0a5-fbcd9a418df8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f89dce3-ad35-469d-bf20-534aa6808a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07a5487-81a4-4ca0-8b2f-50e89050f7ac",
        "cursor": {
          "ref": "d4e3b925-bffd-48d5-a38f-bd8f04a24f9d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c7d568f6-8a68-4aca-8142-7aaf5024cfa7"
        },
        "item": {
          "id": "b07a5487-81a4-4ca0-8b2f-50e89050f7ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab2f1cc0-7218-4fc7-9fd1-f3afbad8c9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d0256-762f-4add-b952-621c6a033e28",
        "cursor": {
          "ref": "518a1498-b2c7-4b61-9940-41b99149dabf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7bb9ab8d-25c4-4c4b-9a9e-8fe4c925bb84"
        },
        "item": {
          "id": "d41d0256-762f-4add-b952-621c6a033e28",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "148ffdad-10e2-43cd-a743-1e8fbef024d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a96e52-6995-401a-a97f-9ab9bce3906d",
        "cursor": {
          "ref": "01316055-e7c6-4457-b4ec-a22337790190",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d400bb5f-4221-469d-9fa7-34e80516eea4"
        },
        "item": {
          "id": "f1a96e52-6995-401a-a97f-9ab9bce3906d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ecd3cf90-1533-45dd-a206-9514ed391bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275272e9-444e-4b2a-9e60-17671b4760a1",
        "cursor": {
          "ref": "e3f8fe31-3d31-4dc9-a744-80fe071ca8d1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5f299dc0-51c3-4f66-8d29-7e07f83c13f1"
        },
        "item": {
          "id": "275272e9-444e-4b2a-9e60-17671b4760a1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "725c9d47-7eac-4c18-9d1c-aa212471abfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8e5bc6-af65-48a5-86b2-7d865b0c7c88",
        "cursor": {
          "ref": "fc3b7ba4-12fd-4331-93c9-57ed4fd3f118",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "687ce65b-6777-4d1e-9170-3b35a555d3ec"
        },
        "item": {
          "id": "8b8e5bc6-af65-48a5-86b2-7d865b0c7c88",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ea17f30d-826b-4fc6-bc15-08a5ad56285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cd2c5c-c0c8-4213-9256-d83e741730e5",
        "cursor": {
          "ref": "f1e2d8ed-5648-4b14-a8db-a0d266ebfb56",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "654e63e8-1b8e-406a-92ee-ea9433cff08b"
        },
        "item": {
          "id": "87cd2c5c-c0c8-4213-9256-d83e741730e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e6ab3b6-2f3a-4940-87ac-40ccd60ea3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5887c8d-fb50-490b-94fa-dfae276a0a6e",
        "cursor": {
          "ref": "e8ce5889-3539-4b68-af38-c21f369663d5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "adeac3b5-a94e-4b26-b841-fb6f7f0d940a"
        },
        "item": {
          "id": "d5887c8d-fb50-490b-94fa-dfae276a0a6e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86aa96a9-138d-4078-8010-1003399a37d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4765302b-7a5b-4214-b4fa-2256b6be1bff",
        "cursor": {
          "ref": "69b95d7b-614b-445c-a403-62cbad4998da",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "21a5419e-9bbc-4077-bc0c-2d4f268a6062"
        },
        "item": {
          "id": "4765302b-7a5b-4214-b4fa-2256b6be1bff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8f54302b-bd56-4579-903d-3ffeea1ce1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dc8e68-68d0-4c64-8729-4cf2b45aee8a",
        "cursor": {
          "ref": "345cf612-d9d6-4986-8240-fcb5c5284a0b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "55131a0b-2631-44fb-b382-2436c86a2826"
        },
        "item": {
          "id": "67dc8e68-68d0-4c64-8729-4cf2b45aee8a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de538eac-268a-47da-bc01-be91453d6aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773d00a1-0b50-4ba8-bbf6-036dfead3d22",
        "cursor": {
          "ref": "ead1f609-c5cb-433f-8a85-16e0017409d5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "25afd679-a689-42ee-87d3-039049df93dc"
        },
        "item": {
          "id": "773d00a1-0b50-4ba8-bbf6-036dfead3d22",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "edaf3c54-ecf2-44a6-92a3-450266fae023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2122909d-c460-438a-9da5-240010873ef0",
        "cursor": {
          "ref": "af76fc94-05cb-4a6a-8688-62c7db8a19cd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f4b8c292-0fa8-4600-9072-ed7d4d975084"
        },
        "item": {
          "id": "2122909d-c460-438a-9da5-240010873ef0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d0c31cb5-9120-4552-84a7-063068edac68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857b5f8e-e1b1-4bb6-9e11-6c142055f140",
        "cursor": {
          "ref": "c80c92c0-3f06-47d9-99be-4caf5697592d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "82b5d15c-4210-42f3-a06f-d6c50d9a55de"
        },
        "item": {
          "id": "857b5f8e-e1b1-4bb6-9e11-6c142055f140",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ded25c45-76e0-4fc4-9660-b884bcde59bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58db23b-58f9-40e6-aa16-3423e7818a1d",
        "cursor": {
          "ref": "02a22d2c-1bda-4d3b-850a-07eff25605d1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e5ca97cc-4dde-4781-816d-8d35484e9a8b"
        },
        "item": {
          "id": "d58db23b-58f9-40e6-aa16-3423e7818a1d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9661ce0c-6a39-48ad-aa74-51615e7b5152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd606192-c500-4c6d-a6d5-e7a162a18280",
        "cursor": {
          "ref": "2f8a8fe9-f364-4964-be4e-3c644d8886f6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "969c914d-bb7e-4a8b-a693-7a0931031ca0"
        },
        "item": {
          "id": "bd606192-c500-4c6d-a6d5-e7a162a18280",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ac794002-3412-4ece-86a2-bffd930937fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df96614a-0157-4017-8546-a1a0c031fa1f",
        "cursor": {
          "ref": "122f550a-cf1a-4cb1-b09a-169e7687b794",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e0028dc3-aeb5-4703-bcb5-dbd00e920a4e"
        },
        "item": {
          "id": "df96614a-0157-4017-8546-a1a0c031fa1f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9baf1f05-1e5f-4bcf-9fd5-1299051f96d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa950ef-9327-4bc0-93f2-87b2a6314466",
        "cursor": {
          "ref": "622de6e4-2519-4bf1-bb57-cd0e9e49f0eb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cd8f62e7-fea2-4d8d-b7ac-e82b76c30f64"
        },
        "item": {
          "id": "6fa950ef-9327-4bc0-93f2-87b2a6314466",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ea06dd68-2e2e-4736-abd5-1b7029c4da4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ab1a76-a355-4a3e-a836-8b2daeedb5b5",
        "cursor": {
          "ref": "20008c41-c7e9-44ec-8772-4b0edcfe31cc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "85c5f9d3-1e50-49c4-ba7f-28639c6036e1"
        },
        "item": {
          "id": "94ab1a76-a355-4a3e-a836-8b2daeedb5b5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1a3c8afb-7cf7-45b4-92e7-32da203f2a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18af5089-5ba1-41bd-999c-c2830b76b0c3",
        "cursor": {
          "ref": "04565c84-1280-4d1e-bd1a-c19a9d176562",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d50c4d9-b127-4114-85b6-92babcd826a0"
        },
        "item": {
          "id": "18af5089-5ba1-41bd-999c-c2830b76b0c3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aab86798-b3a3-41c2-a09e-05d39b0c05c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9283b9e9-d97d-47aa-8727-a74802e7ea75",
        "cursor": {
          "ref": "c3b7e95c-7c9d-48c5-819a-c7dd925db273",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "355aa821-037b-4dc6-a82a-b0b07796f5d1"
        },
        "item": {
          "id": "9283b9e9-d97d-47aa-8727-a74802e7ea75",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1a8e02d8-c10c-4c84-8bf8-7431ba6d8a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f1dcd3-29e4-4ac5-a249-35372a681b27",
        "cursor": {
          "ref": "2dd54120-89bc-4c2f-a6bf-e9b3c8ae55c8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7929b45a-56f9-4da4-8245-ae35b9aa3d3e"
        },
        "item": {
          "id": "18f1dcd3-29e4-4ac5-a249-35372a681b27",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "99ef52a5-664f-4912-b0a2-60ba9cd23533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6820af-a25a-4869-a728-3e3fdba36155",
        "cursor": {
          "ref": "edf8bddc-1ff0-4f51-82cd-e7ef40de40cf",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "41350d05-7dd5-421d-8a0e-748cba19c80f"
        },
        "item": {
          "id": "dc6820af-a25a-4869-a728-3e3fdba36155",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dbe00285-5eeb-434e-8665-984343154134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bdcd98-da4f-43b7-a371-9851c3da1e57",
        "cursor": {
          "ref": "96604d23-616c-45d5-bb79-88954770095b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8738eda5-0e7c-44e3-83b2-e596d1b2f2eb"
        },
        "item": {
          "id": "c5bdcd98-da4f-43b7-a371-9851c3da1e57",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8e0d9c9b-f6f6-4d16-8a79-1a650bac25b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a32c08d-96f6-406b-9fa8-f7576eb0d4e9",
        "cursor": {
          "ref": "62edfb4b-38e8-4f83-a3f5-201a7e5c3646",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5924f00-a0c3-40a5-8538-b3e74f05a6ba"
        },
        "item": {
          "id": "1a32c08d-96f6-406b-9fa8-f7576eb0d4e9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5a1393ba-066b-4d43-ba13-f78033abbe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6f2ce5-b2b6-433a-ab75-a050ed663b26",
        "cursor": {
          "ref": "5410d851-815b-4942-8340-771ac5459d11",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "29481fa8-6bbe-426c-adbb-c66af04398e2"
        },
        "item": {
          "id": "fa6f2ce5-b2b6-433a-ab75-a050ed663b26",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b41bfd5a-7039-4e6b-899a-bdf7004b746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06d6d18-c7fe-48ee-8a88-7819e7bc1dcb",
        "cursor": {
          "ref": "1b57a627-3e08-42d2-955e-1000889e83cf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6f109cd0-deec-408e-9d44-711bfc3f97b4"
        },
        "item": {
          "id": "d06d6d18-c7fe-48ee-8a88-7819e7bc1dcb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "25848e30-fcbb-4c44-b5de-70b4ddcdccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6e3f9-2587-4c45-81d6-1b9975da958e",
        "cursor": {
          "ref": "ccdc93a0-eb27-437a-9e7e-7452654570aa",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b9be29e-5ba9-466a-b36b-964aab6c95e6"
        },
        "item": {
          "id": "25b6e3f9-2587-4c45-81d6-1b9975da958e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d9ab4e8-fe09-46be-a145-b9be2f4a4aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c77afd-febb-4bcc-85ef-0316561f99d2",
        "cursor": {
          "ref": "5141d7f9-df79-4765-ac57-127d5f7369f1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f6e06a09-249f-4451-8558-6d6650b361ac"
        },
        "item": {
          "id": "48c77afd-febb-4bcc-85ef-0316561f99d2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "157cba2c-2c56-4c80-9e85-9f5d4970c087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f8f226-ba19-482d-8ed5-8cbc13cf5950",
        "cursor": {
          "ref": "648210ae-8f05-41c2-989b-631a83aa4b9b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f2805e6c-6ace-4ba9-afd6-36b582e12dbf"
        },
        "item": {
          "id": "40f8f226-ba19-482d-8ed5-8cbc13cf5950",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0a59dda8-7bbe-475b-97ad-641dccd60057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab5ce6a-76d6-4c13-b0b6-6493f0e44302",
        "cursor": {
          "ref": "d7a44679-52c6-4338-b0b6-241f838d2822",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d6637e4b-3a2a-4671-bd16-e07f065cd6a6"
        },
        "item": {
          "id": "fab5ce6a-76d6-4c13-b0b6-6493f0e44302",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "16abf2bc-47ec-47ce-b730-d1485253bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9f4965-89bc-4d12-a0fb-2c6d6a0602bc",
        "cursor": {
          "ref": "a42554e7-d467-4f24-a76d-d420fa421ae7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1828ebee-1d1d-492b-997b-9186d04927f4"
        },
        "item": {
          "id": "8c9f4965-89bc-4d12-a0fb-2c6d6a0602bc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f390071c-9361-4e09-81ac-0b2fa4a818e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470ea74b-08f4-4407-95c2-3766c13b5617",
        "cursor": {
          "ref": "12b2cab9-5c3f-4f84-b825-c8259a443ae7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3a8294a9-aa2a-4b60-adca-d74053ba6cad"
        },
        "item": {
          "id": "470ea74b-08f4-4407-95c2-3766c13b5617",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e849a367-7ee1-4f34-9a5c-2085893ed14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8669ebab-264b-42e2-884d-785fd60d807c",
        "cursor": {
          "ref": "40e46cde-0630-4290-8df6-9781eb111a6a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bea3b64f-a29e-4ae1-a81d-9a289c7a7feb"
        },
        "item": {
          "id": "8669ebab-264b-42e2-884d-785fd60d807c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4726757e-81d6-442f-8752-c286ebaa083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fc9527-f2be-45f8-b046-2977a9adeebe",
        "cursor": {
          "ref": "22a31fc8-28c4-4acc-9a17-9ae038a7aa8d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4fad60fa-2a39-4db3-9276-d241b6c39fe9"
        },
        "item": {
          "id": "c7fc9527-f2be-45f8-b046-2977a9adeebe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cf1dc8a2-d0ee-4e12-a279-6d009dc0e4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797aebd4-cfb3-4d8e-b54f-d073a8280810",
        "cursor": {
          "ref": "f69735b0-879f-4e19-887e-1786334cfb28",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "62d63e17-744e-4990-a551-4ead02fbe5d0"
        },
        "item": {
          "id": "797aebd4-cfb3-4d8e-b54f-d073a8280810",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cba13896-f763-4965-a4a3-1ad399c2d590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63713bc-ff7b-4748-beab-ec7c07d94143",
        "cursor": {
          "ref": "d60bca75-61f8-42cb-bd20-a62d9c436f5d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ee2015b9-2d4e-4363-8f98-8c032a33c754"
        },
        "item": {
          "id": "d63713bc-ff7b-4748-beab-ec7c07d94143",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f3bb3d36-d2c6-4ce7-9833-34ffec62daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac4d7eb-7222-4b9a-a696-c2fab4b52490",
        "cursor": {
          "ref": "a84a10b1-b4e8-4afb-a4dd-9b95a183df1a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "76e6d8c8-7dd9-42f2-aae4-f4d0d4d9d4c2"
        },
        "item": {
          "id": "5ac4d7eb-7222-4b9a-a696-c2fab4b52490",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a5daeb47-0ae2-43f1-abb2-1fb192e177c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c5c4c7-5fb2-4353-a9a7-ad13f07ef5f5",
        "cursor": {
          "ref": "472e6550-cf64-4d60-ad08-3118107a58b7",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e9300596-d9dd-46fe-b403-4c1ab758b4e7"
        },
        "item": {
          "id": "28c5c4c7-5fb2-4353-a9a7-ad13f07ef5f5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f36677eb-d0e6-4279-9171-88d62e3ad834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e643d1-f67d-4b63-bd17-715ac87fddc3",
        "cursor": {
          "ref": "4e7f2a03-8775-4ecd-92dc-e4b031361515",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "216f0f6d-d34d-40cc-bda4-9c38d1be37cb"
        },
        "item": {
          "id": "c2e643d1-f67d-4b63-bd17-715ac87fddc3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5787b034-89a1-4968-9c26-502de2c2332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5317cf53-05df-442c-b00f-730053f600a3",
        "cursor": {
          "ref": "7ce6c340-91d3-478d-9180-2e37dad0abcf",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e6e2744e-63c8-4856-a5d9-f3a85b95bef4"
        },
        "item": {
          "id": "5317cf53-05df-442c-b00f-730053f600a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e195cb9e-7658-474a-9832-281844923bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04200d1b-dfc5-45b5-9918-7f0ef6b22077",
        "cursor": {
          "ref": "d714a945-3fb4-4f1d-bb74-66eb8e8841b6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "25104c68-b213-4baf-ad72-cb62dac96a79"
        },
        "item": {
          "id": "04200d1b-dfc5-45b5-9918-7f0ef6b22077",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bf80b1c1-c2ba-4bf0-b163-b5f09d2a50f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d711a940-93bd-4495-82b6-71ebaf87c96b",
        "cursor": {
          "ref": "fb807ca7-0fcc-45ea-b304-f307ec831b95",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "103c19f9-2e26-440b-9bf8-2ff9bb0b0b2b"
        },
        "item": {
          "id": "d711a940-93bd-4495-82b6-71ebaf87c96b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7b1af510-03a1-4ada-a95c-cfee96e31c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2ff61f-99e2-4c9b-b978-588d4ccf6658",
        "cursor": {
          "ref": "ee231a28-7d1c-4c1d-8f0d-7f8c7650fb62",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "88c9ddf3-ea5e-46eb-bb68-63b88ed2925c"
        },
        "item": {
          "id": "3b2ff61f-99e2-4c9b-b978-588d4ccf6658",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1dea1d9d-720d-4a6a-b900-b1d86cdfc9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d1e88-f686-4f0e-b01c-f573ece03b0a",
        "cursor": {
          "ref": "1e418039-4414-49f9-b7e5-67f7ac8c085f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c7182471-5e76-449a-91d7-0284b1a47b2c"
        },
        "item": {
          "id": "ac0d1e88-f686-4f0e-b01c-f573ece03b0a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9e04d7ac-7f24-4faf-b301-2aec8ccbe44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6301026d-362b-46ed-bd12-a2200cad5710",
        "cursor": {
          "ref": "4eff4c93-cc04-4288-802e-555ae91d1348",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a7e3aa39-4c3a-43d2-94ba-46655e49bc53"
        },
        "item": {
          "id": "6301026d-362b-46ed-bd12-a2200cad5710",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "236eb5ef-8d55-4287-9b7e-1e1428e11943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be002e2f-7a79-4b43-bc31-89191f123437",
        "cursor": {
          "ref": "3f155e2b-8505-4cda-b60c-6b6f4fe8019d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d03ba457-4242-4156-a463-a4a2e64e268d"
        },
        "item": {
          "id": "be002e2f-7a79-4b43-bc31-89191f123437",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "31bbed45-9657-4656-bbbd-ad1bc06f6e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbd62d0-586d-4f09-9d2d-a4d8925138eb",
        "cursor": {
          "ref": "f1cc6944-e703-4e4f-b8bd-c7836f7c38df",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "911beb3c-dbe6-4a25-ad8b-0204365f96bb"
        },
        "item": {
          "id": "3dbd62d0-586d-4f09-9d2d-a4d8925138eb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7d248bcb-5324-4205-9490-fbf272245842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf60691e-ef16-4a29-ab04-a75d333813bd",
        "cursor": {
          "ref": "1ef8ea5f-630c-4a5f-a864-92f21efd3936",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9c569a34-c604-4a9a-bb24-6061dcfdef89"
        },
        "item": {
          "id": "cf60691e-ef16-4a29-ab04-a75d333813bd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "65e13ab3-35c4-447a-94db-e2165502f417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc93c87-3ef9-4739-8e74-764d93cbe46b",
        "cursor": {
          "ref": "8a01113b-5d1f-49b3-8c83-61d86a11fd0f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "626b5c34-dbe4-47c8-88a2-fca0af034af3"
        },
        "item": {
          "id": "2dc93c87-3ef9-4739-8e74-764d93cbe46b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30143c4c-2100-48d3-bf7b-93baa118ff7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c7690d-4d5c-43d3-8e26-86a57c96541b",
        "cursor": {
          "ref": "78b23d53-a6ee-40ee-bc86-85850f0715f3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fba0a4d7-4236-4aab-bbed-6a42c8add7af"
        },
        "item": {
          "id": "66c7690d-4d5c-43d3-8e26-86a57c96541b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "45ebf107-abf5-4561-b1c7-fca5d29c834f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d31176-8bf4-46e0-805c-020883666c8f",
        "cursor": {
          "ref": "da76b796-0bfb-4121-885a-4e5aa7ee2c04",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "291ac237-0bbc-4370-a3f9-f4c4d0b16430"
        },
        "item": {
          "id": "38d31176-8bf4-46e0-805c-020883666c8f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "57dbfd5a-75e0-4e69-9410-a9cf4a7dbc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3a4e32-473a-4ada-8b36-1594aa49e65f",
        "cursor": {
          "ref": "d8189f85-e6bf-43dd-ae95-4159ca6d130d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "78dd4f3f-e693-4fab-b807-6470b999ac09"
        },
        "item": {
          "id": "cc3a4e32-473a-4ada-8b36-1594aa49e65f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3c2bfe9d-5217-47f6-a55e-44cd02a01bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfe0d7b-b7d4-43f9-ab24-fb1c9594579c",
        "cursor": {
          "ref": "bd206603-2304-48e5-9c19-254750ecdd43",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5cbdb3bb-7825-4486-a099-6f2da77951cf"
        },
        "item": {
          "id": "bcfe0d7b-b7d4-43f9-ab24-fb1c9594579c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aae83d3d-33f6-436d-9c9e-9ee8e0262e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c32656b-4096-488e-aaeb-a4654a747ec6",
        "cursor": {
          "ref": "8fe27c91-f51f-44cd-be6e-7bb6baa8b4e1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8787bf57-9e9a-4e8d-9e07-81d0d2a0c736"
        },
        "item": {
          "id": "2c32656b-4096-488e-aaeb-a4654a747ec6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "706c75cd-e600-43cd-8123-7427cc94b5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f5b947-3cea-4c03-a094-bc35240f2377",
        "cursor": {
          "ref": "5ba5dd90-b921-4d16-9c76-46547764cf1a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9c848b73-0ee6-471d-abce-381ec1bede67"
        },
        "item": {
          "id": "45f5b947-3cea-4c03-a094-bc35240f2377",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2a8073f9-0c84-4ff2-9a2e-6f6e7147f44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54960f81-8380-4616-91fc-180c2de7ee39",
        "cursor": {
          "ref": "51c1dffd-78b8-4d94-a8d3-169665c1fc62",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "903ce0dc-3ffb-4fac-ac2d-af30a94f3253"
        },
        "item": {
          "id": "54960f81-8380-4616-91fc-180c2de7ee39",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "151f2513-dc9f-4a1a-a236-7988f92b38d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f469d99-e998-4c52-80ad-c8b924b6e08b",
        "cursor": {
          "ref": "f142da48-d381-4ad3-bdde-a0bbfe781acc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7bdd06de-8c73-43d5-a04a-ecf1797dda95"
        },
        "item": {
          "id": "8f469d99-e998-4c52-80ad-c8b924b6e08b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7eb8b9c5-88d2-4f79-8d90-24c256139d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312d8360-2259-4242-9214-4e7796485e5e",
        "cursor": {
          "ref": "a51b2baf-cee4-4af9-a240-045a5f47d3c1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "21a9ad90-8369-415f-9803-6dc831c22773"
        },
        "item": {
          "id": "312d8360-2259-4242-9214-4e7796485e5e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bdc3c834-e079-445a-adbd-5fb61a9785b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865ab14b-d0df-4f44-bab7-8b2972dfdec0",
        "cursor": {
          "ref": "34271bdc-2fab-4d01-adfc-14aa2285fc24",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "469681e9-6582-4659-83ca-697c629e226f"
        },
        "item": {
          "id": "865ab14b-d0df-4f44-bab7-8b2972dfdec0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1043b4e8-b86b-4252-b444-e4bf740ebd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0da44-a44f-4063-9697-a9531637c5c8",
        "cursor": {
          "ref": "da7d84b8-1d94-4f59-a87a-66d9648d28d3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d29d3c0-08a1-4af7-b29a-2a2ecd1198c9"
        },
        "item": {
          "id": "d4d0da44-a44f-4063-9697-a9531637c5c8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "38d37662-6752-4fcb-bd05-29cb09d60c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9490cb12-4afd-42d3-9759-a2ace48c6306",
        "cursor": {
          "ref": "d28649d1-4c5c-4833-ae5e-8fbdb4ce3739",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3212f53e-8bd9-4769-8a64-dbd282b81567"
        },
        "item": {
          "id": "9490cb12-4afd-42d3-9759-a2ace48c6306",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "58d26d26-c920-4230-ab0a-41080ec6fe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de28632a-6432-48a5-96c2-aaca76194e6a",
        "cursor": {
          "ref": "a176fb24-a22f-458b-8774-4503c7a36c98",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce2575a1-843a-487d-87f1-37b615a7dbea"
        },
        "item": {
          "id": "de28632a-6432-48a5-96c2-aaca76194e6a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bccfd59e-1b86-4892-97a9-2c9b007d7442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e25038b-4b59-464b-bfed-eea15244b537",
        "cursor": {
          "ref": "5fc7ab7f-a6d9-4a4c-8620-eff2ffb140d7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ed1671e-4e7a-4a75-a811-3b2a9d1944ed"
        },
        "item": {
          "id": "5e25038b-4b59-464b-bfed-eea15244b537",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dcd9e11b-fe9a-414a-b492-4059114196e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a6da3e-fc6d-4030-b654-bc2967d6a477",
        "cursor": {
          "ref": "cce80a8d-d499-4a91-b962-80b1370c5b30",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b52584e9-a14f-4ce0-bb77-30470ef82900"
        },
        "item": {
          "id": "01a6da3e-fc6d-4030-b654-bc2967d6a477",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "53ea3ed9-37f7-4610-bdf5-dee319675891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031eab86-e586-4472-b03c-f2386645293b",
        "cursor": {
          "ref": "5328d18c-e662-456b-a451-296c0cc73c2c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2c6df0b3-1e27-4725-860d-cdb7e93e43cc"
        },
        "item": {
          "id": "031eab86-e586-4472-b03c-f2386645293b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "85db9522-741a-4cb8-b65f-ab2d22da9353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a847a1-5f7c-4568-8a31-79c815a13cf4",
        "cursor": {
          "ref": "056260a9-4c5c-4a05-ac90-2d1fef6a5ee0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c931e141-12dc-434d-b803-1900c6a9ba13"
        },
        "item": {
          "id": "27a847a1-5f7c-4568-8a31-79c815a13cf4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ead8a059-6ae2-468b-af52-2ce85ce0e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87f4f97-2074-4f06-9799-da936f3d08cf",
        "cursor": {
          "ref": "2ae14f83-c698-495c-bd26-1d920be8dfa1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f31f60fb-d24a-4326-9b16-112275208b75"
        },
        "item": {
          "id": "e87f4f97-2074-4f06-9799-da936f3d08cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "188401a3-b1f8-4142-957a-3b090bd5eef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa04b966-99df-4f74-b63e-a970e885a398",
        "cursor": {
          "ref": "fd99539e-7a05-4d59-820d-bb178adc65f8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "60f2ed49-24a1-42a6-8c6a-32e3c0d218fd"
        },
        "item": {
          "id": "fa04b966-99df-4f74-b63e-a970e885a398",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ea364d94-4fc9-4bc1-899a-87522a5ca2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f5741b-d805-44ed-b459-d1352325b465",
        "cursor": {
          "ref": "6435b4eb-59dd-4dad-8580-0a8fe512fb47",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1bc87c5a-2198-4b69-93e9-f11ad41bb8e7"
        },
        "item": {
          "id": "97f5741b-d805-44ed-b459-d1352325b465",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6fc082f8-bf80-4baf-b1c9-84ccc4a069d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa9916d-c942-4851-83ef-006cd5a81f64",
        "cursor": {
          "ref": "a8710d54-fc0e-47b4-968d-783be8db3476",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "15f04953-fb44-4f55-b108-6549832eca8b"
        },
        "item": {
          "id": "eaa9916d-c942-4851-83ef-006cd5a81f64",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "903d96f1-ec5d-4ac2-9f5d-18b182763b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f2fcbf-8ee3-480a-94ff-9d3e1c1233e8",
        "cursor": {
          "ref": "13be5455-241c-40b0-8e5b-e96033870493",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c0a1c565-b0dd-4692-b1f6-3a805c61a4c1"
        },
        "item": {
          "id": "49f2fcbf-8ee3-480a-94ff-9d3e1c1233e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9e34a9f1-cb29-49d3-8021-c05ac48647a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992b1c2c-aeb0-415a-8389-ae2aa13ba48a",
        "cursor": {
          "ref": "c94a1e0f-17f8-451b-9c83-58706eb4b2e4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4f51d180-6d21-4cc4-bcc1-ed1fd9103fbe"
        },
        "item": {
          "id": "992b1c2c-aeb0-415a-8389-ae2aa13ba48a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9aa51dda-c239-462f-b8ea-095a4d3b9473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e219b827-80de-4824-bc11-96f9f8953a68",
        "cursor": {
          "ref": "398ae43d-9d38-43b5-913d-a66d91862912",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "198531f3-7b4b-4d26-9ad0-efa00899f851"
        },
        "item": {
          "id": "e219b827-80de-4824-bc11-96f9f8953a68",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a98d3150-0fb1-4e07-a397-c25c03293b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993d663b-1c38-4e8b-bec8-c77c0468ae37",
        "cursor": {
          "ref": "1fb1de87-892a-4fb5-b0cf-ec9b102e54cc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cebc1d24-549c-4172-81a7-8b7e9bc34b00"
        },
        "item": {
          "id": "993d663b-1c38-4e8b-bec8-c77c0468ae37",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "98bbf259-6dad-4a07-93d8-904978df431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f626745e-d227-4f45-9b83-e36f3c267a5d",
        "cursor": {
          "ref": "7b460e96-3d61-43fc-8162-53669d79c553",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7177ee30-65ee-4558-a7e1-6ea44f0a40d8"
        },
        "item": {
          "id": "f626745e-d227-4f45-9b83-e36f3c267a5d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ff500f39-237e-4421-bead-43707820010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c72ed2-b3ff-4fdc-8c2a-a486c4068e27",
        "cursor": {
          "ref": "fe9a85f0-740a-4b3d-b687-f3cf15352ce0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da3143d6-7c76-48fc-9f1c-b03e699f9e74"
        },
        "item": {
          "id": "a5c72ed2-b3ff-4fdc-8c2a-a486c4068e27",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3fedb109-0267-46be-814d-8d0e8790336c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddfe835-e611-4e0b-8a56-ca22c6238c1e",
        "cursor": {
          "ref": "f93a4516-6e66-4802-a0ce-59b2c38e8ea1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d8efabcd-aed2-4521-a286-ff5b579dca7a"
        },
        "item": {
          "id": "0ddfe835-e611-4e0b-8a56-ca22c6238c1e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3a363b2c-5ec2-4536-89e1-be26ac7da972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c752b761-ce81-4a43-bc58-f0004fa5d945",
        "cursor": {
          "ref": "d789bad8-0729-448c-bb1e-07aaf6978be1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5329d480-b1d9-4013-aba2-d8891f316d59"
        },
        "item": {
          "id": "c752b761-ce81-4a43-bc58-f0004fa5d945",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "32a9520a-c6e2-4375-8148-c178006adfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d399a1c-f6c6-4b3c-8553-d1ce78ea5426",
        "cursor": {
          "ref": "0b831305-3ddc-4bf1-afbe-75da229ecf4c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "65ebefd4-bff9-4ba4-bd98-0f6a5e6a8f56"
        },
        "item": {
          "id": "7d399a1c-f6c6-4b3c-8553-d1ce78ea5426",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e0660b0e-4f75-47b6-b192-1e233f4c5579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9494edde-516e-49f6-9461-0b249ea0d31c",
        "cursor": {
          "ref": "7026b990-4002-4a55-94f3-cf840d061325",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7bd06204-68bd-4a97-bf4e-54d0556c882e"
        },
        "item": {
          "id": "9494edde-516e-49f6-9461-0b249ea0d31c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b25ea380-8ac6-4404-8aa2-735e167747dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd61c14c-fef9-472c-8879-d46942fa8e85",
        "cursor": {
          "ref": "79d44cb5-8ba6-4305-8363-0e0f26d1c9e8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "32444f8a-3e11-4ac8-8d0e-9f71a5bea152"
        },
        "item": {
          "id": "cd61c14c-fef9-472c-8879-d46942fa8e85",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "026908f3-01b5-4c97-ba62-4f66a1356301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47f0a4d-2317-4b02-a81a-65e01707ed95",
        "cursor": {
          "ref": "fc13e533-9adf-48ff-ac14-92db266e5ab6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8b07efaa-e28a-4db3-9705-2cdb6a868770"
        },
        "item": {
          "id": "c47f0a4d-2317-4b02-a81a-65e01707ed95",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1756b38c-d82c-4a1e-b124-78d313f949e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e7550d-5e18-4a33-9e8b-8ae0f9dd4f1b",
        "cursor": {
          "ref": "9bc341c8-4982-4ed9-9405-956fc4a6e2da",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f8b1d0e6-f3e2-4d56-adde-b89b368d8547"
        },
        "item": {
          "id": "74e7550d-5e18-4a33-9e8b-8ae0f9dd4f1b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "87ea53f9-40ea-48d9-b9f5-d8ac8e06a31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1215785f-9116-43d5-83ab-44ae287986a0",
        "cursor": {
          "ref": "e1c1fe32-1b55-4056-a1aa-56a9cceb9c40",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e1901dc-60ad-4d24-a00e-343023520c51"
        },
        "item": {
          "id": "1215785f-9116-43d5-83ab-44ae287986a0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "87ebfabe-c07c-4773-b5a2-f3b6e746693a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75339e8d-241d-4cc1-9e6a-b6bfe30793d7",
        "cursor": {
          "ref": "c340c55e-c3bf-4875-9467-093f4448410b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b84b2a29-f1d4-48f9-a571-c7b5b7d1a8e6"
        },
        "item": {
          "id": "75339e8d-241d-4cc1-9e6a-b6bfe30793d7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fbd4202f-6b01-4704-a0f6-a55a2edfa256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20bb7e5-c27a-4f0e-81bd-80748ba9970a",
        "cursor": {
          "ref": "a638255f-1c7b-4404-86d7-ed6e0b612fe8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd77926c-08aa-43d5-ac14-d81669fadce3"
        },
        "item": {
          "id": "f20bb7e5-c27a-4f0e-81bd-80748ba9970a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "135879ea-5a66-4c72-b5b0-f44fe0acde2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670f8a4a-1ce1-4e49-8d80-2a0955f65b4f",
        "cursor": {
          "ref": "045a367d-bef2-4664-a909-a1d1bdd51e80",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e19cb1b4-21e0-41e9-88e1-c27f0bfda397"
        },
        "item": {
          "id": "670f8a4a-1ce1-4e49-8d80-2a0955f65b4f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "31396f7a-3ec1-4421-94a9-be45caf606aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0568b-4793-4f0b-9d7f-bf28c0c8b269",
        "cursor": {
          "ref": "b5850f60-8fac-4a21-9e8e-db9963a723ac",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c842e226-a864-406f-9954-83ad728e7f8f"
        },
        "item": {
          "id": "94e0568b-4793-4f0b-9d7f-bf28c0c8b269",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a6f88aba-cba1-4443-8cb5-d4fb7f7c138d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36869d5b-f61c-4f33-aac1-4d2446f5f69d",
        "cursor": {
          "ref": "767c520c-c457-4195-853c-e5889c1ab39b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fe7003a1-b2f5-4127-8d79-e54e0a8ee586"
        },
        "item": {
          "id": "36869d5b-f61c-4f33-aac1-4d2446f5f69d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06539f6a-fb25-4fb0-8a4a-aee43a9c194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdd51d0-30f5-48a7-8aa0-ef80bb825133",
        "cursor": {
          "ref": "2dc8f463-34fc-4e94-b90d-1c12476d95ae",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e6e85d19-84ba-491b-8739-b559dffcffec"
        },
        "item": {
          "id": "dfdd51d0-30f5-48a7-8aa0-ef80bb825133",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "63d2c7ee-7861-43d9-b194-db675295b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41040a35-3d46-42c0-8f03-48a3365bdab7",
        "cursor": {
          "ref": "92aa8f75-f9eb-449c-a996-a8aba49a3e98",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f34d2259-109a-4bdc-8a0c-bc95ec1fde3b"
        },
        "item": {
          "id": "41040a35-3d46-42c0-8f03-48a3365bdab7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1b5c8cfa-530e-4720-acfa-f827411afbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672b3a06-0c76-4beb-84a6-18ee3ad7d51d",
        "cursor": {
          "ref": "ed38bfae-74df-4bab-9aad-5cbed15a8c4a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "31b12a45-5f03-41c6-a79b-5b80c9c9652d"
        },
        "item": {
          "id": "672b3a06-0c76-4beb-84a6-18ee3ad7d51d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6d8c0d65-a6f9-40f7-9f42-2b5cf3021d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e949e7b7-53b7-408d-bf74-e53179df0193",
        "cursor": {
          "ref": "6551f5ab-4516-4a7f-82c8-ccba9fb58a6c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b39958ee-5567-4dbb-9afc-4e6f951e02d7"
        },
        "item": {
          "id": "e949e7b7-53b7-408d-bf74-e53179df0193",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66ed6e4e-4254-4e0c-9c33-48a22fded530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb99090-1312-4a5e-b00f-0ccc31d9eb83",
        "cursor": {
          "ref": "0e062848-97c3-443b-861e-3c121a10c486",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6eb3bd4f-f713-44ea-b26f-42e6695abbbf"
        },
        "item": {
          "id": "9bb99090-1312-4a5e-b00f-0ccc31d9eb83",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1ed2047f-aa33-45c7-bd98-7e126556bd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82907798-2a56-415e-85c2-69f3e6f62c9b",
        "cursor": {
          "ref": "b1f21791-dba6-4825-9e30-45f57472f673",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6f342dc2-73e1-454d-b3cf-228625dac66b"
        },
        "item": {
          "id": "82907798-2a56-415e-85c2-69f3e6f62c9b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "94d5594e-b21d-4872-a166-08710f64d60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca6741a-eec6-4144-b2da-58de2120c633",
        "cursor": {
          "ref": "0250f4ec-8197-421d-9a2d-1d03b38aff42",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d608222a-076f-4950-99bf-0019d6320b76"
        },
        "item": {
          "id": "aca6741a-eec6-4144-b2da-58de2120c633",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c4a082e8-51f1-43ca-a3ff-a02e73cb3b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8777542b-c0fc-4aa6-9f8b-6b95b344f5aa",
        "cursor": {
          "ref": "cfff2f9b-57de-424e-9d64-66570aaafb08",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "df8f39ea-89e5-4b97-91fb-6ff77af6d40f"
        },
        "item": {
          "id": "8777542b-c0fc-4aa6-9f8b-6b95b344f5aa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7063cc11-1d66-42a8-81cc-b01c7db66a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090eea02-b3d0-416c-95bd-c700b032241d",
        "cursor": {
          "ref": "a7898b76-4655-46bd-8c8d-053c4be789d2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9e06218d-d461-420e-a80f-2ffd63b0c73f"
        },
        "item": {
          "id": "090eea02-b3d0-416c-95bd-c700b032241d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "99e39576-f7a9-4aac-8071-3fab7bea17d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3434f13-6e71-4935-9816-26342ab879af",
        "cursor": {
          "ref": "d917c7a2-0016-4462-9aaf-bb7101590d4b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bb221076-37d1-4379-96c9-acd78d0f42ef"
        },
        "item": {
          "id": "e3434f13-6e71-4935-9816-26342ab879af",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "69143666-a05f-4799-b27c-9a0b45a217a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cc0830-c433-47f4-8360-25f342ec493d",
        "cursor": {
          "ref": "eb62e0a1-0faa-4454-aae3-4a67f624eb4a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "32019c54-db1a-4c6b-ac0c-7bcb60ab128d"
        },
        "item": {
          "id": "a6cc0830-c433-47f4-8360-25f342ec493d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "529147fe-619a-4c60-98dc-326d00e0ff09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc8f300-7968-4ff7-ab0f-857071b3a0fc",
        "cursor": {
          "ref": "8cd64b10-d513-481e-b9c5-b42b78088afd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "48e610a1-c821-43c8-8cb5-a14405125beb"
        },
        "item": {
          "id": "1dc8f300-7968-4ff7-ab0f-857071b3a0fc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ffb05bca-81be-49de-93fb-ecaa7010f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcbf65e-e621-41b5-bb1b-75bb685b7521",
        "cursor": {
          "ref": "b35d9be0-35d7-4cd9-bb38-83fcad7a54a6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "672e0de2-8fa1-41e8-8aca-d0e2539a7021"
        },
        "item": {
          "id": "4dcbf65e-e621-41b5-bb1b-75bb685b7521",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2bdb827b-da04-4c5b-b375-3cbdd74cf62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0748f55b-952e-44b8-a456-464202e41110",
        "cursor": {
          "ref": "19c93d0a-71de-478b-8b77-1685da2f2cc1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c8db4ba6-fef8-443c-ab66-5e759feca201"
        },
        "item": {
          "id": "0748f55b-952e-44b8-a456-464202e41110",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "14897e33-5564-4a81-8fb2-ee28b4fd0e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a70e4dd-7354-4b33-a218-b186157c93f7",
        "cursor": {
          "ref": "fe485ab7-775b-4ca4-abfd-89bca290d1b3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5f8c83ef-6a29-4537-a518-b88e7e870caf"
        },
        "item": {
          "id": "7a70e4dd-7354-4b33-a218-b186157c93f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "783684cc-0fc9-4085-8990-e395643d28ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88af2ed-bf2f-4a8c-883e-0ad5d7384180",
        "cursor": {
          "ref": "84f0ab35-e006-4217-963f-62ece9a629e2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "260c9263-315b-469e-9fc6-b64e261a2c33"
        },
        "item": {
          "id": "d88af2ed-bf2f-4a8c-883e-0ad5d7384180",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "85f6b108-378e-4781-a529-68e3fdcdb743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a324c758-91bf-4e84-aaed-03f11e20d776",
        "cursor": {
          "ref": "86516b4a-20a5-460f-b472-4e013a792b76",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "887fb614-b015-44be-baa4-26328cf2914e"
        },
        "item": {
          "id": "a324c758-91bf-4e84-aaed-03f11e20d776",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "346a918c-dfb6-433a-b96a-9dbb89d24a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb555e7-511d-4e5d-b082-2e9aed66e83b",
        "cursor": {
          "ref": "e76bb443-a35d-4b6a-82da-5081f8d105b7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "95e0d515-d5ef-43f6-8a99-47b569870604"
        },
        "item": {
          "id": "0eb555e7-511d-4e5d-b082-2e9aed66e83b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0019d3a4-d638-4360-bea1-da185cfcfebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc12015-662e-457c-bc35-bc54d0cfc4e8",
        "cursor": {
          "ref": "9682be75-2dad-4a04-a6df-8d0dbca1011a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4d4f06b7-098d-4a25-98d8-a7b3b0bdfa74"
        },
        "item": {
          "id": "bcc12015-662e-457c-bc35-bc54d0cfc4e8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "51b64bef-49c4-42ed-ba04-a731c83c6b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c92bce3-0c89-4731-a04b-5e31b2103c2d",
        "cursor": {
          "ref": "b64d05e8-5863-4398-bb77-fd2f51cc0319",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fd53152e-6cf9-418e-b8b7-5477994760b6"
        },
        "item": {
          "id": "2c92bce3-0c89-4731-a04b-5e31b2103c2d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ca095305-7d33-49ab-aaa8-6c74d382def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568b1fb1-e37c-436a-9cd7-a9f416051c7d",
        "cursor": {
          "ref": "732a2df5-1bed-408c-b7c5-dd10692e76d2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ea279214-ba1e-48cc-b894-b7894826bec2"
        },
        "item": {
          "id": "568b1fb1-e37c-436a-9cd7-a9f416051c7d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f63b9fa2-e4de-4fbd-bcd1-5bf67e08e90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096319b9-e5d7-4305-b5b4-e3f6a923ab8e",
        "cursor": {
          "ref": "2000287b-c3b0-4a18-b259-118c63264ff8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "67e3f425-5a7d-4370-92ea-7abe2fac597e"
        },
        "item": {
          "id": "096319b9-e5d7-4305-b5b4-e3f6a923ab8e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "596f953f-fadd-467e-b9d3-955d5c8b8c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9222edb-1ecd-4b3f-b8e3-6090f624dece",
        "cursor": {
          "ref": "9549b039-38c3-4f55-90c0-112d6f7e5bcf",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0924dac2-a260-448b-a163-1d43a7c91596"
        },
        "item": {
          "id": "f9222edb-1ecd-4b3f-b8e3-6090f624dece",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "36ce7ddb-ca77-465d-ab55-d215c485cf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2995a6-d199-4f26-8518-1570070d1579",
        "cursor": {
          "ref": "a0d29058-050c-4314-a142-4736eaaecae7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dbdb167c-5007-47a9-96dc-3b348c9d75e7"
        },
        "item": {
          "id": "6a2995a6-d199-4f26-8518-1570070d1579",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8fbbf9d9-9275-403f-81b2-aa8361618b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17547db-4f86-4765-8859-fc6d94508ddb",
        "cursor": {
          "ref": "9b4c1ef9-77a4-4251-ad51-0c48e5f301ef",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "81d32160-39da-4316-9247-5adea6bbd2b6"
        },
        "item": {
          "id": "f17547db-4f86-4765-8859-fc6d94508ddb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fe10105d-a0a1-44bb-b228-2366eb8aead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836c62ba-c806-485e-b925-56bb193cf075",
        "cursor": {
          "ref": "c974eefd-d272-4d6a-9115-abc28214ece7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c561ff06-f458-4fcc-b3bd-a472216bed35"
        },
        "item": {
          "id": "836c62ba-c806-485e-b925-56bb193cf075",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a60aed39-aca1-4735-b68f-c866bf6960f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4e3951-d4c0-4edc-ab0a-10b4d5675eaa",
        "cursor": {
          "ref": "955f5aae-8642-431d-88fd-ab9e8b553254",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3bb10d41-b37d-4caa-b19f-ea6c939b25c0"
        },
        "item": {
          "id": "1f4e3951-d4c0-4edc-ab0a-10b4d5675eaa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "52a8a6f8-5441-49e8-9cf1-b924d0b5e15b",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9b3c46-7639-4b74-a7f7-42faf72a957b",
        "cursor": {
          "ref": "da472337-52be-4aa5-bb7f-82e12c33d970",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "acc7fcd0-3c7b-4e23-a479-02e2f147d224"
        },
        "item": {
          "id": "db9b3c46-7639-4b74-a7f7-42faf72a957b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ca387b43-a8ff-4dcc-b1b6-a3fb9e2ca165",
          "status": "OK",
          "code": 200,
          "responseTime": 1553,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf8584d-6d5a-4eb5-b620-d3e5db49967a",
        "cursor": {
          "ref": "24258d2a-b113-4a4d-91c8-bd1358cbb0a2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1a4a2bff-1524-4ef2-8e50-696f9d546b8a"
        },
        "item": {
          "id": "ecf8584d-6d5a-4eb5-b620-d3e5db49967a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "42b96575-31db-41dc-a35f-9e5605339697",
          "status": "OK",
          "code": 200,
          "responseTime": 1296,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aebf76b-f0dc-48fd-a049-32e02d62f117",
        "cursor": {
          "ref": "ddcaa89c-c7c4-4f2c-84dd-d5338efba189",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9298e1fd-5f1c-4947-9639-a6c7a8742597"
        },
        "item": {
          "id": "4aebf76b-f0dc-48fd-a049-32e02d62f117",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5385ece5-0af5-479c-9ab9-e27f6a352ca4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aebf76b-f0dc-48fd-a049-32e02d62f117",
        "cursor": {
          "ref": "ddcaa89c-c7c4-4f2c-84dd-d5338efba189",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9298e1fd-5f1c-4947-9639-a6c7a8742597"
        },
        "item": {
          "id": "4aebf76b-f0dc-48fd-a049-32e02d62f117",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5385ece5-0af5-479c-9ab9-e27f6a352ca4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3828816-af4d-45b3-b3d2-01e1197c4966",
        "cursor": {
          "ref": "8d4ff7ea-37bc-489e-a5f5-3d65374bf88b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "984c4752-18ce-442a-ab06-8ef8af36b41c"
        },
        "item": {
          "id": "b3828816-af4d-45b3-b3d2-01e1197c4966",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c97f4e58-9dd6-49b5-bc75-442a089d0e7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf0977b-ce5b-4cbf-a75c-8625c33987aa",
        "cursor": {
          "ref": "2c520bf4-ac07-4044-8116-1ccb3f04cb56",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ed7f0fbc-5357-42b1-a2f5-7e0c76b48620"
        },
        "item": {
          "id": "baf0977b-ce5b-4cbf-a75c-8625c33987aa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e581bd5d-a230-4947-ad55-71939566127b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}