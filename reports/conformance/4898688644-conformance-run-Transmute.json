{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9573db39-00db-4c51-a04d-5e994542f0ab",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1ddaad3b-e09c-4383-b21b-4ada9bc97849",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9b91bd7-d517-47ab-8633-d22ac7fc4bc4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cec6c15c-2683-4100-bef0-7ae97298bd7f"
                }
              }
            ]
          },
          {
            "id": "c627f805-8676-47f6-b020-0fd0732e4ac8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ed68283-1db1-470f-9bbe-da415d43b96d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d687a1a-ca88-4f4f-828a-33d22516eea1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d462878-ece3-4b75-a806-fc2bf3dcba99",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f8f75058-4e74-415c-9757-00a65e73e81b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c764b62-3e90-4947-8588-9e8a9aab1972",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b173ddcd-5ce7-463f-83c5-0b740734f03f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0828b33-490d-4fc0-b950-71be13ecff95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5da132a-0458-4948-b586-42dc73f5ccfb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f9dc50f-cfbc-4d68-a8dc-66094a512961"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "47904fcd-a499-4f2c-8d55-706d1393f365",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3031a75f-ab52-4929-b968-606d65019456"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9eebb02-d521-4a3b-9fa3-718bb580e471",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9fd1b880-8bc4-41f5-9c73-3b5a9eec05b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d74dc04a-64f1-4c5d-bb98-17afc60698d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c977adf3-ee68-4d9f-ace7-90ef3d204e9c"
            }
          }
        ]
      },
      {
        "id": "f899f498-4794-4a1c-8512-c56fe481e15f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7e406a88-6dad-4c44-b99c-dff0e3486831",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f659db1-7522-4d73-8b99-db14c5ce4f1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66b39c85-f987-4a5e-a29c-9de64bba2d27",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0645690f-4999-4f72-9510-dfd422266a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aa2c4d2-5d01-4f64-837d-94ad0fbd3122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917d6835-caa2-4860-b0bd-406e6702a7ca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13a0016-1760-4c95-8193-8ed11bcd1629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f35fc537-3b3b-485c-ae6b-9a49988ac45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48af577d-a78e-4645-8b8b-99c67a8dd9db",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e7a2cc-242b-4fc6-adf5-389d090d7f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aca65f49-342a-4848-b9e0-fe9233dfb887"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e5e1619-e8ef-4dd7-87f8-6560d450eaeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "039cde95-61e1-4a6b-8ab4-4deaac9deb09",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d033be2-467a-4bc3-9956-b01ffb5fbe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2453083-08e5-4343-8a5b-f7a712297192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d650a-b98c-4869-b3f2-f85d226c9699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f93bbea-08e5-4c34-82be-cd59131c04b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e76a0d2-ccf0-4d6d-b87d-ac7ac9a0af50",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5fa021-ce04-4c1c-a843-1c6961422f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c778f66-f0e7-4920-a72a-19fe5f7625ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ca4291-26bd-466b-83b3-f2e0cacf9fa5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c2064807-2c1f-49b4-bb4f-468eb15f162f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "017c5785-a2c2-444b-8fa9-caa0ae31b57b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc6e7fdb-c496-43fe-9801-9c65b7deb5fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf335847-0b8e-4ce3-b210-85bfac281417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f05b65b8-eb60-44cb-8ab1-41758675d99b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d94e0629-59be-43ab-be06-342b533b8161",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "07dec44a-48d5-47cb-842e-1e23e2de6997"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ca1f067-30b0-4b49-b422-4687ca41334e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dff53d8-0132-4359-9093-c73f0259d647"
            }
          }
        ]
      },
      {
        "id": "395b2557-6ca3-4549-abe5-85a9ad277178",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bf178cf0-a7e2-49f4-b0e3-abeb28a0dbe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23fab8af-a9de-4668-9814-deb7f9dc293c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c80f8451-f0df-49ac-8e45-411f0ff0a429",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8427b94c-92bc-42cf-818d-aac1cd5c7fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c00f084-e95c-44da-9b15-adf7ca992676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0539d5a4-3916-41aa-b18e-4cf04df4f1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12ae588a-d0d4-45ab-9a5a-5a6110e712fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d726eb35-710c-493e-be6a-48d48427d9a2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58836e8-5f8b-4a0b-a0c6-a9b3f6ba20ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3b6c94-4ce9-4ea6-a08a-490093ea0ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018ffac4-8be4-4d5e-81db-e3cd2a8b00b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecf89a13-f308-4624-8d2d-b5ca75953888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d275a4c6-b39d-4131-89f7-8e66a70ab56e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624779d6-4d5b-4183-8d89-48ec25d70c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb89b393-3fde-45bd-85d2-e1cbd7b4659b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d0486-2d4f-4f91-b65e-a71ee1d232f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcefa36f-9a9f-43ba-b3e9-bd8efbcb127a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1838ffbe-5b3d-4817-8f35-2ab5cba25f80",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab070cd-9284-4fcd-b6e3-a95bdee86701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eaac8b1-7558-4b36-857f-d0934a21d877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc9515b-8e48-4429-8144-3ce988d87d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79df9769-e313-403c-aad6-aa3b9fcf2568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123c3294-8713-4f5a-93c1-b3f53db4bf0b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3f13f-795d-45a0-88e5-320e547f3c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3220c3f2-6217-4c74-90a2-3de33471b74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07569bb0-df21-48b6-851a-6ad3bb19a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29bc1145-1c07-44be-b749-0aa3e81e87e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e1c38d-880b-45f8-b4da-ad20b07b1b57",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10da4ab-bb33-4fc6-8300-e1a00c7b2d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d673917-e81e-4cf1-86e0-4ca441d32a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6e46fb-c873-47c6-bff7-a429f524d3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5620ad78-0cf6-4ee0-bda0-0443a733b497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7165197-d913-4ec0-b3ad-0d2617fe7588",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d2e12-175d-4476-8197-30a0dc78fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fcf9f8-bdf6-40e8-b5fa-4f617dcfac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fad5683-935f-4f20-bcc6-87d33a6a17f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1716fe0a-4663-48ee-bf12-b9b393074b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe8f97-b170-4b9a-a1ff-330f39fcbadf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2614bf7f-876d-40fd-92bd-eef3a39a407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f2fb4-8758-46f8-beb0-b5eb006c7d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530991b2-a809-4165-99b8-588efdedbdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb1e6184-90d1-4513-960e-0d4eb032aebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d473733-bfa6-498b-8554-77b23d8aa328",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac1514c-4591-4468-9316-41750197e17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e643c2-0fb9-4053-b065-07074d70f3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62378e5-964c-468e-a9dd-7f71bf771912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "584bf10a-49a6-4b16-a07b-31ea60e5e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a38f9d6-40e1-4b1f-85b0-ab58cb3a44c8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4703fd5-4525-4751-b0b3-3982f552de78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57299bff-4cae-4798-add2-19aad63db787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7ea41a-94cb-4630-af5f-d97bdfbab370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50013915-a761-4a95-a55f-dacfa6b85742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0455fd-88f3-4534-bb4d-f9b07b97b92d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ede54b-4ef9-437a-9ee6-38ced69f2425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719789be-9372-48b3-b9bf-617c1ef37b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8b3dd8-ccc0-4a32-95ae-61445cf464dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2581cc9a-eb79-47e0-be5a-6ec6886e1aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7309d9b-8c31-4abd-a7ab-504ea36ae78f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6c1421-9818-4b27-b8ea-6e672873878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1db4a6b-3184-4308-bf34-fa95152cd191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd4fe4b-df59-423a-a3f4-31778559248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb1e2ce7-c2f2-48b8-9bb2-5b1b0589f5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffaedb9-cabe-461d-866b-bb3c0f30181a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcac2012-bd1d-4e02-90ae-7f5f1bf2d03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3f0b36-fca8-4257-82df-8d8d1bf1435c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719e3eed-44cb-439e-a0a5-3c1cc295bea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "559b9def-2d77-4348-93e7-edc46c2ca877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcbf800-c519-4c7a-8bfa-8ad4c37c3fb5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7209960a-6892-4e2d-96ef-23b6970498ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2852666-8590-4827-bc2c-f7c787b6c5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304babb8-7f0c-4b7b-ad96-5bd6204702dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b13fbc70-83ca-469b-9530-bfea68719345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea346a1-7ce3-4d79-a95d-9f6d3770cf26",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbad52a-babb-4fa7-a6b7-8c035ee16088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6c5177-12b4-436e-adc8-ebf97aa9cb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c2cdc7-5af2-473c-a08c-572d3156c03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb4264ee-fa09-4ae0-8c69-0a0012604fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5873204f-574b-4eed-91b6-8a3754ba72c6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9b8e65-f769-4f0b-bc5f-0a26c93033d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdd4edd-ff9c-4778-9c48-ef021a8e98c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3758735e-bf63-4b09-8b4b-065a1def5894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c26c07a-df6a-4063-b6cf-3db894929e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52da70ff-aad1-45c1-ac1f-a0289fabf737",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08608498-a4e4-4994-ac40-06dc24fd04c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359b0a12-24fc-455a-8f28-52be5f5ba18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfd2962-05f7-4d89-a6cd-7fb081c0c2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b79060b-bb52-45b6-a615-ae804e82520c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8981e5-12e2-47f8-b744-1783b1e68e43",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b58ced-c630-4865-ad9e-de862fc2b6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a9fa58-3da0-4c9c-adb3-4716eda22ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37190411-b3a2-4960-9055-33fdb8ac32f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c1c635-0fb1-46d8-9e33-9255b2aa949f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afb8f66-d272-487e-9e8a-2c0faba915fa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9487137a-b072-48ba-8bba-455190d44192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d50367e-ef83-4bc9-91f3-0b1cf6ea55f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc6bb0c-154c-497b-b3ce-50fe0d2715ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e315e9a9-1c1a-454c-a8bb-94fbb1963d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080e79cf-a691-4739-aa8d-cdd14ff426a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b3cd21-5b5b-49d7-b98f-14e1995e3bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e7cfe8-1bf8-4c25-bef0-51816dda3ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2643f74-7011-468a-b785-08e998eabace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547480ed-8b0e-45a6-a97b-bdb31f03992b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcbeb41-a3ab-4db2-868f-e6348b2d0311",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68a500c-44b5-4ba0-b598-7b7bc5667dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfae0a3f-09bc-4e12-92a1-131af941866c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c0e156-76eb-4685-bf23-1c96504917e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc2f627-16c6-4353-a73e-042ae1b1a2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87866a25-aab0-402e-9a38-5806136bb3ce",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079b2264-ab5a-45fd-a5ec-9f716bdf0d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab796298-0991-4d57-aa00-1a0aafa49246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7767119a-c57d-4c1a-85d5-0aab330c01ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b761623-b6ca-4700-b916-92b39a01cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452ee15f-9c17-463b-a497-ab5b0e49ec6b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d22e50-867b-4f02-8083-a7cca5382aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea483f7c-4502-412a-89be-112d27022864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb776610-3e7d-4aa2-98a7-bfa957ff6359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d53eb5db-42d8-4ebf-8dd4-be9182ac6338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4468d961-17f9-4e97-80d0-33cb6664912c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400e2198-50bf-45a7-8f78-48cb64ecf67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b00792-a1d2-46c7-b867-ddd90841d890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e84dbdf-d5be-4c06-8a8a-7c52810d75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "508a27fd-96a1-4cde-a1c5-a2006845c85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47350b7-3e31-45f1-87d7-a8737809cc40",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84b809b-63bb-4231-a6b4-776c60d8b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea53822-5a38-4017-b8a2-d89f77528848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef70fbbc-3f42-4762-8bcb-522020fe316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae6fd2f-f333-4038-8e3d-eb697901c2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c07deeb-8323-4ba2-b675-04c1eecc6804",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6143b0b-fb42-47cd-88c7-9eba42198d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ac7d05-e7a4-4b44-a812-26118b02082e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2671f7-3982-4663-8dcd-b87ca74c5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abbff80-a1af-4254-abee-6dfad762f193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8cac96-a7da-4d3f-8a93-4ae2b6483b02",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d79139-bbd5-46bb-aeb2-c400bb28a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412ce879-c2d8-4fde-9ddb-066aab4ebe55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf2df7c-5967-4950-9757-3d38ace1f60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03bbbc58-c160-4ca7-810a-59f455457d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd79f7-a2c0-48aa-8b0d-6ee94f44e08c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f16a1e-12f2-482f-9788-5c6bc2a05040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d25395-064e-4c00-b8d1-43ee7ce386cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f50f5d3-fafb-4bee-a094-e66d80004c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5666619c-af0b-4a2e-9679-b49740d94160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c265994c-c18d-4fa8-8381-1751f343b1b4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32331bb3-5b38-43a1-a500-6ceb5628fb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc77958-49e5-488a-b964-8335579ac314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861d6ebf-75bc-4ce1-a2fb-14d8e4519732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0ddee2-2e62-4ded-8e58-77c5602e5ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0caffb2-1b7b-4787-98b8-b36a8bff2e3c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b2899b-960a-4a4f-b107-0da2d4702d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fb3ed0-a38d-4e20-bbc1-cb762e6348ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bfaa82-1a77-4865-91d1-96222ac0d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4a98b9-b3c0-46ce-b353-dc1cfa03eadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2304e43d-7d9d-4010-ba18-436a9ef1ccde",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8528528-e92b-40ef-b0ac-d8768afe6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bb23e9-8c8c-4266-9ec5-008159351218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b133fcc-666f-4a1a-9c74-adb5db89a70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd092f9-b8eb-4645-8dad-0130c1d53471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979d77d7-3d05-46f6-aa51-203071ced802",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c2ae09-17e9-46d7-a8eb-ce6693ae802e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd438ce-635b-475f-842c-3d6ba6d9f37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef5d443-46be-4c12-b87a-0b263c862c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ca9b6f-37fe-457a-b0cb-c6c4973704b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e7bcb-9db8-45cf-93da-4506337753fc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad93a432-941b-40b2-b8c3-688562464e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b2e1e7-d8f4-4ea9-8593-59e5b73c574f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cae95f9-e492-4d01-a5c3-16c0136151bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80b6b955-4580-476a-a311-2d4474bbf5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34154b1-9cb2-4325-b8af-38f1e6d8ec55",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40aaed40-104b-425e-98bd-2042a8f72e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6299c7be-c4e4-4a23-b4cf-ee42eb1e19c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc4892f-739c-4d55-88c4-3a4832f02ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db750e1-dbd0-4a83-93d3-173d6d20c04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d77ead-8c2a-46d3-95be-3fa4677a1584",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4319e70d-454d-461f-b22e-278e8e167648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce390495-2143-4762-974a-7f2ecf1c85a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528db95b-5906-4d56-8a02-5437d47633bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "72f4c84c-27f3-4136-906c-836ab104091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d29704-a553-410c-a1d5-e8ac329c45f6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3421103f-1717-4b73-8131-a7cdfeef611c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "780b0108-778e-4607-8e4d-a4b7d774d75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dedca5-4f1f-434e-89c8-16d49674e3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8182b009-4b7b-43b5-aad6-1b7e1e3d1185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df4f36e-458f-4a2e-be94-5771c98af2a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029eeda4-ed0a-4f30-9b3d-8b831b2376c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c507232-d2d7-4f71-8340-5ce37121979f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde3236b-0fec-483b-aa0d-7a71e6f213ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb5b647-401d-4ea2-8c5e-df1ab9239f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a30331-7e44-4ae1-81c7-8ca323ee8fc6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d869ff3-87ac-4ad2-835c-cf1b2f1196f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ea521e-4a38-44d1-a86c-c09a35d4ad41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f8401a-1fa8-48ee-9b84-963e1868376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83138826-96e5-454b-83a2-a19ecd28f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04abc2c2-7b46-45b0-b93b-66ffbac921c9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f7064e-6987-43b6-92c5-df77edcd955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1b02ff-e6b4-4ef7-b978-d197aab7d7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a27caf-29a1-4f05-8a5b-0be429b9f6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16870f51-2fa3-4f6a-80a4-22763bd3a503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b689c2c-edbb-4ef2-a204-ca86be4b5bb1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de63a09c-f910-40d1-b170-124761913c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53913b26-2077-420b-8f00-6a9992bb1800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec42c62-e5cb-4882-9c06-6ddd48668cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8af9618b-b958-4e37-b978-8040de9dcb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a71d957-e0b4-4d36-b4d1-f1208e5cf441",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921ec864-19d7-4cbf-9c4c-d30f1f785884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bc78c2-de1b-403d-9e84-dc92f59fdefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb1d6d-5fa7-4750-afd0-40a8dd4bca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab8c3bf-72e0-4b6f-8f88-223386b17464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53253f4a-64d4-4fce-9bc3-69c6e8e2a3cd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d1eb56-7a31-42ca-9b54-276cfce5100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bb0904-9ed0-4620-ac1e-f1b27069b649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbf7023-e052-42f4-80a9-63112e89d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8f309e18-fd6a-47e3-a6dc-60b1663c61d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e644df11-3adc-45b7-a698-5799c59d052d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a039d9a-b99f-4f9f-866b-95ebc4b94c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4359cba-ce5e-476d-bb5d-9e005e9f267d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01d1585-9443-49bb-b906-49708742700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "953b536e-cec8-4ce6-9145-6da4e7915692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6408fab6-626f-4707-8cd3-2620228ca936",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a487c1-2d2a-410a-9880-8f78b3827a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae0ef46-8eb3-4a54-88e2-4f4c7f0b3676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c6ac53-c574-4f5b-890a-3d04767b0e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "838c2b22-bc9d-40dd-a040-e3f4363b2516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc24f20-0b08-4d0d-ad55-7c80535a2f41",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a122341-2fb6-4f66-8c00-ecdfd6d4a77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f203b355-20e7-432b-b357-5d21a09940ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da803194-b04c-47ba-ba58-ee65d1edcab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff863fc7-4155-4c86-a232-394936a43c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc331d9a-de13-4d74-908c-b85ab5586c58",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4664c71d-24e9-42bc-ac50-83e1e91613c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f8606d-00ff-447e-acb2-719065b35ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66666e4-439d-4dc4-a708-6d976f150018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a6558b-e7e6-4b4f-b1f2-d191a6724b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561eb73e-5245-458b-b600-2ff89717c61b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bde8da-48f2-43e3-bdb7-ab17da244555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de89b7e-55e6-4d02-9374-6638c0d818e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec731baa-d7c4-431d-8469-244e62652d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e50e2642-8d98-44d6-a6a4-024ca7025d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6ed60-58f7-4ee3-83b9-1cd72d68bd40",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5483bf77-a18a-44cf-8398-da7ecc9a194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155e1d35-717f-44d5-84fa-55330c6ab859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fabfe32-97e9-49c0-8984-e2996961930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1436a7cc-92a5-452f-ae59-b054a37c1b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe114f4c-7352-4161-8205-765de390cbef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e56dcf-ee60-4ce1-900a-e939634c8d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f702aac-5a76-4ea6-834b-a42a70623ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca579866-9578-40a6-bf20-a6206b580258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e2051c-9802-4bc9-9abf-5f8c50e86829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2a1bfc-2b4d-424c-8a66-bef5c5a6f05c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2b1193-1eea-4e24-a4a7-280bc993b5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec87f805-7599-41a4-95d1-fbc189f168f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d505e16-7fde-4a0e-bf8d-d41c9f6b12af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98ba43d9-dbdf-4463-aba9-96fc65b18605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34bde72-9667-45ba-9dfe-073f4ca94d59",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a246de-327a-40cc-bbcf-c2ae3b603e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b7d288-5cc7-41d8-9483-380694c78a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20b3068-0476-4071-a1de-93ecfd2bce8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2721262b-7105-43a4-84e0-1e134ff8ead4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a765d7a-8958-4a90-a8f1-cb99fb5a2ef4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a000257-7c63-4377-a1b8-879cbf9f769b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7904835-92ef-4821-b25a-729e98ef3288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3c564b-6a01-46fd-9d55-6ff57303f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72f22a6-b580-45e6-bb83-81c26edf2576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d48f00-7d57-4c1a-8b59-db870ae67ca8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650240a9-3fa6-44b6-ae7e-0e9cba2e9ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7761bcba-128e-4d3b-8d6d-b5e35d422da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d099c3e5-6d2f-4bfd-9f55-fabd7ff8f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9172d9c-46b7-4de1-b08b-dc2df14e1a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4b206d-6047-4e0f-85e8-219729e95b83",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6025bbc4-727a-4bb9-ad8a-6ecd302d25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ec947f-58e2-4c33-86ac-469eed165701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4788ea9b-c154-419f-bb38-b40083c0ffec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bce37a-9b4a-4cb3-9647-5f852e5851b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14475702-156e-40f7-bff3-ede13d9ecb28",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbc7bc9-cdde-4866-a0cf-60108d476eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b111f0-5f7c-46a5-b4f1-80f9998d96a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c94f8fb-fd58-4513-bc97-1d88fc906480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db2933e2-c75d-464f-8b4f-edbf7beabc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd8bf17-1a70-43aa-87a7-a6079100ea25",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f8b198-8685-44d3-b6a4-12976ae50d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26231cba-d56e-427c-9fdb-110bdbc6d406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a5c4d-24de-4910-b64a-88e015540375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cca7cbd4-bca8-4702-9a64-8d07031da460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf4d3a5-3330-4156-aa50-5af9b96584b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ec86b2-1f9b-48d6-9e2b-c9b2ebb647c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12e81d1-2203-4302-b0c8-24520f7dc845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82460a9-0ebd-4789-8877-290ce129e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "459ba3bd-a2b0-4795-bfa7-f2a6576a0b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14ba02d-d3cb-4cfa-a5fc-dd1545c0ffd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0405042b-d0cc-450d-b7fd-e4c49f7f68c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ed804e-5b1c-4079-9fd8-faeaa8b5596e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ea67e9-b32e-4cf9-8f70-056b53825dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20de1a69-fd7b-41e7-985f-6818a660e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f9b97b-cdc4-419b-a0f9-d83c3308572a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad65f4f-f96f-4595-b467-078625d56360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec057358-77d9-48f4-a061-6d2791b0144a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ceee45-5a14-48e6-adbc-fca8be5aad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e800ed6e-ec76-44a5-bcbf-d338a21251ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be67e9b-0931-4345-a744-17fedc855ad0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8682ad-361a-4c38-bb0b-bf65a9bcb631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91aaeb9-5286-45e6-979e-ec0b90cf7a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f7749f-b762-4e62-9b20-3187be22acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f183a3a-8787-4103-9d3b-b271fabad5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bc0c5b-8208-40bb-92e3-07c6ce3979d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27649ed1-125a-4e12-94d6-1cfd97e84592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2eb4b21-bb19-4ae4-b194-e654da92b69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314db412-5161-415a-ba73-8a64af50b4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "247c8a1f-d161-45c7-8b05-897df5bd81b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3975320f-d4cc-43a7-91fb-b1fe593dc4df",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b991f63-8747-4597-b3e6-ec4cc03ed6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df5b7f8-91c0-47ac-ae66-2d16072315d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96409853-c8b6-45f0-9633-582beade06ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c0280d-cc32-4ea2-9ab7-4a87de9c8754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bf0b3e-e7ce-48da-927f-41d288baff31",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de15f03f-96af-4f08-bbb6-34555a907c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ebaf69-ae52-49b6-984d-5874f939f17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14438bbb-f0ac-4453-94c3-9ffcf4814bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ef38a1-7115-4f66-a10a-b5a6c31c8cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846c3fe7-9166-4aa6-a9f5-4b97e73abdc2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece0465d-73d9-4cd4-8a40-1876b363c77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5637b0-45ab-4494-a066-450dfa85a44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb49893c-8478-4fdc-b501-19096a685d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3fc7d3-7da2-4af7-8b98-97e24061870f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b76f93-ad3b-4b6f-b6a9-7f81d3fb1b0b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70681f8e-b4b1-44e4-a47a-32f2c952c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c262f60-3672-4c0b-808f-fdf9347546df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a964a81-b08a-47ba-afe5-e47e72ed9ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80aa0ea6-0c0a-42cf-a02b-09362933e872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f331634-4a75-49f6-b9b9-45518aca74ec",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae580f-08d7-44dc-b1e7-98603674d762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19787301-6290-4966-96f7-601e8ff17417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b8c9b2-c45c-4038-a745-a58e435af3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f003575-59a3-4eb9-8ad6-1fafc3fadb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78c8c2e-b767-4753-a3be-2c490860c28c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34145ddb-efae-4602-a367-762f90140a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0faaeb2-e016-4c6c-888e-894c481e058a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05822a5-e11a-41f5-999a-903fa4dd7ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fe6c38-e53f-48ae-ab5d-b3395e358d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59ab66b-3981-460e-8d27-1c56454bdcc1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5309b0-9784-49be-bdfa-2e03e08ef4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9f8aef-6ca4-4c43-8fa1-4e34855f145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df32fa6-c5ee-4ffd-b364-0fbd526b19cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "02afdf37-c9f9-48ec-adce-0fc140bc5ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b530bd9-1536-4652-979e-29715ccc0609",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fed4bb-d840-4a14-8c32-7b73577b5ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f3e08c-2d8d-4497-a889-c39070556121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3279fd1-27df-4b48-8f9b-5e48cb249659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc59303f-670e-40c5-9f9e-791ba03818fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774af742-8b3f-4cdf-827c-95a15b5089de",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c6b96a-25f3-4fe8-bc9f-c1a47d05e537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac24f5a-9555-46da-879b-30de99d44a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdada92b-39e1-450f-975a-54a28e0c2ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02cf6525-2ebe-44c6-890d-e58c54cacddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab7e8b2-134f-4127-b872-5a6a30623223",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebb2347-87f2-4407-9012-f50e36542f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c85ce93-846f-4122-be9e-9aebca9717d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770b9c8-1869-432f-b876-fbe4665f28fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9c3ba0-534e-4527-8c8b-dd06bdc5a6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1637a816-5204-4ec9-9859-ea17c6b8a28b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d748c7-3f96-451f-8f34-ac5764aab3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bca7a6-3e28-479d-af4b-6cc8781b922b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f990e74-18bd-4de3-990d-fd6ad183ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a17586c2-dccb-4159-ae18-5a576d749c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d0526a-88e9-4012-b22b-22abed9b5c2c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82762cde-d882-413e-a585-644e70f22805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ed3eee-14dd-44c7-94cd-66b8e3d5ea66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6169d4-1c41-4e29-8cfe-b194c709b8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3182ccaf-fd08-45f4-b93e-161f7228e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97220860-00ba-43b6-bd26-87e0f39e6b4c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1ae53d-4da9-4880-8203-208abf344c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d06003-2a9c-4e3a-9452-cdea5339390b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66ebcfd-4328-49c5-a330-fab3aa3ddc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f56e2250-28f0-4873-b490-19c58301a01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6227e9fd-2a6a-405b-a3cc-04e91cd47d9a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f26822-6180-413d-9e62-3757233765ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1c6ca7-1b37-4c4b-8ca6-4a2c77786346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eb61cb-e9b0-4ca6-b4f4-05fe6b46ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60461840-bc3e-43c6-bb61-008559223971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c24aa-e89b-4e7d-b511-e7f7de9e7aa8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b8804c-1af4-4990-8fe7-ff33f8f09705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b03c573-2b60-482a-8d35-80def3275b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647cfe2d-96eb-48ab-a9b2-3a6fce7cafa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73bd3241-264e-486d-95a7-a2b80c8d5367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d38dcd-ad6f-4cb8-8516-37ba4795b4b9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e8cf9-979c-46a7-a90a-556d3ea0ae81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716d98bf-b852-469b-b5ef-16d9857d8816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14075cf-37ef-4b02-8542-b86583b22a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "900545a4-a8ea-4c3d-a01e-be440f0955de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313b2910-8f54-4eca-bd7a-5f225f364988",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5ca32-2490-465c-995c-93b58d0ca612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fcc012-842a-4d2c-87d9-f4905df0bd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6fa58d-2930-4182-b0d6-88b0e47dd8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2cdea4-79a6-4b81-b517-c28130fdb142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a569f0c2-1f0d-4984-aa05-e6bbedc2888b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8886b0e-471a-46dc-bfd1-302d5fecacc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029e02d5-5c27-4a78-9c56-69b07e731d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c43ac3-f36a-4cb7-91a7-a26fb3953671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "839724bd-757c-45d0-b2fd-4867ef3dad0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e8f61c-fb5e-4b9d-8545-d2a1851ca57c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954fa924-8bd6-4f84-886a-ddc7438b0553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c374f27-9aa9-4690-868e-9bcaa74c28a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9b107b-8e69-4b24-b555-21b774e28f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c29eee-5cf6-437b-8b99-88b783ca2c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cdefc4-151f-4a2b-ab8f-2962e2e2e401",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5594bf-fc1c-4d0c-ad8e-1abe277ca594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf36f65-401d-4708-b997-1952aaab8ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b4d676-e8c0-44ff-a750-3fe35a58df44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb099936-37d9-4ac5-9f89-2e245b196bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4786242d-a2e7-4040-9d6f-078a30bd25a3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc3deb3-5805-431a-ad01-25cf988ae001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b7211b-5a0e-45f9-ba35-8d1ffa178742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f835cd-5451-4bbc-810b-4040c50fcbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cabccae-44c1-470a-8938-2f6085f05df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceb707e-0ffd-4eed-8f30-7ab57f0c9a00",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a506cee4-8306-4332-8742-7105e14bcb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2315228-ccad-4ca5-aaa6-0a58bad3e593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73425157-b6f0-486a-840e-7b48313d7519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68df675d-d69b-49ae-9956-2a0f68cf91e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b3c794-8501-4e70-a4bd-4d3cd027f609",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ab15be-dc64-407f-9fc3-7f2a3ea5c962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a207941-0f38-4cc0-9306-25744a263bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf5e41a-bf8f-434a-833f-20e410e56648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c8a9a3-4d57-4c08-9b01-b785d7c86953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9d4064-214a-4805-80dd-2f4ad449c3e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38614272-44f3-4fd1-902f-7104167719c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc64268b-75fc-4a88-ba13-7bd8c9120f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eea904-77d4-4bc8-8845-7cdfd636b89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72d940a7-d0b2-470f-bf5a-91b0cced586a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87534f5-f9fe-4a6d-b9f7-b31d3dda0798",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13290dc3-56d9-4218-975b-6272d8fc2fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c16d02-d2b4-404d-8238-941a65b8ef34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d7e429-10f5-4eb3-9adb-484be7aaef67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75c2aaa-37ef-4841-95b0-9ff3ada159f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3238798b-17c7-4e07-b8f8-2e077f927b86",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7599bc46-7cc0-4733-9fed-cdd9a2a9e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7506ea35-cd52-436c-9420-1c88a5ad6cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20feed23-a4cc-4a06-820a-83891490a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a08b679d-74dc-41ad-8a9f-25c1c16a78e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab40048-c21c-4e92-935c-8f58d4f1c19f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5319a288-67de-46b3-9a3e-35c3c5654400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d059cf-d93d-44d4-acc8-631ab98ba902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e9a39b-fc10-41c3-8bb7-a720bf5ca1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "848e892e-abf4-4ec3-b3c4-56574321b90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d206c5-316f-4c08-b64e-e34c40f4e4d3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d00c84e-59c9-4abd-8c2b-0b0e06814653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f51b89-7502-45ad-80b8-beed338b66e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fea477-7076-45b5-b889-f2266bd38846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46552b7b-b3b0-4681-bc0c-92eb98d0a52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53692de-e902-4259-838e-c68e6357e0ba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52a1700-53f6-4349-98d6-230c8fc56e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24395f1b-62e6-4906-a9ac-5f8cf8eef983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77d80b1-676f-411b-86f1-89b90f92bf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b49624-f1cb-44aa-82fd-798865ec5455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f487f033-4ac1-401e-b84a-ebdca7dbb778",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0f42fa-520b-4124-a421-d85ea1588049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db95313-31cc-4e64-90aa-130a036b3134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24166a3d-fc1b-441b-95ca-4c1efc9c118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dedb5e1-56b5-44fc-bff6-b80c4094d7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd84fbf-b4be-47b5-8748-def47ac527cd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71559a0a-b3bd-4c6b-8072-00f27e1cfb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0e25e8a-684e-446c-a5a7-988227792241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77593790-38e2-49fc-9573-e68c219b60a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "297fffd4-8b9c-47a2-ace3-99d296ab5f47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94951dae-60bd-410f-aefa-b87874307c36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2023fd1b-5ecf-4e39-943d-4784f2abd6f0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca02d4a-c451-4f40-bf37-ba037f6767f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a568dec1-0a04-423e-9ade-e714dd55db62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3aec53-f132-45a2-b4a8-85ad1c229d99",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73fa338c-7d04-4f75-bc23-c3b8207f0d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13250b3-deda-473d-a866-7867c034434b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8dcaa8-a86f-49ee-b67b-87cc46068bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38a782b6-ec6d-4565-a97f-567912fd56ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022ebf82-6bfa-4f85-8e15-17f05e876128",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f380518-072f-48e5-9051-ab7777df832d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "004cc378-9a76-4988-8772-8acc8d5f0675",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50f4ac16-169d-42a3-862b-192ade43ec7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "447f239a-0d1a-4fcb-a81c-b22aaa2240c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83087fa0-7c20-4ecc-a5cf-43b77df87b24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8241971b-b518-498a-9467-f87dc8762934",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9286bdfe-5b7b-49d2-aef3-60daec38c879"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8ea7fe9-58e7-443d-bc3b-fca42255ea21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9543a199-1161-4ce2-823c-226359e60712"
                }
              }
            ]
          },
          {
            "id": "3ca43d4e-f08a-405c-8007-06cfbbe4f7e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7794c872-45ae-425f-b22e-07e0a6830c4c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15d428c3-ba5c-4727-a845-565d8b13c30b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70890def-d2fb-4497-a4fd-e7e9e2795ebf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c35bc558-f970-4948-8bf5-bd620406ccd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57c1bc46-82d7-41cc-abbb-f32896b47514"
                    }
                  }
                ]
              },
              {
                "id": "f80d51ba-3341-4f15-b852-15451d304787",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a16fa810-36a5-4bf8-997c-1014874bcc44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88efaee3-8a00-4506-b90b-90eefba7ce11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1abce612-4e40-486e-8e6e-e803ea6a386a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dec3c7d-207c-4b33-a782-ab6a0c22582c"
                    }
                  }
                ]
              },
              {
                "id": "39d4ce87-fb2e-46ba-805a-0a95552f78c2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b041cbc3-8587-496f-aec4-d3eaffa6c1fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5069a483-5fb7-4534-9125-dc79b468393a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff223786-e7e8-4b16-882a-cb801cb731f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abebb11e-5736-489f-938e-4d46c1786ebe"
                    }
                  }
                ]
              },
              {
                "id": "792c9192-f56a-436a-8ae8-4228d4bc48f3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95294044-cbba-4dd2-8b48-d256322a75c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fd3cfea-6798-464a-aded-62428eda1493"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eed8ebe9-7243-4628-b708-ab48c7a833ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "441c1d78-61c7-4774-8da1-9fd745443404"
                    }
                  }
                ]
              },
              {
                "id": "9f57381f-cfa1-45b9-8e07-a944a030356c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e10a23c-246b-4238-a2b4-7d85cb6b501b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6d753d2-e3e5-47f2-89c0-1ccb703a25ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c3d4219-7c48-4d95-a471-fd56425f447b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4672134b-5c62-4177-bad1-292b31939639"
                    }
                  }
                ]
              },
              {
                "id": "978f5984-9c7a-4f5c-98ec-9f4e54fb447c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95f5d151-3cf6-4be0-af9b-76119160e588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "257776c4-949f-4b57-a363-b460a7b4647f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2421c188-a0d6-4e30-b69e-4c218e34a240",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80b2af0b-fecb-4b57-8914-ffc20635eec5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "420f15c8-d75e-422a-a749-f7ffae037e16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee16b5d8-512a-46d7-8899-201b052a1687"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b64a0fa-7071-44ec-bf50-a9c469f97819",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0efea42f-2f87-4016-bec4-af0e109f12a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74a01524-5f5d-4629-b6e2-4aec548b848c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b6fb4c38-fb14-4d5a-b189-afa6a85eba80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fd2ed94-5ba8-4e38-afd0-6ab39bf8c51c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcbeda2f-64d1-43a1-93ee-f6f8c313cf00"
            }
          }
        ]
      },
      {
        "id": "07e54b03-37a7-4edb-9fcd-8d4cfe12b874",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1da54007-7eb5-4cf2-988b-8416e705b58b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83cf7e67-73fb-4dc6-9bd7-aa97efa7b873",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c8a91b09-2d4c-4c43-893d-a50b742094b0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e8ae0f-ead2-4441-ae32-471803e651c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58383662-0977-4b2b-ba6d-40d2b501b568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac1a414-9a33-406c-85b2-a78e85012702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5219c1-5261-473a-93bb-09aed4807920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75371aed-b7f5-4bf3-b2ab-03feab1d8dbd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461139e1-9091-45e1-a758-51b47e12d683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98fbb9d-6277-47b9-9cf9-dde75badc854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0c63be-05ed-497a-bb0a-d51335751c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8248e0-da1e-4c0d-9f94-f3353e707b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e31dec-8db9-411b-8707-5e7d1bdb6ab1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673f16f1-46e2-4a9f-a7a7-de4c7065b83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcac26ad-fcb6-4495-9ebd-b42918732cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960eff04-7132-4713-bff4-5c1bd49dd4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd03545-916f-4b68-a4df-b1091fcd4815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ffc374-d6c2-4894-9a08-af4a77cba2e6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b74908f-6e57-443a-9d13-b287080002a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c411ed2-f3e9-48b5-ae18-3121c2d8d5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9a9aba-a903-42d1-a7d2-508d54b4ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c97f31d3-e8a5-4188-873e-c934bcad506e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae3c4df-3d4f-4a63-a0b1-ab47b730ee8b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df99e916-d470-4865-8af0-9ce7ba4d389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b12e491-9b6a-4d52-aabd-b3e58d3efa8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8800d52-efc0-46fb-ba9a-711be1473db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53a3adb-5be8-4198-8e9c-66c7ee90d1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93133723-6ee2-49a7-aaa6-bba1803efbbd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715ec776-5eec-43cd-a6a8-a492e6848013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f29706-c9c6-4c9b-9c1a-835ac689c15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711e11de-3d35-4dd6-816e-994621dbaa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "038d184b-0cf8-4cda-88a8-e8778ef06cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d48cc4-eb77-4bea-863c-2236fb8bf2af",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e091a86-a894-4a61-9a77-cb0a53ea430d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b649be1d-1295-412a-8d25-af529023f1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ac761a-560a-47a2-9ef9-c8ba19e3742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf933af-7d8d-4926-a090-4bdd60357049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546659e8-12bf-4da2-b470-19e5e3a9400a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0f7da3-fc8a-4fa4-9244-ebe8141c53ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec16f98-2419-4b75-9f6b-a6651fa9fcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b6187e-2042-49ff-8f6f-18a89dae91ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c35c822-165e-4d1e-b515-031816d832c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14266ba7-f97f-400b-9356-97c7c4c2187e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972034f2-a727-4d79-92b9-45a774af5155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f717fe10-dbbc-4e21-b1b7-7ca504e545de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4432cd41-8c90-4577-ac2e-f8bd2e8f506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "811a5ab6-1b4c-466e-bd47-fe67946c6cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e17ec4-df0b-4704-9583-ce27eed48d93",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaee0f4b-046a-456f-8763-8964a8fedb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32e369c-3dd1-4a62-b199-9032e54748a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dacc9a-677a-4e7c-8541-0a614b50294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba1ebc1-d9af-49b8-a864-238f1fdb847c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb57bf-5528-4e68-8b3a-2f437b607292",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f214615-2081-4cf9-97f7-8d0a20ad4f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532d9e1e-4679-4f8a-a6a8-30ce3e0e17a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8ee726-1824-4e78-b95d-935553b4495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "212deadc-859b-4e98-978d-4b6ddb187c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1326c225-89d2-404a-9041-84312d7f8caa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b0f3b5-2b42-47b9-8324-560e32ff5801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73eb387-f569-4e50-be18-2d124ad730c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00d9e14-efc1-4bf5-b635-dcb9ecd27ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f44dad-93f6-498f-a4af-20569abfbbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8029151d-d449-4e07-8004-f2644d53deff",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e064ff-964b-49df-80b0-ba4717926204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e64c2e-df62-411c-8771-c49d39d348e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfee74c-0dc3-4b64-90af-335e87eae403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f361d078-1283-41f4-b1be-b6eb8945e365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1563497-ed07-410b-b597-7ec1e1eb0a18",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22533cc3-f10c-43eb-b8bf-0c2439868abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cf68c4-a333-416d-aa76-2a2fca8eb6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f083c81-dab9-468b-a1fa-c24f2bfa6757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "538288f9-6046-4aa0-acfe-31a71946ca20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1be0fb2-d489-45c2-a65c-7e30bf654d5a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6f4bfa-f89c-4b0e-b86b-a019fca6a674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937a3bce-b0bf-446e-a0c3-6e7c43ce5e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b522e306-d8ef-4c58-9361-d5d46dd72679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e1f26a-f08f-4ac1-9aaf-684a0ebcb0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183ac329-e076-46ff-86e2-984e43485de9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbd3e25-100a-49ea-ab68-e1808f760a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b254e1-afff-413b-a06a-96039b86286e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b7cdc4-3ee5-4b04-9845-30c1d8c03a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8affc53-faff-4917-bb2a-960b9db78f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e2eed-9baf-429e-b069-baff4895b7eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad99f29-b4c7-4543-8bcf-c2b624e332fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0972468f-be59-4e56-b763-f185658f4c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c73f6f-3664-430d-8e3b-0421005d7cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86b5908-556a-4f76-af82-07b9c3ea9dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee45e87-42b3-4703-9b92-b6e5739d5f83",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be1f8ea-576c-4f30-a636-e8dd3259f99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45e451c-735e-431e-a934-86c5e0388170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59f3cad-a5eb-41ad-b4f4-293c865c6570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa9d02b-0089-4d36-a912-8f94b6727326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e327369b-3faa-4899-97ae-870e9a7158ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8463c522-5ec4-4578-bc04-f7bce1b0fcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2456869-21d4-4432-a5c1-fe69adc69d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ef9bab-1ad5-410a-a45d-40d1b77ea78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d79ef2-6563-4d27-b86e-4058d1e15df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb86328a-aacf-4836-bddf-3b5fc192848b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6118692f-aba3-47ea-b069-b500246cb79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3118b3f4-2f06-43b7-b819-60efe9446e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10d18a5-af9a-465e-890e-87fc98e7eef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bffa01-5f6e-4170-b7e7-7874fbe4cfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae224ee1-4afc-42b6-a438-89c784f3b205",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae3ae6-0827-4ef1-b740-defacb04a812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd74c46-e19f-4233-8c9e-570ea7b19ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b5ac0a-e6d5-4c01-9af6-498b6a145f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a071fe-c3d9-4110-ac3b-b471d842b94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ca50ac-b794-42c4-a298-27ce7c95b718",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1442e232-01d4-448a-9f71-362a15c88a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216fb4bc-795d-40e0-b7e9-1e1a90ca6868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64017bb-6df2-47ec-af83-978a612f1165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "521545b6-afc3-4beb-a556-ff3aea802946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3ebafc-7078-40d4-855c-5227d5293bf0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d24ca-8d6b-490d-90e6-96a56ea58629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b796db-643a-4d4f-b716-1d67c46d46c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d5e552-a61f-4880-a9db-7ec98f870424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb9a00d-bc30-4188-b385-6c3ede7a3c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeb7f54-5c97-45b9-ab48-db0359fc5642",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a3b715-e344-4263-98fb-0c866ca013b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99349f0-fcd0-4d7a-8422-2f0e560c33c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a732be-05cd-445a-b71c-e23a229429ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d97d6b8-337f-42f1-ba72-9aa9659ffa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621ee75-b661-498b-a8b8-0e0ad045a8be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f616cfd-e5d2-4a83-8513-ac38c960a874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc4d06b-a946-40bd-ae5d-be5e173df425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7f810d-3a61-42ee-b302-abecb5c7ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372e9974-3fde-4065-8815-219d1c153536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96b027f-b54a-403d-913c-9fc7b4e247c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51edfca-d5f3-40d9-ac60-782e4291b98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a7e9d-cf23-4516-89b0-dbd01f283462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea474c2-d178-4a49-b650-6375a86daa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebe8fd9-c0b9-4382-87fe-330269c057cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f8f832-5206-43bc-b689-39b6dbb7abb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80942ae-b56c-4626-84fd-969eaa2eab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a240533d-5f48-4250-ba83-df1fe8428543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5708517-7f0e-4a4d-9128-08bab9ca7d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e15862-7a86-4395-a372-219c1dea851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44f5f1a-5c81-42f7-99a6-cfbaaca6f844",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bcb009-ca17-4a80-ac8e-a022dfb81d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cc511b-2475-42c0-bc9d-e7bd97eb8c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb62b22a-d740-46be-a6b9-a1eb9f8e1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1991342d-dd9c-4c6e-917f-f3ba4b902765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dce919-c900-4f67-8323-420696349d8a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f70479-6a5d-4281-a3bb-17e8d4726d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fe7ac5-5de3-461f-ba8a-dfd2cc5fc9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bada4d-a525-4ae3-b5da-47c4995ff6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f29758-64cd-41e5-ab76-20249209467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4387d7c0-7d9f-4e2f-85ef-5fe3f04d8017",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ded8813-92de-47ca-ac68-7bd747daf7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e157f97-b657-4d82-97ed-d9b14eebc4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761bbf7b-c3cb-4cff-8154-7840e645a0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3360ef53-a2ac-43d6-bd0f-59a2f5edccff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93560c12-aa31-4155-938e-b66d47ab8098",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad6dd71-4ae4-4934-8351-2d598332c6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11c4fde-bd08-4a7c-a6ed-804550ab3d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30cb988-d402-450d-b2b4-942fb2e3d2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3d19c9-a642-4e4f-a4b7-c6c869eec475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4032651a-f9ba-417b-8e77-1a7b9862a32a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd67daa9-998a-40d5-872e-5221994fa838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f9bf9e-168c-4c0e-9929-ee4ed966e828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b99997f-e7cd-4f64-92cc-f76f2e06a6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3926203b-7691-4576-828d-d147bc83f517"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12e2f0cd-1b61-4fcd-a888-e69bb2c8dc29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "236b1fa6-2751-4df3-aafe-628b305bc609",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43981d18-c449-4abc-bc8a-3f32889e8c51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba4403b-09fe-46f2-bf98-69db92210771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeedbcd-8e55-4de5-8225-a2fa4c094f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40212fb2-bcfd-4552-947d-41a54f2b65b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7684b1bf-2c21-4abf-84a4-9b93c25d4ec2",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea9dbac-97b6-437c-ab2a-131a5a2ffb95",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd78dc5f-17f0-4922-8dfe-285119c8f16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b42c2a9-ec1d-4b56-a0c1-9ee1169ebb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7db477e-c021-47f5-ad42-b70b72cf3011"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb42e324-3f4f-473b-8601-26c6d3360261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f307e9f-c535-41be-a170-b37ff000211d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4960498-869e-4115-99c0-0dc2f51d91e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91dd601a-5251-4e59-9358-628099bc482a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6aa4570-2829-4695-9746-cfe285046da7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9658f58-d3b8-4983-b14e-0395adc547fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41b83af4-4d68-48c9-8e9d-248b6480d72b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ae5ca2c-e554-4195-a4e1-1d25bf695622"
            }
          }
        ]
      },
      {
        "id": "371fc558-fd9c-4631-a253-9aae06cf7927",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d20d1bcf-b30d-430f-ab3e-9f0153f1b514",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a89aeea-4add-4517-985c-d05f66dd4b15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc857e82-4d5c-4cb1-85e5-dda4c0f042cc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d75c845-9e46-4a85-b5dc-474387922694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e415a50c-f4be-4f92-a789-2de1629f1dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d1000-dd37-464f-90f9-83f770a046ea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282de67f-7f6b-48f3-8b1f-1fbe701900f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37bf025-185a-4c34-a477-33e0b8bcb41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e277f462-6a5b-48d1-954e-719ce98c345a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80e36e4-9a75-48e9-b58f-fff107622e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43515e5-7095-46a9-94fe-702698fc53fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f0f42b-5022-4f35-80c5-a820d5f530ab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f0c640-2eb3-4d82-9d52-e7815fa447d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d250591a-ef23-42bc-b320-148a13e9f94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40d5d56-9ad0-46a6-9b6b-1333a703714b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d56442b-bdbc-465d-a37f-c5c19c56338b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06ecf5b-197f-4c7c-998e-511e712e11ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b0ee34-633d-493e-a88f-c755dc60c3d3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b18fb2-7545-470e-a763-8d098592e484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a248774-1e1e-4312-a598-758fd4c8ee4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9378a22-5a41-43fc-bb9e-a7e64cb6d4fe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7207afdd-da3d-4f90-9c18-1b803d1f7237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d681ad9-584b-480f-9508-a51016a5921a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c82abf-9b1d-432c-b9b0-5575d6442ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac91105-f6ca-4982-8db5-68d6f38bba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f60d49f-d877-4ea3-97ef-969086eeb52f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5afa32-afab-4bff-8fb7-8d83d46fb876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f2d7d9-8768-4ba1-afa7-fd5723c4648c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f00882b-a211-43d1-865e-86cfe8c1feab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15232db4-fb66-41c3-bae1-f8a04ee9f631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c4f154-1d16-4c74-89cb-e43aa09c8b27",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8704077-6d06-487f-af94-b28158f20750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15dc569e-0219-4fc9-b73b-653e613a295f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a17323-3e59-4e2c-a5c8-68fe9a83b7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a25d1a-20b3-41cf-b8c9-f4207acd1b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcdbc3e-bea2-45a8-ba7a-9ccfe4cce253",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758f4147-cde2-4efc-b6bf-200f091e3e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69081180-71b8-43fd-861c-40f9187a5d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2ac334-d382-404a-a0bf-452abf9d500e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d60b89-34c5-4a8a-a64b-60dd901064be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683692b8-f7e0-4386-8fb8-33d7db20cc51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c952c7f7-31d5-4725-8c95-e3d2b376e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f70d0e-5e68-494e-be90-acf5951f0a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066305e5-9baa-420d-a840-7119b99940e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c093d5b9-b79d-469a-b089-d39097a87dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce96870-b594-4df1-9981-496cf0e97157",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e2c217-b892-4f25-8c93-c5130c942a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17be017-0b10-48c5-8ecf-99c0c94b8e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24793249-8ca6-4705-811f-238217e35798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c670acb-cd6d-44d2-8908-ea9a0d68f580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cff353a-cfe3-476b-ac8a-95d3e77fa123",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe4a759-c6ff-48f8-a6fd-55dca99054b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea657b7-ed2f-4301-8b14-2bcfa043a285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6bf39f-411f-4e6e-8029-e37937587f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453a6565-2349-4a2d-9f2d-576793315cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b7039f-5820-409c-8f01-3a9b679e5972",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9833f12-f031-4184-aedd-934fd6a39111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b77baf5-bb23-4ed0-9a14-ab59c7d52018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350d655c-3015-48ad-94e6-ea104c396fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d942cf37-f0ef-4d01-978a-be0b43c585da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b567d79-89d0-40ed-85ec-9c896d6f5624",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c78fa5-1f6e-4b9b-8fdc-946ea54aed5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d39f60-e587-4a4a-a5bc-6cfcb3f2bd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16146945-da0e-4caa-bad4-ecb1a5292ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a74b785-76ea-487d-9b1f-39d75eb708ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c09cee-3cd7-41c9-82ae-001bd5121ce5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a950bb6-7d69-4216-9e70-b3590129480a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a669a7-ce7f-49c6-ab12-f101dce8a2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd17119-ac81-4aab-8322-b4545142fe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25467b16-c7eb-43fb-9734-40c8ddab70b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98038ae-cb52-47a3-a9b2-5ba493851959",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3f5de-d255-49a3-85ec-379ad8b0f516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3d2256-1777-4fb3-8311-b4be7056d33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5326b083-827c-4ad2-a4fe-ddba0a6d9c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0921f338-3455-47a1-9bcd-526858420e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61980dd-9505-48d7-a031-ed5b07d10f1e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7573ab68-d79f-49ee-b668-e04087f05134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890270b1-b802-401c-8111-fa8501e9097f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbaa2bb-e577-4680-824a-79e61d889f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6608e9-393d-4667-9f14-fae7b00050ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a94120-3f9a-4e1c-b004-bea6ecac6dcf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480ddb37-0bec-4385-83d3-ad517732a9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d6d3ac-7a54-45c5-aaf4-dfa66ce183b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762c59fd-f196-4b11-99f4-e2c6e38ad2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04ab248-133d-46d5-b860-bf2d43ee6f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447a2d26-e64c-4f4c-ab66-00803ae912e7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2aa4d6-11bf-4df6-ac52-2a425fd27cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7293f82f-6c67-4d37-9119-bd4dbe26d070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3af19d-f5f5-4a47-9622-dd87ef2b3816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042ff96e-aa9b-47fe-ada1-81ac7ea449c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd815c-ba3c-45c3-ae8f-87ae48b12b35",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f4bce9-c311-4127-885f-aadf70b5880d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d842196-4b12-4872-a2c6-1b5632c0e8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f9dbb1-570e-408a-8a04-2feaa724b9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bd9b83-f353-4d16-a506-15fa2f15ef64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc2b514-fcc1-45cd-9e01-6108717ad772",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9cdffc-1d65-4748-ad6e-cf11af34bf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39ff930-031f-470e-bacc-1ff3e600f325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8c8a27-7d57-4f87-81ef-6eb31342cf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19db80f6-03a3-4ab9-9a8a-4f285ba67331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fed122-3bd7-485e-aec5-12266832cbf0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8ffa49-b983-4ec7-aa96-e50be5498a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b27f683-75e5-4d23-a5fb-f53438fd18c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bcd7e-ec4c-4a6d-ac1f-770b7a627522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a821591-d5b7-4b8a-9e09-e9945dd739cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e535a79f-bcac-435d-876a-b5f9dea43c76",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f6d43f-4275-4af2-aa11-915f906feba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b50c174-8f7a-47cb-9a35-a9bef115a858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c9aab8-ab9b-46d8-b04b-770a0df24c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f1c9c5-32de-4561-a0d9-ec40cc8336bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361ba2a7-3e3f-4621-b235-bca5f3944573",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008269e9-7d59-480c-8a7e-4c9d05a692bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab121839-aec5-43f3-ba07-31cc2e47d50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8406ee7c-2bff-4438-ba58-b55c0086a475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b9be83-5a79-4e6a-8631-e1af54e5515d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e208a7-e3ae-4e31-987b-7d0b75403a1d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaa3209-abf2-4b5d-a7ae-d529f3df9e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e19a9c-6d85-4426-9e73-fea3311e9ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4605c1e2-e030-46ba-ad62-3b5b97b93b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f1f175-e6ce-4de8-9c61-90e5e52a69bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b718b6-1148-44d2-bca3-853b9a778f84",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6f85bd-ffd6-4ed5-afa6-0e7e37b8b739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db8e718-f567-4029-b621-644955fcddb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60814183-02b5-4920-b030-816ae42ee7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d3f3c1-3ecd-4b2e-812c-519bf0830f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719c50ca-574f-460f-94d8-3483fc2dfa9d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963682dd-3b74-4918-bede-618f6dc41fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88716ab9-d529-4f92-ad8a-f3961c9e9a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5564582-9f08-49d4-abc6-29a254c76498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114620bc-5569-441a-8d0a-b9edd5e4980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6e1dc2-0cdd-4b1c-96ec-a39d764e1bb3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0414706c-55cf-4531-8efa-eb5b5d3658a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b29eed4-97b4-469d-8912-2a231b855da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76845f27-9609-47e8-994d-fcc79356be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cb36ec-1910-45cc-83d0-a3e62293ff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e376e3c9-28ae-4ecd-9c8e-97c026eabbac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e475ee0-6f11-4440-9155-0c1077635a5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c43ebf-0c33-4351-a812-14640cc6a71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adf3569-4e96-45c8-99ab-2db3e8534914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a57716b-da2f-41ea-88b0-e049bf798833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c39daf6-1d70-45f6-9897-dbb18cbe514c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8543006e-5ed0-45ac-9473-503bb2cb8116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022a75be-edec-4600-8106-5680df96468b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027329b7-0c44-4477-9497-8afd2cc0bde0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbedef5-b62d-4fd1-bfe2-a8a2160fda66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e08173-ca52-426a-a968-0d8659ca5bb5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f623d60-6765-492f-acc5-0160cd9eb4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec511129-c527-4ce9-9842-14d03c6d077e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a90d58-d659-4867-a02c-cb05b540d179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd57e91-d5d8-4d8f-bee0-a87e3a16ad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd891fb8-a9cb-425d-a5de-ae22a7d03f0b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd850ce7-9adb-4c5a-9cc5-4d80a48f98fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc8ffeb-f3c1-44e7-9c85-3bdf411257c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6963f13c-2d14-405f-b4f3-587b9b8ea3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5462fa8a-8024-42a8-a062-691d08c1da5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8628f3d-3982-43bd-ab75-3ce67d7ed01b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476a606c-08d0-4d37-b21c-6bebedcea543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03745a1d-c049-41ef-9dec-7a48f7e4d48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cc303d-0ade-43d1-8c8f-3789261d007f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb52224-5bda-4cc3-beb8-9fab56989f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95690d2-cbc5-4bba-8774-286598b9c484",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6ce7ef-35a1-405a-8ae6-97c1f0b07753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfad60b-cf7d-4785-b760-8b3e5f647fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a110d8b-5e5e-46a0-8aeb-87bb253f247a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a29720-3f02-42b1-8738-72a1e3b8ac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d8c80-4217-4d4a-b611-f640ef771cc5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cede8c-6eb4-40fd-a549-1ae205e87e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9427475-2494-49bc-bd18-db2ac0cfc27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935e8e3c-72a4-4d9e-b34f-7f425eb852f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb550e3c-b3f7-475f-950c-83f358a07d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82268c-280c-48f3-b2b1-867d99ba2c18",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1d48fa-0453-4a02-b451-99aebb1419c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0114c106-7e33-43a0-ab7b-37e3b606afbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326c1a2c-3bae-4155-817c-4de065b59f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8325b74a-ad8e-457d-9469-5d96b13b1f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe07be1-a723-48c9-86e6-fbd427920503",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af4dd9b-42ea-4829-9c88-5fc9aa8564e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d95abe8-e9de-4eb9-bc5e-5d4c86312494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc0d0f4-5a58-467e-8e07-6827c1733d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6944a7-a9a4-4fa6-9efd-fe3403857e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ab6622-87bd-4172-b355-126d37383bcf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791ecfb1-f71f-4ade-936b-b43e92ad0fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f240a7c-e64d-4a78-b3ca-975791d324e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84d82a1-3302-401c-8ed6-43982018d2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03917c55-6c03-426d-b4d9-396f1b4acdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132cc5bd-d5ff-441d-b2e0-9e67dd1151d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f11571-958b-4830-b237-6c4bdd2dfbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94786ddc-734c-46a9-9c31-b1a0ace502b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f05b500-9b4c-4e35-9b6e-c96f6572e922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9696136-e7f5-426b-a6c6-4a3de7a13a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21e9ed4-e494-4168-a921-ab5948a94d3c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a993e57-a2fa-4a49-9510-b8f527aed8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34be8c00-668a-467d-83bb-e850ab55064a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe91890-074e-4713-964d-06708fed2ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a155c1-d74c-4740-89c7-1671009db69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c635fde2-a4d1-4279-b70b-d7259ebb5e17",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18c8cc3-b5cc-47b5-885f-885a11cdab06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc22202e-3fb9-494c-b442-682c844f3483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177f6de2-9946-4505-8018-6f331d7ccb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e408b321-0e46-4c46-8c69-67e1dfb51212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8f0f16-0bff-4c5d-a717-fb26a82b62fe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c215628c-1397-419d-94a9-762b8efc9a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9463d2a9-e4b6-45cf-99d9-9220941eda52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e351b4-8bb1-4882-9539-25fcf858fe31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9598eafe-9cf7-4191-ae8b-1377053ed722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b07d67a-81cf-4599-9453-9254a5578d83",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17241bf2-c445-4d83-b1dd-ddbfe9da1706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a512e03-3e7b-4068-9232-ce5e64087290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8962ed90-159e-4e1a-9f23-89638a68530e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4782266a-ef4b-438c-86a9-2df4da3e213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0842ffcd-37e8-45f5-8d83-556dca36a498",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92baaa9-86a4-4768-a163-70516d464104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7291df8d-3622-4988-bf5f-5f79c0c19a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c52a92-4ff8-442d-b5b1-47155939c757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e81afb5-5319-4efa-8876-0aba6be074ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cde58a-5174-4a64-8638-8b4de0710ebf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c592b09-4ff5-4b09-a652-116f0a23e563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56085e53-7c68-49f6-9d89-4c684f926e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b51fe4-3e0c-4708-a09c-7b368e0f77b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2bbc27-8d37-4279-9d5c-38b371984460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf1ac8e-554b-4c04-86a0-2f6dfed06aaa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f86268-26f6-4c26-8d0d-c1541a2ad0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7743e987-25d0-4e6c-9a89-9a2494954b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafb79b8-de56-44bc-ad19-db69b1327af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb71fc7-0c13-42c5-82da-99a38558e1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d6571c-286a-4606-9e1a-eaa63c41aba2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61b1da0-95d8-440a-a5c5-2d83971bd6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0833cd3-10d4-4675-bfcf-765b1277b442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12259dfe-2319-4609-a2da-b11c2c519048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c426e8a-2c0b-4349-be2e-aeca9cbfbbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523c95dc-9954-4265-ae01-44dfe461b4fe",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd7dc95-b72e-4f84-bc3c-5e76f9dccf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491bac87-9f4c-4d5c-996c-1dd74fc02035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15427733-cb4b-4b45-9e0c-d30ab3e7a4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ea8222-ed90-4ff6-a4b8-89948c2c462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a51f4d2-1653-4fbb-bb28-f21854bb1be8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88221e17-5579-45c7-9e65-80aecb92b52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53deb96-2ed6-4c8a-97fb-604cf9a4eee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3052ae08-8a69-4152-b2d6-bfc33bd4635f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f82af4-8ca3-4991-ab46-2493de77eb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3258dcff-b05e-4f80-b65e-5943c7f96a19",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cabf599-ed12-4bfe-898b-81d975349ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da342caa-a4c8-46dc-9877-e169414f4ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1466eede-83ea-4007-b37f-0ef93ef6902d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815d45fc-29d8-4470-9965-a97429594040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eacac2f-6395-47e8-b65f-413cc31aa053",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472180fa-f976-4cff-b739-7e1822d60b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ebf6c8-6691-4361-81ca-7cc18b226304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a69ab6-445c-4814-b0f0-464219cbd9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52da8086-3c7d-4389-bfb0-6818bd5c9152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8667891d-f992-4bcb-a5bf-c53ed7d2061c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08df7981-3385-47ac-9e35-18bddc850a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3812e2fc-e099-47a9-978f-3d9aa958a0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcdeda3-5cb2-4c85-8a3f-70ee9cae168a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef823ddd-c848-44ac-9756-142e2cbeafac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26525177-a5c8-40c8-9828-996496828bfb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ceb263-69d6-4db5-9159-648389868eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3ed0d6-9a12-4b5c-99b5-4072fba80cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c999ea-3234-4d77-93f5-d2cc9470a3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36737361-a13e-4570-88ab-fc0c47ca08fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011d2ed9-b72a-4a92-aea2-e8d868be8842",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca374109-efd4-4beb-830c-63adff8cc864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f18ac3a-2120-42c3-b3e1-9886066ff43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c447d70d-8e2e-4bfe-a572-8fc279f0792c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908c1aab-f7bf-418e-8e8b-253437e0fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4020f85-db35-4161-83b7-21806d2e7280",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ca86a-456b-4d44-ac28-a0bb14f54cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91473b63-ec95-4c51-b631-448e30e62c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7273c955-6bad-43f9-af78-55761c31d097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73973c4-2308-4997-9be2-4af1e174279c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9604dc-bfb4-4d47-a787-9dc6f9f38de1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6540d5e-2630-4af5-a588-ec4ee0f2da0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2885b2a5-ab3b-4149-b9df-623e746f144b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c0f15c-b63b-4766-a141-98e2df34ff8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7f7b8e-5aa4-4836-8164-4afc678b556e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1133d42e-4229-4c40-be74-54dc2dfe75e2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d7ad4d-854d-4456-8d59-76bef9f52589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65204692-e2da-43eb-b2b1-15ea0779860b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe9417c-49af-422f-bdee-b8165961fac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98011e83-5db9-40a4-9da1-20184f843f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389f077c-c573-43df-8351-6f055e2c3483",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a30273-1efa-453d-8946-644309336211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f798d963-af42-4a27-9e77-6c6e2396931d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39406372-56e6-4896-acda-edb5469eceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a07c2c3-5a8b-4931-ab1f-25c58bf77570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb77edeb-ec2c-4729-97b3-dc91dfb09839",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128a1405-08e8-4e0f-b759-c2f76b721764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c373d4a1-7907-4877-9983-a99781051fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8f54c1-039d-4929-99b7-6bef99a29c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95dd5a7-1b0b-4bac-a19d-80f9ee35c231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b44516-dee5-4703-9f64-ec3f1aefc4c5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ea2cea-5e31-4628-b709-c79a189f28f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f525fb83-54ee-4571-bf02-edc644244165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7292cabe-319b-4360-a519-6b9b4c90fa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45d33ce-258f-4c71-9281-ef3e9413e8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedba5a5-e49f-4808-b67a-11ae95e4f449",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a07a3ad-bb19-45b8-8a78-807286f5e841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2e9884-78ed-4829-a003-3e6a91becb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff41c97-a0f4-4f2b-831f-f97132fb2e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea503f8-16cf-45cf-bda6-cd44dbd712d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22f954b-b25e-4c94-953e-ca3786fb193b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aba9590-8d09-4264-a373-1bc048858915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed932e6a-6ba0-402b-960a-2753af639707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f017c92-8af9-416a-950d-1854a6ede103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3646db1d-a3e3-4231-8fbb-580d344a9a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb3180-1309-4198-bf5d-4bc855006e67",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1106fec-0911-4218-b6ce-771bd02540d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edac58a-024d-4709-9a04-b490d8c13f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde7caec-771e-41c9-8dc0-6c62faf137af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c370a3-dd14-4a24-a0a2-8c683e0fa3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb75a7be-bc12-4c8f-87f7-7d53c454c5e7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04caf6b8-9154-4a53-875f-e1cc2b3936b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d0cbab-a521-4b84-b259-5fe7f8ba4476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fdf7f8-8521-4fa4-a2c4-df2830367d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67bf9bc-350c-496e-b83e-0ccd6eaf3b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214099bd-c679-4deb-89ff-4c1a1c2a3204",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0362d-0e27-4178-a96b-d81de16c91bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7b3267-9960-478a-9e71-14d7e9d3151f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a629d24e-cc11-46c7-bf52-e994b0be5565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9abc06-d92a-4f5d-b35a-542d644a144b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884e6832-bbce-446e-a248-7f7dfd3007c7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f4b1cc-8fab-43b7-a044-9f4a8392783d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0cae6b-425c-4082-a209-387144747011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0716fb0-cf8c-4a0d-aca1-7db0e18e29d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b561e2ce-d5b8-448c-848e-76643ceff959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ab1f0-53f7-44a7-bc53-cf3f1baab887",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d41427-decd-4bde-9971-989ba9ed3b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24373647-df6b-4ad5-b6dc-3b6e23049356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a29959e-d2ca-4b3b-8151-49a03c2a2a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1026725f-68f6-4bac-abef-146a3a8c7d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e7f95-7210-4932-a533-309d7d8243a6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982d1927-2b1a-4dfd-a8c4-d4f53939a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09dfe5cb-99bd-4bd4-9775-9b9293c65395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70ae394-599f-437d-875c-4882b2e977a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b2a179-2f7c-4752-bbab-8d4458d2d8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4fc024-ec72-4bcd-98b3-0455972d3d63",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b417cc0-cf06-48b2-bee1-5f6ad51ed034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177bede4-e423-40bb-bd2c-42951fd5eb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8121f4-4178-42f4-ba05-9297e0738f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6b5647-6771-4228-a0c4-8400e1594702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afea0c76-72e7-4135-ba8d-3a43a553faee",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4d1300-850f-49f7-8c8d-901630c52103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f13d16-ea64-4305-80c6-7590f2e2e082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443a3c00-8b79-4cce-938c-e36fa362ed14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7b67df-1066-4014-a307-f94347d69e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbf2056-5943-49d8-96bc-510a30d7e39c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9571e2b6-9132-4ab2-98f3-cc0b518df0d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ed3361-fcfc-49c0-9b49-e42f0d675752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179f2b46-03a9-42a0-b5e1-942b8c70c5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696f22a2-c331-4aa2-8bb9-15f96579d725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84904ab-62fa-47e9-ae04-c30ab69da843",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98956587-9e8e-4746-819f-00fcd9ebcc59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2ac3e1-d7d4-418e-afdc-f75f388d2429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c421f6af-6376-4bcb-b4ac-0e1bf906d324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b69324-7782-4a3c-81aa-50ce2acbd1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb54c614-9da4-4b71-9c90-ecccae227018",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2b838-9b17-4810-882f-b71420853f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ce41d1-55ee-48c3-ac59-c07ccf6b47d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db9e6aa-0b89-4837-a49e-8356161d91eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac0ef72-16fa-472f-b75b-b77284f4104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5149d023-4d1c-4527-ad72-ee5e7e98b0db",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7097ed-83c9-4156-8b54-8d81c2d098ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63960603-f14b-4ce1-a91a-b9037cc1ae93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddb01d3-b734-471c-999c-4b787d990488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7400310f-1ec0-46cf-b3d0-8add4f66a7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e8ebbe-6d7b-468b-b441-c7c94396ee7f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309561c8-030d-42bf-b128-69b8de2e9291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170e2bd5-773b-499f-a6ac-6075f7c6d34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5e5538-798b-4881-b38c-2a0c4d9d77e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701adabc-5ef6-4495-9339-a6adf4f6efe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c884ac-02d8-4565-bd35-78b960e77051",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27efc201-acee-4334-a2a8-8319bb140817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1dbd8cb-7946-42c3-bf80-8917c2f75fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fed886-4814-4b86-a971-809e3d0d1cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7767671e-b113-4a77-bf8a-7c3c2e82ad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8d6a4d-2ae4-4cb8-901c-a67fbf95ae92",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2e5c67-87bb-4ce0-b4c0-a44d09e3ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3403a9cf-24e6-4005-80fd-538b51504dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01c948d-b438-4ba6-b80c-0eea11073cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86ac99e-17b4-4ca3-bb83-e22dcd348121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c550152-2018-4d9d-8879-8a2c3f7e45d6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb377ca-4972-43eb-9d8e-4ec6275b626a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9f639e-157d-4e68-a412-9258ebbbeae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4eb261-8dec-4ccb-b47d-c4ec09e83e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3a394d-48dd-4f4d-9e61-92d1dbd723c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1832b9bf-3627-4988-8354-d529484ef044",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8883b1-ed06-4db6-a660-f8c6af5eb471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a88c2c8-3a24-40b3-90aa-28a321b1ddc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304085f8-7676-4d56-9e84-20ccf8292406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da004dc1-dd32-4227-a61f-917564262ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f17f066-e900-4070-a416-d3328283fc97",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0f9d81-2fcc-4d6e-814b-bbe5e6fb4a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a499bf-34bc-4132-ad91-af4dc66cbc98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafc2a12-8998-4e0b-a5af-87c6c230efac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cf88c0-a162-454a-a23d-2887806fc04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc5e1e2-c116-43ff-8222-fe89e87e71d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4cb363-e6bf-4b87-b4b5-6c5e95fa697c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d60a99-2d71-4560-a212-6f207f4298f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3156d1-8c9c-42ab-92fc-82b5f9cf78a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1948f2-8ef8-4383-aae8-cb9786bb73e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21426087-22a4-48b8-b460-1e0c913f0fc4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a55043-73e5-4d5e-9bf9-e3fd9b45586c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39790d91-cd36-40ee-834b-62ea6c3f1e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f379150-3290-4a3b-8dfd-93f79b61617b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7437d9-ebee-4102-914d-8a8dba42f415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb02d14-7f02-43ff-bb12-10841419eee4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5983a1b4-997c-46d8-a4bf-09ea11b6fceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5caa448d-1a72-47ce-a156-dd3aeb9e0af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52199934-8104-4453-ba78-ffa58c7ecf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ea1731-e08e-4a44-9e2e-5570571c2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb47578-56bd-4711-9a35-d265af5c0919",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77317c68-d36f-46cb-bcab-201f268ade79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6c171b-1a40-415f-9819-0f48a0803a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21503815-3005-48e5-a30f-27c750461333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52e0ce2-01d8-4f17-b890-158a4c288079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a97d0a-8610-40be-ac4c-16c5311ed458",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a6cc0-395d-4bc5-b2f3-191a855f9672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b509a2b2-1659-452b-8317-7bf718f231fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3401a28b-9357-4793-b97c-c80dc88252a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837858d5-bd30-4209-9f2c-7d842aa1e73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c70fc80-258f-4bec-b803-16b95e73d952",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837151ab-fc66-41da-a52b-53e9548ec4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65acf461-1fd7-4776-8b4b-9ea4c61c4a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cf127b-f80d-427e-a21a-d6eafaad8043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe65e57-a994-4e26-8b4c-e98caeb39ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8372f72-277a-48e4-a535-2547523479f1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbb4222-a1d9-4e51-af29-8e8810fd5284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b7338f-19d9-4bb7-b09f-6b9b018d0a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcab795f-975e-4b59-a4c2-37a9b81e4fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a77479-3bb0-4d07-a49a-358645458187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cffa4ab-29c6-4299-b808-551bbfaa4d78",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bdd1b4-9458-4b85-b37a-b87d8c5b7bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a46d1ec-0ec4-4b7a-b06d-e51ca40a8f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5328c782-619b-4e55-ada3-a6b47d3c35a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8674d791-8067-4b55-809d-488553810334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c58756-46ee-462f-8601-e4b98a119010",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1086402e-a9bc-43a7-b967-1082d28e245b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "369fb289-8057-46c9-8bfb-5d019ae89d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6229e997-5e53-40ae-bfef-337915d04d07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc841294-c747-4278-b92c-eaede4f250b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e33bcd8-1eb1-470a-9048-f0acf976bd8f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2588aa4-5b5a-4efb-be21-b61f794318fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5a7ebb-ac89-4882-ad03-e4bfe0715b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f2e397-f1c1-44c2-a66b-e56d8aa75e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248f8f28-9d3e-41c1-ad26-6ff5ab9ead23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8702c83c-6418-4359-b56f-a98c08889b42",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242bf081-32f5-4926-88f2-48f42eee2dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "908dc083-79a0-4529-93b5-cb060b74bb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ba3a7e-82bd-4b0f-8438-32396f5b70fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c1d8ec-04cb-41f9-965d-f20b6b95af37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2998958c-298b-4f9b-8b8b-50bdb6e97020",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4057a5b-ae1a-46b7-a881-bf257faabca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a1fca0c-adaf-414f-b285-35fd8700f811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc347277-1d61-4ec7-8157-f8c468cebda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954cabd9-2363-42dd-b2f6-c9ef6799154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da4c27b-e5c6-4385-9d8c-8dc5d08b7709",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084dfcd3-3b4d-40c3-9ce1-e9036d41ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20cc08f0-2a48-4ce6-a310-b11082041296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e051d1a-5c17-4433-8982-49527ea747c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f996c9f4-c279-47c3-979b-af3fecb61219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3739751d-ff1c-4218-84c6-6298eaa1ca76",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b93cd6-02a4-412b-a088-d3550bd301b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c7ca90-bf67-4a49-8009-b4b1c7ff67d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f6be9c-c389-4ba5-a9d9-0edb4af0a736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222c58c7-7c9a-431d-ba1b-e37b1ba11c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b6b3e9-3f61-4571-9e8d-3a393ad6efaa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d322d100-12f4-4821-b456-fd2546cb41c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5c9730-59f6-4fda-b4cf-dcca939ff4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e86993-da4a-467f-add2-a1b87fff6fc6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd90da3-e575-4723-8582-2e35fce4ad08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3968fe49-aea2-47cb-993d-a706a81dc460",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d92ab83-047b-4128-8cf0-59b17a1306ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a4fa0f-e33f-41b4-9d1a-fc0871ec6fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d90abc-7027-468f-8f6a-a4092e5b6d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab2e44c-1449-4428-b05b-3801f6455cf2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "862f0e96-aac1-4c64-a093-25774332e21f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb0389c3-1eb7-4f7a-88af-304b6125bfd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d6b01c-4efd-4e8c-8c64-6b3c26793ea9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e193dd0-d1b9-4d91-bdac-b8c7ee8f9ea3"
                    }
                  }
                ]
              },
              {
                "id": "7d308d1a-217c-4a1b-8877-e6bd155d8628",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34df14e6-78e3-4ea1-97bf-2ca3e1a57970",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5097c3d-c1a9-4e64-8e70-05607cc6c18b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b90f6c35-49e3-412c-a1f1-1b742efcca8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24534512-bcfe-4c35-9198-32d291f5b48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b87d9b22-d3d6-468c-9728-cea03551046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e61b43-7950-4e1e-bd1c-f335fe556204",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b23f55a-523c-4c1f-89ba-c730238e73bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fe2b06f9-3d25-43cb-b650-cca4e7dc89c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8486155d-558c-402b-acc3-ef843a400d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c218145-7ab4-4a2b-86ec-ac1abf726f67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02c52a0e-2f29-4fbe-a761-446160aa16e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "326a989b-f13d-4861-b1d5-5c2d6fef98c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "471ccc58-2ffb-4363-a7ae-f08f8167a7ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8d029fb-5d31-41aa-9cab-31f316b613ee"
                    }
                  }
                ]
              },
              {
                "id": "01a41315-f912-40f6-814b-79db4fd47908",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "25682a31-3055-44b6-acc2-a44fc070c04e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9759c6-dc58-4af4-a787-188ddc8681fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "98090bbc-e75c-4f8a-82a3-3df7bf7788c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f10bc-0ed9-457b-9113-0588f86b1be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2a0237-fa80-4c9d-a02e-0c71cb159e8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74a13d8c-e6e9-4295-a485-8860c9a8395f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "090b58e5-6428-4c8c-a4c4-c7503b47af72",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a26d833-8d03-409d-8a9a-a7a2b0fb757c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7e4b8c7d-02de-4c81-a60e-85bf2e65278a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fb731e1-9a8a-4747-96ed-bdbb1c5a0d36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1f3cae6-8764-4d7c-b715-4d809dff7a35"
                    }
                  }
                ]
              },
              {
                "id": "350f5594-13b0-4da9-b541-c0316f9dc73a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea42472-03f2-4827-a5f7-26b113840f6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a68c88b-b80b-4d46-9dbf-7587f1f68209"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "504f3e66-0788-4ae9-816d-0a215926500b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f0d571e-76e1-4be0-be17-25bf892f4623"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "235624d9-951b-4d92-93cb-4944d9eff7a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ec03fdb7-bb71-4183-bddb-d6db4347344d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d220988-0a16-4ffe-9438-76dff357e5a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da07748d-4864-493e-b97e-05a1e2bd1a55"
            }
          }
        ]
      },
      {
        "id": "86eb1ce0-b7fe-4c4e-8720-7b2da8d5ad30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36afc9fb-bd1a-4e9f-9a4c-717f16b36a20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30043361-3963-47b0-8809-1ebd69b62e2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9405db-d3be-4332-897f-724f476b01cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "325395be-b483-49e3-a8b1-b913e284bad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba8bb5d-c764-4100-983c-c212ebf078af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e88a7e5-931a-44e2-87ee-f096bc8584b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea740db3-2be6-4418-a5c9-f91e3111ed66",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55449b9b-73ef-4c07-b6dc-98cf5d6b7750",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b0391b5f-5043-4e7e-bda8-f5d31c90f49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1a4920-f11b-48d4-b4c6-bfac0e6d35fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da2cd2b2-68c1-434f-952d-7183f03dc4e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79eca97b-3a00-4ead-b4b0-60defd6f0c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4caf1433-7d62-4278-9898-b515ac8afb6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "664f7ccc-d96e-419a-8fba-ba237a7cbea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c2a27de-d664-4cd5-9e89-e6fc65a60537"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "861a5e76-7ed9-4790-85a0-4e6ce0d31a6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6826983e-5ca0-4225-8c11-76ef5451e018"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b6a6613-373a-4126-bcdb-823acd102812",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c0771d2-7140-4943-8818-05216e85ba0a"
            }
          }
        ]
      },
      {
        "id": "c01652e7-1896-4ce4-8c69-4d021f4aea1f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4d3ae3b1-7fb0-464a-a6ab-7de4fb603a71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39960b27-3319-48c3-8a65-170f1d91bcda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1d091c3-bf44-474a-acfb-31ac6ba2a12e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5cfdbf-b5ac-4321-884f-96820ef3cf75",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4231775-fd0d-4fdb-ab98-a40f2eaa2676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f3badc-10ac-45f1-9426-7c20e4fbce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4258d79-986c-4ffb-b150-b4d63192ac50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d966d074-edbf-4bad-888d-ebfd60ed03e2",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a554e3-a062-45a2-b4fd-bf8093fd485d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3ed630-70d7-40c7-96df-23266591f32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a881675a-41be-4820-a8f8-224b744b4044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b0d1b20-8fe3-47d0-ac6d-33fd5ca91081"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "095ad92f-d5ed-4b3e-b08d-9c96c865fd95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8ee85ab-85a7-4cea-a39b-9ca0850e26f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "884ec049-2599-4f41-baca-8e10f9a4a7eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b51eea-3e49-4ddc-92cd-dd94cf004856"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6907075-10df-4cf5-9a3d-ecb03251db6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19cc9806-6617-4b55-befa-a0319fe2bbb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08821a01-5456-43da-a424-05093ad0fa1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c7fa14f-4df2-4604-b09f-8848e690bae2"
            }
          }
        ]
      },
      {
        "id": "b4c7d1b5-f210-44f4-a495-db12283e8272",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "496723de-9a22-4c8b-8b0b-adf801dd3699",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38c25ac7-f48e-4799-ab9f-40430585202f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c56e3336-1ca4-4205-bf7e-714f75839c76",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc6239-c16c-49b0-a98a-904402f933a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab64cbeb-6716-4ca4-a709-6f8c6c5f42ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f7de8-abbf-4e18-8e0c-4b7df92f918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "007476f3-d48d-4e70-add8-1e65f794db86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381814af-88eb-48de-a4e9-dec48711e9ad",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f25ef7-5e80-42fd-8f70-5a90b74f759d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "974a8cca-fe9f-4702-97cf-ce3bb43af4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf573c0-e812-4106-9cbb-f7e6c659e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16dc2626-06cb-4217-9158-b793c008a90d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8c202c3-3b4d-47f7-8c47-dfce78209941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e2765d4-968a-4a32-88fe-07d7e298e131"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a26a7da9-a703-49c6-adb0-e1c99fdebabc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dec7fbc-97df-40a9-9b15-174e112c66c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81b6a0cc-e266-4834-be79-72ca5d19d0cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52316b4d-d703-4d6c-aac2-dbe838f94795"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ed43825-96b7-41fe-93ea-e393c9b6fe11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "366a9c24-3fd8-42e1-b6e9-837d6926c729"
            }
          }
        ]
      },
      {
        "id": "337f852b-8fee-427d-b454-1b8d882bc947",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2011eccb-9937-4e01-9689-880ca470ee33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "188fc45c-430b-485a-a653-cfa3588af068",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d124c0b0-6898-43a6-8bb5-46d60d8cbc5d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6537a699-865d-4492-9183-0f097ec1f58a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83e61f9c-b26c-4021-8039-72e5e99aea4f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 837.973076923077,
      "responseMin": 11,
      "responseMax": 9665,
      "responseSd": 1121.4877083786423,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683333223681,
      "completed": 1683333452839
    },
    "executions": [
      {
        "id": "1ddaad3b-e09c-4383-b21b-4ada9bc97849",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4c7c75e7-b6b2-4835-9ca7-88dd5f2505f0",
          "httpRequestId": "70774617-2164-4793-9f47-477c2c86de54"
        },
        "item": {
          "id": "1ddaad3b-e09c-4383-b21b-4ada9bc97849",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a0c11e00-f27b-4265-add4-f6c8498e9aa8",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "c627f805-8676-47f6-b020-0fd0732e4ac8",
        "cursor": {
          "ref": "e43e6d85-b0eb-4d7d-91ab-4a065dd9da10",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d95d4970-03b8-4637-bf13-2a78b821095e"
        },
        "item": {
          "id": "c627f805-8676-47f6-b020-0fd0732e4ac8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "37e24579-b298-4be5-a2f1-148dc09603e7",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "1c764b62-3e90-4947-8588-9e8a9aab1972",
        "cursor": {
          "ref": "9afda321-634f-4363-bf56-63ec69acaa1d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9c9acfda-4704-4f6a-aabf-29e71c269b28"
        },
        "item": {
          "id": "1c764b62-3e90-4947-8588-9e8a9aab1972",
          "name": "did_json"
        },
        "response": {
          "id": "c1b28d7a-4839-48dc-b85a-29e17413894b",
          "status": "OK",
          "code": 200,
          "responseTime": 1191,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b39c85-f987-4a5e-a29c-9de64bba2d27",
        "cursor": {
          "ref": "cff753e8-04f4-4b1a-b9d0-d042c100f66b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce8b16d8-86d5-4e48-9613-ec63943bf3cc"
        },
        "item": {
          "id": "66b39c85-f987-4a5e-a29c-9de64bba2d27",
          "name": "did:invalid"
        },
        "response": {
          "id": "d20a4cc4-c1a2-4b01-9f66-adc6e337760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b39c85-f987-4a5e-a29c-9de64bba2d27",
        "cursor": {
          "ref": "cff753e8-04f4-4b1a-b9d0-d042c100f66b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce8b16d8-86d5-4e48-9613-ec63943bf3cc"
        },
        "item": {
          "id": "66b39c85-f987-4a5e-a29c-9de64bba2d27",
          "name": "did:invalid"
        },
        "response": {
          "id": "d20a4cc4-c1a2-4b01-9f66-adc6e337760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917d6835-caa2-4860-b0bd-406e6702a7ca",
        "cursor": {
          "ref": "b699a91b-e181-4eea-9737-a23e6cfb5510",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c5011fcf-9a8f-438f-aece-0eea5c401f06"
        },
        "item": {
          "id": "917d6835-caa2-4860-b0bd-406e6702a7ca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1799d266-98eb-473b-8607-6a8e62089fcc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 857,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48af577d-a78e-4645-8b8b-99c67a8dd9db",
        "cursor": {
          "ref": "11b498d7-9799-4abc-a2f6-3621fb3b659b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e88a69a-21e7-4ed6-b693-39f13346c1ac"
        },
        "item": {
          "id": "48af577d-a78e-4645-8b8b-99c67a8dd9db",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "14a47091-48be-41db-8ea6-297f9615c783",
          "status": "Not Found",
          "code": 404,
          "responseTime": 659,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039cde95-61e1-4a6b-8ab4-4deaac9deb09",
        "cursor": {
          "ref": "b7c69cfc-7bc4-40d1-95ae-26c7c6c65b42",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb97968d-aac3-4b7a-a1da-10f29b8b8488"
        },
        "item": {
          "id": "039cde95-61e1-4a6b-8ab4-4deaac9deb09",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dcfcc4d0-a36e-4397-965d-0dd197b6ecd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e76a0d2-ccf0-4d6d-b87d-ac7ac9a0af50",
        "cursor": {
          "ref": "ac204282-c996-4c66-a944-86798db0aabf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7bbe6dcf-52ce-47c1-810d-e438af747c87"
        },
        "item": {
          "id": "6e76a0d2-ccf0-4d6d-b87d-ac7ac9a0af50",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "54300cab-4eb2-46d4-89df-9f2b6b750247",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 656,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e76a0d2-ccf0-4d6d-b87d-ac7ac9a0af50",
        "cursor": {
          "ref": "ac204282-c996-4c66-a944-86798db0aabf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7bbe6dcf-52ce-47c1-810d-e438af747c87"
        },
        "item": {
          "id": "6e76a0d2-ccf0-4d6d-b87d-ac7ac9a0af50",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "54300cab-4eb2-46d4-89df-9f2b6b750247",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 656,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e7fdb-c496-43fe-9801-9c65b7deb5fe",
        "cursor": {
          "ref": "b2bf572f-f3f8-4c24-88a9-6c5187712839",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "12bd7388-3c67-429c-a457-1f88b99ecb4e"
        },
        "item": {
          "id": "bc6e7fdb-c496-43fe-9801-9c65b7deb5fe",
          "name": "identifiers"
        },
        "response": {
          "id": "5e90922c-e908-4102-bcde-cd31704bcb5d",
          "status": "OK",
          "code": 200,
          "responseTime": 1228,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80f8451-f0df-49ac-8e45-411f0ff0a429",
        "cursor": {
          "ref": "e4f8b7d5-81f4-4ba6-b646-a4a27d1e0768",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "65fb4a4d-7491-4fea-b77f-9b6ca605f125"
        },
        "item": {
          "id": "c80f8451-f0df-49ac-8e45-411f0ff0a429",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d273f71a-42c7-4418-a7fd-cee97fd490cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80f8451-f0df-49ac-8e45-411f0ff0a429",
        "cursor": {
          "ref": "e4f8b7d5-81f4-4ba6-b646-a4a27d1e0768",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "65fb4a4d-7491-4fea-b77f-9b6ca605f125"
        },
        "item": {
          "id": "c80f8451-f0df-49ac-8e45-411f0ff0a429",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d273f71a-42c7-4418-a7fd-cee97fd490cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d726eb35-710c-493e-be6a-48d48427d9a2",
        "cursor": {
          "ref": "d41d38a7-cb67-4e0b-8d10-88063cfaa0a5",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "14218805-fcd3-4859-ae50-69319815e28f"
        },
        "item": {
          "id": "d726eb35-710c-493e-be6a-48d48427d9a2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "73c29dd5-1f51-488a-aeef-99ceb0ac5102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d275a4c6-b39d-4131-89f7-8e66a70ab56e",
        "cursor": {
          "ref": "4be05c7e-bdee-4492-8b01-e70d51a3ee2f",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b3016a1b-0f8e-4694-ac09-d6a3d4d89510"
        },
        "item": {
          "id": "d275a4c6-b39d-4131-89f7-8e66a70ab56e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "03193520-2869-4b8c-81b2-ba4a648b3531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1838ffbe-5b3d-4817-8f35-2ab5cba25f80",
        "cursor": {
          "ref": "db4b9419-b556-4ae5-a692-ac83647d044b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "12caa596-550b-4d55-a819-5b8dc08f812c"
        },
        "item": {
          "id": "1838ffbe-5b3d-4817-8f35-2ab5cba25f80",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "664eea7b-eaf1-4947-acfc-e16491186323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123c3294-8713-4f5a-93c1-b3f53db4bf0b",
        "cursor": {
          "ref": "2c1dadb0-5f0d-44d5-a0aa-e9e056fef392",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a9ac025-9324-4da5-9d7e-54874cbaca93"
        },
        "item": {
          "id": "123c3294-8713-4f5a-93c1-b3f53db4bf0b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a609fba7-156d-43bf-b9b1-a813edd59065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e1c38d-880b-45f8-b4da-ad20b07b1b57",
        "cursor": {
          "ref": "2c6ffcd1-ca62-4f84-a0b2-f52076ce6a98",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d3452bb5-55d2-46bf-ae3c-2906fd18dc3a"
        },
        "item": {
          "id": "89e1c38d-880b-45f8-b4da-ad20b07b1b57",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b2c5baf0-978d-4325-8209-1008b20f5298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7165197-d913-4ec0-b3ad-0d2617fe7588",
        "cursor": {
          "ref": "0a077eac-22d2-454b-90ad-f462b97e81a4",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "214bfe4a-d5b9-455b-b678-21a1a9b3ee3c"
        },
        "item": {
          "id": "d7165197-d913-4ec0-b3ad-0d2617fe7588",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8cbafdc9-43f1-4907-8b9f-43ec61b1c6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe8f97-b170-4b9a-a1ff-330f39fcbadf",
        "cursor": {
          "ref": "a0373945-691e-4104-bb95-ceb27fce7580",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b685f396-13d9-434d-b254-7a165a5e8bf7"
        },
        "item": {
          "id": "6ffe8f97-b170-4b9a-a1ff-330f39fcbadf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11405387-76c6-4e89-80cd-f9c287ab1c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d473733-bfa6-498b-8554-77b23d8aa328",
        "cursor": {
          "ref": "18fa4787-f6de-4bf9-a786-e3b898c288d5",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f66a4e50-608d-41ea-800e-21b8ea4a448c"
        },
        "item": {
          "id": "4d473733-bfa6-498b-8554-77b23d8aa328",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1a961403-d0a9-4a7a-af34-333514c802e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a38f9d6-40e1-4b1f-85b0-ab58cb3a44c8",
        "cursor": {
          "ref": "cb1387dd-c14d-401b-a968-c098ca779b15",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "28f42f25-2bad-4fd0-840c-2e75034696ba"
        },
        "item": {
          "id": "9a38f9d6-40e1-4b1f-85b0-ab58cb3a44c8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "044bc20b-d1fc-411c-bc43-94ab0e0599eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0455fd-88f3-4534-bb4d-f9b07b97b92d",
        "cursor": {
          "ref": "6d9d8b7f-af0e-49f1-bb03-abc7a1f750b9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "effa40fe-72f1-4d91-a491-55c4254f5e8b"
        },
        "item": {
          "id": "8b0455fd-88f3-4534-bb4d-f9b07b97b92d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "63e1f5f8-1c5d-4c47-8b4e-764a6247abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7309d9b-8c31-4abd-a7ab-504ea36ae78f",
        "cursor": {
          "ref": "2b4f6c32-d2de-417a-80e2-8cdcdcd90455",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "63cdae31-306f-4afe-95c0-946665e19844"
        },
        "item": {
          "id": "e7309d9b-8c31-4abd-a7ab-504ea36ae78f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "13c8a6d2-ff9a-4921-8572-b72af88bc66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffaedb9-cabe-461d-866b-bb3c0f30181a",
        "cursor": {
          "ref": "1fc86abe-7f00-4bf4-a7dc-cd22d1a63f72",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9db6b91d-9e08-4f28-bdda-60606172bd58"
        },
        "item": {
          "id": "7ffaedb9-cabe-461d-866b-bb3c0f30181a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0c8b2377-2451-40b0-852e-1cebe834fdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcbf800-c519-4c7a-8bfa-8ad4c37c3fb5",
        "cursor": {
          "ref": "80163982-0e7a-4e43-9a52-976f98251ee0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27994cb8-3b6a-4906-9395-e4a8fc6a848b"
        },
        "item": {
          "id": "7bcbf800-c519-4c7a-8bfa-8ad4c37c3fb5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "56de393a-cf5d-4f59-91ac-0f427f4be276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea346a1-7ce3-4d79-a95d-9f6d3770cf26",
        "cursor": {
          "ref": "fe287006-9192-4e58-9d9e-93e76e5a0739",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "41f681fe-dae2-45b9-8de4-0ebe10b7404e"
        },
        "item": {
          "id": "cea346a1-7ce3-4d79-a95d-9f6d3770cf26",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "76aceef5-7de9-42bd-9056-1aa8b3502fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5873204f-574b-4eed-91b6-8a3754ba72c6",
        "cursor": {
          "ref": "c11763d7-b73e-42bf-a8a5-f5b83badbda9",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "87dcbad9-7579-45da-89aa-0386e8154dff"
        },
        "item": {
          "id": "5873204f-574b-4eed-91b6-8a3754ba72c6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "55b76706-c891-4c60-9bb8-9859367aee2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52da70ff-aad1-45c1-ac1f-a0289fabf737",
        "cursor": {
          "ref": "2b6986e1-2034-4187-adad-3f2138f68641",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4fb143e5-a5cd-4c31-b3fe-cd5014be735d"
        },
        "item": {
          "id": "52da70ff-aad1-45c1-ac1f-a0289fabf737",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2bff272e-a78f-47d1-b6f4-d27e67d4f619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8981e5-12e2-47f8-b744-1783b1e68e43",
        "cursor": {
          "ref": "ac33907d-3df0-404c-8b94-6f97dcd4e432",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40a11d87-0cda-43f6-9046-473beb26397c"
        },
        "item": {
          "id": "db8981e5-12e2-47f8-b744-1783b1e68e43",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b2c822f6-5a9c-4acd-bc8d-416e2455eaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afb8f66-d272-487e-9e8a-2c0faba915fa",
        "cursor": {
          "ref": "afc7d36c-b73f-4446-a9a0-5aeda9a1cdb0",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "63a0bc12-0617-442c-b069-880a8d71c366"
        },
        "item": {
          "id": "4afb8f66-d272-487e-9e8a-2c0faba915fa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "921c883f-d459-4223-bca4-7923a378d32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080e79cf-a691-4739-aa8d-cdd14ff426a7",
        "cursor": {
          "ref": "3dfab69e-93f4-43a9-8c82-c0dd12cb8ab2",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2d98e68-4891-4341-8cce-de46fe717f8a"
        },
        "item": {
          "id": "080e79cf-a691-4739-aa8d-cdd14ff426a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8f0a01b4-76da-4f20-9321-ccd0e9fdcee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcbeb41-a3ab-4db2-868f-e6348b2d0311",
        "cursor": {
          "ref": "f1057d67-d57f-4530-8c27-835f7df8c94b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a39204ae-ccb2-4729-8598-9db15e1efbe6"
        },
        "item": {
          "id": "6fcbeb41-a3ab-4db2-868f-e6348b2d0311",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad7d3f24-a157-486f-a141-2516fdf787e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1232,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87866a25-aab0-402e-9a38-5806136bb3ce",
        "cursor": {
          "ref": "2b6f9615-5624-4e9d-be78-eb4f342bd8e7",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ef38494f-d873-4329-9432-cd96b9b61fce"
        },
        "item": {
          "id": "87866a25-aab0-402e-9a38-5806136bb3ce",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cf46106e-71f9-4e1d-bb49-22561e3a7ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1180,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452ee15f-9c17-463b-a497-ab5b0e49ec6b",
        "cursor": {
          "ref": "5eb2319e-b10c-4d60-bf39-81aa656e9f18",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5dfd0c3f-9fab-4346-9ba2-1556dfe23ec1"
        },
        "item": {
          "id": "452ee15f-9c17-463b-a497-ab5b0e49ec6b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fa23b9b9-1b4f-42b1-a717-93e50400f8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4468d961-17f9-4e97-80d0-33cb6664912c",
        "cursor": {
          "ref": "87571196-3a24-450b-92e5-9fe349e167db",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c08b1651-cc39-4659-ad05-2d74eaff21c1"
        },
        "item": {
          "id": "4468d961-17f9-4e97-80d0-33cb6664912c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e27addb2-0dd9-4972-8ee5-e54dae8117a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47350b7-3e31-45f1-87d7-a8737809cc40",
        "cursor": {
          "ref": "c38a4fe3-2e3b-4a7b-afa4-d292dccbdfcb",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9c0bd8fa-1a1c-4ea2-8454-ed424e39eed0"
        },
        "item": {
          "id": "c47350b7-3e31-45f1-87d7-a8737809cc40",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1911a0b9-2be8-4bc7-8c97-26e78e11ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c07deeb-8323-4ba2-b675-04c1eecc6804",
        "cursor": {
          "ref": "68a1704f-c457-4a5d-a780-b1efb2ce1d10",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "39196318-7db8-4228-a032-5d297ddde978"
        },
        "item": {
          "id": "1c07deeb-8323-4ba2-b675-04c1eecc6804",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "175ab17d-3c82-45d6-8113-283d86ed6b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8cac96-a7da-4d3f-8a93-4ae2b6483b02",
        "cursor": {
          "ref": "ad506801-b2fe-4698-9426-35a96daa3470",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1875884f-ba74-4401-a042-fe2d7050e01a"
        },
        "item": {
          "id": "7b8cac96-a7da-4d3f-8a93-4ae2b6483b02",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c026b2bc-b47d-4b1f-b473-eee5a42be61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd79f7-a2c0-48aa-8b0d-6ee94f44e08c",
        "cursor": {
          "ref": "dbb68d6c-d70f-4f8e-8c04-b27d9b65e400",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0729a182-0e69-4462-b4f7-79ed796dbb8a"
        },
        "item": {
          "id": "46cd79f7-a2c0-48aa-8b0d-6ee94f44e08c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "15110328-2a97-4810-a6fe-591274208029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c265994c-c18d-4fa8-8381-1751f343b1b4",
        "cursor": {
          "ref": "cdce888f-ab7d-48ee-a0e8-7a6c916010bd",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb375517-f902-47b5-9934-211647fca013"
        },
        "item": {
          "id": "c265994c-c18d-4fa8-8381-1751f343b1b4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f4ea7689-64b3-4397-b074-2fef52d6975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0caffb2-1b7b-4787-98b8-b36a8bff2e3c",
        "cursor": {
          "ref": "a426e1b2-6cd9-4821-8c7d-eca7fbf0e41c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4a6c99d5-8e6f-4080-97e0-8ebb570da868"
        },
        "item": {
          "id": "e0caffb2-1b7b-4787-98b8-b36a8bff2e3c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "af131332-049c-4d16-8a72-b0faad24bd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2304e43d-7d9d-4010-ba18-436a9ef1ccde",
        "cursor": {
          "ref": "70edb3d2-a84f-4f6e-8c71-3948d0ca66c0",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a9a09264-5660-458e-a72a-24e006fd1084"
        },
        "item": {
          "id": "2304e43d-7d9d-4010-ba18-436a9ef1ccde",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0eee3ca9-fb8e-48e8-8cd7-2f7170e46fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979d77d7-3d05-46f6-aa51-203071ced802",
        "cursor": {
          "ref": "26fd354b-db86-410c-b3d3-bc8aa9261cc3",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "98e7cfa0-52f6-4edf-9aca-1c5714816e2e"
        },
        "item": {
          "id": "979d77d7-3d05-46f6-aa51-203071ced802",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b9367813-61f1-48c9-929f-07bd15241ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e7bcb-9db8-45cf-93da-4506337753fc",
        "cursor": {
          "ref": "9abc3afb-3a69-4ece-8bfe-eecea5c824e6",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "16e1c8f9-c093-415b-8e40-c2ce5b7edcb8"
        },
        "item": {
          "id": "266e7bcb-9db8-45cf-93da-4506337753fc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0197ebef-5d92-49fd-919c-799f53c03d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34154b1-9cb2-4325-b8af-38f1e6d8ec55",
        "cursor": {
          "ref": "6bb019b0-fdf5-4021-ab00-c904efd23e75",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f1c9003f-1ec8-4804-ac88-22c5bbc5e9b9"
        },
        "item": {
          "id": "d34154b1-9cb2-4325-b8af-38f1e6d8ec55",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e67bb9f2-61f9-4917-b069-cafd3fc58278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 972,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d77ead-8c2a-46d3-95be-3fa4677a1584",
        "cursor": {
          "ref": "0f260e56-2a89-47cf-a785-4ceb341f09e3",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f1dd673d-8125-44c8-be63-564493533b32"
        },
        "item": {
          "id": "96d77ead-8c2a-46d3-95be-3fa4677a1584",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "575b4d5a-1c62-45fc-a417-29ee80067f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1274,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d29704-a553-410c-a1d5-e8ac329c45f6",
        "cursor": {
          "ref": "857904d1-78b4-419f-9976-b35b5fa7692e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0f7fdb71-1344-4db9-93ed-5e58ea63d1b1"
        },
        "item": {
          "id": "27d29704-a553-410c-a1d5-e8ac329c45f6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4751e3a5-aa57-4730-9709-8d6934f7ffe1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1240,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df4f36e-458f-4a2e-be94-5771c98af2a8",
        "cursor": {
          "ref": "84e21c52-eb12-4a32-a4fc-8b2c4d8063f8",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "70ab7798-9a20-4d08-8b7a-29b7484af5bc"
        },
        "item": {
          "id": "2df4f36e-458f-4a2e-be94-5771c98af2a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d9f533a8-f41a-4236-8887-5c06c0f74121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a30331-7e44-4ae1-81c7-8ca323ee8fc6",
        "cursor": {
          "ref": "a4a2db3e-548e-4bb7-a280-1c9ee881610f",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7805dafb-1ceb-4ce8-994f-f04f38ec973f"
        },
        "item": {
          "id": "78a30331-7e44-4ae1-81c7-8ca323ee8fc6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ff1477c-faf3-4b64-b573-1ecccbd49177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04abc2c2-7b46-45b0-b93b-66ffbac921c9",
        "cursor": {
          "ref": "74760c8c-e75a-47f8-b6ef-909e7a505153",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0eeb2aca-1b7c-4846-bd64-98e9197c98ee"
        },
        "item": {
          "id": "04abc2c2-7b46-45b0-b93b-66ffbac921c9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d94d90b9-31f7-425e-a2b8-7f3f19db7229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b689c2c-edbb-4ef2-a204-ca86be4b5bb1",
        "cursor": {
          "ref": "fb820a8e-824c-4856-a5b6-2eef827dd02a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b1c456af-5625-45cd-bc6a-0132d5b04ba3"
        },
        "item": {
          "id": "3b689c2c-edbb-4ef2-a204-ca86be4b5bb1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5d0794cf-3740-40a3-a6de-828c5b0d8f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a71d957-e0b4-4d36-b4d1-f1208e5cf441",
        "cursor": {
          "ref": "68b1266a-488d-431e-a016-962ffeb22ff5",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a83b37a0-b5f2-4cb3-8ae2-fdc0186287c8"
        },
        "item": {
          "id": "6a71d957-e0b4-4d36-b4d1-f1208e5cf441",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "498242ad-0efc-443a-b870-7eead0d0bf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53253f4a-64d4-4fce-9bc3-69c6e8e2a3cd",
        "cursor": {
          "ref": "526bd88e-6a51-4239-a086-9db73ee0a547",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "22102214-de56-4c7f-8fb9-1f08b650a197"
        },
        "item": {
          "id": "53253f4a-64d4-4fce-9bc3-69c6e8e2a3cd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "69185124-d001-46da-87fb-d7b39ef2e5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e644df11-3adc-45b7-a698-5799c59d052d",
        "cursor": {
          "ref": "39d1076e-bf2f-45f5-ae72-9e8a4e9f9559",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3bb5fa58-4864-4f15-897f-8cb84716ecc4"
        },
        "item": {
          "id": "e644df11-3adc-45b7-a698-5799c59d052d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "884ce1e8-d85d-459e-8c10-7a2eba91c1a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 778,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6408fab6-626f-4707-8cd3-2620228ca936",
        "cursor": {
          "ref": "db8bed13-2e19-40c9-bf6f-74dee93475b5",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f4e4232-075e-4b6f-b92a-101d6ee8fdef"
        },
        "item": {
          "id": "6408fab6-626f-4707-8cd3-2620228ca936",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "748cbca7-7cfa-4bc3-9e2d-8f8ce19c456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc24f20-0b08-4d0d-ad55-7c80535a2f41",
        "cursor": {
          "ref": "26f5b437-872e-4904-a074-677a10e219d0",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "37fc985d-b772-4636-a783-39508c43758f"
        },
        "item": {
          "id": "4fc24f20-0b08-4d0d-ad55-7c80535a2f41",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "09aed47e-d29f-4003-9ba9-fdd261ee608d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc331d9a-de13-4d74-908c-b85ab5586c58",
        "cursor": {
          "ref": "3fa33eb5-328d-4593-bf92-98cb1257399b",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4cdf3aa7-5dad-4348-8da8-e699eb10a551"
        },
        "item": {
          "id": "dc331d9a-de13-4d74-908c-b85ab5586c58",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8f318311-ae7f-41e0-8ce4-52b3780240e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561eb73e-5245-458b-b600-2ff89717c61b",
        "cursor": {
          "ref": "1b6cd154-d1b8-4182-895c-21218b35acc2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "75d6ed14-e45a-43ea-bb8a-cf4e54659ba3"
        },
        "item": {
          "id": "561eb73e-5245-458b-b600-2ff89717c61b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bce02983-0705-487e-adb5-d4bd61cbca23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6ed60-58f7-4ee3-83b9-1cd72d68bd40",
        "cursor": {
          "ref": "3bcbb028-ae94-438d-9234-21f96a1a4649",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a94311c7-14eb-4d0d-a8b1-97c2c0d88d2a"
        },
        "item": {
          "id": "07c6ed60-58f7-4ee3-83b9-1cd72d68bd40",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a81eaab9-ea1c-4804-b35f-5b03b430ff6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1150,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe114f4c-7352-4161-8205-765de390cbef",
        "cursor": {
          "ref": "2a96eb50-1805-4bdc-a324-a7bd3dcdde61",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "34f369da-e06a-4a10-906e-5ab6b677b8f8"
        },
        "item": {
          "id": "fe114f4c-7352-4161-8205-765de390cbef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "caf6de85-cd41-449a-8e1c-1652a1e84d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1342,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2a1bfc-2b4d-424c-8a66-bef5c5a6f05c",
        "cursor": {
          "ref": "2e8b8595-4707-46ef-8c99-a5c22e386990",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5767f098-e71f-4ae0-b4c4-9f327a59b5f3"
        },
        "item": {
          "id": "3c2a1bfc-2b4d-424c-8a66-bef5c5a6f05c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c997bdc8-0e0b-4e07-a8e5-474273a0e42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1576,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34bde72-9667-45ba-9dfe-073f4ca94d59",
        "cursor": {
          "ref": "c9f4b4ae-08a7-4cfb-b31d-ce59bb92b98f",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "14dae284-8f20-41a7-ad14-4356b80ae207"
        },
        "item": {
          "id": "c34bde72-9667-45ba-9dfe-073f4ca94d59",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4198be02-17ef-45ce-a6a5-1399caa413a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a765d7a-8958-4a90-a8f1-cb99fb5a2ef4",
        "cursor": {
          "ref": "46a470cb-9e7f-4f29-aaa3-4c268ed41ef8",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "179ec25d-cab3-4835-9188-8e96867c00d8"
        },
        "item": {
          "id": "3a765d7a-8958-4a90-a8f1-cb99fb5a2ef4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "070615bf-8567-44af-89b9-43781af8be65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d48f00-7d57-4c1a-8b59-db870ae67ca8",
        "cursor": {
          "ref": "3a4e0c3a-92e5-415e-aaa1-bf166f3bc049",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "45d95e5c-4121-4746-b73b-7608245d6657"
        },
        "item": {
          "id": "01d48f00-7d57-4c1a-8b59-db870ae67ca8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "21a16461-467c-4acd-bf8c-b9d011172d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4b206d-6047-4e0f-85e8-219729e95b83",
        "cursor": {
          "ref": "ac111803-bfaa-403b-a191-928603155421",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e29db9dc-6f7a-4c71-bc7c-2563796aef33"
        },
        "item": {
          "id": "1c4b206d-6047-4e0f-85e8-219729e95b83",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3eb058b9-f793-4855-91fa-0885bff9ad99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14475702-156e-40f7-bff3-ede13d9ecb28",
        "cursor": {
          "ref": "9c16657e-625f-4f27-85bf-785cffe7717b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a5944bd5-191a-4b34-9657-17043e572469"
        },
        "item": {
          "id": "14475702-156e-40f7-bff3-ede13d9ecb28",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4b29c2a9-5deb-4060-8bcd-7e9a4e03ae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd8bf17-1a70-43aa-87a7-a6079100ea25",
        "cursor": {
          "ref": "c235541b-c2b3-4762-b3cb-c0f8949a928c",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d095673-e57b-4f24-8823-8b48a611fc5f"
        },
        "item": {
          "id": "dfd8bf17-1a70-43aa-87a7-a6079100ea25",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e2b83818-962c-455b-bdf0-63c9bb21d2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf4d3a5-3330-4156-aa50-5af9b96584b5",
        "cursor": {
          "ref": "852bca82-3ee4-4239-832f-190251ff5d8b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f9e1db10-5a4a-450f-aba0-10110476e9fe"
        },
        "item": {
          "id": "0cf4d3a5-3330-4156-aa50-5af9b96584b5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a017aa56-3b95-4782-8a7f-8c0382d96c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14ba02d-d3cb-4cfa-a5fc-dd1545c0ffd2",
        "cursor": {
          "ref": "cf039da0-0e54-4619-aedd-d50e1ff8f8cf",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3becc9b9-1433-44dd-abe2-544b5060cbfe"
        },
        "item": {
          "id": "e14ba02d-d3cb-4cfa-a5fc-dd1545c0ffd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "066c7e30-6d0d-413d-9d8f-90976550cb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f9b97b-cdc4-419b-a0f9-d83c3308572a",
        "cursor": {
          "ref": "21f1ab53-cb4f-4c77-920c-7a9ce68fd115",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3050e957-0fc7-4c3d-a88c-5e8c420956ff"
        },
        "item": {
          "id": "a3f9b97b-cdc4-419b-a0f9-d83c3308572a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f33a6ac6-ed3c-47c0-92ef-fbf4239e27d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be67e9b-0931-4345-a744-17fedc855ad0",
        "cursor": {
          "ref": "71709a9c-246d-422c-98c1-b932d5973f3d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "510be257-c471-4be7-8781-fe24b8d78e8d"
        },
        "item": {
          "id": "1be67e9b-0931-4345-a744-17fedc855ad0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d7796f08-d6f6-4c96-9dd9-9571a7c1c847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bc0c5b-8208-40bb-92e3-07c6ce3979d8",
        "cursor": {
          "ref": "70e37508-456a-45df-8779-6426d6de9540",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9f5c1da7-859e-4831-9147-c478eac86efa"
        },
        "item": {
          "id": "15bc0c5b-8208-40bb-92e3-07c6ce3979d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7d628928-bffa-4b6a-a8eb-70e80282cf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3975320f-d4cc-43a7-91fb-b1fe593dc4df",
        "cursor": {
          "ref": "39cacfb2-25f5-4fb5-98ad-1c1580ac2128",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "71ad1c6a-19ce-4bba-8b60-a9d94a500ee4"
        },
        "item": {
          "id": "3975320f-d4cc-43a7-91fb-b1fe593dc4df",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46ad2dc8-6ab9-48fe-b4ad-9d419785fc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bf0b3e-e7ce-48da-927f-41d288baff31",
        "cursor": {
          "ref": "0e7f7a29-8e69-4bb7-8199-333b94984096",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e52b7b90-0693-4ba0-9a04-7157149c6ff4"
        },
        "item": {
          "id": "51bf0b3e-e7ce-48da-927f-41d288baff31",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "47a5f728-c20a-42f5-88bb-c545fce29ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846c3fe7-9166-4aa6-a9f5-4b97e73abdc2",
        "cursor": {
          "ref": "c22db9f6-4cec-454c-9737-99611f7e3081",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "16c50cb9-fb56-4369-884e-f4125d463d57"
        },
        "item": {
          "id": "846c3fe7-9166-4aa6-a9f5-4b97e73abdc2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "299e339f-865e-4f98-a7bf-3f810739b6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b76f93-ad3b-4b6f-b6a9-7f81d3fb1b0b",
        "cursor": {
          "ref": "1c9de75d-8b5c-408b-8957-e2c1333c729d",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a359ca48-7d20-48d9-8745-f0648b0d6d7c"
        },
        "item": {
          "id": "05b76f93-ad3b-4b6f-b6a9-7f81d3fb1b0b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e99b6951-3224-40c2-9fc3-ab61c4e53bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f331634-4a75-49f6-b9b9-45518aca74ec",
        "cursor": {
          "ref": "f7d32c19-38dd-4dc6-a7af-ce6bc7e1f2e1",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "348e9563-65bc-4777-af84-1c97ff3fecaa"
        },
        "item": {
          "id": "5f331634-4a75-49f6-b9b9-45518aca74ec",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a400ff92-bcfc-4766-bcbf-6d16312cfc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78c8c2e-b767-4753-a3be-2c490860c28c",
        "cursor": {
          "ref": "823844fb-eff7-456c-81e3-c542d011b01b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f162c71e-931a-44be-a755-9348e9a3fe5e"
        },
        "item": {
          "id": "f78c8c2e-b767-4753-a3be-2c490860c28c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "99aaab09-8151-4471-a2ad-b29afcfd2439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59ab66b-3981-460e-8d27-1c56454bdcc1",
        "cursor": {
          "ref": "a13376ab-1890-4d66-9891-452d7db23ba5",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f01aa53e-2293-457d-b5e8-e982056b8ecd"
        },
        "item": {
          "id": "a59ab66b-3981-460e-8d27-1c56454bdcc1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "555cbb2c-720b-4253-afec-599b75c904cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b530bd9-1536-4652-979e-29715ccc0609",
        "cursor": {
          "ref": "52e0b329-d8e9-48a5-9b58-27a81c42688a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "87c140f7-6a03-4b4f-9992-d4552e0777c1"
        },
        "item": {
          "id": "8b530bd9-1536-4652-979e-29715ccc0609",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ba4f5af5-9b56-4c17-9b96-429ca69166f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774af742-8b3f-4cdf-827c-95a15b5089de",
        "cursor": {
          "ref": "3262e46c-e4bf-4e67-b82f-183ed165de61",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "05697533-2fa2-418a-b238-45a41cddb7c0"
        },
        "item": {
          "id": "774af742-8b3f-4cdf-827c-95a15b5089de",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c17b08a7-119e-47ea-a9de-a93775ae5564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab7e8b2-134f-4127-b872-5a6a30623223",
        "cursor": {
          "ref": "34f6becf-3b62-4168-9d79-b8f9ad4583c7",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4efc31e8-3e73-492e-9c96-f2ee03eee440"
        },
        "item": {
          "id": "3ab7e8b2-134f-4127-b872-5a6a30623223",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "aef4c055-575a-41f1-a283-5e35ee5e66c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1637a816-5204-4ec9-9859-ea17c6b8a28b",
        "cursor": {
          "ref": "37175298-7bb9-497b-bd7c-1733409022a7",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e2b6fb83-ad9f-427a-af9d-be47480bbecc"
        },
        "item": {
          "id": "1637a816-5204-4ec9-9859-ea17c6b8a28b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "514a827e-3e7b-42d1-b79a-c7bf096f4be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d0526a-88e9-4012-b22b-22abed9b5c2c",
        "cursor": {
          "ref": "a675cd60-f154-41a9-a937-83c5383e9394",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4b0792f8-7df5-437e-a7b5-654003596015"
        },
        "item": {
          "id": "72d0526a-88e9-4012-b22b-22abed9b5c2c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1ef6f23a-f61f-41c5-9068-3dfb97550639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97220860-00ba-43b6-bd26-87e0f39e6b4c",
        "cursor": {
          "ref": "90704afe-80ff-4bfa-ba7f-12e3d960e65e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1cf25137-9ef9-42ce-a77f-502b039d48b4"
        },
        "item": {
          "id": "97220860-00ba-43b6-bd26-87e0f39e6b4c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f3001df5-9584-43c6-9f6a-7eb793ee7991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6227e9fd-2a6a-405b-a3cc-04e91cd47d9a",
        "cursor": {
          "ref": "fd6728e7-473b-4445-9ccf-c9a0e00c54cb",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "63f7f632-a768-49de-9aaf-753a2fe147db"
        },
        "item": {
          "id": "6227e9fd-2a6a-405b-a3cc-04e91cd47d9a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0822bc18-a8c9-49ec-bd3d-64f065945c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c24aa-e89b-4e7d-b511-e7f7de9e7aa8",
        "cursor": {
          "ref": "ea353aba-f8af-4a07-82e1-463efc9be5d8",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "90ce26e2-a853-4c7d-917f-7b379e6e34bf"
        },
        "item": {
          "id": "952c24aa-e89b-4e7d-b511-e7f7de9e7aa8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "59a5fda9-7174-49fb-b22b-085ee7ba8ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d38dcd-ad6f-4cb8-8516-37ba4795b4b9",
        "cursor": {
          "ref": "0c4a17bc-2b53-4f2f-8d01-39d6230c0f89",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd47f1b3-a48d-4ce3-a926-d993f0019843"
        },
        "item": {
          "id": "13d38dcd-ad6f-4cb8-8516-37ba4795b4b9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5fb92b6c-d1b2-46c1-a832-5f6968fb5c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313b2910-8f54-4eca-bd7a-5f225f364988",
        "cursor": {
          "ref": "f4a0ab37-6dd4-44c7-9604-43118740357b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e8079708-e790-4355-a26f-dcc4926c622d"
        },
        "item": {
          "id": "313b2910-8f54-4eca-bd7a-5f225f364988",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "68997bff-b1bd-4b1c-b83a-42ffa25c141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a569f0c2-1f0d-4984-aa05-e6bbedc2888b",
        "cursor": {
          "ref": "2a295a5a-0e7b-4dab-a78c-68e8b39fcbed",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ba2682d6-e61e-4cf7-b201-33a0792dc8fb"
        },
        "item": {
          "id": "a569f0c2-1f0d-4984-aa05-e6bbedc2888b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fa10b5fc-b208-4aea-bec4-bd2f9d68e1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e8f61c-fb5e-4b9d-8545-d2a1851ca57c",
        "cursor": {
          "ref": "de14c39b-36d8-4cb7-be13-c6c7a52cea67",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6d9a837-5830-44c4-8cb1-e6dea0cf7918"
        },
        "item": {
          "id": "02e8f61c-fb5e-4b9d-8545-d2a1851ca57c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "da037b23-7403-4af7-b161-7edee9641d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cdefc4-151f-4a2b-ab8f-2962e2e2e401",
        "cursor": {
          "ref": "3235e322-75e2-4428-b945-51dd987f4b97",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e221ab91-bb60-45ab-aa31-b36abede4485"
        },
        "item": {
          "id": "09cdefc4-151f-4a2b-ab8f-2962e2e2e401",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8bc0d83-c229-42b9-b04d-fc124e9f3f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4786242d-a2e7-4040-9d6f-078a30bd25a3",
        "cursor": {
          "ref": "f2bb01ab-3675-4d4c-88be-0a974f5a8094",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3587f140-6aeb-4ab8-8f53-33bc814bc55a"
        },
        "item": {
          "id": "4786242d-a2e7-4040-9d6f-078a30bd25a3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bc6ebcc2-8d49-488a-bf64-3ec955bb8c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceb707e-0ffd-4eed-8f30-7ab57f0c9a00",
        "cursor": {
          "ref": "e4895863-0c97-4af4-98e2-7402faea9aed",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8b186697-161d-4381-a368-7c4a005b8f88"
        },
        "item": {
          "id": "cceb707e-0ffd-4eed-8f30-7ab57f0c9a00",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a5b9e578-54ce-433b-99dc-c8e0ef15d056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b3c794-8501-4e70-a4bd-4d3cd027f609",
        "cursor": {
          "ref": "51cb12b1-7d1e-4cf3-a1b5-61bff9904f23",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9ecf31f8-6ab1-458a-b394-e767600e68fb"
        },
        "item": {
          "id": "f0b3c794-8501-4e70-a4bd-4d3cd027f609",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1ab6eda4-5adc-421a-97fa-68cbe7809b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9d4064-214a-4805-80dd-2f4ad449c3e7",
        "cursor": {
          "ref": "75686a87-fd4c-4cc0-bafd-eb659db0b2e8",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0da20d17-3a62-41d4-89ac-61c8ec6f87d5"
        },
        "item": {
          "id": "6e9d4064-214a-4805-80dd-2f4ad449c3e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0e53e75a-1dd0-43d0-9496-001ad7e34c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87534f5-f9fe-4a6d-b9f7-b31d3dda0798",
        "cursor": {
          "ref": "8cfb0bb4-8e05-40fe-92bb-6834ce35ac1e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2ae797c7-ec58-45a4-b866-e161325be2b6"
        },
        "item": {
          "id": "a87534f5-f9fe-4a6d-b9f7-b31d3dda0798",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "be361892-1626-43c7-917d-0a9abb95b306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3238798b-17c7-4e07-b8f8-2e077f927b86",
        "cursor": {
          "ref": "ceb1738a-2a6b-4ae4-9770-fe10da7fc41c",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "29d30d76-7c02-4dd8-b10c-113325f63dd2"
        },
        "item": {
          "id": "3238798b-17c7-4e07-b8f8-2e077f927b86",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e234f781-0a8b-4066-9f58-a3c0d97b179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab40048-c21c-4e92-935c-8f58d4f1c19f",
        "cursor": {
          "ref": "cadfae86-cc10-4dc6-89a3-4c1ec4fd3a12",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b0b50ba1-e89f-4e04-9601-2cc1e246ca71"
        },
        "item": {
          "id": "4ab40048-c21c-4e92-935c-8f58d4f1c19f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1e1c54a6-be10-412a-8466-6ccdfa1215ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1380,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d206c5-316f-4c08-b64e-e34c40f4e4d3",
        "cursor": {
          "ref": "b274e9d5-57c8-4b87-bf47-037f8c7f50ef",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cde013d5-9aa6-4255-b00b-d3cbd57ed5f4"
        },
        "item": {
          "id": "35d206c5-316f-4c08-b64e-e34c40f4e4d3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4a20f9f9-72cf-41d4-af69-33a6eb2a52af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1072,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53692de-e902-4259-838e-c68e6357e0ba",
        "cursor": {
          "ref": "6bd0a480-27a6-4fe7-94e2-105e3b854670",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0c85b36a-3312-4361-b619-db35e58195a7"
        },
        "item": {
          "id": "f53692de-e902-4259-838e-c68e6357e0ba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a76fd01c-ca03-4023-a9ce-14fb2792a54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1202,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f487f033-4ac1-401e-b84a-ebdca7dbb778",
        "cursor": {
          "ref": "2ff4d45e-6ef5-470d-af30-38b9f2400a6d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "66f5de50-f587-4276-a7d2-e2f181bcde80"
        },
        "item": {
          "id": "f487f033-4ac1-401e-b84a-ebdca7dbb778",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4037034f-e0af-407d-8bc7-a497be0e520b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd84fbf-b4be-47b5-8748-def47ac527cd",
        "cursor": {
          "ref": "7e8ae47f-b66c-4536-a06b-0b05edc3ba4d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cfec2a41-e1d1-4d56-aa47-5931c07c8f33"
        },
        "item": {
          "id": "9dd84fbf-b4be-47b5-8748-def47ac527cd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2980e046-abad-457b-8a22-9bc5f55d3312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1066,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2023fd1b-5ecf-4e39-943d-4784f2abd6f0",
        "cursor": {
          "ref": "1015db13-d88a-4cc3-b298-4818dfd18cb9",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "55137aad-80c0-4836-a73d-7f1efd5c8c17"
        },
        "item": {
          "id": "2023fd1b-5ecf-4e39-943d-4784f2abd6f0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e82e6443-1af0-4ba1-a74e-f761142f7e6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13250b3-deda-473d-a866-7867c034434b",
        "cursor": {
          "ref": "2d5192c1-0389-405e-826f-35b50a5c7c15",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a755fbf9-abd6-47f8-8e84-0ec2dc392069"
        },
        "item": {
          "id": "d13250b3-deda-473d-a866-7867c034434b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a5b4ba23-a6a6-4c37-af9a-d943232a3599",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1194,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7794c872-45ae-425f-b22e-07e0a6830c4c",
        "cursor": {
          "ref": "87ba479b-c79a-4920-8398-db1156fead75",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f7ef5f3b-0ebf-4cb8-93f8-2e0005529396"
        },
        "item": {
          "id": "7794c872-45ae-425f-b22e-07e0a6830c4c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "305c7cd2-10af-41fa-b3d6-6876ebd98f4c",
          "status": "Created",
          "code": 201,
          "responseTime": 9665,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80d51ba-3341-4f15-b852-15451d304787",
        "cursor": {
          "ref": "419d731c-f917-492a-b539-de93609ea06d",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a74297c8-d00b-4bfa-b456-fdf0462cbd94"
        },
        "item": {
          "id": "f80d51ba-3341-4f15-b852-15451d304787",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f4af8f1d-a056-40ed-b702-5f64e010ef6d",
          "status": "Created",
          "code": 201,
          "responseTime": 6986,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d4ce87-fb2e-46ba-805a-0a95552f78c2",
        "cursor": {
          "ref": "c4f525c6-64d5-4f7d-921b-8d9e7be69e0e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "53828a28-5634-4aaa-888b-524f9f2a7c6d"
        },
        "item": {
          "id": "39d4ce87-fb2e-46ba-805a-0a95552f78c2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bef356d2-606d-47e4-b6ba-8e35ef1f7b5d",
          "status": "Created",
          "code": 201,
          "responseTime": 8229,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "792c9192-f56a-436a-8ae8-4228d4bc48f3",
        "cursor": {
          "ref": "dc5d08fb-a4e8-4cb7-b773-7e652d3c62e9",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c56ef940-d981-4ac2-81e3-3cd42ce2337d"
        },
        "item": {
          "id": "792c9192-f56a-436a-8ae8-4228d4bc48f3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d59d0763-8134-4035-ac0e-fac58ccae415",
          "status": "Created",
          "code": 201,
          "responseTime": 6251,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f57381f-cfa1-45b9-8e07-a944a030356c",
        "cursor": {
          "ref": "a5678705-87d2-4ce5-8105-075cfce5814f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7c3c7a49-006b-4105-bfb6-3f1ccdf3b1f4"
        },
        "item": {
          "id": "9f57381f-cfa1-45b9-8e07-a944a030356c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d5bae8df-f3f0-4308-85b4-c3e0483e35fb",
          "status": "Created",
          "code": 201,
          "responseTime": 7966,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f5984-9c7a-4f5c-98ec-9f4e54fb447c",
        "cursor": {
          "ref": "2be359d2-f069-4757-8591-bbbdd6ff6f58",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "62d2dc81-bcfc-41ee-b87d-08b403d9ccd5"
        },
        "item": {
          "id": "978f5984-9c7a-4f5c-98ec-9f4e54fb447c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cbd65015-9759-43dc-81fe-e42e7ff89dd8",
          "status": "Created",
          "code": 201,
          "responseTime": 8022,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a91b09-2d4c-4c43-893d-a50b742094b0",
        "cursor": {
          "ref": "617c8e54-0d21-425e-9411-683c392975c5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "984ad9c0-ccc8-49dc-adff-4946f93011bd"
        },
        "item": {
          "id": "c8a91b09-2d4c-4c43-893d-a50b742094b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a575972-18ec-46f1-a1f9-db54937f4799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a91b09-2d4c-4c43-893d-a50b742094b0",
        "cursor": {
          "ref": "617c8e54-0d21-425e-9411-683c392975c5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "984ad9c0-ccc8-49dc-adff-4946f93011bd"
        },
        "item": {
          "id": "c8a91b09-2d4c-4c43-893d-a50b742094b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a575972-18ec-46f1-a1f9-db54937f4799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75371aed-b7f5-4bf3-b2ab-03feab1d8dbd",
        "cursor": {
          "ref": "a35e83f8-cb08-4794-b244-d6ae88c50d65",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f210305a-c896-4a16-8814-b97aa28444db"
        },
        "item": {
          "id": "75371aed-b7f5-4bf3-b2ab-03feab1d8dbd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "29403ca9-b36a-4ca4-870f-1c8cd89c4a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e31dec-8db9-411b-8707-5e7d1bdb6ab1",
        "cursor": {
          "ref": "4c7c1ec4-0ba3-4b13-8867-b2225372f7a8",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1d27b5ac-c163-489b-8b69-066a92ac97e4"
        },
        "item": {
          "id": "d8e31dec-8db9-411b-8707-5e7d1bdb6ab1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "76fa0a19-8f1f-4679-aba8-5652f482d121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ffc374-d6c2-4894-9a08-af4a77cba2e6",
        "cursor": {
          "ref": "88787c42-377d-4b4a-80af-fd901abecbe1",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d0afadf-5bc0-4abb-b509-3198b7985547"
        },
        "item": {
          "id": "e2ffc374-d6c2-4894-9a08-af4a77cba2e6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9d7afe15-67c4-4d10-8694-82c1824f234e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae3c4df-3d4f-4a63-a0b1-ab47b730ee8b",
        "cursor": {
          "ref": "170bf56a-00df-4bcc-88c6-ae0aac6d973f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bec90ef6-06c9-4d22-80a4-b0f375c0a7cb"
        },
        "item": {
          "id": "4ae3c4df-3d4f-4a63-a0b1-ab47b730ee8b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d45ef482-2474-407c-9092-463aa5eab5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93133723-6ee2-49a7-aaa6-bba1803efbbd",
        "cursor": {
          "ref": "125f9930-7df2-4d3e-b3e6-f7054e03f89d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "78c13a2f-e2a7-4f77-bf30-ddfbc695e603"
        },
        "item": {
          "id": "93133723-6ee2-49a7-aaa6-bba1803efbbd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7745466-1595-45b2-abb7-59f07f6cfa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d48cc4-eb77-4bea-863c-2236fb8bf2af",
        "cursor": {
          "ref": "d445d6f4-b909-4684-a81f-5b64348f5651",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fbccaade-bb5d-4ea9-9257-23ec0b50de4e"
        },
        "item": {
          "id": "39d48cc4-eb77-4bea-863c-2236fb8bf2af",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2bb0c3c1-7875-4d78-b52e-65704726d94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546659e8-12bf-4da2-b470-19e5e3a9400a",
        "cursor": {
          "ref": "84cbce34-e896-4697-8842-940ca7d38ae6",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a08a766d-e714-4a7b-8cb3-99cad42b760c"
        },
        "item": {
          "id": "546659e8-12bf-4da2-b470-19e5e3a9400a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0aaccd11-3feb-4392-9752-547a954b4cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14266ba7-f97f-400b-9356-97c7c4c2187e",
        "cursor": {
          "ref": "ba7722a4-89b6-4a16-b4f0-68f9c9d90db4",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "48424468-8a6d-4820-b5c3-28fd5ad14236"
        },
        "item": {
          "id": "14266ba7-f97f-400b-9356-97c7c4c2187e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a44d081-b1af-4200-8fd8-f66928f15373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e17ec4-df0b-4704-9583-ce27eed48d93",
        "cursor": {
          "ref": "172fd39a-42c2-47db-8796-bfd273b2b42d",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6eb11933-5175-4593-b432-e2b75e740042"
        },
        "item": {
          "id": "86e17ec4-df0b-4704-9583-ce27eed48d93",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "df1c18e6-6d94-4d1f-bb29-501d3297da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb57bf-5528-4e68-8b3a-2f437b607292",
        "cursor": {
          "ref": "6f9b457b-2032-4387-b06d-a8ac19ce735a",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f2eadf89-69c4-43b3-b8d5-ba0561ce9e85"
        },
        "item": {
          "id": "a2fb57bf-5528-4e68-8b3a-2f437b607292",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acfb24d7-dc01-47cb-9465-b98bc15b2351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1326c225-89d2-404a-9041-84312d7f8caa",
        "cursor": {
          "ref": "2395169b-7beb-4e99-98af-d616139cb733",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "130c840c-3f8b-409c-8e6a-656a52b6c39b"
        },
        "item": {
          "id": "1326c225-89d2-404a-9041-84312d7f8caa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee0eeefe-2835-43c2-84c0-9d269f8ab553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8029151d-d449-4e07-8004-f2644d53deff",
        "cursor": {
          "ref": "d5de4dac-2c67-4f1a-8e7a-aa3083c2cd1b",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6d8a031c-74e8-4c4d-b77f-cbda5ef95f69"
        },
        "item": {
          "id": "8029151d-d449-4e07-8004-f2644d53deff",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "831ac1c5-76e6-4452-b64e-47e05350d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1563497-ed07-410b-b597-7ec1e1eb0a18",
        "cursor": {
          "ref": "61a15677-50d7-4861-ad04-9dd93c114308",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "499e5c4d-1595-4db0-8166-b72bfe3217e3"
        },
        "item": {
          "id": "d1563497-ed07-410b-b597-7ec1e1eb0a18",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "861d2bf6-6932-422e-8968-6aa4c35d5879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1165,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1be0fb2-d489-45c2-a65c-7e30bf654d5a",
        "cursor": {
          "ref": "65be055b-49da-4a56-af2a-c3b4d7e19d34",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a4aad3f7-c3bf-4384-8ea0-7acac1f88280"
        },
        "item": {
          "id": "a1be0fb2-d489-45c2-a65c-7e30bf654d5a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "13268e9f-8229-474a-9d6c-27c03a7bc563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1140,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ac329-e076-46ff-86e2-984e43485de9",
        "cursor": {
          "ref": "8e20659b-a395-4209-9029-ff155692e2e8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5e82e840-def4-49a2-ae00-7cd84ddfa065"
        },
        "item": {
          "id": "183ac329-e076-46ff-86e2-984e43485de9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0c75ac6-c696-452a-9df5-e9a35f247d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e2eed-9baf-429e-b069-baff4895b7eb",
        "cursor": {
          "ref": "48cc937f-0ae5-4cc2-9c0d-727fa6b50f20",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "83b8686b-4f4d-4e21-80d3-b8084e690692"
        },
        "item": {
          "id": "051e2eed-9baf-429e-b069-baff4895b7eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d774e78c-3460-4a79-a7e0-7e89d91ec873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee45e87-42b3-4703-9b92-b6e5739d5f83",
        "cursor": {
          "ref": "20aa0acc-040b-45ce-805c-812dc9e2b243",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5194eea-b6d6-43d0-b984-e1e609b574ea"
        },
        "item": {
          "id": "dee45e87-42b3-4703-9b92-b6e5739d5f83",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "97f1a43b-3741-4dc6-8a8c-f42013a50459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e327369b-3faa-4899-97ae-870e9a7158ec",
        "cursor": {
          "ref": "82fde164-5698-4710-85eb-40d157c3b9e1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5f03225-1c4a-4ff6-a147-6b33a6adfeee"
        },
        "item": {
          "id": "e327369b-3faa-4899-97ae-870e9a7158ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "78bc2631-4a9a-438f-bf2c-021a3f894aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb86328a-aacf-4836-bddf-3b5fc192848b",
        "cursor": {
          "ref": "d7f07e43-9e07-4c74-87aa-ad87c0ca758c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cce37da1-a781-4e48-b5a4-7d4924ca29f9"
        },
        "item": {
          "id": "eb86328a-aacf-4836-bddf-3b5fc192848b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "786831c9-5430-4735-9e8e-bc72ba490278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae224ee1-4afc-42b6-a438-89c784f3b205",
        "cursor": {
          "ref": "ec58cc2f-ded5-4283-a7b2-748e299fdecd",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a5157379-974a-420f-9b61-f990f7aa1c8c"
        },
        "item": {
          "id": "ae224ee1-4afc-42b6-a438-89c784f3b205",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e9c28c7b-c9a8-45c6-aefd-0e81ac5eb9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ca50ac-b794-42c4-a298-27ce7c95b718",
        "cursor": {
          "ref": "dc810842-daa7-4f99-9e0e-cb5dd2954312",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "534d9334-928f-4e2f-9ef0-33768ef6702b"
        },
        "item": {
          "id": "e0ca50ac-b794-42c4-a298-27ce7c95b718",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8f7120a8-48f5-480f-a307-405abcf52e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3ebafc-7078-40d4-855c-5227d5293bf0",
        "cursor": {
          "ref": "5a92be41-08ba-4be3-a1c2-966ec3e36bea",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1a87a399-88c1-475c-b9e0-914e4169efb3"
        },
        "item": {
          "id": "ef3ebafc-7078-40d4-855c-5227d5293bf0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "757b1083-6425-43a7-a82e-ea6b1b76af96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeb7f54-5c97-45b9-ab48-db0359fc5642",
        "cursor": {
          "ref": "d55deace-148f-4ad3-a13e-0a40dda3bd1e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "18b28652-7321-4a75-858d-d84e6e710156"
        },
        "item": {
          "id": "ebeb7f54-5c97-45b9-ab48-db0359fc5642",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e8d79e16-5d33-4e56-8673-61951fbf533e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621ee75-b661-498b-a8b8-0e0ad045a8be",
        "cursor": {
          "ref": "def615a6-e11b-4bd8-b511-4c9083817972",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4fb13da7-9c6b-400d-9764-7d5afe457ece"
        },
        "item": {
          "id": "f621ee75-b661-498b-a8b8-0e0ad045a8be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b9cf07da-ea93-4707-ab16-753475436586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96b027f-b54a-403d-913c-9fc7b4e247c0",
        "cursor": {
          "ref": "297b95fe-b187-4422-bd98-7e4218187b2b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c98050f7-0890-40cf-b6eb-3b44b94f4206"
        },
        "item": {
          "id": "b96b027f-b54a-403d-913c-9fc7b4e247c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f0da5eec-72fc-4854-8a6c-31c2265d9b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f8f832-5206-43bc-b689-39b6dbb7abb5",
        "cursor": {
          "ref": "df11b131-fff3-43ad-8e5a-04388735baad",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "12550756-5c72-462e-b983-09617e57b388"
        },
        "item": {
          "id": "07f8f832-5206-43bc-b689-39b6dbb7abb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3049fdee-0a40-4451-85cf-6d45fed01885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44f5f1a-5c81-42f7-99a6-cfbaaca6f844",
        "cursor": {
          "ref": "a39ef5c2-584f-4b7c-9954-733292713ae1",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "127d7142-1590-4f93-ad80-50e74bf0d4d6"
        },
        "item": {
          "id": "a44f5f1a-5c81-42f7-99a6-cfbaaca6f844",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0880ffa1-4305-4f92-b3e9-71c4c22e3daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dce919-c900-4f67-8323-420696349d8a",
        "cursor": {
          "ref": "7bdc9bea-c03e-48d3-90a2-86fbbecf568c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c73afc59-e290-41bf-9d23-ef624cde8eb8"
        },
        "item": {
          "id": "08dce919-c900-4f67-8323-420696349d8a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee083f3a-cc5f-41ce-b889-14540b99c052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4387d7c0-7d9f-4e2f-85ef-5fe3f04d8017",
        "cursor": {
          "ref": "6e5e62b5-68ef-4ef9-9f15-edda73d8b22f",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "160312de-d3fb-49d5-9d0e-343d4ac29ae1"
        },
        "item": {
          "id": "4387d7c0-7d9f-4e2f-85ef-5fe3f04d8017",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b806e57e-de90-462c-8783-140da91123ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93560c12-aa31-4155-938e-b66d47ab8098",
        "cursor": {
          "ref": "e30c1487-5317-477b-a644-e2908c7ed23f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "200cc555-d47b-4379-a117-204836abf1e9"
        },
        "item": {
          "id": "93560c12-aa31-4155-938e-b66d47ab8098",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d578fe99-d5df-4616-9e95-334737f9d981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032651a-f9ba-417b-8e77-1a7b9862a32a",
        "cursor": {
          "ref": "59a9a5fe-bf15-4002-8a7e-1b9e2f044e0b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d684c77f-18bd-4182-b122-39831adc17e3"
        },
        "item": {
          "id": "4032651a-f9ba-417b-8e77-1a7b9862a32a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1163b2bb-7e13-4fd1-bc4b-ee49465423b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b1fa6-2751-4df3-aafe-628b305bc609",
        "cursor": {
          "ref": "bc7d8dde-b573-4773-ae46-16726bef884e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "545b3a16-0330-49fc-826d-eef35ddce8c3"
        },
        "item": {
          "id": "236b1fa6-2751-4df3-aafe-628b305bc609",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cf5645fd-8166-4ff2-97e9-4260be7b1f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7684b1bf-2c21-4abf-84a4-9b93c25d4ec2",
        "cursor": {
          "ref": "e7d17c58-d7ff-4db3-aba2-0148b459c3f4",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cc0509b8-8f64-4f05-b1b4-03aa67c974ba"
        },
        "item": {
          "id": "7684b1bf-2c21-4abf-84a4-9b93c25d4ec2",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1dc6cac5-e87d-47d8-9135-ad0020b382a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 750,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc857e82-4d5c-4cb1-85e5-dda4c0f042cc",
        "cursor": {
          "ref": "f969470e-5a2b-4d0f-9f63-37b515d05886",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6d2e489d-a390-457b-908b-0bb6ceb8c4b8"
        },
        "item": {
          "id": "bc857e82-4d5c-4cb1-85e5-dda4c0f042cc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "89e8bb2f-5751-4ecb-8fd7-67d6e9bc19ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc857e82-4d5c-4cb1-85e5-dda4c0f042cc",
        "cursor": {
          "ref": "f969470e-5a2b-4d0f-9f63-37b515d05886",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6d2e489d-a390-457b-908b-0bb6ceb8c4b8"
        },
        "item": {
          "id": "bc857e82-4d5c-4cb1-85e5-dda4c0f042cc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "89e8bb2f-5751-4ecb-8fd7-67d6e9bc19ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d1000-dd37-464f-90f9-83f770a046ea",
        "cursor": {
          "ref": "166d9fb5-d09c-47a1-a9a1-8f05fb8d76e3",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5b38c31f-6026-462b-be80-aa0d66db6a5d"
        },
        "item": {
          "id": "eb2d1000-dd37-464f-90f9-83f770a046ea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b498e290-9f36-4b52-84ff-4bed258ee8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e277f462-6a5b-48d1-954e-719ce98c345a",
        "cursor": {
          "ref": "765f774d-2c4e-4eb6-9145-9589d624651c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9909c7ee-1069-40f1-ae60-b6d34b7e919c"
        },
        "item": {
          "id": "e277f462-6a5b-48d1-954e-719ce98c345a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "33dbf28f-1eb3-4685-8a0a-99fffe8d0b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f0f42b-5022-4f35-80c5-a820d5f530ab",
        "cursor": {
          "ref": "00ff24e2-1201-485e-9fe2-2d04e5847984",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "23946385-f13c-4e42-a0fa-44ab92049d9c"
        },
        "item": {
          "id": "07f0f42b-5022-4f35-80c5-a820d5f530ab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a30fd12-9c18-49ec-8839-302085ac337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40d5d56-9ad0-46a6-9b6b-1333a703714b",
        "cursor": {
          "ref": "a3eca647-b885-42db-9a18-dfdb4b4c1f65",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2cb5a41c-5b07-4dbe-b8ae-2014c9fde104"
        },
        "item": {
          "id": "e40d5d56-9ad0-46a6-9b6b-1333a703714b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cbd615b4-6f02-4698-a294-9f53f1683bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b0ee34-633d-493e-a88f-c755dc60c3d3",
        "cursor": {
          "ref": "6654fc08-d755-4f55-9cfa-67d29b7b9df1",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4811932b-a9e5-4154-b5b8-bab2d3f7dd2c"
        },
        "item": {
          "id": "23b0ee34-633d-493e-a88f-c755dc60c3d3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b992385d-abf7-417d-aaf7-b9d7def6bf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9378a22-5a41-43fc-bb9e-a7e64cb6d4fe",
        "cursor": {
          "ref": "aeb1bc0d-0ffb-4948-80dc-91b336c4555d",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aec6b8b8-ab10-4986-8067-a16c163b77df"
        },
        "item": {
          "id": "b9378a22-5a41-43fc-bb9e-a7e64cb6d4fe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bb7dccb9-454a-4705-bea1-eb3adbd891e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f60d49f-d877-4ea3-97ef-969086eeb52f",
        "cursor": {
          "ref": "b6a244b7-6fe8-4197-b49b-2bfa28212bad",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "184659e8-ea77-43e9-9e2c-98a41f8b21cb"
        },
        "item": {
          "id": "2f60d49f-d877-4ea3-97ef-969086eeb52f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0effe840-b55b-41cb-93a3-cfc76a6cdf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c4f154-1d16-4c74-89cb-e43aa09c8b27",
        "cursor": {
          "ref": "50d72023-c3ee-45e9-8db4-ec3ada925bfa",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "869556e1-0b1b-4148-8fe0-0717c347bc6b"
        },
        "item": {
          "id": "52c4f154-1d16-4c74-89cb-e43aa09c8b27",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8e84fa73-d34e-45ae-940f-f4707482b8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcdbc3e-bea2-45a8-ba7a-9ccfe4cce253",
        "cursor": {
          "ref": "ef8ca9c3-9822-4087-bfde-fc6bdfdb3263",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e8786def-89a1-4f2b-90ee-cd2518ff9bff"
        },
        "item": {
          "id": "fbcdbc3e-bea2-45a8-ba7a-9ccfe4cce253",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0553c8a-a4ed-45a8-9442-9633afade5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683692b8-f7e0-4386-8fb8-33d7db20cc51",
        "cursor": {
          "ref": "009a8ef6-f534-43d3-a8ec-440a8cf0b4e9",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6d15c0eb-82d1-4a14-b928-0a3ee4991749"
        },
        "item": {
          "id": "683692b8-f7e0-4386-8fb8-33d7db20cc51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "43c52304-00c8-4272-9adf-bf24c420cc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce96870-b594-4df1-9981-496cf0e97157",
        "cursor": {
          "ref": "b17d4adb-7071-42d7-9456-148f9dc4d552",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b9be2fb9-4233-4835-a337-f9be0596f4ea"
        },
        "item": {
          "id": "6ce96870-b594-4df1-9981-496cf0e97157",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2f60ba8f-a72f-4068-9346-19bbe694e8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cff353a-cfe3-476b-ac8a-95d3e77fa123",
        "cursor": {
          "ref": "cece8f22-33a0-4883-b1ee-4ecc4139d58c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "06e2c772-0617-4787-96f4-9a143f014410"
        },
        "item": {
          "id": "7cff353a-cfe3-476b-ac8a-95d3e77fa123",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "27de0490-371a-40f9-b8bd-5aecc4c5a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b7039f-5820-409c-8f01-3a9b679e5972",
        "cursor": {
          "ref": "510d8323-33c2-4857-b5a1-c448aa56e5d8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5b8a2e3b-c0f4-4399-996a-ad6444f38559"
        },
        "item": {
          "id": "f8b7039f-5820-409c-8f01-3a9b679e5972",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "188fc750-ec4a-4f03-9551-87fcb265c881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b567d79-89d0-40ed-85ec-9c896d6f5624",
        "cursor": {
          "ref": "bc3acafe-43a3-4420-b06f-45a41dc00761",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f68408e5-2575-4ce3-ad6d-07fc983ef4d6"
        },
        "item": {
          "id": "0b567d79-89d0-40ed-85ec-9c896d6f5624",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ddaecc93-2282-4fce-a9c9-26cf05f0be07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c09cee-3cd7-41c9-82ae-001bd5121ce5",
        "cursor": {
          "ref": "7bd61b6c-a559-4e50-b01c-702844467189",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "07f5aa50-2c61-4915-bb57-e1003865d5e7"
        },
        "item": {
          "id": "72c09cee-3cd7-41c9-82ae-001bd5121ce5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "220e24ac-641c-474c-867c-5085875dfa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98038ae-cb52-47a3-a9b2-5ba493851959",
        "cursor": {
          "ref": "85feee69-0b19-45e3-9602-8d927489924d",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cdef354a-7af1-458a-b0fc-60984b99f85f"
        },
        "item": {
          "id": "b98038ae-cb52-47a3-a9b2-5ba493851959",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8358a522-3915-49ef-b336-d3237ded11d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61980dd-9505-48d7-a031-ed5b07d10f1e",
        "cursor": {
          "ref": "3e983c7e-2404-4b66-8617-d0b1bfc65e98",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c9325412-dd9d-4f2d-a3f4-7f562cd5bcbe"
        },
        "item": {
          "id": "c61980dd-9505-48d7-a031-ed5b07d10f1e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "48def6ab-21c1-46b3-8b5c-f460afb55549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a94120-3f9a-4e1c-b004-bea6ecac6dcf",
        "cursor": {
          "ref": "9f861683-8259-448d-9a0b-c46c6c9b0bc0",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4fd97a3e-a03d-486f-a9f1-8c9ae3ecdb8d"
        },
        "item": {
          "id": "33a94120-3f9a-4e1c-b004-bea6ecac6dcf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c453fe64-c184-44a2-85c1-692e164cce85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447a2d26-e64c-4f4c-ab66-00803ae912e7",
        "cursor": {
          "ref": "040a44aa-e9aa-434a-9a04-3c5e625f8888",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1863952e-855d-473d-9ff8-14a262a88109"
        },
        "item": {
          "id": "447a2d26-e64c-4f4c-ab66-00803ae912e7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5408a820-d738-4218-87ef-3c3636ccaa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd815c-ba3c-45c3-ae8f-87ae48b12b35",
        "cursor": {
          "ref": "308659e5-1837-42c0-92b1-ab9971853e3c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d35d5c30-99a3-49d3-8bde-07f93eb3efa0"
        },
        "item": {
          "id": "98dd815c-ba3c-45c3-ae8f-87ae48b12b35",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "12c69bee-2886-4e23-afd7-1944806b0f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc2b514-fcc1-45cd-9e01-6108717ad772",
        "cursor": {
          "ref": "8fce5db5-129c-435d-a2b0-f46cc1e8faf2",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6934ed86-e597-4075-a22c-7db205f8967d"
        },
        "item": {
          "id": "7fc2b514-fcc1-45cd-9e01-6108717ad772",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca2f720d-8aea-4bde-a389-dee352e4dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fed122-3bd7-485e-aec5-12266832cbf0",
        "cursor": {
          "ref": "2208af83-2149-473c-9b69-26850706f59c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c39e1dd-3488-400f-9a07-d557e34c5f15"
        },
        "item": {
          "id": "e7fed122-3bd7-485e-aec5-12266832cbf0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c8f81efc-d081-451a-8f61-5325e9ecdaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e535a79f-bcac-435d-876a-b5f9dea43c76",
        "cursor": {
          "ref": "fcaf0421-5fea-4bc7-9f6c-52f284d228df",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b919285c-c091-4f07-bf45-ad421a5b2308"
        },
        "item": {
          "id": "e535a79f-bcac-435d-876a-b5f9dea43c76",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9be6621b-5ec1-4c16-bd5c-7f7cfb5747b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361ba2a7-3e3f-4621-b235-bca5f3944573",
        "cursor": {
          "ref": "21fb4677-7903-41f5-ab39-1acb91b1f69a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f5edfc7c-be50-4d51-bab6-29ee45d00e5a"
        },
        "item": {
          "id": "361ba2a7-3e3f-4621-b235-bca5f3944573",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c04c739-adc1-4ec7-b55d-940f08f671c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e208a7-e3ae-4e31-987b-7d0b75403a1d",
        "cursor": {
          "ref": "c10c635f-35fb-44fa-922f-a81d8e7886b1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d53dac0c-98a6-4f5e-97a8-9ae17143dbb4"
        },
        "item": {
          "id": "84e208a7-e3ae-4e31-987b-7d0b75403a1d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e7d99fb6-170c-4cc9-89f8-a8dab8a36d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b718b6-1148-44d2-bca3-853b9a778f84",
        "cursor": {
          "ref": "9a892f58-b33c-40b6-b9ea-46fa6b64c1f6",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3167da49-2b3b-45e2-8f50-3577c4c72053"
        },
        "item": {
          "id": "a7b718b6-1148-44d2-bca3-853b9a778f84",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9021627a-8678-46c1-ad98-b279ce963b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1141,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719c50ca-574f-460f-94d8-3483fc2dfa9d",
        "cursor": {
          "ref": "fbb62792-b116-4c1e-8563-1795f9810902",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0293b738-0250-47c8-9006-c9f6409a2b8c"
        },
        "item": {
          "id": "719c50ca-574f-460f-94d8-3483fc2dfa9d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e481378a-17ca-4fe8-aca6-868d6e885a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6e1dc2-0cdd-4b1c-96ec-a39d764e1bb3",
        "cursor": {
          "ref": "debecfa1-8619-4d9d-b57c-f8bd63142799",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "752a10bb-aa18-4428-8b39-f2a2920b163b"
        },
        "item": {
          "id": "6c6e1dc2-0cdd-4b1c-96ec-a39d764e1bb3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e30751f6-75c9-44c2-8a88-273c693b32dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e376e3c9-28ae-4ecd-9c8e-97c026eabbac",
        "cursor": {
          "ref": "5e7b2e38-0a2d-440b-95c5-7b7e5d57b2cd",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a681f8d9-d59b-43df-9a71-e1e14435e0cf"
        },
        "item": {
          "id": "e376e3c9-28ae-4ecd-9c8e-97c026eabbac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c0ab372-6a1b-4ec3-a222-94e296f55c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c39daf6-1d70-45f6-9897-dbb18cbe514c",
        "cursor": {
          "ref": "aae7147c-756b-4c9f-a3ea-784e6fdb6e97",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ee2f5ab3-6b32-4dbb-afae-2eb026affba2"
        },
        "item": {
          "id": "3c39daf6-1d70-45f6-9897-dbb18cbe514c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b7cdf784-1cac-471c-a650-6eeac0d0c81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e08173-ca52-426a-a968-0d8659ca5bb5",
        "cursor": {
          "ref": "65d9ce14-d0fb-41ac-a698-98a8c11315c9",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "186a79c4-578d-4c0a-a4be-ccbd77a4a3fd"
        },
        "item": {
          "id": "e9e08173-ca52-426a-a968-0d8659ca5bb5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e2445bc9-d59c-4d10-ab80-86afd9fc35b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd891fb8-a9cb-425d-a5de-ae22a7d03f0b",
        "cursor": {
          "ref": "052c5de2-0ff9-4103-b623-4f06dbff07c3",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "506e61b7-07a1-47eb-b885-b92c98a03cf3"
        },
        "item": {
          "id": "cd891fb8-a9cb-425d-a5de-ae22a7d03f0b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "38c7755e-6953-44bf-b4bb-6db4c6ba6732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8628f3d-3982-43bd-ab75-3ce67d7ed01b",
        "cursor": {
          "ref": "bfb45345-2be6-4aad-9985-abfd710c3760",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c85488e9-0102-4803-80d3-ddf401b9e7fc"
        },
        "item": {
          "id": "f8628f3d-3982-43bd-ab75-3ce67d7ed01b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ddb491a1-7078-4ce6-82e0-c6a4364b9379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95690d2-cbc5-4bba-8774-286598b9c484",
        "cursor": {
          "ref": "ab1a5aed-40a9-463b-a0e7-b45db3120eb2",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "844316db-0039-4f4d-8a29-ec356f236c9e"
        },
        "item": {
          "id": "d95690d2-cbc5-4bba-8774-286598b9c484",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fdb0b067-94ed-4de1-98fc-cefeecb283e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d8c80-4217-4d4a-b611-f640ef771cc5",
        "cursor": {
          "ref": "dac790ac-daf5-43b7-9f08-39939085fffa",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e39da063-f568-4f4e-a64a-501086d650f0"
        },
        "item": {
          "id": "879d8c80-4217-4d4a-b611-f640ef771cc5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9275604f-9f4b-43c5-a93a-7623fdb0c0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82268c-280c-48f3-b2b1-867d99ba2c18",
        "cursor": {
          "ref": "687b441d-b256-4667-80c0-e82a17f04225",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4c1cf8aa-c876-4171-91c5-6fa7f13a3041"
        },
        "item": {
          "id": "dc82268c-280c-48f3-b2b1-867d99ba2c18",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "17f57ec2-e3ed-4d11-b922-4c250a091646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe07be1-a723-48c9-86e6-fbd427920503",
        "cursor": {
          "ref": "1a910516-6a99-4176-b60b-539b7fea48e2",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0ef55d1b-ddef-4266-ab23-1317867087ef"
        },
        "item": {
          "id": "1fe07be1-a723-48c9-86e6-fbd427920503",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "27b66ef7-e3fc-4fde-8e69-1416c07f5a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ab6622-87bd-4172-b355-126d37383bcf",
        "cursor": {
          "ref": "86e6d285-89f1-4b55-882d-67ee4f869e6c",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "baa6ab0a-1cd2-438c-89e0-4daaa0ac71cb"
        },
        "item": {
          "id": "25ab6622-87bd-4172-b355-126d37383bcf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ae15b937-8d05-46cd-bbef-d86de5437fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132cc5bd-d5ff-441d-b2e0-9e67dd1151d4",
        "cursor": {
          "ref": "e77959d9-2629-45ed-b9de-a8257ecc2177",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fd5aa059-a102-40e3-9ba6-5f9b447254bc"
        },
        "item": {
          "id": "132cc5bd-d5ff-441d-b2e0-9e67dd1151d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "91ca3e6b-9406-413d-b386-4661e7152d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21e9ed4-e494-4168-a921-ab5948a94d3c",
        "cursor": {
          "ref": "a94d1129-a2d1-47b2-8e22-ccce19addde5",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "33d81b8f-7b55-4914-a9a3-3e676c59022f"
        },
        "item": {
          "id": "b21e9ed4-e494-4168-a921-ab5948a94d3c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b1462865-af43-4335-b51c-9e297f8c0409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c635fde2-a4d1-4279-b70b-d7259ebb5e17",
        "cursor": {
          "ref": "50a58acf-7560-470b-800e-0935ea81aae3",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "47879a32-29e5-4e25-9e3d-b8f950db1a02"
        },
        "item": {
          "id": "c635fde2-a4d1-4279-b70b-d7259ebb5e17",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9318cb5a-f3b6-42bb-bd44-e537e9c3ace0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8f0f16-0bff-4c5d-a717-fb26a82b62fe",
        "cursor": {
          "ref": "5947fff4-fe61-4f0c-9349-2cac35ecc489",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9b131f33-d43a-4ef3-9c03-246244e1bf90"
        },
        "item": {
          "id": "2e8f0f16-0bff-4c5d-a717-fb26a82b62fe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a38319e8-3957-46a0-a7d1-26249e3f51fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b07d67a-81cf-4599-9453-9254a5578d83",
        "cursor": {
          "ref": "eda98c7f-3b3d-4992-8023-ead249b220b1",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "963ad8c1-1e32-42b8-a3f7-94ced821fe1b"
        },
        "item": {
          "id": "9b07d67a-81cf-4599-9453-9254a5578d83",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a8a05662-94d5-41cd-af4a-db526b16e550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0842ffcd-37e8-45f5-8d83-556dca36a498",
        "cursor": {
          "ref": "d40bb478-d319-4a39-8386-6173d4798ea7",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "42433c2f-0010-410d-884a-d491564a7e13"
        },
        "item": {
          "id": "0842ffcd-37e8-45f5-8d83-556dca36a498",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "22b904b6-f3a5-423d-932b-e886f8ffd553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cde58a-5174-4a64-8638-8b4de0710ebf",
        "cursor": {
          "ref": "2b0b2a9d-8cfb-4f74-9540-8af0237be8c6",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1cc2b6eb-3a77-4882-ae7d-14669dd46b7f"
        },
        "item": {
          "id": "81cde58a-5174-4a64-8638-8b4de0710ebf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2647f5ab-04ed-4b6c-b5e3-a678a8038b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf1ac8e-554b-4c04-86a0-2f6dfed06aaa",
        "cursor": {
          "ref": "d8264314-776a-49b8-9062-88ca82590c09",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "880216e5-d2eb-41a0-8909-c4ed9e4d6795"
        },
        "item": {
          "id": "3bf1ac8e-554b-4c04-86a0-2f6dfed06aaa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "60b636fb-c77b-49eb-8ba9-2dbef51f9c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d6571c-286a-4606-9e1a-eaa63c41aba2",
        "cursor": {
          "ref": "e29c7d91-519c-4e19-beef-90bce30c9e09",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6222607a-99a0-41e7-b310-d5eaa9e16b0b"
        },
        "item": {
          "id": "15d6571c-286a-4606-9e1a-eaa63c41aba2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f7663154-c18b-42a2-8758-f9fafdcd383a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523c95dc-9954-4265-ae01-44dfe461b4fe",
        "cursor": {
          "ref": "a7dfaca7-7ef8-416f-8717-237d21b2bd8b",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7dc79d44-eb67-487b-be86-3f814d2d2d7c"
        },
        "item": {
          "id": "523c95dc-9954-4265-ae01-44dfe461b4fe",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4bfb6467-09ca-450f-b125-59560eaaa8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a51f4d2-1653-4fbb-bb28-f21854bb1be8",
        "cursor": {
          "ref": "ec04d60b-9d03-4967-bc41-1427b463071d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a1a159f4-194a-4b12-a9f4-21b81586dd34"
        },
        "item": {
          "id": "2a51f4d2-1653-4fbb-bb28-f21854bb1be8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "47f947cc-8778-4f0f-8788-d85ba85c2dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1224,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3258dcff-b05e-4f80-b65e-5943c7f96a19",
        "cursor": {
          "ref": "660ebe17-0410-4016-b09d-85cef970a081",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e2864640-0799-4c61-9265-dad4e37dc3f9"
        },
        "item": {
          "id": "3258dcff-b05e-4f80-b65e-5943c7f96a19",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00ea976e-fb50-49e7-8be3-a49959dfe154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eacac2f-6395-47e8-b65f-413cc31aa053",
        "cursor": {
          "ref": "d3764c3d-b938-47dc-9e49-a3c545e9140a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ab0256b6-f345-4d67-8154-60480215d089"
        },
        "item": {
          "id": "3eacac2f-6395-47e8-b65f-413cc31aa053",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c09a5250-1691-44cd-b1f3-b3c22508c023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8667891d-f992-4bcb-a5bf-c53ed7d2061c",
        "cursor": {
          "ref": "0e441595-8cec-4640-88cc-4fdfe9c6847b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7d5e77bf-baa4-429f-99f7-e8523be37310"
        },
        "item": {
          "id": "8667891d-f992-4bcb-a5bf-c53ed7d2061c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2ecbf9b1-3e62-4399-874a-50853e8998e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26525177-a5c8-40c8-9828-996496828bfb",
        "cursor": {
          "ref": "eb0fd73f-c8c1-403f-af33-23f41e82f011",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8175c547-8f54-4162-a679-bd14c555afe8"
        },
        "item": {
          "id": "26525177-a5c8-40c8-9828-996496828bfb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "77b169a2-2343-41f6-802e-0340725cf106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011d2ed9-b72a-4a92-aea2-e8d868be8842",
        "cursor": {
          "ref": "8224734a-f257-46e9-9f3f-fceb19f59b9e",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "10c772b5-fd18-4553-aa24-9048e383e40e"
        },
        "item": {
          "id": "011d2ed9-b72a-4a92-aea2-e8d868be8842",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d3bcbf11-c19e-480a-b238-bd768a9cabd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4020f85-db35-4161-83b7-21806d2e7280",
        "cursor": {
          "ref": "2fbb548a-9f00-4a24-b37f-a7cf05b03606",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7913e9ff-9e00-4b17-8f0f-f61c602bdafa"
        },
        "item": {
          "id": "c4020f85-db35-4161-83b7-21806d2e7280",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ece1e458-d58c-4ba5-a657-5a79936a5ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9604dc-bfb4-4d47-a787-9dc6f9f38de1",
        "cursor": {
          "ref": "f3d0d573-3098-41ae-89e4-328a3e19f5dc",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07bfd0ec-9121-4445-93af-08dc63c907a7"
        },
        "item": {
          "id": "cb9604dc-bfb4-4d47-a787-9dc6f9f38de1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0ddd8e31-cf36-4996-a622-74571b4cf7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1133d42e-4229-4c40-be74-54dc2dfe75e2",
        "cursor": {
          "ref": "c8aab98f-b598-40c6-bc11-25a96f8a1829",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7f0f53a8-d708-4f9d-a37f-25028a9b1fd9"
        },
        "item": {
          "id": "1133d42e-4229-4c40-be74-54dc2dfe75e2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2017e1a4-ab94-46a2-8d80-447edd7028c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389f077c-c573-43df-8351-6f055e2c3483",
        "cursor": {
          "ref": "b5b9c4d0-828b-4145-adba-c45396453313",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "314b0ae8-0ea1-4d10-8f82-cf082e8e9e0c"
        },
        "item": {
          "id": "389f077c-c573-43df-8351-6f055e2c3483",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fef4afa2-0a0d-4e8b-8c63-80c3915396ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb77edeb-ec2c-4729-97b3-dc91dfb09839",
        "cursor": {
          "ref": "6f068212-d1e6-4300-8450-b6f59c48ff2a",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7c1f8a89-55f4-43fa-b666-aae57d08369c"
        },
        "item": {
          "id": "cb77edeb-ec2c-4729-97b3-dc91dfb09839",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "790898df-7323-4176-9562-cac6cb2d4839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b44516-dee5-4703-9f64-ec3f1aefc4c5",
        "cursor": {
          "ref": "d4f39799-5530-4a15-bee5-d1f2f3a6d55a",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c1e1d29-a7f9-4739-9b8c-727befd5eb07"
        },
        "item": {
          "id": "05b44516-dee5-4703-9f64-ec3f1aefc4c5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7535897c-c85f-41cf-9650-f2fd5bf372ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedba5a5-e49f-4808-b67a-11ae95e4f449",
        "cursor": {
          "ref": "408cfd09-2886-4b1c-9f3a-2d518fcec119",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cba4ff33-7e46-4800-8751-3365185468df"
        },
        "item": {
          "id": "cedba5a5-e49f-4808-b67a-11ae95e4f449",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b5b07209-c9c6-4750-867f-fbf552db58e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22f954b-b25e-4c94-953e-ca3786fb193b",
        "cursor": {
          "ref": "f79c9c6a-1a5c-4f73-82a3-9af6c32e79d3",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1388311f-73d1-4411-828d-3c55a1f7435b"
        },
        "item": {
          "id": "a22f954b-b25e-4c94-953e-ca3786fb193b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ff815196-9800-4ed5-a48c-207d64dd088c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb3180-1309-4198-bf5d-4bc855006e67",
        "cursor": {
          "ref": "57acf6f3-7f5a-405f-be7a-a479d8d42d88",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5824253d-40eb-47fc-897d-66464988bef0"
        },
        "item": {
          "id": "57cb3180-1309-4198-bf5d-4bc855006e67",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "47b10578-b726-47e1-9858-52c3ada810a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb75a7be-bc12-4c8f-87f7-7d53c454c5e7",
        "cursor": {
          "ref": "2caa6936-d4f1-49a1-a47d-517680885b79",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "131ac725-0ca5-4562-9446-8c23e5603e72"
        },
        "item": {
          "id": "cb75a7be-bc12-4c8f-87f7-7d53c454c5e7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e60607b9-e0e2-4492-ba88-43e4f901a097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214099bd-c679-4deb-89ff-4c1a1c2a3204",
        "cursor": {
          "ref": "db72265e-c698-4b39-a127-e33743d16b87",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a72b3c75-818f-47ac-8954-9320d19fc7d7"
        },
        "item": {
          "id": "214099bd-c679-4deb-89ff-4c1a1c2a3204",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1261148a-e212-4e64-9fdd-0f42b0f47ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884e6832-bbce-446e-a248-7f7dfd3007c7",
        "cursor": {
          "ref": "862b0504-8a48-4d2a-b60e-b5c3a1e0694b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bfb4b581-e1db-4698-920e-cfff77a9d19c"
        },
        "item": {
          "id": "884e6832-bbce-446e-a248-7f7dfd3007c7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8dd93c40-156b-4add-b1a3-20bf8d9c4161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ab1f0-53f7-44a7-bc53-cf3f1baab887",
        "cursor": {
          "ref": "fb213f7f-bcaa-4efb-b982-82e042c85fd8",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a6d9a13c-98c2-40ee-b92c-d1c092260f53"
        },
        "item": {
          "id": "572ab1f0-53f7-44a7-bc53-cf3f1baab887",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f5f6014e-51b5-44bb-b160-36091876c517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e7f95-7210-4932-a533-309d7d8243a6",
        "cursor": {
          "ref": "52dffa89-695c-4ba5-84d4-a3fa1f69409b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5df642a4-ebdf-4575-bb1c-7c7094e6c8dc"
        },
        "item": {
          "id": "a06e7f95-7210-4932-a533-309d7d8243a6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a1d8a646-374c-4329-96ab-21b2719da56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4fc024-ec72-4bcd-98b3-0455972d3d63",
        "cursor": {
          "ref": "b0006d82-600e-446e-a4c2-585f4c4e2851",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1f55fb37-7498-4d4f-a152-21ee9717fb6e"
        },
        "item": {
          "id": "8c4fc024-ec72-4bcd-98b3-0455972d3d63",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "75596ed7-dfbd-4074-9e91-07f4181fe806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afea0c76-72e7-4135-ba8d-3a43a553faee",
        "cursor": {
          "ref": "1087a3db-5cab-4abe-a0e3-1e7fd68964df",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a02e90ff-2263-4119-92f4-a54dd9ddacbb"
        },
        "item": {
          "id": "afea0c76-72e7-4135-ba8d-3a43a553faee",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ddc139bc-0451-4529-a700-f6b9e5ec35dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbf2056-5943-49d8-96bc-510a30d7e39c",
        "cursor": {
          "ref": "00aafb02-1085-4eaf-9cd1-6baeb1b2ae45",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bb3d958d-aa7b-4220-b9b8-b88d91c11b4a"
        },
        "item": {
          "id": "efbf2056-5943-49d8-96bc-510a30d7e39c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "63edccbb-721f-4a60-8e65-f2a843c068e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84904ab-62fa-47e9-ae04-c30ab69da843",
        "cursor": {
          "ref": "e5aae7ba-3b94-4135-a3f7-400c95fbc472",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "29844288-058f-41bd-b992-77d7890a05a0"
        },
        "item": {
          "id": "d84904ab-62fa-47e9-ae04-c30ab69da843",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "76198df1-8066-4720-9e81-c6e045d800ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb54c614-9da4-4b71-9c90-ecccae227018",
        "cursor": {
          "ref": "f7bb2855-083b-4cfd-bd0c-386580765803",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1492aead-bfb9-4a38-b1e1-c2baca2dafab"
        },
        "item": {
          "id": "bb54c614-9da4-4b71-9c90-ecccae227018",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6f53bfa0-f6b2-4977-a011-76c6a7177ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5149d023-4d1c-4527-ad72-ee5e7e98b0db",
        "cursor": {
          "ref": "53aef423-6293-42c4-aa1b-dfb4556eb2f5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "76add1cf-fc96-4922-99ff-268209efe94d"
        },
        "item": {
          "id": "5149d023-4d1c-4527-ad72-ee5e7e98b0db",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d1fdec10-61c4-4fe9-aaeb-c401ca7d1a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e8ebbe-6d7b-468b-b441-c7c94396ee7f",
        "cursor": {
          "ref": "262ab7e3-fe85-4660-b4a4-88afd6f591fc",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "530c4bed-8b8c-4fdb-b582-5c964e043f81"
        },
        "item": {
          "id": "c4e8ebbe-6d7b-468b-b441-c7c94396ee7f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "35b955cf-df84-4078-8d44-d36f1444daaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c884ac-02d8-4565-bd35-78b960e77051",
        "cursor": {
          "ref": "2ce32556-4d20-4af4-a0fa-7c7de6f92f2d",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d1daf613-c34b-4288-b44b-f7aba92c9d3f"
        },
        "item": {
          "id": "18c884ac-02d8-4565-bd35-78b960e77051",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "607cd816-d8d6-420f-8c8e-b98dfc55db68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8d6a4d-2ae4-4cb8-901c-a67fbf95ae92",
        "cursor": {
          "ref": "98df1648-547e-4822-bbbc-987b77ebac7b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "02c35345-07cc-4fe3-ba0f-b7a4ce13983c"
        },
        "item": {
          "id": "4d8d6a4d-2ae4-4cb8-901c-a67fbf95ae92",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f6d48352-be69-4402-b984-dac301c91345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c550152-2018-4d9d-8879-8a2c3f7e45d6",
        "cursor": {
          "ref": "51d28ab4-9a00-428f-a175-a172a5823b85",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fc460730-8a2c-4b38-80fc-2fc122cb1e80"
        },
        "item": {
          "id": "0c550152-2018-4d9d-8879-8a2c3f7e45d6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5d9deecc-42bf-4810-8865-ab56f2de06e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1832b9bf-3627-4988-8354-d529484ef044",
        "cursor": {
          "ref": "77185d41-5058-40b5-8f11-5986f07f72b8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5373b34d-b1da-48c5-9138-e029c131450a"
        },
        "item": {
          "id": "1832b9bf-3627-4988-8354-d529484ef044",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e8952796-b8a5-489d-a8a7-098e8b404e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f17f066-e900-4070-a416-d3328283fc97",
        "cursor": {
          "ref": "ce15c958-973d-4e4d-a7b1-edf3ee203dd8",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "62ec6b51-5073-4739-b0ac-b70f21ee6998"
        },
        "item": {
          "id": "0f17f066-e900-4070-a416-d3328283fc97",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0195a783-74f5-4852-bed8-723f8369e1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc5e1e2-c116-43ff-8222-fe89e87e71d7",
        "cursor": {
          "ref": "b1ea90fa-296b-430d-9c96-f785f81667ce",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b6da495e-7c22-4d0d-850d-36f32e920570"
        },
        "item": {
          "id": "7dc5e1e2-c116-43ff-8222-fe89e87e71d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dd53699a-7121-4a92-b170-cf5949fcf5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21426087-22a4-48b8-b460-1e0c913f0fc4",
        "cursor": {
          "ref": "a96e4534-9036-47b9-aa1c-bb7cdb7fe00c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6b8a7de8-ec87-4a4d-b2b2-64cbb1a47701"
        },
        "item": {
          "id": "21426087-22a4-48b8-b460-1e0c913f0fc4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2c1830eb-3b3e-4ffd-8384-634a11a06df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb02d14-7f02-43ff-bb12-10841419eee4",
        "cursor": {
          "ref": "369f6741-85d8-4809-b689-030833dde3f1",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "372ad9f9-0f61-443b-abc2-d3e1afb5cb7d"
        },
        "item": {
          "id": "beb02d14-7f02-43ff-bb12-10841419eee4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "953a6bdd-382f-4aa8-bde4-d8194d554978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb47578-56bd-4711-9a35-d265af5c0919",
        "cursor": {
          "ref": "d5010d5e-4a27-400c-99a1-6cf0042029fa",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d3fbb0fa-f185-4696-9b0c-40544c1cc021"
        },
        "item": {
          "id": "6eb47578-56bd-4711-9a35-d265af5c0919",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3a7a936c-b0cf-4e57-9826-8556f54e1a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a97d0a-8610-40be-ac4c-16c5311ed458",
        "cursor": {
          "ref": "126bc6fc-7cb2-43b3-aae6-90af5e26c086",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fd6e2f4e-dcd4-45eb-863b-d75a9bc1bb2d"
        },
        "item": {
          "id": "73a97d0a-8610-40be-ac4c-16c5311ed458",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "951b7011-3bda-4558-b80f-753f025afddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c70fc80-258f-4bec-b803-16b95e73d952",
        "cursor": {
          "ref": "664bc8a3-cefb-4589-8cea-53c49713170c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "292c828c-b0c9-4b47-926c-e9e3780dbc05"
        },
        "item": {
          "id": "1c70fc80-258f-4bec-b803-16b95e73d952",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d7b59363-1285-463f-b560-902580bff126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8372f72-277a-48e4-a535-2547523479f1",
        "cursor": {
          "ref": "1a5f47da-f446-4a32-9104-e24ea9ceb6fa",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "badf7ef6-c406-44ee-bc38-a30548e43239"
        },
        "item": {
          "id": "c8372f72-277a-48e4-a535-2547523479f1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc625361-34f5-4e2a-9e1d-5ec36903a4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cffa4ab-29c6-4299-b808-551bbfaa4d78",
        "cursor": {
          "ref": "56edb19c-449e-48f4-9d5c-a5038319fc3d",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d3cbb52c-db48-4c40-83b9-5ddd132da853"
        },
        "item": {
          "id": "2cffa4ab-29c6-4299-b808-551bbfaa4d78",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f8122e7-5b1f-4a2d-a5fa-f56b9e51b332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c58756-46ee-462f-8601-e4b98a119010",
        "cursor": {
          "ref": "78fd7adf-d39b-4b55-9ef8-54e3a63aea00",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cdf6dac5-8f35-426f-acff-e1469a05f100"
        },
        "item": {
          "id": "49c58756-46ee-462f-8601-e4b98a119010",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d185e6b6-9a53-47f7-9c98-10cc5cdf2c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e33bcd8-1eb1-470a-9048-f0acf976bd8f",
        "cursor": {
          "ref": "3543aec9-3a26-4475-b867-c1221bc47674",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e1dccda2-ee3a-4808-bf83-ab2f3c5ecf05"
        },
        "item": {
          "id": "3e33bcd8-1eb1-470a-9048-f0acf976bd8f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f975deed-7c01-40c8-bca4-569d7d3d6cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8702c83c-6418-4359-b56f-a98c08889b42",
        "cursor": {
          "ref": "27361d37-0ed2-4e45-a0de-22c073598536",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d31a7dda-8b4d-49be-a8a8-d4a3493efb06"
        },
        "item": {
          "id": "8702c83c-6418-4359-b56f-a98c08889b42",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5219c2dc-68f2-4381-8ba3-3b9995b6e28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2998958c-298b-4f9b-8b8b-50bdb6e97020",
        "cursor": {
          "ref": "e6ea095e-00d5-4438-9114-4444fe26d1f5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a9e21522-b6f6-4d3a-be8e-f2b88b60c429"
        },
        "item": {
          "id": "2998958c-298b-4f9b-8b8b-50bdb6e97020",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d6f6d0f2-d6f5-4cff-bee1-d802a10587d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da4c27b-e5c6-4385-9d8c-8dc5d08b7709",
        "cursor": {
          "ref": "3bb5223c-ba5a-4e9c-a571-6fae0ba441af",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ee1e5ba-a223-4674-867d-349f45d29d50"
        },
        "item": {
          "id": "0da4c27b-e5c6-4385-9d8c-8dc5d08b7709",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a8a9e481-2cca-4a86-bf92-a902249127df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3739751d-ff1c-4218-84c6-6298eaa1ca76",
        "cursor": {
          "ref": "2752e36a-fbc0-4000-bfa3-080c0b633a98",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4dd61242-23b9-4b4c-b711-d29d1cd37d0d"
        },
        "item": {
          "id": "3739751d-ff1c-4218-84c6-6298eaa1ca76",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a59f0d5a-19c8-4f67-9ea6-86005393d25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b6b3e9-3f61-4571-9e8d-3a393ad6efaa",
        "cursor": {
          "ref": "8714020b-86b6-4747-83c0-f625c22a859b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "183b3768-c971-410a-9a3a-dc6a22ad69a7"
        },
        "item": {
          "id": "f1b6b3e9-3f61-4571-9e8d-3a393ad6efaa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "29905b4b-fa93-40a3-bb96-0c0369dde3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3968fe49-aea2-47cb-993d-a706a81dc460",
        "cursor": {
          "ref": "9d4dd734-24ba-4b1a-be32-b0db77255ff7",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2ac019d6-0bf9-46d7-b2e6-c2df626de470"
        },
        "item": {
          "id": "3968fe49-aea2-47cb-993d-a706a81dc460",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "666e80e7-3467-4a89-ab57-21e7f186774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34df14e6-78e3-4ea1-97bf-2ca3e1a57970",
        "cursor": {
          "ref": "c532429f-789b-495a-a9e3-626c6914d0ce",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5c2ebda7-7e79-4ee2-bfcc-d5f56b421c7f"
        },
        "item": {
          "id": "34df14e6-78e3-4ea1-97bf-2ca3e1a57970",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4862be0c-7d92-44c9-87f6-5e1273950151",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e61b43-7950-4e1e-bd1c-f335fe556204",
        "cursor": {
          "ref": "cd1cc129-ca2d-4834-bdf9-152bc40d7977",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bd6389bf-9fe2-4f36-9e27-edc78ad81a5c"
        },
        "item": {
          "id": "39e61b43-7950-4e1e-bd1c-f335fe556204",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "44174777-123c-474a-b03b-18c959c55c67",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 485,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25682a31-3055-44b6-acc2-a44fc070c04e",
        "cursor": {
          "ref": "41c811db-1dcf-4209-974e-5ec82703516e",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "558ca9ad-77de-4545-8170-962db4b10f8f"
        },
        "item": {
          "id": "25682a31-3055-44b6-acc2-a44fc070c04e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "16edc3f3-afac-49ef-8ea3-3a39ddcaed3f",
          "status": "OK",
          "code": 200,
          "responseTime": 552,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "090b58e5-6428-4c8c-a4c4-c7503b47af72",
        "cursor": {
          "ref": "81a7ee87-a762-40a0-8421-4d773e01d0da",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3af32f1b-1d9d-4ce9-b6d5-7d12179902f3"
        },
        "item": {
          "id": "090b58e5-6428-4c8c-a4c4-c7503b47af72",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dbe08abf-269f-4520-b10e-ea026861b335",
          "status": "OK",
          "code": 200,
          "responseTime": 2096,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "350f5594-13b0-4da9-b541-c0316f9dc73a",
        "cursor": {
          "ref": "42967806-a695-445b-a738-68b049514d83",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "de81a2f9-0afe-48b2-bd6c-94cebd45e939"
        },
        "item": {
          "id": "350f5594-13b0-4da9-b541-c0316f9dc73a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ad3e687b-839d-49e2-a468-e167d403cc05",
          "status": "OK",
          "code": 200,
          "responseTime": 1885,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
        "cursor": {
          "ref": "c17c0361-de8f-4a81-a38c-624583053da3",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "97a4003a-27cd-49a4-b3bb-3abe5bb0f3cd"
        },
        "item": {
          "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7c260102-ed81-43eb-a58b-c153469dd980",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
        "cursor": {
          "ref": "c17c0361-de8f-4a81-a38c-624583053da3",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "97a4003a-27cd-49a4-b3bb-3abe5bb0f3cd"
        },
        "item": {
          "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7c260102-ed81-43eb-a58b-c153469dd980",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
        "cursor": {
          "ref": "c17c0361-de8f-4a81-a38c-624583053da3",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "97a4003a-27cd-49a4-b3bb-3abe5bb0f3cd"
        },
        "item": {
          "id": "547734f7-170a-4dca-b259-3b2017efb5a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7c260102-ed81-43eb-a58b-c153469dd980",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea740db3-2be6-4418-a5c9-f91e3111ed66",
        "cursor": {
          "ref": "40de455c-d8e8-420b-abdf-09f163f677b5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "33ab064c-556e-4f1f-9401-21bb8b0c2422"
        },
        "item": {
          "id": "ea740db3-2be6-4418-a5c9-f91e3111ed66",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fe679411-87e4-4500-91a4-db55592b0391",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 486,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d091c3-bf44-474a-acfb-31ac6ba2a12e",
        "cursor": {
          "ref": "17a3e09a-2d35-4f90-85eb-8cafad2c7247",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f56367c3-a156-485d-ac40-f39cac77790d"
        },
        "item": {
          "id": "d1d091c3-bf44-474a-acfb-31ac6ba2a12e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "35e50466-3bd3-44f9-bb7b-3001d5757142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d091c3-bf44-474a-acfb-31ac6ba2a12e",
        "cursor": {
          "ref": "17a3e09a-2d35-4f90-85eb-8cafad2c7247",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f56367c3-a156-485d-ac40-f39cac77790d"
        },
        "item": {
          "id": "d1d091c3-bf44-474a-acfb-31ac6ba2a12e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "35e50466-3bd3-44f9-bb7b-3001d5757142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d966d074-edbf-4bad-888d-ebfd60ed03e2",
        "cursor": {
          "ref": "68c35847-a070-4a54-837d-21221fa42596",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0025d97-2786-4ab8-836f-6a17479accf6"
        },
        "item": {
          "id": "d966d074-edbf-4bad-888d-ebfd60ed03e2",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5e5a5845-96f7-4117-bdab-b33fdd3c61db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 685,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56e3336-1ca4-4205-bf7e-714f75839c76",
        "cursor": {
          "ref": "d013bd95-c9ca-4728-bf58-a6cf54bcde53",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2223075e-5be3-4701-a5bc-f708e8abf494"
        },
        "item": {
          "id": "c56e3336-1ca4-4205-bf7e-714f75839c76",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95a21cee-07bd-4915-9ac8-70458d2d1e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56e3336-1ca4-4205-bf7e-714f75839c76",
        "cursor": {
          "ref": "d013bd95-c9ca-4728-bf58-a6cf54bcde53",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2223075e-5be3-4701-a5bc-f708e8abf494"
        },
        "item": {
          "id": "c56e3336-1ca4-4205-bf7e-714f75839c76",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95a21cee-07bd-4915-9ac8-70458d2d1e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381814af-88eb-48de-a4e9-dec48711e9ad",
        "cursor": {
          "ref": "cbaa2f81-2631-422e-abba-d5e45ba19aaf",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5c947f51-21f5-4c34-9bab-070245672f12"
        },
        "item": {
          "id": "381814af-88eb-48de-a4e9-dec48711e9ad",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "16ff9a7b-72cd-41a1-be06-77ebf77f2c4b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 680,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}