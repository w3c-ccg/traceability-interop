{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "84149359-ce4c-4af9-9137-91a727e49a12",
        "name": "Clear Cache",
        "item": [
          {
            "id": "73fe5716-2206-4a9a-a9f0-cb3a15fbe207",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9b0db62-02d2-49d0-8695-9440b3a099fc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "053c9258-7044-495a-826b-956cae22060d"
                }
              }
            ]
          },
          {
            "id": "001db506-6fa4-4da3-bada-8247524d8c2f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3da54825-af13-4d40-a5dc-1a9de2efa333",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5ba22968-2ea4-4f8f-b644-a2cfc798f51e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fb037f0e-5d30-4576-a89c-460c46068587",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "80dc11cb-3324-4434-99dc-22f8dfe513de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "339e2697-7d6b-4ee1-8a9c-6a11d22e00bb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33e38144-afa1-44a9-9717-bb94062a02e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c400e3a-4566-4b05-a048-a2ba631c1375"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fbeb326-2292-4c54-9eac-50da38e7076b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e157b75d-ccae-48f7-9a07-ea605c40c808"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f35f6ec2-c3bf-4d83-95f0-edbc196412b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc0f666f-5768-440d-a35d-dff8b0c31326"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5b458be-57dc-489f-a818-6d8d35b52bfc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2a93573e-4411-49ed-8e64-0eb3f2904a23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "857d0a3d-5779-43b2-934e-1a18e408ec5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bd1e3a6-c3f9-4947-a09c-da78b4c91ade"
            }
          }
        ]
      },
      {
        "id": "b48758b0-adc4-4b84-898d-e37fb9aa160e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eb3e16bf-93c2-4190-9aba-384f12668ce1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b25d1f97-8dca-4803-b461-4bc67a6f9c12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "438ac7a4-f4fd-46d8-a1e7-f348ea9799d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea805c0-3f29-4c15-a1ec-4d00ae4d2bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8f6cd77-bc18-4fae-b91d-5afa4d7da044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5589bd3c-da94-4840-94ee-0c79c06b9d5d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b6298a-23c8-496c-b8f4-bc362b67b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81261b4c-05b9-42ef-8cdd-3f4297e4c3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a488fdd-efa1-4157-bb06-876a451c9a9c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013326e1-921d-4112-add3-6b2e612f0441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad3062a4-b58d-43ca-a9c6-28b6ca914898"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4c27edb-d34f-43fe-baa8-f278a734f7e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bdd047b-93df-4390-98d4-09cca119668c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade775d9-64d3-4994-8cf8-8dbb4b093d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "114837e9-0ac1-48d2-9ce9-eef5252cb66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f0cd2-403e-458f-a972-9817cedabcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47425294-5355-4bf8-9586-5285ea09202f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e33cdd1-6434-4934-b89d-ed2e952ab469",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa96a000-f6a5-4823-af9b-408327c94f99",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d007ed88-a369-4028-9ba5-8e85f8120cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fd5be46f-dfde-496e-b0d2-03176955d6fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1407ec6c-397a-42aa-812d-32c9912a81b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cee6301c-d16d-4aae-bf10-dc6bc9b62275"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb8f443b-ffe6-4b27-8029-76b7ad12a2c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22da7bba-f7ad-4703-b34c-a4533f222fa2"
            }
          }
        ]
      },
      {
        "id": "69eb9246-e7ec-4878-b2a5-90c30f82b819",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "84ad98be-e86e-4f74-8e2c-ce91e9680562",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c9c597a-852f-41e6-a032-26d79f0cbce2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2ebcb61-c73b-421a-80a0-aaf0a19ab4bb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3e0d6f-e4e7-4970-95a7-1c92d3f6f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f511b9a8-2a7f-437d-8a1b-31036a5bcd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6542f8e-d8ff-4d2c-9ce8-72cf5cd7998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7324db8b-7506-4098-9a9a-878d96ae5968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02fcc1e-beb7-4bc5-b7ab-a2f0554b1559",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7e0b81-e139-4172-a825-e0d1ae5f8344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9569ea17-3213-4eb5-8334-bebad5216e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccddd5b-04b3-4720-a279-935556f7b767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8560c83-331b-403d-bd8d-d5f4a7284c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0c25ab-57c3-47f9-b33a-c58041fd6165",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4cfbdf-db70-4d47-b932-98039fc10adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba79e8c-7c71-4921-8054-d81036542e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5f762-6a6f-4152-a3c8-faeb3661f1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7620a306-efbf-4608-baca-6554e4d179ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34131c3f-4c58-4c93-acc7-1938d8e55b66",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5c2d2f-5a44-45fe-9356-5025fef2f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc77f45-9b48-41f7-aee7-485bdd6bb045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3106b13d-8139-4db2-b680-9a0b83592087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6287c148-2fc9-4255-9d95-a2acea247e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707a3a3a-da33-439a-b222-0b14f5951cbd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab2a963-0591-4bc3-bb74-cd338bca787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6b7dd7-bad3-47bc-bf22-a66f4c3d462e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a702c423-3153-47f9-a13a-1a2758c02fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41cd8bb1-7b56-4160-bd46-3a23f0fc98b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0295b7f4-b6fd-4edb-b77a-bc47d88abe49",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fca97b-041c-458c-8485-15949207ecde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840635c3-fc20-4a00-a6f8-519dd01855ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f2d44a-8eb9-40bb-a1ff-d6537b797b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fff59794-6e6e-4ac2-8bc1-30128b1985af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee92202-0cfe-46e2-bd0b-43fe2d978bd7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156e11e7-0d79-4ef4-9a1d-13e019da177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b8102f-5d6a-4a85-99de-f1b8f11fed39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdda845c-2acd-4632-aadd-c7800c694176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9602fa1-57ba-49c9-b0f2-d3b26690a680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bd5998-b748-46d1-ba1c-cd0033319b98",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9441535b-8cc3-4b19-929a-b0fea41d2b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649424b2-9d47-4e49-8ebb-87a7f836106d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f846b0d-44f9-4ace-9c69-98423155b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e4841fa-d4f7-4833-9291-e50b6919dffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2522a0-a75d-4064-8056-bfd811126849",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e973b16-6825-42bc-adb8-a8d97f3ff7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f604c8bf-6ad3-4192-bb29-ccb54bb84bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161994d6-c649-40fc-b4e2-40a8ae2c5588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "793fb027-3759-436a-8cb8-8dbeaf4aa350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83da756b-da19-4ed6-bf19-0478ca0083f6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1f3ef5-2dc5-4a84-b23c-d7de124c4050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9ce265-1e77-4fea-9428-730a1cb21694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16149270-7bb4-425f-a29d-3683c69b2ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cde9381-d089-4a7e-ace9-866a7267ac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684cf728-514e-4377-8381-6ec04a919bf5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f15dd86-3b89-4db5-9366-a3f125fcfd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c247897-a3e4-411b-b807-a374df964f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db7b0aa-fa66-4422-b877-dc79212ba4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9edfcb3-4a26-475c-84b9-6777748b165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8d28cc-ba8c-4d6a-b6ec-d2ba6d4158d0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fe516f-5d5c-4828-9058-c6075fb92f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb7d41d-810d-4da9-9dab-c0c752238fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff81e2f-6d60-4e3d-a430-0729490af747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ae19128-54e0-4612-918f-67737160b2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9965c1-738a-4759-bcd8-d665de87bcef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f306bc-1da5-48b5-bc0a-4809ab6dd025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad138b8-22db-455c-bcfa-41debe1e42f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cebf8d-2a3c-4fb0-95b9-f7be6b15a0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a58f7a2-9241-4862-9282-3d5f377b741a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd935154-a197-42d2-8f45-cf7a83a0b159",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2111f76-ef8d-4be6-9f86-3b4f199bbe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27217172-a44a-40f8-9c40-16dd3e9a973e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1600206b-1268-47d4-9527-388a06ebb1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11138c7-3810-43e1-9598-00d13b0ba53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff47be69-35cd-4b7a-ae13-d903a77c612f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a541dd0d-d661-49af-b666-d618ea11f3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496c5920-fbd3-435f-8909-d925e7cd8ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247c01f6-23a1-4853-906b-a9504cde159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad8ffe6c-6896-4214-9c89-e320c2736eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3945cbdf-c109-46da-870b-7bff9d8f6821",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92d8c7c-952b-4e71-aa2d-f2c9a5544aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c2fa8c-37ee-4ee4-aa8a-e1d201d2fb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c15f48-d89b-4259-a78c-65b1ff7e9e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "802010bd-7ba4-447a-b4d2-dd3862012304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8425537-30a9-4a4e-804d-b40f7dea2e40",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f88a29-7307-4aa6-aea9-ece36a1042f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703efb2f-cc50-447f-91f5-4fc9b01a6801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bedfb48-03fb-48be-9dc4-c4e8673427b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dca05263-fa17-4a3c-9910-ce75c42749b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d443b0-d2e3-40d3-8a9e-165dfacb6e10",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7586da0e-d578-4e8a-bd85-6275256d223c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7f3e2b-de09-40ad-af09-d31cc8168fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f866fd-8d20-4fe5-b3f8-93eef03c419c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "acdc1b12-44e9-4bda-8b10-87c6a7b62346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e28f943-421e-43db-8e48-0599250ff6f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4824e0e7-4e69-4072-85e0-8d76090210e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f942136-768b-419e-b3ba-5a7486d93a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cde3b6-2dac-477f-92d5-93932c7b311d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b5fb43-2c86-4002-97cf-1c1bc584f6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b8e73e-5e93-42b2-a1a7-a615f46d4745",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba63d4d-66f6-4c02-9ee6-feca8a7ff55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca6457-7b4d-4187-a6f8-4df9ee88f885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdf2d2b-0fa3-41ae-b899-abefbd578ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54612c87-647c-4087-9094-56de70f8a52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad105aa-4e67-4404-9772-f16c53b7c7f9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a86de35-aae1-4a0a-af89-cd9e945f07a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ab9c24-85b3-4782-baae-f39376b72806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e1808a-7326-470f-ae4e-5d4e832f04a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1019978a-0077-42e5-b8e1-e25039eabfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3cb8f1-ffe1-4ada-a938-ae80c9bf2e41",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc3f7bf-54b7-4177-8e60-227965c28d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6460ea59-a0b9-4c0b-80d3-d35a8b021e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c209539f-12c7-45aa-a8e9-70432831b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b744e773-f37e-47e7-afa4-fb9899999884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b682262-810b-46bc-8467-537392e7a8c2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d428e9f8-4bd1-461c-bb76-5b244d354e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bdce47-af1b-449c-96e2-6465b7ecaeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d632965a-1820-4038-b59a-7b981cd748da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "234550ca-154d-4a22-a083-49f623cb4d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e52aa84-7b15-4d9e-b9af-3bafda8be6cd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65d9f60-76b2-45a7-9692-08b2de573de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bf2e68-5834-46e5-9fcc-49de18117eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ae9733-4b14-4970-a692-90321c6ad356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9b3172-9515-4474-bcd5-8be2ed4464b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95992bbe-9ec2-4cd8-9d14-29551c024e15",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0711601a-b919-47c7-9588-75b588e4c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110eda5d-5eea-4d1c-b1c5-f3fe991d725a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c022a9c8-306a-431c-80d3-6df11a761d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db89a6b-2112-44c2-a6dc-e5961733fb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b50439-8b9e-4e89-ac37-8596800f7a39",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd3c0a2-2b55-46fa-a419-d5e328a057d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102381bc-f0fb-413f-8dbb-c953eb3e4ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271056c2-face-492a-b152-6dde93646716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2819fe3-4055-4aec-8277-13e6e330dece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615420ef-e20f-4d98-aad5-007d7c70fa13",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a8a38-095a-40c4-8afe-a38cd8f5fedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e16777-eb2c-4451-a4e5-31237d3e956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c117a11-e914-4c1e-8ca3-62fec220be4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2127bb-061f-4ea8-b26a-a889d052e401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef78fc0-eb47-445c-aaf4-e615fc3b7f73",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19648c0d-aa4b-495f-8f34-3d123935fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd0a954-c6e8-487c-9692-8c534bda67fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be967a2a-f2ed-4cb6-9f6e-be29a6963d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "890d6203-9d88-4ba0-8b5e-4d941c95fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46961a72-54aa-49f1-880f-501036377fac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a6d3c2-1a32-4f5e-9c40-4c79ffd0c5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da46dd3-fabb-4e60-9f24-300fa1a8c51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18063d2-a742-4cca-b09b-d133356a1baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1007aa-397b-458b-ab03-0b6b7f811f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e47a7-fe9d-458d-846d-8f6104d5a9a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ddcb57-6b5a-4367-b2eb-981e55f4f61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fa7c4a-ffc8-403e-a17e-554711b0323c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cbd277-58e5-4176-9959-95892469339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "494b025f-8b4d-4d08-96c7-1fc84bca3247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52583479-9504-4d0b-a51c-f6ac0484f64b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66434a9a-3dae-4874-99f6-0f51b62d92ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3502c328-48b9-40f7-8d8a-1bc0a71b3ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25debff-7ea2-4c44-9648-3b1e1de0acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab8bde2-18fe-46b4-b3a7-2fff5699c7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338ff899-deed-41f6-a461-fdc6adc0ec50",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b5a5bd-b1a7-4997-841d-ca3ba9618a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b714bf4-efc4-4aa0-a02d-44fbe0886590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7917aa-e855-423c-a400-ca487574a62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a363670a-35e2-432a-9202-9e7e73215626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709a88da-869e-4504-b47a-8daf008035d2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47ee7d3-b2d1-459b-97f4-6c5a05912728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324ca018-bb4c-4437-8478-735da2b761d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0783f52d-3e7d-4ef0-aa73-266b9d1473d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e65173-5cc6-4b54-9e3f-27228307c8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a55a467-a16a-4235-9534-54c7c0c14d63",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce7b3ad-39cc-4632-89a4-c3d06f70751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db679f58-c5d6-4037-9d36-ed3ca3edf59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100c567d-dd4c-442a-b6c5-2c0e2a24bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50d83791-3b96-4e46-973f-e80075a8d0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dded32e-466d-48b7-91e9-3ef5de15628a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf49211-7c94-4aad-b512-dce6f9182cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838b005e-2be1-4352-a43b-13a03f141770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b7d0f9-fd0c-42b0-bbc1-833c286e7509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c4179503-880b-4d66-839a-026101cf6d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef73f4e-9b78-48e3-87d7-bd9172e4cb2d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e15786b-2999-4341-b83b-ed2b40db9da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdb1800-59b4-4b45-a2f8-2e67bc2f5913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc8f937-f98b-4fbc-aeb5-15571ac5a07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf62fd9-d470-4493-85a8-524ee863b447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef634cb0-f1bf-4b3f-a2c2-102e5ec574f8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dd9aa0-e6ce-418e-ae32-9a2612fd4833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c971a21-cd9c-4260-8854-d06b595fafa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2c5579-3185-49ee-9b02-2c3c31610424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "369cc8bf-5ed9-4218-b81c-9d53a0f415f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ee42f2-7cd8-4a34-b99e-1d26fbfde6bb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdbf938-a282-47b0-af65-96113fd416ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e46bd9-11da-47c7-9917-11c68630ba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a48e168-3ee6-4561-813f-ebbeaba16b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd386e0-d31d-4749-b12f-89e863321a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dbf384-07bb-407d-a12e-05b170e7c1d8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca6e9f-c160-4723-9db2-b2d01635eae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeacba8-371a-43e3-b53d-330c3b25cba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7d58cf-a193-4b4a-8de7-f98d3b0ad7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "199a7f14-dabf-46a8-ad7a-878d44326516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3febbb-5e1f-4573-90d9-e3bd53e1a563",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5854bb3-7c23-426d-a061-e36c6ece6416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bafe2a4-cf68-45e8-854b-d253e40d8924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f68be-5857-4fc4-885a-5fd638351ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d58aeaf7-9465-484c-adac-28b61b9e257e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e60f17-dfbb-4dd0-a31e-1051e5d2d802",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfee71cd-6fa3-4685-8516-1bf8253ede5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0d5290-7302-46bc-8670-78bd0559e562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd7a387-c0c8-4506-8732-403d5b3bcd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "26badfa6-6654-47de-8508-ab57a7671b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776c0199-0b0a-4fda-8b0d-3d7f3ed0a47f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6563e1-48db-43a0-8d56-f866507894a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7af83c-3903-4a8b-887c-2b87202da47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beae833-c30b-4c69-865b-7a7eba93f3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "51dde6ed-2d19-4420-ad15-7a3b89afebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efde3ad6-5985-4b11-af0c-1a53510a77cb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f62f1f-777c-4ee7-9ada-46521681bbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ba15de-e9ad-4d98-992c-9b2f1ca7d055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491e3d64-cfd8-4367-ac77-462faa547500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbbc3d8-ac31-43f8-9eaf-c1fc6d809c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25baf2c6-75fb-4e95-876a-4e309a938d3d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b17119-2203-4dc2-acac-db06b2fcebd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a42aab4-bbf9-4a51-abb1-930b662460ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef444c3-82fb-44b9-9f51-d8343a536707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "03788602-d67c-4ccd-91bf-c10b9274244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6d5ede-80d6-44a8-91ec-067264b8df85",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2002599-6559-4b96-91f7-78a304b58eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a115522-ba94-4b9e-b6f8-d70569cbcf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7011006a-8b55-4823-a060-8710c18455ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc49b571-19d9-4915-8912-3720dcb273fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d5db85-dea8-475f-b13c-00decf1198b6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca23f73-c8b9-4854-870e-edea5480156e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bf1731-eb0b-4a3c-bb67-579c793cd310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db35f5e-9b50-4887-9cde-9375ba4ff8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68aa9818-69b8-49cc-af77-59f31ea1d28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d758a11-c495-46f1-8532-e0f5da577cec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc87ddc-c2a3-403c-8cbd-ad8bd41f291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484db34c-3f6c-4eb2-bdaf-e8ed0459fd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63323a07-657b-410d-a1ce-e78d26319cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20546599-f7da-49e7-b552-3a6e166208a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b999424-1f9c-49b6-9168-b0733c509ef3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf424b-ada5-45c9-955e-78aeed87fb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a8d7e8-2858-4932-9174-b8c8f17bb2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c975a5-c4dd-4dd2-a57f-e163122349eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4285a53b-0bcc-4304-a06f-228a746c718d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75190dbb-eb5c-40df-a25b-b2bb3504573b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a5e65e-dbcc-47b3-a3df-121ce330504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f022cb4-3055-4123-9572-47cf9ae50ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28867ba-c072-47cd-a2e7-768d843e99e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5577e319-edc7-44a2-af08-4efc0785e0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05c6ef3-86ab-456e-bb27-a564f9934a94",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f887269-de6d-49b1-b311-9e413aaea304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4b1a3f-ba03-42e2-b863-f9716c7bbc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7517a75b-22d9-4be0-8fe6-5b47c25c387a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0af3beab-f2dc-4e29-9b9e-a45f945d73d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ee3180-8fb9-46be-8524-74da7d8cba2a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bf3e0f-01c3-42a9-9c60-198ab25b784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db382f94-8325-431f-8e89-d2c92d2ba34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f270f750-3c66-4b16-9cf2-ffc882d31472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a81bbd6-f7da-4e99-a832-806b2c59f80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068d8e01-9116-4ca6-9e3d-498c1a52ac82",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f883ee72-fd77-4fa7-9854-ea207b9331b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c15915-6c27-4457-9b10-b33862700b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3560c7fe-5970-4dbf-95f6-77857625040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b342fa8-c92c-4a2d-aece-d8cb70b65895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb472fc-e8a0-4e35-8a23-a482cbe505a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa17747-8bda-4893-8a3e-d9af7a2350b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed41c9f-7284-4eee-aaed-f3e35308bcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa9aafb-ec12-4cfe-9fbe-8d8dbbe221e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aab071d-6bbf-425a-a65c-781161864dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb6895-2c76-4d50-b55e-da368e3836c4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0989a517-5742-4365-ab2b-4898d2eb7d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e380284-a7dd-41ea-b410-17e991d1a856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a24904-ebf2-4d42-bd0e-9fc6fa6f2d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3565307f-8546-49ff-91bb-e614ea778f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e42218c-7ef5-4fad-b5ea-7b29da568014",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d12499e-769e-49d3-81bb-ff205eccd9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f7ea76-f117-47e7-b37c-99b8027a2c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9429bf9-6f3e-4cfa-a1b9-531e287d041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb5deae-fb8a-4fcc-886d-ca2ef4c4e3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243b9141-c0b4-41cc-91a1-e212cb233ffd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc58f51-7d9e-434a-8d4d-d58d7de95e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9542d0-54df-4263-978f-ac75ca01f6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a48746d-cf26-4125-a138-0ccbe3052e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf959d3-f302-4a5e-b73b-d05ea54559a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc45868-073c-480d-a6f3-3a320f16ce7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10848c61-c842-47f4-a30a-209714ac96b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c199f8-fab6-4d3f-9b33-3d73e12e4a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcf0582-53de-49ed-a420-59fb3db6cee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2810c56-0f43-48e4-b466-6109c3fe97fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24029da0-9465-44a1-a7ef-be29f6a9e4b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded8a93-da52-4e68-94da-d0bfe4446ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16febf8b-d0bd-479c-b420-de6873029798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff8fa04-cf89-4414-926b-4b21440a34ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd1f3af-3205-4150-949a-7b3f40e5ea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143401db-1238-4663-aa15-c719192eb7d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f47587-43fa-4684-8e06-f1bcfd4cb96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6670f97f-d10f-4669-8937-3c38fdefa99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d95b528-70f4-4f9d-a635-6eb6eab0ff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05566627-1153-4681-be98-8e7d52a5e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c7a9f5-2ce8-4fd2-ab83-4013454c83a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf72523-c2df-49c0-b275-c03002c89b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f645c9-0780-46d5-9f14-01de45d05d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f77f3f-cf2e-4bb3-a14b-f94b48811e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "660cc44f-0e47-4235-a146-8692a39ad1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9f4322-e094-4931-999e-4e5f5064376f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728d6039-77cd-444f-bceb-646c14b57919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680a826c-a7e0-41af-9eaf-fa6a147bd6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdc4981-cb45-40c3-b256-60db491b4804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb69ea92-5646-4240-8dfe-a47d645dd29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af9dee5-42e1-4bf9-8426-c0ed1f0c6cc2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45de1447-af6d-4f54-a889-b4e10d55211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c540d8-9dc9-44fa-aa2f-3da2ddfc1002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c4e9d2-5d81-4c7b-992d-8ad56230060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5098907f-2e61-485b-b176-49eeff52d9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334782ef-eb1b-4dc5-910a-bfa788ab4419",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9da3b0-91bf-49f9-a185-e01767f44063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dd8fd8-7583-463e-ac01-d5912e006c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e892687-b3a5-4ef4-922a-876850e7976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0513c9bf-81f8-423c-b54f-e91fa64a2b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a49247-007a-458a-8863-3a1a9aa1634f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a68d321-ea26-459e-9a56-08b4e3becda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97529f86-35fc-4cdb-bdc2-ca2654d219f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cff055c-e538-40e8-ad47-b99d93e2f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8a6487-f0bf-4f76-9c95-3d024d1626c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e044bf-7332-4446-806f-2118578658b3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b78b4d5-ccef-414a-a63d-8c530bcef38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864fe7ba-cdd0-42e6-bd92-79296422f5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0798d706-9f5e-41e8-839d-d81d664ca33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c96e0c-5f64-4df8-896b-50d6efd915fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b48ab5-fc9a-4b5a-882d-06bc12f92d9d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aefc70-a62f-48ab-8936-5af63d666ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1a2d55-b6c6-4a3a-bc1a-6d823cb252ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19175110-7d70-4461-aaab-c639529518fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "771741f3-2b65-43bb-844d-47db9786ef6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3b8d8b-db8e-4598-9239-02b11ec0a250",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f2da1d-0ab3-4e77-a732-eb31379ca061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7b039c-a0a8-4ecf-9d51-30e52501273b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dad40f-50fe-4f5f-b35a-499afb7565d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba40438a-3fa2-4951-8ac1-ae3de688458e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8ff346-9249-46c1-ba92-3b3181d95890",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2f9c5e-c713-4275-92ac-cb1ac5568fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129fbb84-a052-4939-9dd0-260c7f41e6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70bb58b-223d-4fa5-a899-3eca2a820b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "45544ac0-0b17-4f96-82e4-f5208aa8dbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c12310-722b-46e0-aee3-45fc460d2ed5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293ad8f2-b07d-4939-b59f-b7afef0a5ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d91242a-99c1-4c9c-908c-0100e57c99c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d2cc86-575a-4cc0-b304-5aaa868fdb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e553dac2-aa4a-4900-810f-40929ecf8ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02258ec-cefc-4be7-9e6e-0c3c139711ad",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430ae131-26d6-41d0-ab15-e15be44a175d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f28e0f4-97e5-4b99-ab38-0d7b197f4f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6269f54-bfc8-48f2-9fea-7191ec807be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98065544-e797-4e1f-b54e-5e6b40c8165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1da7515-025d-4839-8679-999aae37b4c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ddef72-1b0b-44cb-90a8-f6423cd1511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dfc254-9b45-4b0c-a080-6f768a2fcbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff8fcb6-a3f8-4c17-ba36-680d2b97c5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92878d2a-60f6-41bc-a7e4-e523885330de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da41ecd0-ce39-4a19-9544-afa0a85bf0f2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3b0271-a5db-49ed-8bee-27543b71cb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819ea5eb-71a4-4e01-8f59-e1b65e076bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03dde25-8519-426a-b023-e87523642950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a54482-a414-4be2-a460-0e39bf1889d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69682b09-f6c9-4c12-904e-0f54bda731c0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d909de2-29ac-451d-851f-2c1a66048060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebfd7b2-c5c1-4b40-9a1a-4ec2e54d4069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2992397-6577-4f7d-a1aa-2cbbe3477233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "349b8826-7cff-48ba-bcba-88ee19972668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f967596-f5ec-4cf1-b5e6-6a1660b17b80",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59076e39-5407-4c1f-80f4-6ca0feef33fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4223d5-478f-49f9-b9cf-5d065303b45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41a6476-07e1-4103-ad53-9216134ab865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55def524-2b22-4d9e-b65e-2ee9a4744957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03abef3c-897b-4d3d-a6d4-532d3a5e9f6b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4ec404-3621-4dc8-a0b0-e6b34c7ece8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d67da8e-d317-45f5-b6c6-230e7c8d7cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2978976a-92b3-474d-bae1-afeee7cc9291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6139082e-34cd-412e-80b0-0f3a419607b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391edd6b-7349-4889-aa65-66b235f35b99",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119c5a12-7a37-44b5-8dfb-c7a29d6cc093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bed907-d238-4631-96ac-477efb55d2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca29696-cc13-4626-9026-2e3435cb76a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5cb449-d167-46ea-80a4-0484f5c06e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f800960-57f0-48a0-b924-201c15849e06",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab5610f-78b0-48f9-8c42-0f2ba4bf66dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b5a9a4-81fa-4629-839d-476ff7c7395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc5da4f-83ab-47df-8fbe-112435a73034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0234f9e-a563-4b89-a8c4-e88155fb9f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bef5a8-0d4f-4914-9cc5-7b4e37229ad0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83747249-2488-4aa0-bc1f-34521e21e6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d31f52a-3d8f-4ed9-b5b5-01e18dc3dfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810cedb5-ad6d-446f-9b9a-f9eabded29a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6db5c38-bd7e-42b2-9c2e-a6f2d7903155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d3f047-5c87-440e-8d03-09165420be31",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af27557-dd44-4f2c-ba45-55c1c87fbd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc411aff-c55c-401e-84c7-c70ff0a8c9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3632cb-f5cf-422c-8477-c293031539e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55471e87-66ea-4a8b-8a96-e1f1239642bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62791317-ef66-4b56-ab45-12bc371ca815",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0cd49c-284c-4f15-9a80-42b947eebbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2747f61-8d43-4560-8858-49e98b249a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046bbef7-75a4-4e0f-bb89-4d4aaa0a517e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86a651cf-462e-40f9-a398-12b0184b3f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdaf07e-665c-4aef-a12b-97862664f532",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee73a481-941c-4246-9e27-9efbddbb4eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c28b1d2-735e-48e3-8042-2ad3f9ad8943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ca9d5-7a8d-4892-8671-0cc7da24bc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3722ca2-8911-47aa-bdc6-7144c70887c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b042a517-5dfa-44be-9bac-42dc876aa129",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c316507f-83ec-43e7-96d7-0ab407a7cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3573ac32-2034-4b3b-a243-6f8735de4331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd74274b-0250-40dc-b557-25e9998aa94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae16bc68-673e-47da-a024-8e8698c35469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62784f0-0721-48c3-bef0-1c2520ca7b85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d7813-2a86-4f10-8d42-074f4175e23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9f714d-d4cc-4d5e-8626-e2df9e6f8cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a4a849-b33e-46b0-aea0-33b0d0912b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee358ce2-89a8-4792-997f-246318b8d74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5d3b19-0698-4420-b2ce-1ee338d93440",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b9c493-6cad-44b6-84dd-3ee9bca1c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9152e083-535e-4bf7-9c94-3a3619d12307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036c50e0-f5c3-4fb2-857c-91587458ee3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3eb2b7c-0ef3-4511-8d6a-78353dcf8cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62a3924-fe4b-4333-867f-3f57489cbfe1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869586c4-e86c-4314-929e-832bca05f84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e092f9-ac1d-45ce-8d09-49e7a82f597a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37b7d75-b1cb-4a0f-b822-f5028a1be338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f86348d1-6411-47f4-80fb-7e3f81ca2d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa462efd-4ade-49ce-af29-a1ea61918798",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb26e658-311f-471c-ae44-bf53fa848922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24307f7b-3798-418f-86b9-4d7c4261efc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2929c489-11b5-4026-8a06-cd8466de5031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f08d8d3d-2168-4c22-82e7-827b5d3619f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd0abcf-d91c-4065-8b25-89500e715fa3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b0e499-fcac-4626-8d0e-5bb4c5913a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7438b7d5-40d7-4f92-b273-bb74d6ab49cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619890eb-27d1-4064-8f52-ec9341fc5540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a7b5df-1e2e-4b6a-8b19-a6610ccc5d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47075c80-04b2-47ae-bc2a-1e388a9d2497",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a491d23-0b6a-4db0-a06f-e16f2bd760d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724ccd6a-15ce-4ffd-8115-990555002622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19275ded-1766-4c36-906d-7713099a17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b6ecb7-d418-44b7-8376-1b9b348531e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9e6dc8-c260-4941-89d8-7db936094166",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c854dc-b0da-4f29-9968-d09ef8cd0fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ffb987-7377-44f4-962d-c1712d721ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14d75d5-2c57-4937-a4ec-979c28c73b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63fc900-198f-4c67-b1fd-29ac08c43217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aff835a-dec1-44e4-a766-d5705ad0dacc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97c80fd-25b3-466c-937e-d72d3f78d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3e942b-d94b-48bc-9290-852e23c14c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb71b82-2f93-473b-8f2f-8463e0cf3ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d17ba75f-a49c-470f-a4e4-db773483b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6094ac3-d1d9-449e-9a56-62b8dba49dd2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2839b06f-703f-4c99-979e-94015255ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716268d6-58c4-4a10-954f-8243bcfa83f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe806ed5-c9b2-40f0-9c20-475d82fd8b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "553cbae1-acd8-4c61-9be9-08356d6d0b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5e0f0f-33e9-456d-b170-25abfc1cfdf2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c2f08a-d58b-4dca-8de5-4f7b1279ffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90bd2a9f-fb6c-404a-82ea-0f4dc1ea956f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf25e6c-43d7-4e0f-a173-8a9ee6e7e08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "915bb12c-31bf-4ee0-a956-c7f4984ea398"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a65466bb-a9e5-4b89-8589-f8c8ccafccfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06bef3f0-7191-402b-b663-8790ddd8e123",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d67a18c-7633-4baa-8d22-0753b6b330d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69ffd9c3-8697-48f6-94dd-7f931b3c5b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b523e42c-ad8c-494f-8d84-230dce2a0b66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2a4b48-db45-4be0-88f0-6370933d73f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c667931b-696f-4f8d-a4e5-be614fced94f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfb86124-47c1-495b-9d34-56f434d27698"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01ed02cb-8e53-48af-a838-1f32584cf52d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "530bf214-face-42c3-a02e-5480a2332c09"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69bc68b9-d9da-46a9-8aef-f392c49990e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6b9cd4b-e399-4fa0-87a0-b411841cc1f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7d69d78-c86a-418a-9ae1-0c9972da2827",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80ed693e-82ef-40f0-bc38-81776bac515b"
                }
              }
            ]
          },
          {
            "id": "882a93a4-1096-41ef-aa8e-59fc15fe5489",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6428538f-6262-48b7-887e-804942688ed5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6ec29629-badf-4b16-b0e0-2c7314bb0164",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ca4595-5e56-4793-8345-4e125c793ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e5412c8-18b5-4d72-a272-af1a7b36cff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d876d199-348d-464a-b556-58a4e4babe8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6b953c-6831-43d0-b17d-a417c27cadc0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bb2873f-b6b8-4aeb-bce2-23381782bef4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f3969e0-bf52-4a63-9d83-feace6080b76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c401830c-996d-4dc6-83fb-4e5c483827bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8532d4b-e5d6-42fc-b68d-b925ae7aefd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d2497b5-70a7-4d54-9e36-746eb36d3830"
                    }
                  }
                ]
              },
              {
                "id": "59ccc133-2688-4eed-b156-46b1dc323927",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d0e1ffe-8c7e-469b-9edb-fb18b2aa11d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0839d0f4-f575-4734-af5a-7f8f2170a05a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4df5c71-d060-47b3-9376-7be4d8509734",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60d24388-8c63-48de-91fa-7c461fd1e27d"
                    }
                  }
                ]
              },
              {
                "id": "73c7fb55-67cc-4d31-951c-b02a3123985d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b1b2e18-e719-4d17-9dc3-a60a4e98509c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17b66c4b-1892-4fdf-a31a-2f4962f3dc08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9fe9b7a-479d-4771-9166-6c403fe5c35c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75fa6b0f-207d-4326-a2fa-32f242435d85"
                    }
                  }
                ]
              },
              {
                "id": "8d294abd-eed5-4c42-9236-ba9205995bbe",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b7e4730-b0b9-4eaa-82d3-9642bc0c7f0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a426a1f-5101-496b-8162-d738f0311fc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1e3e914-b90d-4d7f-ae0e-222d8dfcf0c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dfca5c4a-7643-4948-bf16-5f71c735fd45"
                    }
                  }
                ]
              },
              {
                "id": "19fcc20b-615e-42cc-9de8-17986583585f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10800e11-95e2-4a8c-b28e-8095555377ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88dc3655-1174-461c-8dae-54b05ec7f217"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d59f69e1-2416-4a8d-859f-e26cdb9c5605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "97393a00-ad9b-4986-b8c8-f6ef7d53d96f"
                    }
                  }
                ]
              },
              {
                "id": "ab8727e9-d17f-4182-b27b-bcd8950ebb8a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87f4a46f-5828-4bb6-a826-23a1b8ef445c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ad61364-9c23-45a4-ac3b-61a85a4b74ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb0607c-045e-4ca3-90a6-6e6999e7ec9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eff5e269-eeef-4d19-88d9-5d76abf66228"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e0c5935-fb1f-4646-a199-bffe82685225",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca672d4b-78ce-4b3d-8fe1-8dadc3f1f1ae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8375e797-02f9-406c-af35-d54dcab6ed1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ccda7bf-8685-4e03-b141-7fee25f5db29"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a94271c-981a-473f-a82e-fd2bca27f45a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2de5f2d5-d86a-4541-8e2a-3061694137c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5cb54c1-80e8-43ac-b2a6-d116b427f680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a357705f-d402-45ff-8523-79f7b38bd052"
            }
          }
        ]
      },
      {
        "id": "28385862-eafe-4b12-a633-1d4693eb1539",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ab551cb8-bfd1-4269-a95c-5352869c98e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f13ebbf-8d58-4a79-810f-7e45b198215c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4cec5b5f-3636-4cce-9b91-a280fb2e0f9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56855d61-3d9d-4257-bcae-f3027c50f41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15a985f-f7c9-41f9-9921-0bced6b7fe4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd47a76-1477-43a5-a548-e8a53721dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c0030f-2e09-413f-9b4a-b417b0212d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a70edd-e0ef-47ff-b2ec-092feb20f1fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f2fe9-f6c9-4081-af89-e8fc91c1bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f4da87-5db3-4fa7-a596-60c96599dfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c63a5d7-4789-4427-9ee5-1d291d6d1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77185d9-656f-4546-b45f-e71456c939a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dbfaeb-3963-4de1-9a64-3030e8556194",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3291de8-e9e0-4786-a811-b9896b0fc4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ec7826-8e41-4f8a-8d12-ab031bf66e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6575ee04-58ec-4b25-a241-07ed920e84bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d842be-8066-4b03-8f28-cff1df132c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48123506-a987-4c23-85ef-9cfb4df92de3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04563ad-abaf-4c6c-a3d4-a4fa2998820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c2a203-8857-432c-a125-122b201c9b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44e640a-9788-4058-870a-a412019e0535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4614c460-3e80-42d8-b8c5-4109fbb78b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033e4365-0cc4-47d9-ab2b-deeb9219a486",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a4e894-004a-4e6f-b922-4df32e4a26a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a873ae-f152-4eeb-9af9-bfa3e96cde51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9328883e-d764-43f8-a0dc-c919fe1d90fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c68d82c-d1cb-477f-a14d-5a00bf572e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89533903-0b4e-495f-a235-9e9940f3cf0e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d0992-b199-4656-9ba7-41f63f7ff422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7ac244-9f7b-4728-a93c-12bd3350108b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef006b-1b92-4125-a446-0b111f55206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "567162e4-e00b-4e7d-9a26-2dc3fb29d551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dca44f6-7348-4c61-90e4-b7ad39b9c048",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca8f81d-cab0-4480-89f8-6f47e232b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c09be7a-cad1-48ab-a38a-28edb34f3c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d08101-7ff8-4131-8c41-3e6057fe82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d82043a-8c68-414d-904a-7fac845240e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b5364b-d581-4935-a1a5-bca71edbaec1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8a5741-5ab2-41ba-b868-03d65a9fb7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069bd13f-c105-4747-82c1-a67f3376f9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9450928-7c9a-427c-9e73-b04752ce2861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f75b3e4-4760-4ee1-b4b5-c0e04c7311d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ba7ffb-82aa-453f-ba7c-29d34f2820f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c97e1e6-612b-43e0-896a-13ffb493b31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81517620-f470-48f9-a87e-752ebc30225e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619899e5-8615-4a35-bbff-ffcfed2e79da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dffd4aa0-3ac7-4f89-a0a7-cf0554e42de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f8858e-8f44-41bb-8b78-f0fdfd33db3c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2143915f-ee4c-41d9-99f2-47de6edc8dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd52c3d-2c9e-4c02-9e3a-5be42ff476d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad430963-d025-4743-bf7a-984be50c9c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40105480-a589-47f2-bd0e-4613c68b4401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dbda37-48b6-4d61-9a0a-5b1b9258a7fd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ba3050-9373-4a2e-a9d5-02e3436e041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d3d04c-7c18-4d92-98cb-eedad6562269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ac034d-c385-4b08-afbf-8717f50313e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66f902af-f64b-44c5-a402-1a7c9f24eafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431564b2-62b0-4cb4-b2e6-ad199b5373e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d75caf-7154-439a-b6ac-9538c8ccf04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bf7a0d-7aba-4e5f-9ef6-f3069d18e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bd00ed-41bb-4754-8479-b3ce68bbf5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54f40e22-6b3d-47ac-b239-e1811725a1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0368567-d575-4ca1-bb4c-eaba8dbfc6d4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4233ac3d-1c82-48d3-a010-6d018fe726f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2577ed8-bd9f-4146-b2c7-cde41938ae74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b882fa-a0a0-4d91-9d10-074689dc95f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "399a0c7a-3041-4019-bb05-22ac060e8174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107e2a19-d50f-4d1a-83a2-fd4f32011974",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573def4d-e760-46a3-8867-110b11a788c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e0d42a-0c94-4509-91a2-ee2d828b37e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c362a3-015e-4470-bea5-c360b3527c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "461fa742-879d-4894-89f9-66a543e08b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23629ac-4b6a-4175-ad4e-71bbec12781e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49d3d12-87c1-4c1b-b88b-79988a3f370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f797c75-35eb-4a5f-a80d-ddb4af0ce0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b19189-5424-4bfd-8836-2afcd15063e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f04239-3e54-4aef-a15d-6cbebc2b4235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a57479-faf9-4e05-a926-2846b328cd33",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae92373f-d1c2-4f5c-adeb-76acce101b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e487709-b7c8-45bf-a83b-2d011f4b9218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe831ff-357d-4cb8-9ac6-828b8a5f2f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd83a0d3-cff9-41d3-ad5a-ee11ac4e59fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10602b4b-f974-4b53-9af1-77027c7f58f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96126a5a-ebdb-4e1e-8195-6537845c1dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e93237-bd90-49d7-af25-993444892eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a998653-1bd0-4076-acbc-c8751366b602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa77ad1-a077-4f84-ac68-6a7c97166477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef390b54-1996-4c05-8364-ff1cd466d244",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53a6785-f786-404e-a535-9e839723414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44404e4-61e6-42a5-a513-8572680d234c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8781f6-3a95-4c58-8f53-df84c9f7f637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec93501c-36ab-4e75-8f9c-cb04fcadb3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd084ea5-f2c8-4364-8499-1da26d512159",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb94d8f5-5d9b-4ccb-9f72-2a0313c5108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ce6381-47fc-4e8c-8fb2-88659be56318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2977b85a-de95-4cc2-9c4d-6a9ef224aa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00121e2-6e2c-4135-804b-0721b4204e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d854b218-6c99-43b1-9523-4d08b03aec87",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b45c4b4-4352-4a73-8257-972402f87d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bd062e-06f4-4497-ba7e-a4bfe9527f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebca5640-2f03-4f2a-8393-b213cb50d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69992fe5-8539-4e31-a86f-c05ba4aee37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d782df-a587-4f6f-90e2-9bccffc8a923",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a39dcc-72c4-4ce8-afd0-5fe468dc947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6362cd28-3192-4bdb-b13a-cfb26497fca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871ae758-b642-4b3e-96da-97134889a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e67798-1128-46e1-9a2d-9f45c22d7d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b826b2aa-15ee-4917-8105-9a1ee7526eb6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a62e0fc-5e4f-4136-a958-9f024d8427cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7de966e-5c33-4209-ad46-7b99e933f101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fce3e2-5c55-4eef-b73d-8e1ea53d33c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf04968-a730-49c7-844b-c97ea8e41999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1f0405-38a5-47c9-8b50-30f2650fe062",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d59d54-36f5-4244-b215-4e1e9b273aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee884b3-bc68-4038-b760-ea964123d587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653695b6-826f-4ede-841c-2199d75ef640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed0cba2-78e7-4c16-8184-27966f44c96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50d4aa2-89e8-4178-95b4-66ec4d52e1cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8d183a-36c4-4fa6-acd2-e925d127437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017fb865-c326-418c-8c1d-2f3d0aea4696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d2d09a-f54e-450d-a9ca-879df461e5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "310d1636-30ba-4cd9-8c05-fbee86180c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e0d1a6-a6d7-4c68-af6d-57d4b0c635eb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676ec902-d702-4de9-92be-02c523ee0ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4a2980-61e9-44d0-a3fb-b7670ff61eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d6ea9b-d3d6-46b4-908b-110e4629a12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "066f8e11-0d0a-4641-9cdd-89f61770fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758390d6-192e-41f8-b4c6-04f4d68ca364",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd92d13a-b1a3-482f-a3d0-a1d0663b8c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02c8262-a8dc-4ce1-b752-fc4042a9bb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3543d5f7-5753-455a-a2d7-cd168516005f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f11e13-4ffb-460e-98a1-1858d7b67c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc16bc0-a986-4872-9a9d-b1cef8b31278",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53c2c4b-54bb-4ea0-902a-a7a439bebe74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabf58ee-b8c4-48ca-b41d-ba5ce01729fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26e350b-4093-4d6b-b2e9-529179fa7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4caff80c-c436-4256-9fbb-db6b3302d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059ba15d-c516-4956-8753-453c8dcd474d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a35d3f-9820-4033-8d27-05a99657b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac42bad-9c33-40e8-8229-cd626c7b9ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dd57f0-5872-4311-bcad-aaaec65ec28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc0010b-ef73-45c8-bbb0-4b43e61d40df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806192a0-e11f-4766-b1c3-dfcfc2ec361e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7145bf52-3cc0-4a34-b8b1-fa9251fb3775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867ecd25-e041-4f05-a1bc-8b32989557cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdc8a5c-5571-4b91-9bd6-7b5d450c92a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca18d93-aff1-4683-b15b-a1094c3f732a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24fb863-a0b3-4574-a28b-54d545a13a46",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b696909-2dcf-4660-a380-73c04e82b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de64981e-dc14-4811-83f9-bb446adf51f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fa4879-6598-4766-b279-77dfd7067ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df64c830-8862-4c52-b1d6-3da8ce5af0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa055c4-ca7a-42e0-b0f9-61b1206cacf1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10605e3d-5c9a-4e6b-9923-42c0c297c078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5307768-42d9-408d-aad9-0b3453ee6e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c571b-5dbc-49fe-89d3-0d11d3e61d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e558f9d-5131-439f-9c49-f0c26d829714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c20e6e3-66ac-425e-8390-32db5995b0e6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c0689a-bd10-449c-a19d-06024651aafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1006fe-bdc0-4990-aa7c-a7cb94bcd6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b244d53-df2b-4358-883e-4789112bb661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7cd7ae-5882-4312-a0fe-218f91839cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b015fc7-5614-40f8-8b61-eb476180171f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b661ba6c-2264-4d3c-8b75-74724385d03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adde79b-1f97-4f96-9de8-086e12f66121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25ecba6-da4f-4832-b786-3b63526edc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50d39840-b8e2-4855-bcdd-ee5744a3dcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588653e7-18c5-4d44-aae1-ff96d0501b89",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19b918d-fa21-48c9-b2f1-6a50ed4fb30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fb5b91-b97b-4d28-b11d-7e79b04f76c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af92ca5-0947-4eef-b5c4-4321e6494752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba908e8-19ff-4de7-bc7e-d7f0b2f3b320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789b6432-8748-4f7c-bb19-a114e5d42ce3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef18e2ae-89fd-4642-ba87-fd5a95f074d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e60342a-f422-4635-b439-20a320051c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bfaf4f-bbf6-4c3e-a4ea-7d72b411d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a1a06e-dbb5-4e5a-8346-8d9b0f7e4b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69313886-ea0d-4c67-8644-1b2fdd8985df",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb29629b-d174-420b-b445-a8b81ec48b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5056e8fe-5896-43df-9ebe-02492bca9506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779393b0-3255-40b9-bd57-18edc307211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72735985-2566-4a3e-a89e-5f3ff0f72b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c33d846-0125-461c-9f40-9ecca860ddb7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf097dc-1f6c-4ecc-bff5-75ebc5e607f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da36c72-e2ac-4e25-aae2-c0a96c709c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07398d1c-93f9-4680-8208-d15284b3a23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab42fb3-3894-41b5-adc0-7d4c615d815b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82edf4c8-12d6-46c8-a096-a0d3fac76e3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59ef4499-7103-4e14-9535-61a7e1a907e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6011e09f-ef44-491a-980e-5d1bdcb16cd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03efebe2-f3ef-467d-ab1b-fe04684b10e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad536d-edd4-4d59-87f7-4e48fecf150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c1a9721-8511-46e0-a244-b25f352cd554"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a31cc88-9db6-4bf8-a8f6-e40a3144abb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16236ca3-624c-4684-96f6-e98cc0a3d7d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc65171a-af2f-4340-9668-b6f521bf7ba6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58abd4f4-af51-4d36-8de2-eeba696508eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fcdfe86-4f9b-438d-9441-5686ba2b1658",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28b0adf2-c41e-49e4-994f-2c93f7ee091a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13e02eb8-c5f2-45b5-b83a-0eb58333589c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67664971-e59d-4034-97b6-a3dd3b4e93aa"
            }
          }
        ]
      },
      {
        "id": "72414eda-ffdc-434d-bfb7-7c95719b8c4a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a9b5132d-8656-4103-b55d-1713e8170908",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed3b46ab-3cba-4916-bf3d-2f3a9c4deeef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8405ffdb-f173-4523-8fe8-137e62a2586e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442df779-e061-413d-873d-565a2ea51f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f3faa4-ca9a-402e-ac7b-317703aa4c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e6c262-282a-4e1c-9eea-fa13a35e6ef2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d214f7c-2858-4c74-89e3-741f9b256267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a20246-93e7-40d4-a212-ed865500ad4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efe864f-23c9-4113-b3fc-5466caee20ef",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f21da8-83a9-4f64-9cbd-ba7efdb2dbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a815a72f-ec2b-48df-8600-c3e86a987a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9469ff7c-5e39-4800-b4d7-b6dda0a71ab0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf5b24-4ac5-4f18-b718-aa19f2a9ed7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecec14f-1d66-4706-abe3-a6993ea55cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383d16e0-b7d7-4420-a2d1-f076fb0f0444",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb0cafa-dd1d-4519-bd96-368383346308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb805f5-6812-4814-90e7-00faf3ed962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516441fc-6729-4b67-bfd6-6e9c1468d0d3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a089eec-4ac5-4d40-aff8-04f80ca3db87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218e5db3-723b-4ddd-8545-c13747d9c2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104c7007-b1e4-4bf2-9d69-3162a95febbc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0f7a70-974a-4b1f-8257-99fbffb314e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117575b0-a63b-4c2c-a719-7bb3c5ec5fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0df779-5ddc-490d-86f1-29d34793af2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a744ed-5564-43a1-aa0d-04780a527b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8bf507-c68c-4745-98e8-093d3991751d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f618dc45-159e-4700-bd35-43aafdf194e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836b0625-fbcc-4dc4-a40e-2756b50b4e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f493c303-dd81-4860-bedb-89044a21763d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc7e4d1-382e-4272-a8d3-29032884808e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f2482-773d-4a43-9576-782d89237d14",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920b30b9-9ec2-4576-992e-9fe707c52cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea360bc7-ff52-4b4f-ad99-1e4348f9147e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd77aaac-54d3-4679-80f9-e78ccac8d157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1f9f68-404b-4f14-b65b-e93e515dc826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394daab3-ef1c-4975-98f1-1b855a12d86f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c5368d-2e61-4909-a193-0230bcbd99fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55164795-891a-4944-bc0e-372cbe18fc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5ed2e5-813d-4c57-b5ea-9d6795cfb494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3399ad36-94eb-4fc5-9463-ed1e85058942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc74de6b-a69d-406a-9c5f-f4d10a695b6b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea93ddf-5ba3-4103-99e2-a5d39101828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9151f0ad-2972-4764-bbb7-1bb356155052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c27bee-b36b-4082-9c70-0006b3640804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524a5de7-3460-44a8-8889-e6632e915ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ebe06b-4a4c-47a9-ab35-4a1369e91717",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a488554-e7dc-436c-843b-58330e3bcdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5178425b-a27c-4f67-bc7e-0224d66ae070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268ce89f-7f9a-455c-97ad-646533d61c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f126eb7-35dd-4a4c-98ea-457e5b27c260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483d2a8-1b95-4264-98c8-95016195b91b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee600b6b-5b83-4a08-8bd5-aec80cf4d9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1b983b-7165-433a-804e-0936af97d087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49f0857-e323-4169-abcb-29a2a732d358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd65d19f-7278-485f-8c22-733d640b3a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e06198-855b-4d03-9f24-72ee9d12bbf7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f5e798-ad51-4080-b97d-cc96b73b1bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ef9fea-65ee-43b5-8375-3c6042fea77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442a4d75-f375-4610-8fb5-11efd12a8511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f44b848-97fe-466a-b96e-d5e649ce1ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93947a98-cdd9-4b3a-bf6c-7128982e0e1a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7582964a-67ef-4f1c-b9a2-a183b15c3446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d592492-8c2b-4718-8565-4813ccaa382c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ba3b8-c00e-4dfd-89b6-307bcc0e8a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd8c24b-58be-4a5e-b841-5b3f7bba07f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1267b8-f0b8-4207-b854-0469ce189d24",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c262d0-84d1-47d0-8617-a4dbe2517052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf7c794-ce6c-418b-82bd-3826fc721dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c5731a-6182-496b-b07d-c1d2d7f39366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c3ddca-8a5c-4230-821b-0008142965cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c00eb2-5ec1-43d5-8477-9ee25a012a30",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85113328-cf8f-4c08-a048-050aed693c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6a03ce-05f2-45c9-8e76-8acc59853ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1673c34-bd06-4d77-90ef-83b18fed4b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85748fd-5807-4823-98e6-0a878c9bf3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e96351-64f3-40ee-8151-4733b2f1789a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2ac54a-7cf4-45a4-86d7-163f7b757ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2923d7-c718-471b-9573-ad0afdf99a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d9f2a5-6e72-48cf-a2f0-0a14d5b4574c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee0497f-1e97-45ab-9c14-50240bafa7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a1fb38-7361-470e-be59-399513d183f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769ff051-e1d2-4ef8-b5b3-f59600897ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8185f91f-0dd6-4c82-8e70-417d6720aa08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b21f5a5-2af9-4713-b9db-01b24449f2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c56335f-8372-47f2-b5f6-fcae9feb3ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa23c75-a653-4dfd-9673-ca59dd05811c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790c124e-378e-47f2-8e8c-bf79e692a121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89048261-9d87-4f82-93d2-70d321c05470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a26e475-64f8-4067-aefb-13fa1709cfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492bdbf4-ee5f-4c53-a4e5-ddaedfe65716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3b4fd-8c75-427d-93f3-7887643c3015",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9de666c-c5e2-4f27-a4a5-4fecb5725a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f382fbd6-12da-462e-bfdf-063eeec641da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7621006d-1803-4bc8-81fb-94f962f190a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c486df8e-7d98-4121-a49e-0865daff8d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c2a364-3ad6-48e8-b699-8df5752b097e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67240736-e7ab-42e4-ae8e-165d581a081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0435ffc-c412-4faa-a76e-fd9b667a4836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87502ee-7c4e-4551-9b5d-204aa4bbb57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efc3199-f919-4b36-b70e-03a94e9fd456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e6345f-15ab-44b4-9dfc-432f0db5da8f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe94124-5344-4bca-82d6-17b7e8ff595b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b97a50d-40f8-4465-8ad7-51a8b17357aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc78cb85-5294-42da-b868-38eb1effc644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d3ee18-4933-41cf-b2ca-4eff0ec49141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d27626-4a8e-4558-a707-4056feade80b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13d6270-a482-4d7f-b9d3-5e3413dfe6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b7bf30-ccba-43ad-ad5e-7e7f5fdaa67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df450d1-efdc-42d7-a047-5052e979a07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6b0e0b-9030-42f2-9971-6151c5f19024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f351271-3da3-4da9-b003-66e5ff61bea8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4559e105-43c9-47a2-864b-304edadad3ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90118907-bdb4-4573-96b3-663b87f534fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b59a35c-d25d-4dd8-b74e-e649fee8b7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80eba708-a857-4a95-a4fd-3597a2999bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d37bc14-4adf-40d8-9517-12a89cfbc283",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c6bd1-c354-44b8-9bef-8026167d154a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b43337f-81a1-44a0-84d2-bc5af1769d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fc7bf2-088a-4036-8471-ae2e75e67479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b38918-7e26-4bef-a7bb-84ccd97948e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b9a8b9-349b-4a2e-acb9-a19eefa74c22",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1062de-c2cf-45c8-a36b-e32a5d95babf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94791fb9-c6ae-437e-8615-6dce2aa78df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd018ffe-bbf9-4fb4-a7fd-714aacebd672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7126b9-9a23-41d3-a0d1-f8f96d1dbbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04edb0a-2eaa-4cfb-96a9-1b2d08806f67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a503a5-ff39-4bce-9a30-7ec77e1a0493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c755d17-a2f2-4c6e-9ef6-4e25872cbb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e640288b-e526-4b29-b550-67fda829f0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2444a9b1-93cf-4d9e-8107-482837d7264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f77a85-eb0a-432c-acaf-634cec76f0c8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cdc760-ee22-4af2-a2d8-7daef6ca1ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a6e7b0-edc8-4b7b-b998-b88632d48824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7784d61c-a2d7-44f2-a82e-2e40c682f7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71259bd-1c2e-4099-963d-5a87bcb6b658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8384a5c-4cc6-48b4-9c9c-7cdc8d5934b7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1129499-0845-4c21-b31c-500b6d58987e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddbeb746-c9ef-4722-9b8d-eb6489fa822b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee94c810-f301-49db-9f93-985b951a8f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f50290-d0ba-47a1-a585-e766008c0ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c37235d-9327-4d71-a1e1-fb5834bd36eb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c5b2e9-f0c3-4104-91ee-60558e675965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c7dcce-152a-45d2-a395-be97f78ce78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ef13a4-4563-4e0d-8341-8674585128cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db2d9c3-200e-4251-9931-33da81243210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241579c3-9a24-46c1-8b7a-82e998e3578b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06209004-de21-4908-9c32-fe4ac28e535d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074f73d8-6fb6-4ea0-bfc9-3b9d5c22d393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21a6724-9ced-47da-a53d-d9214442b14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77684d01-cbbe-4594-8234-ac492b89f7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1db3895-8a19-4f57-89d4-87f20220a276",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa57208-b055-4218-8626-5d5c2b76b64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54b1c63-3150-4484-ae15-a7a3bdb61ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c2efcc-682b-4f9c-a0db-588a88c9529d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d2894a-497e-4018-ba85-e708a94f611d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2c9ea6-1db3-4f38-9e00-3ee843a39a0a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb549c8f-07d8-48d9-b027-5a233098e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e1b148-8667-46da-8c38-31b9ee5f607a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ec3fb3-d80e-41b4-aeca-3d307b3ba3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c155bedd-2464-4dfb-9ffb-322d963007aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e22208-624c-4d9a-8598-2a6642f03ff6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f307a50f-9a74-473a-bbf8-e984e82b6eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16876b1-4186-441a-a72f-dd5dac58dd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e88fe9-a058-4c5d-b7bd-e6d4abc55b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee1aa5f-2e12-49db-9abb-518e7cc8f12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160ab106-bf3e-4ff0-84ac-4101f84be6a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd9c81d-23bd-4426-ad6e-db54a32087d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8490887d-0fa2-4949-b217-cd9dd17ee2f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fe45c2-5725-4a74-b9bf-d206d2ca83c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552532b1-4043-4587-b5ba-8bca5ac6b599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a9d0a5-2a7b-4168-8621-6e99bb4a925f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aac7947-7878-4fd8-b540-56eef600f792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1cfb80-d454-4c4e-aa13-5d6f617e41f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5e5c63-00b8-4765-b1a5-9dc12cb7215c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06312ec2-1973-4a61-840e-5a75dd144d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b6ac38-6ac5-4368-9d61-5f2e50ae72c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e1b16a-2a3c-4f32-be01-b570798077bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9419383c-58f3-494b-a47b-ecc2a62bddf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33421963-3222-46bb-8f1b-1ea35835e5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6d2f5f-b313-4cf9-b5d4-4085fd311a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c3fbee-d674-4f30-88b6-039f95fb9be5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415d80c7-78bb-49c0-bace-e084cc7282de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa8f6e3-f548-4183-9e00-f0037c8d01c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f291d89-42d5-4492-b90a-2bf660f1b063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e66f8f8-7b92-44bb-a08e-b02d962deb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d9e166-67dd-439a-978c-66e04933176c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71943166-278b-4d3f-864f-d6d22c4d5ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4d1ff6-d6ad-4534-afb5-ac8ff6bc6da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5f6ce5-bc3b-4f07-a4e0-da4d9b63a9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e375888-4e9f-4a8c-ad36-05d0a980ca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb24be22-b743-40a0-9845-621bd430a1a8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8579d4a-7d84-404c-a136-65e819ed477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae52902-e96e-406a-8152-d81e18cbb19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e91b0c1-1e9d-4ac2-a801-a0ddd9348ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddfa264-b265-4a96-b253-e6d4035853f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b4c6d-dffc-4aa5-8c54-66c5a4c18cb2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb922aa-43da-497c-97e5-10ec87f62dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0610edc-7d96-45e8-9c53-9f81d00d87a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9ec877-904c-4866-8ab1-75f953a0ad06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21473c1e-f2a4-4b10-9b11-0e812a2395dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e70c25-e866-42e2-9b8a-8e77d65048bd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ada061f-d595-46ae-8050-e40085bbc80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e71aa47-62dc-4802-a672-0b29462c5fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edef547a-872c-4e07-ba56-3356830a3249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3002601b-2002-4b1d-ade2-9f984106157c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808daa51-c362-445d-89c5-4052508d81de",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6733e0-190f-4a6c-b6a5-27de0eafba40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce91d553-e1cc-4861-a64e-2161e5b42658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a867aa5-b667-4af6-b85b-45983cd33b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14ba29b-18df-442c-afcf-12c1a28c3506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6085a307-3762-4d74-a679-30b9f643396b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015cfcbe-3cb6-439a-99b8-0da15727780b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0281e61f-5720-4229-90a8-b59b084d2ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e548ce37-b259-45c4-a1d7-cbd1efa77e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b691fa1f-01bb-476a-bbbd-ed72c4114b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c70da7e-4917-4d1b-a196-3fd47921c28a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818ea2c8-ecdd-4ae5-915e-b9b47286c3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a103957-c0c9-40a3-a95b-65f8fe0997c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032c1664-62de-4087-8e33-fbd5de775c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63d8065-adcc-489c-83f9-e73af003595c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06e0d9a-2e80-4be4-be46-7b0ef910494c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa72b9c-74e1-451b-9d2d-0771e1fb1e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aede90c-75ad-45ed-985d-07e7c9f314ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeddc85-7598-45c2-b433-c131fde36ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b4cb9e-0494-4c7d-a439-0b7ccc0a7eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fa8d36-8514-4559-b3b1-4cc5fc056a6f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe41630f-bf65-4e25-b520-c768420e2c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5c69b7-b8ac-4507-b6d8-66ea820467d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076f164c-bc40-4915-ac64-8c2ce5aecbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dd36c8-692c-4cc3-b826-d5ef4b5472c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cb039a-7680-4348-bf58-02227f7d11bc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982cf267-5312-40dc-815f-cb46efe1c57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12d98a8-7f51-413f-9887-cd2aefe418ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7847669c-57a8-4c52-96ff-92126b577e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017d3cb9-e48b-489c-b026-4888a690e23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d533da-7498-48ad-bb76-3658b0a86b28",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32938a44-2078-4587-8bf4-21f8d8e522e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64c7b61-1dbb-4716-99f1-29ea8887c73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e81d0dc-d70e-4ef1-97c4-0592fbd988e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47edce47-424a-43c1-88c1-22df4a52ca66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd5630-ceed-42b6-b00c-61ece1fd7156",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41983716-f1c8-4179-a141-bc6fa741202e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d10ff50-c5b3-4a40-b446-f30928c978e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215abdb0-f048-4a95-97f7-e0e4a8f87dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83a1555-4013-41a5-b112-0d4be33594b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1164e5e-6aba-4ef5-938c-90e2d09580ed",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeee010-ebac-423c-993a-cfc175a86ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa627e6-b75e-475e-849d-c6b526b4fc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab2667-d950-401e-8e3e-47a10582cfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cce9f1-2fbb-4400-a437-bf267eb3bbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9676898-1d49-430c-a12a-a917909b936e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae095a3-5e84-41fa-be30-e56888b1650a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4a898e-dcf5-468e-9a08-46215d10fc50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effd49c2-c692-4aa5-8d51-c7fd0bbdbdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c9d2b7-9d30-4956-b848-5a36540bb6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dbc5a2-6bad-45e6-bbdf-804101d76eed",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d32e055-b637-44e4-88c9-4a56b70d4ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fcf77f-5773-47cb-b535-133751500d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbb63d5-76b2-4d53-a9d7-9231a402b615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb03d5a-0e55-411b-b4c1-d100b85c6855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76c958f-9cc4-461d-bec8-8e42a04a99c5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e876d10e-b61f-4bf4-8184-fd537371b927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac635a9-5cca-436f-8dd6-1b1c492a3163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e24001a-fea7-41f0-b939-39b44f1f983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbae174-e2c2-429a-9a16-15914b8d0d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098c6968-f091-4e58-a1d1-c9f1cf820be3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fffbfa9-7c58-415f-93bd-1928bce32e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e456501-630f-4df3-a3ca-7a4b8293f94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2f6edc-c670-4505-8d41-e9c79629075b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40394c2-5029-4592-b8ac-33f92bf4a4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316b6fbd-3178-4246-9681-b0a24f3c7227",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc4ddfc-b582-4a76-956b-3afe0e2bdb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44edadc1-f3ac-497c-8b8e-db202007db41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c82ca09-4c73-4ddd-b9d1-a0e36da7ef94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb72238-204f-48bc-ad19-3388bc03c2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dc4bea-6fcc-4395-811c-c8dde223b0ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ebf2d7-b89b-4d1b-93d7-ab0189217463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bed3c4-6b67-44c1-b0df-c4f562e3fb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d5abf1-211f-4272-8942-3890705a0d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c023dba-84f4-4d0e-9928-879096364e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6c6709-6a02-488b-a887-44f2f5087720",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed68982a-2297-456c-a22b-9e53a03343c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863283db-38ba-4f46-a6a1-8c1f475fb5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32b73a7-c2fc-4e30-9aa2-3afc8df5d29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe05eed-fd14-4a15-a920-ff63f04759d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f05de5-ce68-4efb-be1b-cdfad9286553",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397f232b-49a9-4325-8070-d0e39f1180e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed299814-1eeb-4c5d-9dcf-d91fdb002988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e023c20c-8a14-49f4-abc0-736445c84c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18722a9-20f6-48f5-9b27-48058cb2027c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43aecba-e1f3-43e7-9781-d4f02348030c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb02043-c751-4b16-a6a9-3b1889a40673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aab4893-3249-4d26-b623-cef23f10c7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a3abb7-8a3e-4449-b8f0-6a1844170d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317bdc0c-684e-487d-80d3-0f1074139085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b809f44-11d9-40ef-b392-0078a07bd7e3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7dff7e-fe03-495f-98c8-c38122ba5a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52e872b-0b3c-4791-ad84-46c18afed073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e201bad-4c03-47dd-9668-9e0c95778fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90517c24-1f27-49b3-8ece-3b3a9b39af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0674dc-3d69-4165-9296-e542429b3caa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c258802-cf54-4a43-87f1-5aa3ad180611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acc3f8d-f4ee-4958-b5d7-0c715d4b320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148c8743-dab7-415c-af7a-7e47a41e79bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d82a8c2-ce25-4d52-91a9-a338418f6c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f5a1f4-8da4-4802-b3ba-15c22d684f7f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0608869b-3d48-45b2-a16c-fcd0b577ad10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb03a659-a05e-4cb4-b0a3-ef90cdd5ad8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f6a8ab-604d-4e84-876a-526f5fed4368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822d9325-175c-4756-b5e0-520097a3bddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe96e87-2abf-4372-a7a7-15a9e8787631",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79483066-af64-4340-9f0e-e425b78439ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743fa8b9-85ad-40a3-9372-a4964cc80591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb65460e-8619-4b66-a95d-852e5524289a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f1edbd-0228-4bdf-aecb-64e7a8644218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f423cb-8b04-4c8a-be48-5325fab63d0f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aadcc4b-496f-4c82-856e-5a53aad44ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b44e307-306a-4fe4-8928-e3442ed43144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c74a74-6056-4c90-a21c-3c67bb9119f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720005de-d012-4bd7-92ac-305d5461947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84cb566-07c5-46aa-a37a-69ed50e4fee2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5529e18f-110e-4785-b6bb-7fbe3d32d2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c124ec14-8a29-48fe-abff-cdef5bad0876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcf2420-59e2-49b7-821f-421d58fed709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c730ed6c-2140-480e-a181-89b5e9d10e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b5f3b2-5184-4610-b95a-ab989221dc5f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2347ad95-66e8-4a77-ad1b-29b01a4f4e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fc8b85-f2ab-4dc1-9368-64d9953eac31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633cb5d7-b126-4d86-a481-65e9e0095aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f62820-cf84-4dc0-99fd-84fde9aa98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20829790-955b-4582-ad88-f5636843f403",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20165b4-2a8f-4a13-b490-b66e472c717a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b764fd4-5182-4392-9704-e91b23da0e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb277a-f85a-4727-8b1f-b05663e41e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e228e3-f451-44a1-9f9e-1ee28e1f55ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc548be2-f1d1-4a7b-b3f4-672c9573d65f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251c33d3-ca3d-49bb-b743-231b342055c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06df6ba5-87e6-4a88-86a9-f13fb9bfff8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f09a9c-5d29-42e5-84d6-e196942e6218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d73b51f-4a0b-475d-b4b6-9260777c155b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb4f70f-9e6b-42cc-b362-cd070f0956c3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf43088-2dcb-40db-91fe-2de81f270a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292abaae-2c43-41be-a778-b22d892aedfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983d9704-2117-414b-80c1-318a62154229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb60055d-5d25-451d-852a-a9e46d412aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9076a731-6347-4cba-a3b1-465df6a8d2c3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9419c663-edac-4f34-a9ba-c4de778b5482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b798f1c-730e-4e31-9a38-2e4f2ce14301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3da86f-0129-4ee6-9e3c-d56c4be7adb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6a8563-1467-403b-8c5e-02849d303e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d22069-b84f-4696-9c52-7c0c893e7295",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2a7b7f-b16c-4784-9809-ba51d2dc946c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "562031f9-a83f-4d8e-963a-05658ff45797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b17ee9-6193-4bce-9e36-d2e795c5b6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dac674-7906-4ae7-8083-41ea453e3d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443d80a4-66b2-4544-ae61-27a2573bb250",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e51d364-eff9-4741-9a60-f330481eed2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfdf8391-4c30-4892-8b53-863002a1b56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7c2a95-752a-424a-bdae-cadda044684f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3302c628-aba6-4374-b1b7-49173e9445b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b91fd92-6b99-402a-ae64-9cc7d556f5e3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69341215-9c05-4de3-8474-c2a741f0073e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a10e4a91-2c33-41d7-a505-3078739969ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3603b85-61b9-46b4-92d3-eb461793ad73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448d2cae-e842-481f-a3c4-72b3fcf028a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557322c8-77e0-44f5-857c-c13252d1486c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fab2fb-41f0-4332-b6ba-8440a3677c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5820e3-896e-45da-8045-6b3d1c88a77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af546485-6ed9-4665-bfa2-f586ba8738c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57c3b3d-8bbe-43cb-ac7b-06ee29be5bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a14416f-594f-485d-ba8b-b629442eab1c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0ed070-53d5-4c4e-837b-b919042913d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82bb9c7-2976-403f-85cb-81a8434acc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a896b032-4d99-411b-9627-0b056d2318a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac58d3d-f024-4720-82f9-e1777e0f05b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a9a2e-eada-4681-a9a8-0516cb0096a7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f50b235-3eff-4a99-97a0-76e8d92aa3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e77eb01-c85d-4df4-a523-2d8b2fcc055f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57683583-fa0f-4de2-9fac-72407dc3ca19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2fd4c9-cc60-4002-9dd7-334ce80d9750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bfc5db-68a2-49ec-83e4-aff4e8f538e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a8b599-a03f-4e2e-a32a-1d75af91d694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99967a5d-afe4-4750-a308-ebd3a2790de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714fd586-7f1a-438a-a5c9-fac60b9a5a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01abbe30-4fe4-4d60-8743-4d12e6ef34ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e5f6e1-7df0-4a8e-a33c-23c4cbe0fd78",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c262ef-7d28-454c-8a83-771fd6872dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435dc31c-affe-4fd6-a0de-66e2f7e1a21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02c157-dc7b-476e-b562-58a5ba5de556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ff6767-0c6c-4688-991c-c1e55d969e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f05cd9d-6a91-4281-beba-95230b86f053",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409e368b-10d1-471e-85ba-7eaf14b5401d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770f5e99-1531-46fa-889e-47f960d54608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f62105-7739-443f-8d79-11a3d3f7229a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee698343-b777-47fd-8ed3-663fea506196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b7df9c-2daf-4c57-9740-f707ffb2695c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ee7cb2-0a1f-4fe0-8fd8-cddeedf05757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56ec5fa-8606-426a-8749-46608e5a26e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2e7e28-948b-47b7-a1ac-c39dce6c142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cde615-1dc1-45e1-a5be-ab5fbc66af11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd452cd3-e3fd-4ca4-9fb9-0246ae67de97",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f859e7-3245-4a5e-b995-6a204719f5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080d2041-dbe6-44dc-b8e1-559b1196c0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9712217-9fb5-4c86-9396-c5dd27103fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb97300d-1353-459f-be83-90e303d1cf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efdaaee-4725-4620-a520-6562db50179a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deb73c1-cd50-4df9-be62-cfb5d9088c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63225c11-d58f-4f17-961c-038ada9feeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85257d2-1e2d-41cf-b1e8-875486e626be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243a5509-1c6d-4b20-a9d1-f196e81c114b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4af445b-02d3-4bb6-8374-28ae43a85fb8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c50c44f-4f5d-4968-812e-dcec7784022d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5215af07-5546-4e25-818d-38cfccd9ae2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73883b5e-7f2a-48c2-b915-29baa9aa0639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f858d94-257c-4ec5-97bb-adf2d48fba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f1664f-d3a5-4112-9b70-75c0c4af0400",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491f227e-91a9-4f63-baec-13989b38cee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e423602a-e70e-4b88-807a-a18e5d86b34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd39cf6-f2cd-4acf-9d63-a28579e0ca15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e2954d-cd96-4210-88af-87c252252050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1a91a7-47de-4194-a967-492bba8f6922",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa518b58-5984-4c0a-8564-ad96ea28981b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b74f138-97e3-41b9-9838-cdab7567224d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddd2f0c-b447-41d6-acaa-0e02168ecf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e91db0-d450-4e32-a2fd-449602d166fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aacaf2-e8df-4525-a031-c6a4d3cf2597",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c983e595-7d1d-4ec0-846b-b27589bb6bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7204c67e-5b02-4c45-8ba7-6cf795da6ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632ef66a-b28e-4cad-82f2-6ef323ab2959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca215d1d-9f3c-4396-a1d5-4b2a4fcf16eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1b70b2-7a97-4938-866c-759dfe9e26af",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12702fb5-411f-492c-9c57-87f0654e04c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d563116-2242-4e12-8489-6bbecba5ffe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd9ec7f-3077-459f-9e2c-fc1faac8dcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd67b676-b5e7-46a1-9c91-6d51e7668e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd100c39-4c0f-41d5-896c-368d35c8557a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536833a9-9a30-46e4-927b-8e932cf989b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833085d0-7f03-4627-8958-b5ab931d800b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8763c66-3edc-4070-9d72-df3a96076f16",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec0dab6-34a4-4158-aa59-45ef02adcc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b0b9c7-144f-4460-ba0a-5adfa228e36d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a01427e-e853-48c5-8b34-0fc6858d9cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33878dc-0870-4fdb-b679-461e2240f153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38933460-d086-4d33-b7a1-68d398a7777c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f34514-5e6c-423e-8db1-16eb0f251051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec5730e-5256-47c2-b15e-e2d354ce2530",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b503c8-5191-4051-b915-d7abbde11a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f561a6da-8d32-4858-9124-be57682acbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecc64de-610f-4eac-83ac-84aecae87d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2ab10d-e023-4646-ba7f-045976ead448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a51ce0-542b-4771-b7cf-3e0b2aaaf904",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aff174-ac82-4fee-8ebb-37c46014ab22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204cce71-d31d-4aae-afc6-ed0e819e325a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8b744a-4696-4b54-b7a8-98540bba64a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9122981b-da94-4718-8a7e-4236be8596f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eac3270-4b78-4bed-aa4e-fbf37b6148d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358e1537-d49d-45cc-982c-3bcae8b451e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720b9133-673d-4a31-a0aa-29e1aba84f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac61958-255f-43b3-909d-a0817f2230e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f833535-d080-492f-8640-b1baeb4ebc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab3d77c-9c12-4c59-b590-5d359637d329",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f66e85-de38-45a2-9b34-8e15e896e4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90db91a-979f-4ad6-afb7-d0988659faf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ade45c-8505-41a2-bde3-c839e2b00689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69cc035-bdb3-41fc-b372-9e82f287bb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac7df9e-f3b8-476a-9d69-e6a0a20d766b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6842cad0-85b4-4856-9c65-670dfaffab9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fd5cc2-4815-459f-8288-87da6f19f8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af9cffa-9a22-4c03-acad-6253fad45079",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8c845f-b3bc-4406-9353-513fbf641b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0443d9eb-421f-4587-b6bc-59ce3225c4a3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b427bde-5286-42d1-bcaa-39f189ba8aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9efad7d9-79dd-4b67-8094-75f24bd6413b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899e2406-8a73-4133-862b-271249ca7d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef168b9-c47e-40e6-bb39-218741162c5e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d754e7f0-1251-4dfe-ac0f-9d124aef758b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21deecca-6f90-4a9a-b340-a251d19c92aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a651ad-e66b-43ca-8268-7ec678093416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33cce540-85b9-4e30-baf6-e80e91175663"
                    }
                  }
                ]
              },
              {
                "id": "b7349a49-6bba-46ab-8832-d9f1400a5d2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de39e301-4fb2-400f-a048-a9636f528ae6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20a6a4c-9608-4206-b7d5-1ba8b6a3e43d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9717a78c-5f8c-4e0f-9451-b0150fd72f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6df6e5c-a805-408b-9d30-5dfefceeaf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef546e59-72b9-4f0c-9770-edab492b2ae9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ec22048-df97-4fb3-8444-c22d9ca2e847",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5154e00-3152-416b-acc0-8ecf97ca3d7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdbd8677-45ca-40c6-885e-4519a8e92240",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e0781b5-15eb-440d-98ce-6e4a9d9ccb36"
                    }
                  }
                ]
              },
              {
                "id": "6c035784-7f26-4a91-ba61-71368b4cac27",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "878e1f55-81c0-4ba5-9cca-159c264ef5b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94454c1-716e-4295-9d14-1ae170aa08e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9edbdc21-d12b-403d-ba1e-2a036fe0a300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0e07fc-8416-42f9-b8ef-bd8eda958fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aa4d69-47e8-4287-ae03-55f689185cbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "57bc486c-ceb9-4d73-a471-da36d444c708",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3fac6740-7539-4cf5-b10c-306d91699717",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a51061b-f105-4df1-948a-14a530b46ca4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "335a736d-0d51-4bf4-8420-672798bf0857"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1744e0-815f-4b7f-aa70-7f79aa318fcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6705d24a-bb21-4c2a-8d83-8c494a0a598d"
                    }
                  }
                ]
              },
              {
                "id": "0503faac-0aa2-482f-9c4f-c1e5414e1494",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e1b9b1e-22ac-4a5e-81ce-7738e05d08d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e46c086-162e-47d9-a4f2-9a6c5468ca2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e932c2eb-516d-489a-9e06-5c17421b1d65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed7057b0-2e6b-499d-afb5-de5122477a09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b4f2cd7-0a20-4e75-95c4-1fab68f39b39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8d8c33d8-e734-4d8b-9420-9f8d50d4abbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01153a8b-4a71-4811-b4cf-65e9e1202be9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65ece63f-00df-48b4-bd37-c138b3ce67b3"
            }
          }
        ]
      },
      {
        "id": "ce19facb-bcce-4c48-a75b-2a25670c4036",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4950f21a-566b-445e-b965-a11fab5c2aa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93ea4f24-cb0a-489b-88df-6e5e346fb63a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1579b4-b0ed-419b-b712-3dc5a0255642",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b3f757-490b-421b-9090-a132e4713e60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "752bc3c9-5bfe-49d8-916d-e0090d3993f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828993a8-1069-481a-9a4b-b3f9ce4db0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fade6fa0-a564-4f47-b969-89006f222908"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a229f3fb-a719-43e5-bc4f-819453d11d56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "842ee3e2-3b7b-4559-b18b-af552a6d2383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a36cfcb-a686-48f5-9212-9232ed86adc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58b08d6e-f498-4457-8fa8-3b5ead38281d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66d5d1b0-75ba-4c4c-b9a7-1687cf0fb7cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57d27331-15ba-4dc7-a105-e4220fd00dd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ddb7927-6db8-464f-95f5-c08e0e9933ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "854f5498-3bdf-4511-b380-f47774e90000"
            }
          }
        ]
      },
      {
        "id": "b6a668bb-8641-496f-ad76-e4ab150e3d26",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "07df81da-e6b5-4094-a11a-0816427cf9c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad9695a4-a8b2-4b48-9b2b-ae9ebd48b38a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f6066d1-71b5-4fb7-a154-a2c8197641b6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1843ca1b-5b1f-4800-b715-505deaedeb8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d19f0155-147e-4a58-8ace-4f29429cc807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d0c182-e783-4d21-9801-fe99de84f10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f02f0cd-47fa-47e1-ac14-8131d0c1d0e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47aae839-0ca4-474a-b112-6efe2e60b1b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a187aab5-2285-478f-896e-07ac1814b4c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea790e9a-ac93-42bd-ac18-e8351f65ceef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d0a0802-6ff2-457f-a060-9ad622920fd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59cafd77-b57d-4888-8a9d-ece3cd9fee9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40872ac8-77d6-44ac-a727-d6541dd1cb05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "123a8681-10cd-44a0-a84d-8bfb2042a753",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe5054c7-bfa1-4c3e-8295-33745692143d"
            }
          }
        ]
      },
      {
        "id": "ecb78691-8560-4808-b244-c2959188c831",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dfea36fa-2d2a-4d1c-a037-156cf18d4344",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a214e487-6cb6-4163-a054-8bd2de9e18f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a1a50f4-99d9-417a-889d-9057c8100426",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd125046-fb75-4f2c-8246-cdd4cd5b7e7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34bf37f6-7122-4458-be42-5f205280bf51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00bc7e9-18c6-4e59-a135-7c1400cd80a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa3f4013-c4b1-471b-ae7f-adb53aa078a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1450eeda-b99e-4291-964b-82154f41bca0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e2d9df2-9f23-4361-bba4-0edd5681e066"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "feaa094d-2730-4fd2-b135-f1f528bcbf33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5cbbb49-15bb-4da4-bd98-e15048072a16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f76bd6f-4247-4088-9d3c-b01bd4afd73e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a6e1d1ca-2ee2-4d85-a128-530a7fecdb82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e2432db-fcc1-4b2f-a747-f5b0372bdb82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0b21c4c-d457-4baf-b27e-3ff596955f16"
            }
          }
        ]
      },
      {
        "id": "79890fea-e3dd-46ab-8ea8-80f10cb2b71b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b82b62bc-8da9-42a3-8cd5-2f4ed10bbd00",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44b498d4-3c7f-4281-a0c2-d57b6a8d69fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a21bd028-51ae-4054-86dd-11637f34685b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40f33783-a76b-446b-8b41-dfad24e349ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd0e8a6d-dd05-46a5-8372-eb2a6bcfc2d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 142.87698412698415,
      "responseMin": 5,
      "responseMax": 6980,
      "responseSd": 590.0172891820727,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724978548827,
      "completed": 1724978593281
    },
    "executions": [
      {
        "id": "73fe5716-2206-4a9a-a9f0-cb3a15fbe207",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af29979e-4c7c-4ff1-8ea7-36a12c6a26f2",
          "httpRequestId": "82245e27-1f78-4731-a8f4-250f35af9253"
        },
        "item": {
          "id": "73fe5716-2206-4a9a-a9f0-cb3a15fbe207",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "783bac7c-abec-486e-b5dc-005a1f100eee",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "001db506-6fa4-4da3-bada-8247524d8c2f",
        "cursor": {
          "ref": "0bbbdf90-ad09-4d1b-bbad-e1b9df72e165",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a55ce408-c50d-4910-8f9d-3e810f276c35"
        },
        "item": {
          "id": "001db506-6fa4-4da3-bada-8247524d8c2f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ffad1e9e-9180-415d-ab72-8f85a37de2ae",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "339e2697-7d6b-4ee1-8a9c-6a11d22e00bb",
        "cursor": {
          "ref": "6b706826-406f-49a6-9493-9974161c966e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bdccc3e4-7708-46c5-ac32-fd116e8c8846"
        },
        "item": {
          "id": "339e2697-7d6b-4ee1-8a9c-6a11d22e00bb",
          "name": "did_json"
        },
        "response": {
          "id": "ee2a2a4a-dc8d-48a4-8bee-268034ccf2c5",
          "status": "OK",
          "code": 200,
          "responseTime": 442,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438ac7a4-f4fd-46d8-a1e7-f348ea9799d5",
        "cursor": {
          "ref": "235ec3ff-0ce4-4447-8781-8ed0aee3ff09",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "368b55e5-746c-424f-8127-9a41473b1904"
        },
        "item": {
          "id": "438ac7a4-f4fd-46d8-a1e7-f348ea9799d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba64d573-bf9d-4b61-a9dc-ce1b5dfc99a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 246,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438ac7a4-f4fd-46d8-a1e7-f348ea9799d5",
        "cursor": {
          "ref": "235ec3ff-0ce4-4447-8781-8ed0aee3ff09",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "368b55e5-746c-424f-8127-9a41473b1904"
        },
        "item": {
          "id": "438ac7a4-f4fd-46d8-a1e7-f348ea9799d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba64d573-bf9d-4b61-a9dc-ce1b5dfc99a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 246,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5589bd3c-da94-4840-94ee-0c79c06b9d5d",
        "cursor": {
          "ref": "e87ea396-c5e9-471f-ade5-c48063c1cbbc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fcf7dc9-8eca-4e57-b210-a7443b9ac898"
        },
        "item": {
          "id": "5589bd3c-da94-4840-94ee-0c79c06b9d5d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "55829c83-537d-4b5d-b801-987795c575c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a488fdd-efa1-4157-bb06-876a451c9a9c",
        "cursor": {
          "ref": "630050c3-53a1-4b6f-8d10-04c22f301b0f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e4119ac1-0fe3-47c0-a14c-28dcadecd18f"
        },
        "item": {
          "id": "7a488fdd-efa1-4157-bb06-876a451c9a9c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "57b341f6-0e52-455d-b0b3-efa71ead3f97",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdd047b-93df-4390-98d4-09cca119668c",
        "cursor": {
          "ref": "80187375-1c7f-442a-ad0f-18aed73fb793",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "663b5eb8-d98f-4ad5-bf82-b41933af032c"
        },
        "item": {
          "id": "9bdd047b-93df-4390-98d4-09cca119668c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4f644a7a-7356-4fc9-83d3-18502d5dba89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa96a000-f6a5-4823-af9b-408327c94f99",
        "cursor": {
          "ref": "b2670f8b-1989-497c-9a48-555988f69a88",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6f581885-d7fc-4f02-98a0-629b8658c652"
        },
        "item": {
          "id": "fa96a000-f6a5-4823-af9b-408327c94f99",
          "name": "identifiers"
        },
        "response": {
          "id": "b0cf3677-4656-4159-8bc3-29582f720cfc",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ebcb61-c73b-421a-80a0-aaf0a19ab4bb",
        "cursor": {
          "ref": "f73c25b9-d543-45d9-b4cb-2f5cce40c2fe",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "22b358b9-bde8-4a55-a98f-a94d60dc16d0"
        },
        "item": {
          "id": "b2ebcb61-c73b-421a-80a0-aaf0a19ab4bb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ae162dca-8214-4a24-943e-91d138cda554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02fcc1e-beb7-4bc5-b7ab-a2f0554b1559",
        "cursor": {
          "ref": "47b5d359-7989-433e-9054-bfc8d110330e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e822845-6fc2-49a2-8c82-c759a146e4a3"
        },
        "item": {
          "id": "c02fcc1e-beb7-4bc5-b7ab-a2f0554b1559",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "13f72cf6-20bd-421f-a980-0a34144d592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0c25ab-57c3-47f9-b33a-c58041fd6165",
        "cursor": {
          "ref": "ba4c1686-7aa7-4506-a930-31dadda1eaaa",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b12d05ec-a602-4234-9bde-eb19be5a3010"
        },
        "item": {
          "id": "9e0c25ab-57c3-47f9-b33a-c58041fd6165",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c40b5f60-d25c-4e73-8566-02454bec50e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34131c3f-4c58-4c93-acc7-1938d8e55b66",
        "cursor": {
          "ref": "9dc0becb-484c-4c3a-a75e-c0204e9fd36c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9a67e6ce-ad96-427b-93bd-325d9ee9c056"
        },
        "item": {
          "id": "34131c3f-4c58-4c93-acc7-1938d8e55b66",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7a36564e-7874-4412-a20e-71fb86038526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707a3a3a-da33-439a-b222-0b14f5951cbd",
        "cursor": {
          "ref": "35c7f2a3-8e7f-4a6a-a7e9-f70f2562f2b6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8d6f49e9-17c3-4454-b0a8-ab4fa7bde5bb"
        },
        "item": {
          "id": "707a3a3a-da33-439a-b222-0b14f5951cbd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "05507000-d7d7-4436-b4f4-bb660772c5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0295b7f4-b6fd-4edb-b77a-bc47d88abe49",
        "cursor": {
          "ref": "224252f4-17cc-4c53-a54d-c411014d3f7c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5c1f3751-cdd4-40e4-9f4e-d13ff3d07307"
        },
        "item": {
          "id": "0295b7f4-b6fd-4edb-b77a-bc47d88abe49",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d011cb9-cf54-47e2-abd6-be55b504aa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee92202-0cfe-46e2-bd0b-43fe2d978bd7",
        "cursor": {
          "ref": "c136c808-8bb6-4e7f-80d7-1fc655296a83",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0c4484b0-2deb-40f9-8838-a9434e7872d2"
        },
        "item": {
          "id": "aee92202-0cfe-46e2-bd0b-43fe2d978bd7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "874f61cd-80e4-424d-9614-ddb2d22fa90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bd5998-b748-46d1-ba1c-cd0033319b98",
        "cursor": {
          "ref": "747fe9cb-8561-49f4-ba13-aec83d68fa12",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7ba18d24-fda2-4441-8d66-d0d2f409d8e8"
        },
        "item": {
          "id": "f5bd5998-b748-46d1-ba1c-cd0033319b98",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a2df8039-5b7d-4d90-95b8-e68fe181aedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2522a0-a75d-4064-8056-bfd811126849",
        "cursor": {
          "ref": "71953d87-9b53-476d-89d9-f536ac3e3b24",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "841f9806-d9ac-48b4-af8b-0294df59775f"
        },
        "item": {
          "id": "4c2522a0-a75d-4064-8056-bfd811126849",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c751faef-07e9-448a-9f35-f8d999568179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83da756b-da19-4ed6-bf19-0478ca0083f6",
        "cursor": {
          "ref": "e25a1b7c-404b-423a-9d98-460c5e31c826",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2dcd97b6-17ef-41bb-a79a-decb86353042"
        },
        "item": {
          "id": "83da756b-da19-4ed6-bf19-0478ca0083f6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e343578f-19be-41e6-af30-3905222b72cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684cf728-514e-4377-8381-6ec04a919bf5",
        "cursor": {
          "ref": "abe7c7dc-7cff-473a-8ecf-0785db4cde6a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5cfb9c3b-6e5a-45e8-bc61-997088bf3b2c"
        },
        "item": {
          "id": "684cf728-514e-4377-8381-6ec04a919bf5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a91c723a-ddfc-4203-a39e-325de9e4c9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8d28cc-ba8c-4d6a-b6ec-d2ba6d4158d0",
        "cursor": {
          "ref": "dbcebc45-0646-4e83-8c44-b6329b54219f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "859926df-0308-4396-8d12-bba59a4a10c5"
        },
        "item": {
          "id": "5a8d28cc-ba8c-4d6a-b6ec-d2ba6d4158d0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "64b2868e-7246-4f9d-8827-0f0e23480955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9965c1-738a-4759-bcd8-d665de87bcef",
        "cursor": {
          "ref": "ef0f990c-4d97-4a5b-a745-af2b7e61128e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b121d9c-115e-4434-99c5-2c680ec9c61b"
        },
        "item": {
          "id": "ae9965c1-738a-4759-bcd8-d665de87bcef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46f5bee0-c3a7-4160-abad-c3bd2dd4c1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd935154-a197-42d2-8f45-cf7a83a0b159",
        "cursor": {
          "ref": "a7e228a2-560f-4062-9049-60658af6c8f3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "553162b6-197c-465b-b1c2-a2f2ac615ab5"
        },
        "item": {
          "id": "dd935154-a197-42d2-8f45-cf7a83a0b159",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34d960aa-82fc-4c94-b4f9-d27ed54a4883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff47be69-35cd-4b7a-ae13-d903a77c612f",
        "cursor": {
          "ref": "4a7d9b61-dfcb-432e-afba-e369b1f98fd3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2f92b521-2bde-41c7-9dc1-5b7a8d5712ba"
        },
        "item": {
          "id": "ff47be69-35cd-4b7a-ae13-d903a77c612f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bf4e89cc-12b9-46b0-bc22-6fa832d9ee1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3945cbdf-c109-46da-870b-7bff9d8f6821",
        "cursor": {
          "ref": "3f574c4a-5af3-472e-9252-be8c11e844f8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5b01a650-ac3f-4af3-bf5a-4057d18ac57a"
        },
        "item": {
          "id": "3945cbdf-c109-46da-870b-7bff9d8f6821",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9a0b7bec-bebf-4b40-8be8-d5141d02d7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8425537-30a9-4a4e-804d-b40f7dea2e40",
        "cursor": {
          "ref": "6005adf2-f46e-43d1-b899-00c8d62aff58",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ba0bf7fb-bb5d-47f9-8508-cd95085fe4ca"
        },
        "item": {
          "id": "d8425537-30a9-4a4e-804d-b40f7dea2e40",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4e332a61-c8ab-457f-bd12-570dc4f7f98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d443b0-d2e3-40d3-8a9e-165dfacb6e10",
        "cursor": {
          "ref": "7b942465-8e01-47b1-ab00-4cec7887c6a2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d4e2bfe4-f822-4aa5-8332-8d5045b86b89"
        },
        "item": {
          "id": "05d443b0-d2e3-40d3-8a9e-165dfacb6e10",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a54c559d-6f53-4176-9233-165e197ea855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e28f943-421e-43db-8e48-0599250ff6f5",
        "cursor": {
          "ref": "dc0ff31b-54ea-4cf8-9215-1b620d1d0287",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ed1483d-fc3b-4cb9-9674-c5ac2233483d"
        },
        "item": {
          "id": "4e28f943-421e-43db-8e48-0599250ff6f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "23eb6423-58cd-46b2-ae92-1762f81ed743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b8e73e-5e93-42b2-a1a7-a615f46d4745",
        "cursor": {
          "ref": "6e80a10a-5bab-47f1-9e60-9bce04c3ac77",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aa94943a-ecaf-4923-9093-e47dc2355f84"
        },
        "item": {
          "id": "88b8e73e-5e93-42b2-a1a7-a615f46d4745",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b73ff6f1-ffa2-47b1-b6d9-a1bc3cfe77fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad105aa-4e67-4404-9772-f16c53b7c7f9",
        "cursor": {
          "ref": "0a578d9e-ecd1-497f-aea5-bad3e177ffdf",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f6933ac2-d516-4740-83fd-d95c4782ba8f"
        },
        "item": {
          "id": "5ad105aa-4e67-4404-9772-f16c53b7c7f9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ceeea2b6-2eff-4330-b80d-66ed90b63d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3cb8f1-ffe1-4ada-a938-ae80c9bf2e41",
        "cursor": {
          "ref": "43eb4302-e87f-4995-9739-f94b23672fe7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a4a80761-6622-487d-99f6-37be2cf0f9d0"
        },
        "item": {
          "id": "1b3cb8f1-ffe1-4ada-a938-ae80c9bf2e41",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5ed935e8-abc3-499a-b773-f67edc50a105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b682262-810b-46bc-8467-537392e7a8c2",
        "cursor": {
          "ref": "176b06c9-7f0a-495a-b840-8706884016d5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2d70b06b-40f0-48a2-92e7-c9f2c16ec54a"
        },
        "item": {
          "id": "2b682262-810b-46bc-8467-537392e7a8c2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f07eb360-e276-4de0-98e7-3a3753203cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52aa84-7b15-4d9e-b9af-3bafda8be6cd",
        "cursor": {
          "ref": "215c5b70-29bd-40fa-bc4f-45407ad38b37",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c8059c42-255c-40d1-b06f-c9d91991f655"
        },
        "item": {
          "id": "9e52aa84-7b15-4d9e-b9af-3bafda8be6cd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "350bbd51-ae47-45f8-b2f8-aea3ee760027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95992bbe-9ec2-4cd8-9d14-29551c024e15",
        "cursor": {
          "ref": "3822a4b3-3986-4f74-9444-99b1111ecbd4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d60e23b0-1994-4b5c-b467-0e546f705fe8"
        },
        "item": {
          "id": "95992bbe-9ec2-4cd8-9d14-29551c024e15",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ef24c592-c958-4a62-a01e-9308494a0691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b50439-8b9e-4e89-ac37-8596800f7a39",
        "cursor": {
          "ref": "5f70b0da-1c8a-423f-8717-0d6091cd6b39",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0585d794-37a3-4382-9e09-4f542a92b634"
        },
        "item": {
          "id": "25b50439-8b9e-4e89-ac37-8596800f7a39",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ffdccf11-28f6-4da9-a82c-a82198ec2bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615420ef-e20f-4d98-aad5-007d7c70fa13",
        "cursor": {
          "ref": "7388396f-4f5b-415f-8228-8a29850abaac",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fdfb34bf-a618-481a-8c69-948927708bae"
        },
        "item": {
          "id": "615420ef-e20f-4d98-aad5-007d7c70fa13",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6be2d406-fd72-41bd-be21-43e3ad33519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef78fc0-eb47-445c-aaf4-e615fc3b7f73",
        "cursor": {
          "ref": "d68c9b81-cbea-4ab0-befd-4889bc1f38b9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f3a4e608-428a-45ca-acd1-bd5eb66e25f9"
        },
        "item": {
          "id": "fef78fc0-eb47-445c-aaf4-e615fc3b7f73",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2be772f4-33f3-44b0-8a96-17d06c25f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46961a72-54aa-49f1-880f-501036377fac",
        "cursor": {
          "ref": "7a0dd0e3-41b3-463c-9bd8-6b0bb87e1078",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f3bf3924-2a9b-46b4-8971-292b35c54245"
        },
        "item": {
          "id": "46961a72-54aa-49f1-880f-501036377fac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "04f20be6-e04f-4419-b626-c6fbb5eef389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e47a7-fe9d-458d-846d-8f6104d5a9a2",
        "cursor": {
          "ref": "fb2d3485-e775-49a4-ae83-3a3deb1cb2c6",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "97fa6bca-cd35-42f1-bfb1-bf635110dfce"
        },
        "item": {
          "id": "dc8e47a7-fe9d-458d-846d-8f6104d5a9a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ee075f86-a984-4b9a-9202-78a460850fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52583479-9504-4d0b-a51c-f6ac0484f64b",
        "cursor": {
          "ref": "d4cca2a9-073b-41a9-8de6-e0d070a14ce7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "30fb7cd0-8e49-46c5-8a9e-b4c0c6fef0ec"
        },
        "item": {
          "id": "52583479-9504-4d0b-a51c-f6ac0484f64b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7793e1fc-3757-46ad-875b-7e049b3bafe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338ff899-deed-41f6-a461-fdc6adc0ec50",
        "cursor": {
          "ref": "c931e1bb-f474-434c-b544-544bd8201b67",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3f619cbf-ebcb-41e8-be4b-5a65b0cb4fad"
        },
        "item": {
          "id": "338ff899-deed-41f6-a461-fdc6adc0ec50",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cac97aaf-34c9-4cf4-b384-c9606ebb4e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709a88da-869e-4504-b47a-8daf008035d2",
        "cursor": {
          "ref": "8bf9efca-56e8-41ca-a597-b191da6521b4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1093996a-b0a6-45b5-b050-06292c3f03d6"
        },
        "item": {
          "id": "709a88da-869e-4504-b47a-8daf008035d2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8da31996-06bb-4a6c-b88e-c25dba005084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a55a467-a16a-4235-9534-54c7c0c14d63",
        "cursor": {
          "ref": "4eac6766-7a3a-4f3e-b70b-dfa6271f9055",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cfb41c90-2b90-417f-9fec-913e3606dcc8"
        },
        "item": {
          "id": "2a55a467-a16a-4235-9534-54c7c0c14d63",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fd912c1c-6b50-46b8-a48d-7889bb10219a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dded32e-466d-48b7-91e9-3ef5de15628a",
        "cursor": {
          "ref": "3deec2f9-77aa-4f6d-9c20-5397e3898f24",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a6a72b95-285f-4c9c-82e7-9579ab99b5dd"
        },
        "item": {
          "id": "2dded32e-466d-48b7-91e9-3ef5de15628a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "728b0564-3303-4028-9c66-bf7853ac49f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef73f4e-9b78-48e3-87d7-bd9172e4cb2d",
        "cursor": {
          "ref": "54be2152-b086-459e-b993-2c5a5f0b1c62",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "efbfdc40-3cdc-4672-902c-637cdd4fb390"
        },
        "item": {
          "id": "bef73f4e-9b78-48e3-87d7-bd9172e4cb2d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "33c2ab01-5ab3-442b-8172-89d021cf623c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef634cb0-f1bf-4b3f-a2c2-102e5ec574f8",
        "cursor": {
          "ref": "776ac4fe-9a20-43f5-95ec-6b7d9ce3c8a1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9ed83bf0-4265-4e9a-8537-6a516f866fa4"
        },
        "item": {
          "id": "ef634cb0-f1bf-4b3f-a2c2-102e5ec574f8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d78e0c90-2654-47fa-98bc-7b40885d7c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ee42f2-7cd8-4a34-b99e-1d26fbfde6bb",
        "cursor": {
          "ref": "395c97ff-6efa-4e58-956b-0998ac1fcf8e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d6651098-ec81-4265-8074-3fb72f583ae5"
        },
        "item": {
          "id": "f5ee42f2-7cd8-4a34-b99e-1d26fbfde6bb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9d3a04ee-b57b-4c5d-8e7a-bc0662c9372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dbf384-07bb-407d-a12e-05b170e7c1d8",
        "cursor": {
          "ref": "e4eca44b-10a5-4fa3-850d-1e8ed60fbc02",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b7760216-4aa4-411a-a2bb-31c7ff149572"
        },
        "item": {
          "id": "85dbf384-07bb-407d-a12e-05b170e7c1d8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b153282f-2d06-45ae-a255-a0ac1607066e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3febbb-5e1f-4573-90d9-e3bd53e1a563",
        "cursor": {
          "ref": "c0782d25-4cfd-4297-9589-9f764223e96a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d8819fb-a8a8-4d7a-aa58-1c836d4e2127"
        },
        "item": {
          "id": "bc3febbb-5e1f-4573-90d9-e3bd53e1a563",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9476fc61-bcbd-429d-9e77-801c03fc983d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e60f17-dfbb-4dd0-a31e-1051e5d2d802",
        "cursor": {
          "ref": "9b07d2f8-e24c-4086-9757-29fd38735b5f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "22c7d895-a06c-4baf-83be-3df1c65d08f6"
        },
        "item": {
          "id": "45e60f17-dfbb-4dd0-a31e-1051e5d2d802",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4c0bda54-712a-46ba-a9f2-4bcd18a5ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776c0199-0b0a-4fda-8b0d-3d7f3ed0a47f",
        "cursor": {
          "ref": "265a3285-5ece-4ccd-8bd1-4de79c2a399e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b95625ef-7063-4990-84dd-bd8bbd759978"
        },
        "item": {
          "id": "776c0199-0b0a-4fda-8b0d-3d7f3ed0a47f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6e3bb6a6-e952-4217-bbde-5b654cac8d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efde3ad6-5985-4b11-af0c-1a53510a77cb",
        "cursor": {
          "ref": "7c293883-1ec3-4864-b47c-b2f42d79cd9d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e529cbac-8c8c-4d25-9056-9e5b4abb6599"
        },
        "item": {
          "id": "efde3ad6-5985-4b11-af0c-1a53510a77cb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "50025f69-8202-4db2-be97-9554f83fea20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25baf2c6-75fb-4e95-876a-4e309a938d3d",
        "cursor": {
          "ref": "c2f0953d-6f35-4170-bc4d-164b034e46c8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "caae4614-b86a-4cb5-9908-b24f28508418"
        },
        "item": {
          "id": "25baf2c6-75fb-4e95-876a-4e309a938d3d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b0678d63-c422-4020-8ed1-eef3627dd673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6d5ede-80d6-44a8-91ec-067264b8df85",
        "cursor": {
          "ref": "bb16b717-40c5-49ea-b55d-a8c738d8dc69",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5af72d5f-333d-415c-8825-5306346c76c7"
        },
        "item": {
          "id": "df6d5ede-80d6-44a8-91ec-067264b8df85",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1f3c678-5228-46c8-aeca-c24a63451ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d5db85-dea8-475f-b13c-00decf1198b6",
        "cursor": {
          "ref": "800ef922-bb48-4f49-9e2a-f83c5b165f42",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "abef4784-4604-4958-bf89-b7ae045d066b"
        },
        "item": {
          "id": "f2d5db85-dea8-475f-b13c-00decf1198b6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e7452750-e7a1-42ad-85c5-4a2b9691c85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d758a11-c495-46f1-8532-e0f5da577cec",
        "cursor": {
          "ref": "8de7b4e5-2668-4512-ab76-3c8319182a7a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "57f6c05d-062e-46c3-8fed-8e218f6752a0"
        },
        "item": {
          "id": "2d758a11-c495-46f1-8532-e0f5da577cec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "851959d9-524a-451f-8a5b-db483e8e2062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b999424-1f9c-49b6-9168-b0733c509ef3",
        "cursor": {
          "ref": "fc0c1707-9e51-44bd-abb2-6d82257e3860",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3776605b-884c-4b9f-b942-64ad496cdc86"
        },
        "item": {
          "id": "6b999424-1f9c-49b6-9168-b0733c509ef3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6502df65-4c32-42fc-b44e-78ae21e4531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75190dbb-eb5c-40df-a25b-b2bb3504573b",
        "cursor": {
          "ref": "91c7dd53-c34c-42a2-aa06-6c4166fe71d5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "48a4cd69-55e9-4424-96c1-fbf3c9d086e7"
        },
        "item": {
          "id": "75190dbb-eb5c-40df-a25b-b2bb3504573b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9d21e961-ffec-4c99-945f-aab4c5b07b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05c6ef3-86ab-456e-bb27-a564f9934a94",
        "cursor": {
          "ref": "7b48c879-a99b-422d-af39-413864aac6dd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "17cc09e6-0272-4ab0-9a35-22f1d89f5b66"
        },
        "item": {
          "id": "e05c6ef3-86ab-456e-bb27-a564f9934a94",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a8aa1bc9-e1ee-4e9f-8ef0-920f866fdd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ee3180-8fb9-46be-8524-74da7d8cba2a",
        "cursor": {
          "ref": "cfec7afa-5ea6-4d91-8a0b-56013c02761b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8721ea41-a0b4-4fa7-819d-b03dec55d96f"
        },
        "item": {
          "id": "50ee3180-8fb9-46be-8524-74da7d8cba2a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6c49370b-d34c-4f90-8dcf-9a4e73be2611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068d8e01-9116-4ca6-9e3d-498c1a52ac82",
        "cursor": {
          "ref": "aff1348e-9746-463e-98f9-ec7b580d7c82",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e27c3d7f-aefc-483f-802e-9a086f967db8"
        },
        "item": {
          "id": "068d8e01-9116-4ca6-9e3d-498c1a52ac82",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "da0738cb-13a3-4159-ac1e-d8d54a002e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb472fc-e8a0-4e35-8a23-a482cbe505a1",
        "cursor": {
          "ref": "bf3b5c1f-ff4f-4e6a-9772-8ef82f0bc2f9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f7c5555-52c4-4290-948d-c576446b7fad"
        },
        "item": {
          "id": "ddb472fc-e8a0-4e35-8a23-a482cbe505a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c369a4c4-4d16-494c-b2fb-e0a47b27602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb6895-2c76-4d50-b55e-da368e3836c4",
        "cursor": {
          "ref": "7e0de1ce-07d3-4881-b782-a3be32fbf4c6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad3cd9df-0999-4faf-bec5-20ebbaecb37f"
        },
        "item": {
          "id": "57bb6895-2c76-4d50-b55e-da368e3836c4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e24a549-aadb-4c59-ab04-e1019ce8354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42218c-7ef5-4fad-b5ea-7b29da568014",
        "cursor": {
          "ref": "608b127f-6ec1-40e0-ae72-e5513d2ba563",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ebb1f801-5562-4e1b-b0bb-10372b1e0b7f"
        },
        "item": {
          "id": "2e42218c-7ef5-4fad-b5ea-7b29da568014",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bc323a82-ba12-4af4-9238-94ae50047353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243b9141-c0b4-41cc-91a1-e212cb233ffd",
        "cursor": {
          "ref": "71549f70-f4cd-4156-9a8e-d738f6ba2b65",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4efdd810-d12e-410e-a925-eb634c57ca42"
        },
        "item": {
          "id": "243b9141-c0b4-41cc-91a1-e212cb233ffd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d9b5b82b-8217-45ac-9b20-058b2d00e268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc45868-073c-480d-a6f3-3a320f16ce7d",
        "cursor": {
          "ref": "40a16a33-2c04-4588-9234-bc17fcab8318",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "74042931-2d1b-4293-a5b4-c4b54418f479"
        },
        "item": {
          "id": "5bc45868-073c-480d-a6f3-3a320f16ce7d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4a66b95a-5752-41f5-8239-daab4d59cce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24029da0-9465-44a1-a7ef-be29f6a9e4b9",
        "cursor": {
          "ref": "da50e362-daa4-4250-beaf-edea7113f026",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "69ff10bd-2a9f-4145-81f6-b32b2d7a2520"
        },
        "item": {
          "id": "24029da0-9465-44a1-a7ef-be29f6a9e4b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe953282-0453-4533-98c2-ec52ce77315f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143401db-1238-4663-aa15-c719192eb7d3",
        "cursor": {
          "ref": "c2b1ebb9-fc6f-4172-ae89-d14f43062d98",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bef3f73e-872f-4da0-88ee-dfdf54fc43e3"
        },
        "item": {
          "id": "143401db-1238-4663-aa15-c719192eb7d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e4292c4b-8475-49d0-a70c-be1c2f5ab52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c7a9f5-2ce8-4fd2-ab83-4013454c83a3",
        "cursor": {
          "ref": "b036e512-09a3-4d10-baae-1939b1ea065e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e0530ac0-72b1-4d67-9d10-077b1f32bb08"
        },
        "item": {
          "id": "a8c7a9f5-2ce8-4fd2-ab83-4013454c83a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c75cb336-37c9-4a19-bdcd-2df041ea7d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9f4322-e094-4931-999e-4e5f5064376f",
        "cursor": {
          "ref": "d64adf78-6e38-49ff-afef-9b652e6db6ed",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0b0cf75e-a01e-42fe-af04-15fdcbc63513"
        },
        "item": {
          "id": "6e9f4322-e094-4931-999e-4e5f5064376f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a60d3c5d-01e5-4207-b35e-dd9f0cae3a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af9dee5-42e1-4bf9-8426-c0ed1f0c6cc2",
        "cursor": {
          "ref": "bf0e4950-2a09-402f-a440-a872865ac6c2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f82d44f2-0529-4e14-958d-1c84e5557040"
        },
        "item": {
          "id": "4af9dee5-42e1-4bf9-8426-c0ed1f0c6cc2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "75c1e773-8744-44d7-8849-f95b39084372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334782ef-eb1b-4dc5-910a-bfa788ab4419",
        "cursor": {
          "ref": "85c01a84-9705-4b94-90d2-c1edd4db56cb",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2a6da7b6-c442-4d5a-bd8c-db47c61a9f4c"
        },
        "item": {
          "id": "334782ef-eb1b-4dc5-910a-bfa788ab4419",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3d6136a0-4448-4b82-9683-e735d65110c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a49247-007a-458a-8863-3a1a9aa1634f",
        "cursor": {
          "ref": "a365ed75-ce35-4db4-a83f-316f4b983ae1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3dc352c7-12c5-4344-85c1-5b09ab6fc351"
        },
        "item": {
          "id": "12a49247-007a-458a-8863-3a1a9aa1634f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "827f35bb-e3f2-4e0d-a8db-4cef92a1ed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e044bf-7332-4446-806f-2118578658b3",
        "cursor": {
          "ref": "694fd6e2-ecd3-4a17-890f-77a5ed46173f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6df28107-35d2-4ca2-adde-8b8f06dcdd31"
        },
        "item": {
          "id": "a0e044bf-7332-4446-806f-2118578658b3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "141933bb-1d94-4f03-b152-8fe395e86c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b48ab5-fc9a-4b5a-882d-06bc12f92d9d",
        "cursor": {
          "ref": "09be073b-b884-45a5-abac-0528265593f7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3cd40235-f139-4642-a504-45e2397ce004"
        },
        "item": {
          "id": "b2b48ab5-fc9a-4b5a-882d-06bc12f92d9d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cf4cba34-8737-4c0f-9d72-18373a0e3cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3b8d8b-db8e-4598-9239-02b11ec0a250",
        "cursor": {
          "ref": "0a54be0a-1eb3-46be-a919-91daa72686bf",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a0ec14eb-f302-4a15-8ad1-af095630ed3f"
        },
        "item": {
          "id": "fc3b8d8b-db8e-4598-9239-02b11ec0a250",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7f531c01-0835-49a9-b26a-1f5411483660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8ff346-9249-46c1-ba92-3b3181d95890",
        "cursor": {
          "ref": "89607de5-246b-4f7c-b949-b8e9370ae629",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cbdbf0c2-db8e-41fe-8d2c-937c9b93144d"
        },
        "item": {
          "id": "df8ff346-9249-46c1-ba92-3b3181d95890",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a9eaf331-189e-477e-a8de-c497b852379a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c12310-722b-46e0-aee3-45fc460d2ed5",
        "cursor": {
          "ref": "9d1562a4-ce19-4d6f-9fb2-bde5a9a43445",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cb8a650a-d115-4877-9c44-341adc85f77f"
        },
        "item": {
          "id": "63c12310-722b-46e0-aee3-45fc460d2ed5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4ad00f6-1809-4347-9bcf-8e152c1bd366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02258ec-cefc-4be7-9e6e-0c3c139711ad",
        "cursor": {
          "ref": "0ad6e138-2998-4a37-b01b-805e274c74a7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7438ab57-c16e-4e73-a23f-f52fe425ad0b"
        },
        "item": {
          "id": "d02258ec-cefc-4be7-9e6e-0c3c139711ad",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ce8c8ba1-0e23-4121-8ca4-1246e0ddae5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1da7515-025d-4839-8679-999aae37b4c6",
        "cursor": {
          "ref": "e754d647-dcfe-43dc-879d-1e0254e5d153",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "de61f07a-658d-451d-b85b-d01fe58e29b3"
        },
        "item": {
          "id": "d1da7515-025d-4839-8679-999aae37b4c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "31613061-ad20-4496-a669-72dbb62789db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da41ecd0-ce39-4a19-9544-afa0a85bf0f2",
        "cursor": {
          "ref": "31402c00-594e-4490-9121-05241942f448",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "27dadfe0-0106-44c8-ae66-f83bd2938a8f"
        },
        "item": {
          "id": "da41ecd0-ce39-4a19-9544-afa0a85bf0f2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "82221867-41ad-4740-8d25-8ab9bd44f92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69682b09-f6c9-4c12-904e-0f54bda731c0",
        "cursor": {
          "ref": "102b3578-c41b-4800-b907-0370ea05d717",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ef2a212-e02a-490d-8511-b5755625a9d9"
        },
        "item": {
          "id": "69682b09-f6c9-4c12-904e-0f54bda731c0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "91f68696-7a5f-4fae-bfea-60df170b0f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f967596-f5ec-4cf1-b5e6-6a1660b17b80",
        "cursor": {
          "ref": "c164af35-d4bb-4e4b-9128-664bf4e02f2f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "824ee70e-8640-4b03-825b-a542f512942e"
        },
        "item": {
          "id": "4f967596-f5ec-4cf1-b5e6-6a1660b17b80",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a9abbf33-bd14-4194-98f8-4664710766a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03abef3c-897b-4d3d-a6d4-532d3a5e9f6b",
        "cursor": {
          "ref": "1cf34ac6-9daf-4d2a-99de-d0924cb65de2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ba147d0d-c701-4dff-a429-d83f389df57f"
        },
        "item": {
          "id": "03abef3c-897b-4d3d-a6d4-532d3a5e9f6b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "990db42e-bc7d-4b8b-be36-0c487c247fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391edd6b-7349-4889-aa65-66b235f35b99",
        "cursor": {
          "ref": "d69f181d-09c9-4290-b984-edb63e7cccf1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "09401a26-8d8b-47f0-b6dc-ac4f55ab4383"
        },
        "item": {
          "id": "391edd6b-7349-4889-aa65-66b235f35b99",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "239398ac-25c0-45be-8380-4fe89c5e53ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f800960-57f0-48a0-b924-201c15849e06",
        "cursor": {
          "ref": "137da40a-6fce-4948-8bc5-1004cf715be9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ddfe3f82-eb8d-4138-bb13-5845d6b5c36d"
        },
        "item": {
          "id": "7f800960-57f0-48a0-b924-201c15849e06",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6309e378-81e2-460b-affc-db4ef3b37623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bef5a8-0d4f-4914-9cc5-7b4e37229ad0",
        "cursor": {
          "ref": "11854de9-5548-4d89-b07a-cb85ddccba68",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7c67bdb4-621a-4325-8517-96beea269f48"
        },
        "item": {
          "id": "39bef5a8-0d4f-4914-9cc5-7b4e37229ad0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "519efea8-f3cb-46af-8c39-fde6c5c18f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d3f047-5c87-440e-8d03-09165420be31",
        "cursor": {
          "ref": "a367d496-3af5-48db-b08f-ce7ffbcd9de5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e02160d5-d75c-4c6d-a02d-f5820da7be80"
        },
        "item": {
          "id": "04d3f047-5c87-440e-8d03-09165420be31",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fbf9d3e1-5c29-4045-ab4d-2ab63ec16ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62791317-ef66-4b56-ab45-12bc371ca815",
        "cursor": {
          "ref": "a0967177-291c-44f4-8e5c-fbba107aece0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "affb0cce-f6fb-4fdf-a8e4-c1b44483ee1d"
        },
        "item": {
          "id": "62791317-ef66-4b56-ab45-12bc371ca815",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "021a20c1-1dfb-4a78-ae92-aaf7765a3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdaf07e-665c-4aef-a12b-97862664f532",
        "cursor": {
          "ref": "92b0172c-b540-4051-9d03-bb5aade2e104",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1fe390ba-f073-491b-96d6-e9fa87f46435"
        },
        "item": {
          "id": "dbdaf07e-665c-4aef-a12b-97862664f532",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0927405-c0d8-48df-a177-4afd3bb1fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b042a517-5dfa-44be-9bac-42dc876aa129",
        "cursor": {
          "ref": "41bb9e81-e131-490d-9c60-ed750b14e1c8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "065f8c4a-9b34-4007-8f96-b5c2ba3c6977"
        },
        "item": {
          "id": "b042a517-5dfa-44be-9bac-42dc876aa129",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2d34aa60-52b9-40ab-a411-d97764898d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62784f0-0721-48c3-bef0-1c2520ca7b85",
        "cursor": {
          "ref": "a99b1981-cb31-4a0b-8bd4-b16fc12527f0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f9ffea8b-b528-411e-90fd-c04c2ae17d66"
        },
        "item": {
          "id": "d62784f0-0721-48c3-bef0-1c2520ca7b85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b603be11-1ca3-43bc-bdd8-6c5cedd7b9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5d3b19-0698-4420-b2ce-1ee338d93440",
        "cursor": {
          "ref": "c9c9ffff-17dd-4108-92e7-20f88fda7318",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ee7358d7-5f67-401b-ae88-a1d00286923c"
        },
        "item": {
          "id": "df5d3b19-0698-4420-b2ce-1ee338d93440",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4edff8ef-b826-4808-9411-3fbea4ff38e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62a3924-fe4b-4333-867f-3f57489cbfe1",
        "cursor": {
          "ref": "96befb29-8ab6-43ba-b72d-b8f45775d161",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f84d9481-4672-433e-8065-ba6d9c45bbe4"
        },
        "item": {
          "id": "d62a3924-fe4b-4333-867f-3f57489cbfe1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "90263c29-fc11-45b1-9179-e20ac2a3c9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa462efd-4ade-49ce-af29-a1ea61918798",
        "cursor": {
          "ref": "c7ef0694-9d7f-4558-9e21-630f1b4ee7fa",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cfb3a3fe-1719-499b-8d99-db04af081e2b"
        },
        "item": {
          "id": "fa462efd-4ade-49ce-af29-a1ea61918798",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "925dee14-85e4-470f-a09d-647c8fac9a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd0abcf-d91c-4065-8b25-89500e715fa3",
        "cursor": {
          "ref": "4b771745-5291-42ce-9448-5b48a992fa6e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad1cbde1-a297-4c09-b0f5-9fc1e22ce207"
        },
        "item": {
          "id": "1dd0abcf-d91c-4065-8b25-89500e715fa3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5e198d9c-736c-4851-a6a1-29f06979d1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47075c80-04b2-47ae-bc2a-1e388a9d2497",
        "cursor": {
          "ref": "73b203b9-2d2e-41f5-a76d-1ba38cb6a57f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "169a574d-916f-4c12-8e15-bcf080ba57c1"
        },
        "item": {
          "id": "47075c80-04b2-47ae-bc2a-1e388a9d2497",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7eb83311-2031-40cd-ae86-d5c816a0becf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9e6dc8-c260-4941-89d8-7db936094166",
        "cursor": {
          "ref": "00721f5e-6224-4b99-8014-1c2a0dd157de",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "22daf260-c7f7-4dee-8a7c-d3f5da2eb4c8"
        },
        "item": {
          "id": "3c9e6dc8-c260-4941-89d8-7db936094166",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b3cbfa3c-cb1b-4c7d-b391-82ca10a03dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aff835a-dec1-44e4-a766-d5705ad0dacc",
        "cursor": {
          "ref": "9640c169-875d-4f28-bfef-234d5174fbf2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0d552b65-2f39-43f1-98d3-710146b048e7"
        },
        "item": {
          "id": "5aff835a-dec1-44e4-a766-d5705ad0dacc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bc075fb4-b383-466f-94c4-570e591ecf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6094ac3-d1d9-449e-9a56-62b8dba49dd2",
        "cursor": {
          "ref": "73528b78-2bac-4799-8778-b604387e2e4b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8df2d165-ee21-4605-a07b-07fdac751882"
        },
        "item": {
          "id": "c6094ac3-d1d9-449e-9a56-62b8dba49dd2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a0733044-5db7-43d5-92a7-485a07f4972f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5e0f0f-33e9-456d-b170-25abfc1cfdf2",
        "cursor": {
          "ref": "293c3a42-805c-4daa-a948-8ba5038fc4b2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "93d96e74-d7da-492a-acb0-d1fb843cc7bd"
        },
        "item": {
          "id": "4a5e0f0f-33e9-456d-b170-25abfc1cfdf2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "376f9f96-bf2b-4a21-a664-b2f210530d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bef3f0-7191-402b-b663-8790ddd8e123",
        "cursor": {
          "ref": "a68844c8-265e-4e48-9259-424e067e0842",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "adfbaeaa-55e4-41e9-bc25-4dc18ba5d47c"
        },
        "item": {
          "id": "06bef3f0-7191-402b-b663-8790ddd8e123",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a5c43681-7426-4edc-bfda-5747dea74002",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec29629-badf-4b16-b0e0-2c7314bb0164",
        "cursor": {
          "ref": "c48d7ea6-cbbc-4902-a87d-fd2ef2e503c0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dfcd76b1-a06a-44e7-9673-7e5afedce7e3"
        },
        "item": {
          "id": "6ec29629-badf-4b16-b0e0-2c7314bb0164",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7d0a010d-d51e-4138-bf6f-f34493202aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9bb2873f-b6b8-4aeb-bce2-23381782bef4",
        "cursor": {
          "ref": "7c068105-85af-4e17-a36a-8f6d796ba6fb",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5cc9e0ca-2563-4115-b2bb-0c63f0a83d71"
        },
        "item": {
          "id": "9bb2873f-b6b8-4aeb-bce2-23381782bef4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fc02dce3-d0eb-407c-984e-2a528c7282e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "59ccc133-2688-4eed-b156-46b1dc323927",
        "cursor": {
          "ref": "d9794021-24ce-4ec6-a6c9-87bd0dae58c4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b58bd2bb-bf9e-4dca-a310-9dc60b4a770d"
        },
        "item": {
          "id": "59ccc133-2688-4eed-b156-46b1dc323927",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "261bd839-51d2-402f-81bc-8df4d5ab319c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "73c7fb55-67cc-4d31-951c-b02a3123985d",
        "cursor": {
          "ref": "0d6eb396-5ce3-413f-8fb1-9c5dc5347a3a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5af53088-6eb5-4c8d-9164-81dc546705d0"
        },
        "item": {
          "id": "73c7fb55-67cc-4d31-951c-b02a3123985d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "27b069b6-3c6c-47ac-b1d5-51d26a60f5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8d294abd-eed5-4c42-9236-ba9205995bbe",
        "cursor": {
          "ref": "99d821e4-ea42-4e8c-8842-304a9a775322",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1f176d3-7106-4e62-90c2-b2f1ff817e7b"
        },
        "item": {
          "id": "8d294abd-eed5-4c42-9236-ba9205995bbe",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3a1be060-8877-4dfb-9eff-53d137203d16",
          "status": "Created",
          "code": 201,
          "responseTime": 6980,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fcc20b-615e-42cc-9de8-17986583585f",
        "cursor": {
          "ref": "009d03ea-f020-4794-b177-84fb820776c9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7daf869c-988b-46a7-b363-43d6cc34ed63"
        },
        "item": {
          "id": "19fcc20b-615e-42cc-9de8-17986583585f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8ca7d83f-85a0-4f9f-9fff-f132923885fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ab8727e9-d17f-4182-b27b-bcd8950ebb8a",
        "cursor": {
          "ref": "8224867d-1d4b-4555-9dd2-bec0faa4fc72",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8baeeeb8-852d-485d-b5fd-bcfa6ec28f3f"
        },
        "item": {
          "id": "ab8727e9-d17f-4182-b27b-bcd8950ebb8a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "48895a18-6e5e-4575-9349-0045ac4a2ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4cec5b5f-3636-4cce-9b91-a280fb2e0f9a",
        "cursor": {
          "ref": "7afbe13c-b7b4-4fdb-929e-f4eabf766c40",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4d6337d1-c1e3-4206-9a4c-1102f9696652"
        },
        "item": {
          "id": "4cec5b5f-3636-4cce-9b91-a280fb2e0f9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ac2c9f8d-3247-40be-968a-5132af74f526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a70edd-e0ef-47ff-b2ec-092feb20f1fa",
        "cursor": {
          "ref": "91d0bf9d-92da-4afb-a0fe-7fd8d5f84028",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fce44d6d-b97b-4078-bf11-56d00648fb92"
        },
        "item": {
          "id": "60a70edd-e0ef-47ff-b2ec-092feb20f1fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8ffd738-aa36-4138-96ff-d3a15c81d70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dbfaeb-3963-4de1-9a64-3030e8556194",
        "cursor": {
          "ref": "48e29de7-d03f-4f7d-baa0-18c16eed456d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3c3e21e6-1dcf-4927-a8d1-46c65c2e7acb"
        },
        "item": {
          "id": "85dbfaeb-3963-4de1-9a64-3030e8556194",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "faf1cfa6-a722-42f2-af8b-7214c26d451f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48123506-a987-4c23-85ef-9cfb4df92de3",
        "cursor": {
          "ref": "8ba1b5e7-df52-457a-b20f-e693ad0db816",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f518d637-f16f-4be5-a735-8f71d18f5346"
        },
        "item": {
          "id": "48123506-a987-4c23-85ef-9cfb4df92de3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8cca0c23-89d3-4e76-b3ff-5ff76d4185c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033e4365-0cc4-47d9-ab2b-deeb9219a486",
        "cursor": {
          "ref": "4dcb9511-df66-4003-a4be-7170a7b076ab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0bfb1980-dfd7-4754-a81a-aa8891889393"
        },
        "item": {
          "id": "033e4365-0cc4-47d9-ab2b-deeb9219a486",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "910cdb6e-496a-4749-9f52-a3d4fe36e68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89533903-0b4e-495f-a235-9e9940f3cf0e",
        "cursor": {
          "ref": "5383b1f6-68e7-4d18-be15-85d2bbd2412d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3b72a4c9-a61c-490f-9197-5c7d2a86be91"
        },
        "item": {
          "id": "89533903-0b4e-495f-a235-9e9940f3cf0e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b958a44-d614-4074-80d9-fd6306d4dbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dca44f6-7348-4c61-90e4-b7ad39b9c048",
        "cursor": {
          "ref": "37a8430a-8a31-4b4c-a29b-da06cefbfc30",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8f7042dc-65d2-4d66-977c-2d6fbe40734f"
        },
        "item": {
          "id": "7dca44f6-7348-4c61-90e4-b7ad39b9c048",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "72fb4f2e-88bf-435c-a3bf-58fe401da58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b5364b-d581-4935-a1a5-bca71edbaec1",
        "cursor": {
          "ref": "f8f4d1bd-2c33-4356-9ad0-eb3b0b49b80f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5adfd521-e982-43c6-97ac-6d55ddd9f375"
        },
        "item": {
          "id": "61b5364b-d581-4935-a1a5-bca71edbaec1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ee92cb3c-b6f2-4b52-9824-89e01ca967e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ba7ffb-82aa-453f-ba7c-29d34f2820f3",
        "cursor": {
          "ref": "1518b873-3a5f-40f3-bf2f-05a0ffa5ef38",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8074e15e-9bf3-4510-afe9-f41ed63b1420"
        },
        "item": {
          "id": "f4ba7ffb-82aa-453f-ba7c-29d34f2820f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "764119f4-2ad2-41c0-8e52-4bf4721ca13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f8858e-8f44-41bb-8b78-f0fdfd33db3c",
        "cursor": {
          "ref": "a84d34ee-3011-4b81-9840-05e74872f548",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d47ee382-d5d2-40b5-83de-8c81a3256357"
        },
        "item": {
          "id": "18f8858e-8f44-41bb-8b78-f0fdfd33db3c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0de9249-fe4c-4e7e-aa81-17fefee8d645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dbda37-48b6-4d61-9a0a-5b1b9258a7fd",
        "cursor": {
          "ref": "237bced8-5869-4b84-abe8-68308c1a9153",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "38492621-09e3-452d-817f-c381c3ea6360"
        },
        "item": {
          "id": "26dbda37-48b6-4d61-9a0a-5b1b9258a7fd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d787c632-5120-49f0-8ca0-e291b7ab79de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431564b2-62b0-4cb4-b2e6-ad199b5373e8",
        "cursor": {
          "ref": "94d81d83-db9b-4ae5-9d9d-6b7bf15fb3f9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0b6106c9-1385-4dcd-be6c-1bc3f82a7139"
        },
        "item": {
          "id": "431564b2-62b0-4cb4-b2e6-ad199b5373e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e0bb4102-2c5d-4f28-b7c2-02e2beafbbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0368567-d575-4ca1-bb4c-eaba8dbfc6d4",
        "cursor": {
          "ref": "07ab0367-d8ba-4b05-a4d1-269d5d187291",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1157f0b3-a1c4-458c-8f68-222a7b1fb621"
        },
        "item": {
          "id": "d0368567-d575-4ca1-bb4c-eaba8dbfc6d4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34e49c90-dff6-4627-b680-6abbabfc5afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107e2a19-d50f-4d1a-83a2-fd4f32011974",
        "cursor": {
          "ref": "90ccf7b8-9671-4fac-91cb-a699972fb736",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6fc6d47-4454-4886-88cc-7c8692c02b13"
        },
        "item": {
          "id": "107e2a19-d50f-4d1a-83a2-fd4f32011974",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32f7bec3-b3b8-4bca-a44e-525b55b8482a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23629ac-4b6a-4175-ad4e-71bbec12781e",
        "cursor": {
          "ref": "100f7d12-0994-4fcc-88c9-1a152c195aa9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d339fde3-ca0d-4866-9c26-d8f917a976af"
        },
        "item": {
          "id": "b23629ac-4b6a-4175-ad4e-71bbec12781e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "656df7de-c2b9-476d-8d37-f430da2f3f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a57479-faf9-4e05-a926-2846b328cd33",
        "cursor": {
          "ref": "bc787e0b-be60-46a5-a930-47e0a8b5b3ab",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a9b724f-7fd8-470f-90be-93cc79ab6491"
        },
        "item": {
          "id": "31a57479-faf9-4e05-a926-2846b328cd33",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "046a0ccc-c11c-48ce-abec-fabcebab2b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10602b4b-f974-4b53-9af1-77027c7f58f2",
        "cursor": {
          "ref": "9252d2b0-fcdb-43c6-9f3e-d6ba95874ab0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7e84b307-9f00-4877-9cca-7c6c475dc669"
        },
        "item": {
          "id": "10602b4b-f974-4b53-9af1-77027c7f58f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ed2818c-4b37-4223-92cc-eaa606ebd2a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ef390b54-1996-4c05-8364-ff1cd466d244",
        "cursor": {
          "ref": "162c2857-25b3-4780-80ee-73bca9829410",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cbfa232d-255d-4f28-8538-7c3a02e1f132"
        },
        "item": {
          "id": "ef390b54-1996-4c05-8364-ff1cd466d244",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "87b07fd9-56bf-44a7-846d-51b72851feaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd084ea5-f2c8-4364-8499-1da26d512159",
        "cursor": {
          "ref": "ef8fc945-c874-4824-80c2-b61724db22cf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e767187a-25c3-4ba8-ab25-9385e8695835"
        },
        "item": {
          "id": "fd084ea5-f2c8-4364-8499-1da26d512159",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4ff18623-0977-4c89-b53d-c9138d7e5ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d854b218-6c99-43b1-9523-4d08b03aec87",
        "cursor": {
          "ref": "3c1011f5-f3cd-4643-8f55-30bd669f797c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f3eea5ef-3d27-4979-801d-086a75e545c6"
        },
        "item": {
          "id": "d854b218-6c99-43b1-9523-4d08b03aec87",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f416ec0a-0869-4081-a5e9-5d7f670b1567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d782df-a587-4f6f-90e2-9bccffc8a923",
        "cursor": {
          "ref": "fb15e28b-b590-4490-af22-627ea1384b93",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fddbe28d-41dc-437d-8c81-7c5aabb2bf1e"
        },
        "item": {
          "id": "17d782df-a587-4f6f-90e2-9bccffc8a923",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b0fbcfc-9df4-440d-977a-9b5caef50b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b826b2aa-15ee-4917-8105-9a1ee7526eb6",
        "cursor": {
          "ref": "dcf99e4b-ed06-429f-9e27-2427f1d52523",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bda09c94-e6c2-43a0-9163-cbbdb56aa44e"
        },
        "item": {
          "id": "b826b2aa-15ee-4917-8105-9a1ee7526eb6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "692b7887-798d-4af8-bff0-414b8db1db15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f0405-38a5-47c9-8b50-30f2650fe062",
        "cursor": {
          "ref": "1f50f322-2a13-44d3-9d08-1166f2a851a7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "29ef7b60-e3b1-42a3-8986-5dfa1dff9819"
        },
        "item": {
          "id": "0a1f0405-38a5-47c9-8b50-30f2650fe062",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "56370147-ed58-4237-ba7c-15a5e506066d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50d4aa2-89e8-4178-95b4-66ec4d52e1cc",
        "cursor": {
          "ref": "7f8dbbaf-d754-471e-be09-1860efd846e8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "11d7b991-9332-439d-a1b2-441992e33e7c"
        },
        "item": {
          "id": "a50d4aa2-89e8-4178-95b4-66ec4d52e1cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bf00bfea-920c-4ba6-894b-6e895b6f64ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e0d1a6-a6d7-4c68-af6d-57d4b0c635eb",
        "cursor": {
          "ref": "3705a142-df76-44cb-9e9f-fa5e67fe8518",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1bb30524-4f1a-4765-9052-361d8a30fc48"
        },
        "item": {
          "id": "00e0d1a6-a6d7-4c68-af6d-57d4b0c635eb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c4006e84-0e1f-4ea8-ba20-33735e209941",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "758390d6-192e-41f8-b4c6-04f4d68ca364",
        "cursor": {
          "ref": "ad899894-6c27-4a23-b9a9-4800916cc13b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4d719f3b-d363-40b6-939d-14e191832d2c"
        },
        "item": {
          "id": "758390d6-192e-41f8-b4c6-04f4d68ca364",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eea856e7-9577-454c-8676-097a95dbaebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc16bc0-a986-4872-9a9d-b1cef8b31278",
        "cursor": {
          "ref": "4efd78b1-911c-4b71-9cfe-e390c1468d78",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a209760a-d7c1-4c1d-bfcb-354bbe73e353"
        },
        "item": {
          "id": "dcc16bc0-a986-4872-9a9d-b1cef8b31278",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d74ca288-0a61-42b7-8175-e8a25b8fb994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059ba15d-c516-4956-8753-453c8dcd474d",
        "cursor": {
          "ref": "8102d3ff-3083-47a9-a259-d1d9980e9008",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "914b9b0c-0e20-4dd0-b3d2-2d3bbf0e62da"
        },
        "item": {
          "id": "059ba15d-c516-4956-8753-453c8dcd474d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb9c06a0-a5d9-4e12-94ba-f55e8174264b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806192a0-e11f-4766-b1c3-dfcfc2ec361e",
        "cursor": {
          "ref": "5ce4bc63-97bf-437f-9f89-46bfd5f18db7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6dd5b882-d621-48c2-85ee-e6d626f8f39b"
        },
        "item": {
          "id": "806192a0-e11f-4766-b1c3-dfcfc2ec361e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "909be4bc-df92-4e5b-a238-1c660fbc5ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24fb863-a0b3-4574-a28b-54d545a13a46",
        "cursor": {
          "ref": "5500aabb-e8f8-473e-bcee-d19eeabd0888",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "698a6b7b-bb6e-4c74-8d6a-d2e21a6c5445"
        },
        "item": {
          "id": "b24fb863-a0b3-4574-a28b-54d545a13a46",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ffe01b4-59eb-4189-95fd-abfb0f38105d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa055c4-ca7a-42e0-b0f9-61b1206cacf1",
        "cursor": {
          "ref": "15001092-f4c7-4a42-89c8-6a158fabb1d4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cc86dafa-aa87-4006-a2f4-7dea75608ac7"
        },
        "item": {
          "id": "efa055c4-ca7a-42e0-b0f9-61b1206cacf1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "105c8bca-eb82-438f-931c-a795e37eb72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c20e6e3-66ac-425e-8390-32db5995b0e6",
        "cursor": {
          "ref": "ba876af2-7c8a-40d5-901d-e7e9f7eacc3b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "83ab215c-ba24-469b-8d11-0325b9374120"
        },
        "item": {
          "id": "3c20e6e3-66ac-425e-8390-32db5995b0e6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2a56536b-0e27-4fec-831b-a30914d1fc10",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2b015fc7-5614-40f8-8b61-eb476180171f",
        "cursor": {
          "ref": "9b6a1aa8-3d7a-400d-8ee5-5ea69f431869",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "882a9fb6-cc8a-4048-bedf-590f9803f75a"
        },
        "item": {
          "id": "2b015fc7-5614-40f8-8b61-eb476180171f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7859245b-994c-44f8-8d1d-95366f50ac0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "588653e7-18c5-4d44-aae1-ff96d0501b89",
        "cursor": {
          "ref": "21e5114b-714b-400d-9bad-919f95eecb99",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "39d1ae43-7c25-4555-aa88-cf99cb03da2a"
        },
        "item": {
          "id": "588653e7-18c5-4d44-aae1-ff96d0501b89",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8b66a192-e26f-4225-bea0-3c76d744da6c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "789b6432-8748-4f7c-bb19-a114e5d42ce3",
        "cursor": {
          "ref": "84afdb13-3625-46ae-b6ac-7bb523bb757c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bc42b042-3673-4b5b-be19-3c976854950b"
        },
        "item": {
          "id": "789b6432-8748-4f7c-bb19-a114e5d42ce3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b3f73109-5cf3-4adf-a562-fe70a671b07c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "69313886-ea0d-4c67-8644-1b2fdd8985df",
        "cursor": {
          "ref": "7c639421-e026-4455-9f87-be85b7718d8b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c38e8f49-2f67-4695-81e8-86ed9a2dfc25"
        },
        "item": {
          "id": "69313886-ea0d-4c67-8644-1b2fdd8985df",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ca1bb7b0-cfdc-4547-9f30-819df0b04f1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "6c33d846-0125-461c-9f40-9ecca860ddb7",
        "cursor": {
          "ref": "c7d913bc-c327-4232-8b2b-3a5f01da2efe",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e011fe3e-de62-4c63-9225-caeca8901499"
        },
        "item": {
          "id": "6c33d846-0125-461c-9f40-9ecca860ddb7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "138dc0f9-9c8c-4427-ad60-2ec3460e3b77",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "59ef4499-7103-4e14-9535-61a7e1a907e4",
        "cursor": {
          "ref": "884c637a-3175-4c6a-b2a4-0959608d8e79",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a07225ae-ac9d-4a2f-be3a-21708131ed4f"
        },
        "item": {
          "id": "59ef4499-7103-4e14-9535-61a7e1a907e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ead045d-378e-4101-90a3-ab97ddcd08a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8405ffdb-f173-4523-8fe8-137e62a2586e",
        "cursor": {
          "ref": "74c0554e-cf28-4b37-a569-7039d11b1689",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e1147a32-f3a8-4c14-a4e7-19945a1a3173"
        },
        "item": {
          "id": "8405ffdb-f173-4523-8fe8-137e62a2586e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a826af98-aee6-484d-938d-a89bd1a23b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6c262-282a-4e1c-9eea-fa13a35e6ef2",
        "cursor": {
          "ref": "436f18de-5e7f-48cf-ad3e-2bf21af439cd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dbc8475d-e4ce-4a13-b6ee-da36c00ae8cb"
        },
        "item": {
          "id": "06e6c262-282a-4e1c-9eea-fa13a35e6ef2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5e309a61-def0-459d-9eb2-4b3ffc81ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efe864f-23c9-4113-b3fc-5466caee20ef",
        "cursor": {
          "ref": "9c4846d9-edc5-45f6-bd57-872ae9af474f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0767149c-80cc-4fe1-88b2-ef3b05e44b58"
        },
        "item": {
          "id": "8efe864f-23c9-4113-b3fc-5466caee20ef",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9c6739d9-4e64-4b8e-a5a9-0d9f177779e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9469ff7c-5e39-4800-b4d7-b6dda0a71ab0",
        "cursor": {
          "ref": "f4759d1e-524e-4ad9-b933-a98a42ae8f0f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c50042e7-5b7f-47c6-904b-61ca41ac229b"
        },
        "item": {
          "id": "9469ff7c-5e39-4800-b4d7-b6dda0a71ab0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e1ed7aac-25f0-428e-9781-ee9739fe1fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383d16e0-b7d7-4420-a2d1-f076fb0f0444",
        "cursor": {
          "ref": "997ec6c3-8662-48eb-8ea7-6be4f183f4e1",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7e7004df-cac7-4dd6-adf1-92726839cddb"
        },
        "item": {
          "id": "383d16e0-b7d7-4420-a2d1-f076fb0f0444",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ec2dae4d-3325-44ad-86b7-506f6c7bf38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516441fc-6729-4b67-bfd6-6e9c1468d0d3",
        "cursor": {
          "ref": "1e3ab401-ee8d-4445-866f-0796c600881a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "10adf2e0-85d9-4c3d-b248-efd3b487ec3d"
        },
        "item": {
          "id": "516441fc-6729-4b67-bfd6-6e9c1468d0d3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ac006410-dfca-4185-a8c6-4e4268d16a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104c7007-b1e4-4bf2-9d69-3162a95febbc",
        "cursor": {
          "ref": "9a502ed8-b942-491c-84d7-cefc8afde5a2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "790ea43d-d8fc-4427-af37-d160be2d32e5"
        },
        "item": {
          "id": "104c7007-b1e4-4bf2-9d69-3162a95febbc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e5eac208-7d6e-403f-8c6b-6a6611e7fbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8bf507-c68c-4745-98e8-093d3991751d",
        "cursor": {
          "ref": "3666cb55-703f-48e2-a9b1-4ffa8c19d9a1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f9130afa-ef9a-495e-8ba5-75bbe849dcd8"
        },
        "item": {
          "id": "5b8bf507-c68c-4745-98e8-093d3991751d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "537e322f-fd36-4709-8cb2-cde8eb219711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f2482-773d-4a43-9576-782d89237d14",
        "cursor": {
          "ref": "ca3203c9-99b7-48e8-b2c7-31abeb7fd1fc",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6fd4e003-2c11-40a3-9070-cbf53726b7b5"
        },
        "item": {
          "id": "035f2482-773d-4a43-9576-782d89237d14",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "edf294ee-863d-409a-9a51-16a7e25f098d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394daab3-ef1c-4975-98f1-1b855a12d86f",
        "cursor": {
          "ref": "20cb393d-4eb6-48c4-b336-6c402d471c69",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "99d1a8e3-03ca-4f7c-8e7f-7d0e9ac9ade5"
        },
        "item": {
          "id": "394daab3-ef1c-4975-98f1-1b855a12d86f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "855fcf55-4a35-4916-b188-d1c8c2b12145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc74de6b-a69d-406a-9c5f-f4d10a695b6b",
        "cursor": {
          "ref": "e529875b-ba2c-45cd-8fd3-fb1928258393",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7693fae4-acd4-40d3-9c07-56daa8a4c637"
        },
        "item": {
          "id": "cc74de6b-a69d-406a-9c5f-f4d10a695b6b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5b940723-8e4f-4535-8e9c-69c137b126f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ebe06b-4a4c-47a9-ab35-4a1369e91717",
        "cursor": {
          "ref": "ef175050-8cbe-40c6-8ebb-b1a68464e0f0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ed6dcc3f-fdef-4457-8ea4-c2ff2969bcd7"
        },
        "item": {
          "id": "c3ebe06b-4a4c-47a9-ab35-4a1369e91717",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f1dfdc35-c58c-49a9-bbde-f704ffc2b0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483d2a8-1b95-4264-98c8-95016195b91b",
        "cursor": {
          "ref": "0c892042-0c2a-472d-bd6c-759c32d531cd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "df0bb701-234b-4378-8fb9-72568db40906"
        },
        "item": {
          "id": "0483d2a8-1b95-4264-98c8-95016195b91b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "11471872-ec38-4f0d-82c9-0dcfb10ce0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e06198-855b-4d03-9f24-72ee9d12bbf7",
        "cursor": {
          "ref": "58553e26-3c98-475c-9ea6-be1a2d0435c0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a32bd0c8-7888-45c4-9d53-04600b0e6f41"
        },
        "item": {
          "id": "b8e06198-855b-4d03-9f24-72ee9d12bbf7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8db3c48b-9df4-4e0f-b469-db9505ec9a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93947a98-cdd9-4b3a-bf6c-7128982e0e1a",
        "cursor": {
          "ref": "d8ab2372-f10a-4260-8925-d8052633a7ea",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "63f0a297-491a-42e0-a692-e824dbc2b94c"
        },
        "item": {
          "id": "93947a98-cdd9-4b3a-bf6c-7128982e0e1a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "50c94eb5-5f94-4c2d-9efc-23260891d05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1267b8-f0b8-4207-b854-0469ce189d24",
        "cursor": {
          "ref": "38b8ccf2-9121-4472-a5e8-220371dff836",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9af28b00-d791-41e8-b0a7-db9c256e28c6"
        },
        "item": {
          "id": "8d1267b8-f0b8-4207-b854-0469ce189d24",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b6a3c188-350b-4838-8aa3-30dfe1065e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c00eb2-5ec1-43d5-8477-9ee25a012a30",
        "cursor": {
          "ref": "79e167d0-cce2-4d23-956f-43ed7862ab28",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "02b7b29a-a590-4a8b-87bb-cd9b1e530679"
        },
        "item": {
          "id": "06c00eb2-5ec1-43d5-8477-9ee25a012a30",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c5fc4402-9ea7-457b-824f-0c51d705f4ea",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d9e96351-64f3-40ee-8151-4733b2f1789a",
        "cursor": {
          "ref": "6ef0e2de-dd15-405e-b1a9-daa9786b3dd9",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "637e07fe-8b91-4c18-a7b5-ee32add8b27d"
        },
        "item": {
          "id": "d9e96351-64f3-40ee-8151-4733b2f1789a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "df9bd2c5-dacf-4b4c-a4b3-9fe9c74de93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a1fb38-7361-470e-be59-399513d183f2",
        "cursor": {
          "ref": "c53fe717-d634-467c-ab5d-945119a90b19",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b2e701a1-d28c-4fba-b7d5-364e6cae328d"
        },
        "item": {
          "id": "80a1fb38-7361-470e-be59-399513d183f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0a7fb3d9-c240-4504-9aea-a010cdcfe783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa23c75-a653-4dfd-9673-ca59dd05811c",
        "cursor": {
          "ref": "a1c42ac9-9696-4e3a-a150-0e24fb84cd1a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2c2d0ca1-606a-47b3-8877-5d8adc74ebe7"
        },
        "item": {
          "id": "2fa23c75-a653-4dfd-9673-ca59dd05811c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "98470422-7839-4d97-b9ad-165a77fa525f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3b4fd-8c75-427d-93f3-7887643c3015",
        "cursor": {
          "ref": "ae996435-77ea-4fc6-9651-47da56781868",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4106256a-604f-4d03-90d5-bce826124817"
        },
        "item": {
          "id": "5ab3b4fd-8c75-427d-93f3-7887643c3015",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "890dbd53-d6fd-4a94-901c-ff9cfbfe47cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c2a364-3ad6-48e8-b699-8df5752b097e",
        "cursor": {
          "ref": "fa52392c-c45b-4c5f-a35a-6836481d39fb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "14aaa470-e7aa-4c36-b9dd-e647a2d28b5f"
        },
        "item": {
          "id": "c3c2a364-3ad6-48e8-b699-8df5752b097e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e23368e5-5f5a-4125-8c1f-c6a36fa02727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e6345f-15ab-44b4-9dfc-432f0db5da8f",
        "cursor": {
          "ref": "7a81a0b6-a1b1-4386-af4b-a8330b7edbb4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a779bc1a-2614-4032-84cc-92d9df93b220"
        },
        "item": {
          "id": "b9e6345f-15ab-44b4-9dfc-432f0db5da8f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "61106f2e-287f-4661-bc65-587875538507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d27626-4a8e-4558-a707-4056feade80b",
        "cursor": {
          "ref": "ae3f9aca-e999-49d5-8ef3-96ffa490eb3f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4c355a8a-ccd7-4785-bbb4-1132f4f13b70"
        },
        "item": {
          "id": "63d27626-4a8e-4558-a707-4056feade80b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d13d489e-97e8-48af-bc94-8cddf76e31e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f351271-3da3-4da9-b003-66e5ff61bea8",
        "cursor": {
          "ref": "f6297481-de8f-4863-9bbd-04f7bbbcd744",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "08f99131-c867-4496-9e11-0a5b65cbe641"
        },
        "item": {
          "id": "5f351271-3da3-4da9-b003-66e5ff61bea8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "99c32ee2-cb42-4b1a-ae8d-b11bab5c14ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d37bc14-4adf-40d8-9517-12a89cfbc283",
        "cursor": {
          "ref": "5f8a54dc-c70d-41f1-aa89-85daa9fa7458",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cd084480-c900-47d6-8959-648beb958c2e"
        },
        "item": {
          "id": "0d37bc14-4adf-40d8-9517-12a89cfbc283",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b036b51c-f47d-47bd-a251-6361b2dac2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b9a8b9-349b-4a2e-acb9-a19eefa74c22",
        "cursor": {
          "ref": "53eb4f73-f256-4169-b924-b9fc442e85ed",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4205690-441c-424d-a7f1-8e0a13074ff0"
        },
        "item": {
          "id": "66b9a8b9-349b-4a2e-acb9-a19eefa74c22",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "72fc55fe-c79e-4c76-a837-6a17b8b6a3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04edb0a-2eaa-4cfb-96a9-1b2d08806f67",
        "cursor": {
          "ref": "b1e1ab56-0248-47ff-8281-43674ea9a335",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9702717d-2dda-448e-aacf-f7ecb1bc5673"
        },
        "item": {
          "id": "c04edb0a-2eaa-4cfb-96a9-1b2d08806f67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1d401e90-761f-4a8e-91ee-4bbeeca04cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f77a85-eb0a-432c-acaf-634cec76f0c8",
        "cursor": {
          "ref": "6cf23bd9-c892-48ea-954d-91b5fb0a41d5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2a1d079e-dada-4753-849e-8a1fed6c031e"
        },
        "item": {
          "id": "c7f77a85-eb0a-432c-acaf-634cec76f0c8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ce72997c-bac8-43bc-8571-53c5f77912cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8384a5c-4cc6-48b4-9c9c-7cdc8d5934b7",
        "cursor": {
          "ref": "277bf2c7-7727-469d-836c-1429c7cc5b06",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "59e8698c-ccfd-47a4-9d94-370ed3ad1f31"
        },
        "item": {
          "id": "b8384a5c-4cc6-48b4-9c9c-7cdc8d5934b7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a63a4996-fee5-4074-81bb-260f42e4ba2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c37235d-9327-4d71-a1e1-fb5834bd36eb",
        "cursor": {
          "ref": "b8a2e460-fc6e-4d7b-8e11-313344953a1c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d99ce4a8-a33b-4cf2-840f-ec6e78c0193d"
        },
        "item": {
          "id": "3c37235d-9327-4d71-a1e1-fb5834bd36eb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "935e21ce-b9d1-4117-84a8-9154bef9df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241579c3-9a24-46c1-8b7a-82e998e3578b",
        "cursor": {
          "ref": "43a2d56d-fc42-4e03-91cd-055311e3ba5e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f567d3ec-d85a-4c4a-bd9d-0a6d1ab298eb"
        },
        "item": {
          "id": "241579c3-9a24-46c1-8b7a-82e998e3578b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bda5ce75-e73f-4c98-93fe-c6aeced419d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1db3895-8a19-4f57-89d4-87f20220a276",
        "cursor": {
          "ref": "aaa17dc7-007a-469a-a00b-b8865cb1b835",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7756a56e-9851-4970-b782-43418812a981"
        },
        "item": {
          "id": "a1db3895-8a19-4f57-89d4-87f20220a276",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0aeef4b0-26bb-4578-8b62-4b9bd9a73e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2c9ea6-1db3-4f38-9e00-3ee843a39a0a",
        "cursor": {
          "ref": "d741b1ff-3aa7-4b65-9318-4e6b15135b6b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "01e8afb0-509d-4a2e-be46-494afb016cde"
        },
        "item": {
          "id": "3d2c9ea6-1db3-4f38-9e00-3ee843a39a0a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "12761e36-ed4f-47eb-82bf-d67062446476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e22208-624c-4d9a-8598-2a6642f03ff6",
        "cursor": {
          "ref": "4b3973c2-7682-4b6f-9faa-de9f5572e071",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "395d30e0-3e4d-43d1-867c-14dc3c4fd891"
        },
        "item": {
          "id": "32e22208-624c-4d9a-8598-2a6642f03ff6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3cc32857-534c-4906-b33b-4cfdc43db38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160ab106-bf3e-4ff0-84ac-4101f84be6a9",
        "cursor": {
          "ref": "79aa9028-0878-4610-a217-2a34ec600489",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ec0153ae-aaf5-464e-93f5-e3937d0e8fa5"
        },
        "item": {
          "id": "160ab106-bf3e-4ff0-84ac-4101f84be6a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "59bdaf76-20fe-47f0-9695-28b1ea13987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a9d0a5-2a7b-4168-8621-6e99bb4a925f",
        "cursor": {
          "ref": "05e58fff-b9f0-48bf-b202-69f19e337650",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "92e8ba57-7b83-4533-bb43-b633d3163e0f"
        },
        "item": {
          "id": "10a9d0a5-2a7b-4168-8621-6e99bb4a925f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bdfc03e3-c8a6-484d-a540-5a34868c1074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b6ac38-6ac5-4368-9d61-5f2e50ae72c6",
        "cursor": {
          "ref": "400a0ac6-3d8f-4061-967f-47237a7753b5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1861eafe-8572-4e78-b068-be784bd75e3d"
        },
        "item": {
          "id": "e6b6ac38-6ac5-4368-9d61-5f2e50ae72c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "33ef79ac-8dc8-496c-b32a-c80e2b93c84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c3fbee-d674-4f30-88b6-039f95fb9be5",
        "cursor": {
          "ref": "0f84e03e-6b4c-48f3-855a-0f479d7fc042",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c40cb60d-a9be-4fb7-8808-c1f5988957ea"
        },
        "item": {
          "id": "25c3fbee-d674-4f30-88b6-039f95fb9be5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "287954b5-ea4b-4df4-81d7-03fc6dc38909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d9e166-67dd-439a-978c-66e04933176c",
        "cursor": {
          "ref": "4e55d0e5-ab57-46e3-ad31-b7936b6356f9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b2bd5c95-8a99-43d3-9c58-4a3bf355dd0b"
        },
        "item": {
          "id": "39d9e166-67dd-439a-978c-66e04933176c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "237f269e-160c-4b74-b65f-e5fcd1275355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb24be22-b743-40a0-9845-621bd430a1a8",
        "cursor": {
          "ref": "00f5ca5d-aa7a-4b27-bd1d-c7064f29695a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8ce7c9d8-6f80-4d46-83b3-5f6c0273929d"
        },
        "item": {
          "id": "fb24be22-b743-40a0-9845-621bd430a1a8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c37d639a-e7ea-4f62-8dfe-77d70782b206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b4c6d-dffc-4aa5-8c54-66c5a4c18cb2",
        "cursor": {
          "ref": "9cc2f41f-642c-42e4-9028-108cf9409bff",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a01eb305-d9d7-4537-b622-6cd50bdd5668"
        },
        "item": {
          "id": "4b2b4c6d-dffc-4aa5-8c54-66c5a4c18cb2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ddd1dbe5-ff08-4c18-acd8-a0d448acb344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e70c25-e866-42e2-9b8a-8e77d65048bd",
        "cursor": {
          "ref": "ef5e7a5f-502e-469a-b388-18a65e1b6cdb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e4b59a42-0fa7-457e-b939-b4012900e84c"
        },
        "item": {
          "id": "94e70c25-e866-42e2-9b8a-8e77d65048bd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4049f497-9289-433a-8f5f-75cb03bca39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808daa51-c362-445d-89c5-4052508d81de",
        "cursor": {
          "ref": "8d164930-6d9e-4122-8801-782ae3623b8c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6ddca0d1-0eae-4afa-9a5c-2ce2027fd4df"
        },
        "item": {
          "id": "808daa51-c362-445d-89c5-4052508d81de",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "330e19a5-152e-4e28-9fdc-51a72f793ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6085a307-3762-4d74-a679-30b9f643396b",
        "cursor": {
          "ref": "a432e13a-8af8-48a7-a34c-85a20edc87cd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4bf5dfe9-53ca-49fc-8a7e-2ffca2831e9b"
        },
        "item": {
          "id": "6085a307-3762-4d74-a679-30b9f643396b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a71b9575-5e30-42ea-89f2-f96fca667e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c70da7e-4917-4d1b-a196-3fd47921c28a",
        "cursor": {
          "ref": "dee3f501-ca17-486b-bf2a-3f050ce183ba",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "15b2fa7f-0e48-49db-9d14-e1df569a3bad"
        },
        "item": {
          "id": "7c70da7e-4917-4d1b-a196-3fd47921c28a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fb8b2e34-2c1a-429e-bdbc-67016476ad52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06e0d9a-2e80-4be4-be46-7b0ef910494c",
        "cursor": {
          "ref": "e8d37ca8-3a62-435d-88fb-fb57c7172766",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f820784c-a436-4d60-acdf-1aa9343e77b5"
        },
        "item": {
          "id": "c06e0d9a-2e80-4be4-be46-7b0ef910494c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "df3bc886-4eb8-4b1c-830f-367ff6732bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fa8d36-8514-4559-b3b1-4cc5fc056a6f",
        "cursor": {
          "ref": "71877ffc-af61-4fa7-8a85-fb7ac8ec9a5b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4b2b4a4d-118e-4784-9365-230a0006c0db"
        },
        "item": {
          "id": "82fa8d36-8514-4559-b3b1-4cc5fc056a6f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2b3bdbf7-2e6d-4823-8963-49d26720f295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cb039a-7680-4348-bf58-02227f7d11bc",
        "cursor": {
          "ref": "604f144a-6748-4bc9-a680-b32f175e729f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f658c4c5-fb50-429a-afba-b5b961b8be74"
        },
        "item": {
          "id": "15cb039a-7680-4348-bf58-02227f7d11bc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "723e5801-2220-4917-87b2-a0c276e81718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d533da-7498-48ad-bb76-3658b0a86b28",
        "cursor": {
          "ref": "ee7dfeb8-aebe-466c-9273-3b8fe4e08200",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f3bae81a-9262-4484-a0b2-74a1ff507d90"
        },
        "item": {
          "id": "99d533da-7498-48ad-bb76-3658b0a86b28",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "427509e3-09e3-4edf-abe7-71b2b1410cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd5630-ceed-42b6-b00c-61ece1fd7156",
        "cursor": {
          "ref": "89631293-0a05-4707-a14c-5ce8db4e71f7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6890d563-764b-4766-afa2-703370c7e5e1"
        },
        "item": {
          "id": "62dd5630-ceed-42b6-b00c-61ece1fd7156",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "01955dc0-162f-4f31-b6bd-172d5bbf3d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1164e5e-6aba-4ef5-938c-90e2d09580ed",
        "cursor": {
          "ref": "96a50dfc-fa58-420b-9c0d-c78ad5724f81",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a2e8fc11-f7e5-4f04-9150-e21c3cf95ad1"
        },
        "item": {
          "id": "f1164e5e-6aba-4ef5-938c-90e2d09580ed",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0e119925-11d9-4a32-a6cb-145d0cfe9340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9676898-1d49-430c-a12a-a917909b936e",
        "cursor": {
          "ref": "b01ecae6-edbe-4e53-bfaf-47795e560888",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "823de0d3-7cd0-466f-98f8-1a9425a302d5"
        },
        "item": {
          "id": "d9676898-1d49-430c-a12a-a917909b936e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c15ef60d-8664-4126-8be6-63cf88c809e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dbc5a2-6bad-45e6-bbdf-804101d76eed",
        "cursor": {
          "ref": "5c506a9b-b797-4fd2-a02e-3c562c1ede57",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "056e98fe-dc5c-485f-a0ef-f52d9419b359"
        },
        "item": {
          "id": "99dbc5a2-6bad-45e6-bbdf-804101d76eed",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "803a6f20-7bab-4c06-b850-09428822699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76c958f-9cc4-461d-bec8-8e42a04a99c5",
        "cursor": {
          "ref": "bd1711fa-4dc0-4de3-bc2b-c8c74bbcdf1f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3f0104d3-05e7-476f-9c5c-334215ad1416"
        },
        "item": {
          "id": "a76c958f-9cc4-461d-bec8-8e42a04a99c5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45999a4f-fb93-4935-aecf-9bc35730212f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098c6968-f091-4e58-a1d1-c9f1cf820be3",
        "cursor": {
          "ref": "e50c0fe8-972d-460a-9bf9-89dd2c3baffe",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "098d51d5-f5ba-494d-b4e7-c1c03c977f2a"
        },
        "item": {
          "id": "098c6968-f091-4e58-a1d1-c9f1cf820be3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "10f5b9d0-c511-4e24-8496-8b0bb5504daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316b6fbd-3178-4246-9681-b0a24f3c7227",
        "cursor": {
          "ref": "8d943f6a-38d6-40d0-ad1a-1036b50958a5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b4cf5226-88d1-426e-8a61-27760afe5246"
        },
        "item": {
          "id": "316b6fbd-3178-4246-9681-b0a24f3c7227",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fcbf7bf1-2922-4826-8ee8-b096a14427db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dc4bea-6fcc-4395-811c-c8dde223b0ac",
        "cursor": {
          "ref": "f8f037d6-2358-49b6-945b-3926e9050d69",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e9e73b09-704d-4b53-8a1b-19468b277a77"
        },
        "item": {
          "id": "67dc4bea-6fcc-4395-811c-c8dde223b0ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1103e47f-78a1-4905-98e6-26e647180062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6c6709-6a02-488b-a887-44f2f5087720",
        "cursor": {
          "ref": "d9222366-9450-4ed7-9ccc-9e7346b3a2a4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c663b082-4a1e-416c-b448-cff273345387"
        },
        "item": {
          "id": "0c6c6709-6a02-488b-a887-44f2f5087720",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "05aa4137-f66a-45c6-9708-979765e56fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f05de5-ce68-4efb-be1b-cdfad9286553",
        "cursor": {
          "ref": "41864e1b-bacc-4437-b8fb-02dcd248c8e3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "40173a98-6095-4a1a-ac0a-62411c414bc9"
        },
        "item": {
          "id": "07f05de5-ce68-4efb-be1b-cdfad9286553",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa649a4d-7c8d-4843-8d66-3766dd729e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43aecba-e1f3-43e7-9781-d4f02348030c",
        "cursor": {
          "ref": "61714e8f-211d-4b79-9093-5f2efded49e8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3d58f0db-8d4b-49c7-ac1a-58c1c9b7da9d"
        },
        "item": {
          "id": "d43aecba-e1f3-43e7-9781-d4f02348030c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b19287e0-acbe-487a-8e74-806f35fef195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b809f44-11d9-40ef-b392-0078a07bd7e3",
        "cursor": {
          "ref": "068f2402-0f20-43f9-bbae-4c17279bffb6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5355a0c2-4b83-4dcb-8510-7a5ee8fb569b"
        },
        "item": {
          "id": "3b809f44-11d9-40ef-b392-0078a07bd7e3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9fc9865a-eb45-42af-aa95-b128cb0fd107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0674dc-3d69-4165-9296-e542429b3caa",
        "cursor": {
          "ref": "2075bdeb-4af2-4c8e-b489-df94b77ace41",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1067eacf-f450-4799-b1b8-bc531a439587"
        },
        "item": {
          "id": "3f0674dc-3d69-4165-9296-e542429b3caa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "053f8b9b-6b9d-4e82-802e-c1cdabf79359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5a1f4-8da4-4802-b3ba-15c22d684f7f",
        "cursor": {
          "ref": "df9436e2-55e2-46e4-9072-122e14fac1ef",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f31be66-c982-4886-9577-d1d031af508a"
        },
        "item": {
          "id": "38f5a1f4-8da4-4802-b3ba-15c22d684f7f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40729b67-2a12-45c5-9fcb-9e122e6f80e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe96e87-2abf-4372-a7a7-15a9e8787631",
        "cursor": {
          "ref": "93f7fe16-3090-4ad7-bd83-6d3358be81be",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bc51911d-5b27-4d2d-944a-4b96428d4f12"
        },
        "item": {
          "id": "ffe96e87-2abf-4372-a7a7-15a9e8787631",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0bc8e0d6-ee71-4715-a358-1f68480ebc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f423cb-8b04-4c8a-be48-5325fab63d0f",
        "cursor": {
          "ref": "98e6ba32-e281-4aa4-99a7-f3555d7de022",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e530b167-9f24-40c0-88f3-d0853c576aba"
        },
        "item": {
          "id": "e4f423cb-8b04-4c8a-be48-5325fab63d0f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "91798b80-693f-4dc0-a21c-6b6c9c102945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84cb566-07c5-46aa-a37a-69ed50e4fee2",
        "cursor": {
          "ref": "55166676-876e-443e-bd1d-31110c51161c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "abda2d9a-0956-4e35-a526-2d3ebecd36a1"
        },
        "item": {
          "id": "b84cb566-07c5-46aa-a37a-69ed50e4fee2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e1c7b52d-38b9-4a30-938b-befe13e6887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b5f3b2-5184-4610-b95a-ab989221dc5f",
        "cursor": {
          "ref": "70bc3eb4-a3d8-4fde-a4e8-c83a6523108d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cb1f5f49-a9e7-4e90-bcb7-0de9f1d54c92"
        },
        "item": {
          "id": "07b5f3b2-5184-4610-b95a-ab989221dc5f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6627c120-1577-4c44-8e5c-c982caa6a48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20829790-955b-4582-ad88-f5636843f403",
        "cursor": {
          "ref": "a14375d5-69b5-4512-a1ac-24a664e19f3e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d53fd5b3-4f9b-4d98-8ec9-0bd6437507b7"
        },
        "item": {
          "id": "20829790-955b-4582-ad88-f5636843f403",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e6d8e794-7809-4af3-876f-dfc454b012ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc548be2-f1d1-4a7b-b3f4-672c9573d65f",
        "cursor": {
          "ref": "d5ef1056-8464-4745-97f0-28193fbc23aa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f3af264b-386e-417f-ac1e-c0a347fea76f"
        },
        "item": {
          "id": "cc548be2-f1d1-4a7b-b3f4-672c9573d65f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d6019464-da61-4a90-b134-bc5f4888cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb4f70f-9e6b-42cc-b362-cd070f0956c3",
        "cursor": {
          "ref": "50b2d2a6-45b8-480a-8c7d-0ae5178390af",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b9b57499-0175-4615-a7dd-a2d6bad95fd3"
        },
        "item": {
          "id": "5eb4f70f-9e6b-42cc-b362-cd070f0956c3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "506aab9a-00eb-4256-a092-5591810e6552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9076a731-6347-4cba-a3b1-465df6a8d2c3",
        "cursor": {
          "ref": "d19fac27-fb84-497f-a5ea-be61010ed37b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3a1cd6c7-03b1-4ec4-ab5c-62a6cf3fe81f"
        },
        "item": {
          "id": "9076a731-6347-4cba-a3b1-465df6a8d2c3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8f9d3b98-03f0-4ed1-a7ea-7e910d4328c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d22069-b84f-4696-9c52-7c0c893e7295",
        "cursor": {
          "ref": "e8f69943-fb13-4bc5-9bc9-33055bd3868c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f8a62ad3-362d-414d-88b2-01b83d8baadb"
        },
        "item": {
          "id": "90d22069-b84f-4696-9c52-7c0c893e7295",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78f91779-b611-489e-bc8b-7770d40ffd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443d80a4-66b2-4544-ae61-27a2573bb250",
        "cursor": {
          "ref": "fea4763d-89ee-4fb8-9c0e-5c55c654f01c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f99b8bc-b096-4d34-a158-7d9ad36d09e8"
        },
        "item": {
          "id": "443d80a4-66b2-4544-ae61-27a2573bb250",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a240bcd8-5945-4044-862a-1611150b7e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b91fd92-6b99-402a-ae64-9cc7d556f5e3",
        "cursor": {
          "ref": "f6a1c808-f9f7-4669-b15c-bb4002184204",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dbdbbdfe-8181-42b1-abc8-86275734d609"
        },
        "item": {
          "id": "1b91fd92-6b99-402a-ae64-9cc7d556f5e3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "48b02bd4-2370-4c7e-ae17-c0ce8dc4345b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557322c8-77e0-44f5-857c-c13252d1486c",
        "cursor": {
          "ref": "071cbcdb-82ed-464c-ad7a-1fb67bc59e39",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f7db65f6-edff-49f3-a7f6-c0ca7af8459d"
        },
        "item": {
          "id": "557322c8-77e0-44f5-857c-c13252d1486c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "96b60354-aca6-41a1-baee-bfcadbe795ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a14416f-594f-485d-ba8b-b629442eab1c",
        "cursor": {
          "ref": "eaec52e9-0dc6-4abb-99a2-09107595a7a7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "00664181-fd73-4aaa-a740-5402134068d6"
        },
        "item": {
          "id": "5a14416f-594f-485d-ba8b-b629442eab1c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4be8d512-55c2-4903-b67d-212d0331cb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a9a2e-eada-4681-a9a8-0516cb0096a7",
        "cursor": {
          "ref": "3a3cb5d6-4ae1-4c1f-b249-23796546f0c5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9269c2f3-d001-442c-b681-5c026eb667c9"
        },
        "item": {
          "id": "141a9a2e-eada-4681-a9a8-0516cb0096a7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f4f48b91-ee29-404a-89ae-d1d46409b45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bfc5db-68a2-49ec-83e4-aff4e8f538e0",
        "cursor": {
          "ref": "0ca85a57-3185-4987-bcaf-abda891cf54f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0a8a69ab-28e7-4c88-b0b4-728235c4daf1"
        },
        "item": {
          "id": "37bfc5db-68a2-49ec-83e4-aff4e8f538e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "72f58c35-9734-4a27-89c4-ce7684f7f8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e5f6e1-7df0-4a8e-a33c-23c4cbe0fd78",
        "cursor": {
          "ref": "e3289dc7-5b80-4591-a3d9-d1374d12cb2d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "53a8d8c8-5620-4fd9-afad-b03de5765de1"
        },
        "item": {
          "id": "c6e5f6e1-7df0-4a8e-a33c-23c4cbe0fd78",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "01acbbd7-4a5b-4f21-8061-74c1aaf71de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f05cd9d-6a91-4281-beba-95230b86f053",
        "cursor": {
          "ref": "9cdb45fd-bc45-48da-bf80-a718cf3a1495",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a4dde81e-45d1-4e44-85cf-3e785f94b122"
        },
        "item": {
          "id": "8f05cd9d-6a91-4281-beba-95230b86f053",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "31305012-e3ed-4b76-929f-a3f8ca3321b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b7df9c-2daf-4c57-9740-f707ffb2695c",
        "cursor": {
          "ref": "7cde92a9-5ba3-487b-9c0b-48b691e65aa7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5717a212-b712-4d6a-817e-01477f6463e8"
        },
        "item": {
          "id": "71b7df9c-2daf-4c57-9740-f707ffb2695c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fe78f069-a540-435a-8f97-971a5e2397e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd452cd3-e3fd-4ca4-9fb9-0246ae67de97",
        "cursor": {
          "ref": "78422afc-4c4b-4d34-ae7e-a882bf2bb280",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3cce43fd-7090-4a57-bf0e-798d0e6c6416"
        },
        "item": {
          "id": "fd452cd3-e3fd-4ca4-9fb9-0246ae67de97",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "90d22270-4cad-45d0-b722-786918387023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efdaaee-4725-4620-a520-6562db50179a",
        "cursor": {
          "ref": "9eb07342-2c30-4c91-813b-4c8aa0918784",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7a7c59a8-de6a-4434-9f9a-f05831b197a8"
        },
        "item": {
          "id": "8efdaaee-4725-4620-a520-6562db50179a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "899e4e14-4305-4065-9fdc-91cd8f143ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4af445b-02d3-4bb6-8374-28ae43a85fb8",
        "cursor": {
          "ref": "e7af3bd7-c07b-4e4c-abad-220af1fe6378",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9f938d6f-a300-48cd-b5c1-0b6f1e2a3250"
        },
        "item": {
          "id": "f4af445b-02d3-4bb6-8374-28ae43a85fb8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0881ad26-8180-421a-8926-cd32a82f5463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f1664f-d3a5-4112-9b70-75c0c4af0400",
        "cursor": {
          "ref": "f1f0cae6-42a9-4bfa-a9af-1bb52d5a8faf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "25348941-a527-47e1-ad8f-8941e189b94e"
        },
        "item": {
          "id": "84f1664f-d3a5-4112-9b70-75c0c4af0400",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "146bf480-3e32-4ad8-9fa4-56240aab78de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1a91a7-47de-4194-a967-492bba8f6922",
        "cursor": {
          "ref": "50ae5108-9ba4-419d-9049-5264f8c1d5bf",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dafbc924-5c94-4cbc-80d2-e210dd78df61"
        },
        "item": {
          "id": "1d1a91a7-47de-4194-a967-492bba8f6922",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7abd70c4-a71d-41db-9bfa-a696d374c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aacaf2-e8df-4525-a031-c6a4d3cf2597",
        "cursor": {
          "ref": "5a31fbb9-7522-4703-b02a-24462529e9eb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e6448637-6382-46fb-afa2-e7908a28bb93"
        },
        "item": {
          "id": "59aacaf2-e8df-4525-a031-c6a4d3cf2597",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "22dd0e42-f7c6-4645-b4f0-e4a1a36eaaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1b70b2-7a97-4938-866c-759dfe9e26af",
        "cursor": {
          "ref": "dd3d8ff4-39ca-4801-a2c4-a1b7e1e148c0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91ea13e8-edfb-482e-b515-d972fce19f21"
        },
        "item": {
          "id": "7c1b70b2-7a97-4938-866c-759dfe9e26af",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7e35bf36-fe1b-4a65-b1fa-54bc43eb0c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd100c39-4c0f-41d5-896c-368d35c8557a",
        "cursor": {
          "ref": "4dc98c56-7489-4cc0-9836-9188db584559",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cf99346b-4e37-4b46-a4a4-88df05021e66"
        },
        "item": {
          "id": "bd100c39-4c0f-41d5-896c-368d35c8557a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "22a8d4c8-041c-40c0-9790-b63e98c93fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b0b9c7-144f-4460-ba0a-5adfa228e36d",
        "cursor": {
          "ref": "80a79079-2a7f-41f2-ae0b-2bcbc5c6f12c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ed52e102-ed30-4106-9b93-b6a275ef6ab5"
        },
        "item": {
          "id": "39b0b9c7-144f-4460-ba0a-5adfa228e36d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "93d7de21-1b76-4f3a-9f61-cffb0caef176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec5730e-5256-47c2-b15e-e2d354ce2530",
        "cursor": {
          "ref": "2357c6ff-042f-48dc-b637-7a08486e20fe",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d6ebf674-98a4-46c8-9253-9ab51f58dd80"
        },
        "item": {
          "id": "2ec5730e-5256-47c2-b15e-e2d354ce2530",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c66f24a9-d970-43a5-9e9a-f547124db657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a51ce0-542b-4771-b7cf-3e0b2aaaf904",
        "cursor": {
          "ref": "4f84c137-7919-46b6-98d9-50a2f573e520",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "efb58fd1-c291-4760-b044-652c9f573c18"
        },
        "item": {
          "id": "d1a51ce0-542b-4771-b7cf-3e0b2aaaf904",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4004cf30-686d-4e64-a4c7-6c0ddd547c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eac3270-4b78-4bed-aa4e-fbf37b6148d7",
        "cursor": {
          "ref": "17b7f884-8f54-4efc-9b14-265a48b2461b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "860f02c7-4ee4-403a-96e2-0dfcdb0a5a94"
        },
        "item": {
          "id": "3eac3270-4b78-4bed-aa4e-fbf37b6148d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a90ea7ce-a56a-4608-906d-17c8c257f429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab3d77c-9c12-4c59-b590-5d359637d329",
        "cursor": {
          "ref": "380afd6e-7f97-4259-afe6-259e4e45a082",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9d4387c8-c8d3-4794-b822-07dcc7a6085e"
        },
        "item": {
          "id": "eab3d77c-9c12-4c59-b590-5d359637d329",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a468701-0bc8-4bff-8cbf-3d24de4b8229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac7df9e-f3b8-476a-9d69-e6a0a20d766b",
        "cursor": {
          "ref": "6f4183d2-5861-49da-900e-9077fa16521c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "90ce0ffa-db5a-4b6f-b566-6fb025380727"
        },
        "item": {
          "id": "eac7df9e-f3b8-476a-9d69-e6a0a20d766b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c96dc202-f697-420a-8141-4d762631cf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0443d9eb-421f-4587-b6bc-59ce3225c4a3",
        "cursor": {
          "ref": "0a7ec851-4205-474e-a0e6-7c9d86d8f78e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "927985fb-9205-4a42-ab44-fd693b2b4140"
        },
        "item": {
          "id": "0443d9eb-421f-4587-b6bc-59ce3225c4a3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3272ebb0-49d4-4a99-84c0-a6f0c6b61d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de39e301-4fb2-400f-a048-a9636f528ae6",
        "cursor": {
          "ref": "2d640d78-1df5-4339-b4f3-78da752413e1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7aecd5ca-7b1f-40a5-b316-ac070f3510a7"
        },
        "item": {
          "id": "de39e301-4fb2-400f-a048-a9636f528ae6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4e7f8b95-0439-4e88-a501-c6c60b0e99dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878e1f55-81c0-4ba5-9cca-159c264ef5b8",
        "cursor": {
          "ref": "ded08cee-afff-480b-8666-6113654adc42",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "90bfca2e-cc40-4e15-904d-ebcf9c122986"
        },
        "item": {
          "id": "878e1f55-81c0-4ba5-9cca-159c264ef5b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b64cf5c8-b778-4b44-8254-ab3c7c5bd0c2",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fac6740-7539-4cf5-b10c-306d91699717",
        "cursor": {
          "ref": "b82f198b-69d1-43ef-9106-5ec7e7426bb7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e3400a68-ab18-45d7-bf5e-e0e4977caf59"
        },
        "item": {
          "id": "3fac6740-7539-4cf5-b10c-306d91699717",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1f1389ea-fb67-4480-97f0-479b91850f95",
          "status": "OK",
          "code": 200,
          "responseTime": 3171,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0503faac-0aa2-482f-9c4f-c1e5414e1494",
        "cursor": {
          "ref": "bebe427b-bde2-4d30-9afe-40cdb0a7bf4c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "791b794e-83ba-4e8c-9583-890fe60e4ed2"
        },
        "item": {
          "id": "0503faac-0aa2-482f-9c4f-c1e5414e1494",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "628b1e73-836c-45d5-9bff-5dd131923e32",
          "status": "OK",
          "code": 200,
          "responseTime": 5299,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1579b4-b0ed-419b-b712-3dc5a0255642",
        "cursor": {
          "ref": "d972c2ba-91a5-4d76-b659-bac011157ca6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "365763c5-cd98-4fb5-9bb4-ce3c405c8f91"
        },
        "item": {
          "id": "db1579b4-b0ed-419b-b712-3dc5a0255642",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fac25908-44a0-430f-9b10-62c67d244a27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1579b4-b0ed-419b-b712-3dc5a0255642",
        "cursor": {
          "ref": "d972c2ba-91a5-4d76-b659-bac011157ca6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "365763c5-cd98-4fb5-9bb4-ce3c405c8f91"
        },
        "item": {
          "id": "db1579b4-b0ed-419b-b712-3dc5a0255642",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fac25908-44a0-430f-9b10-62c67d244a27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6066d1-71b5-4fb7-a154-a2c8197641b6",
        "cursor": {
          "ref": "0b108d22-9231-4b24-bf1c-01592e7143cf",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2e3d55b7-0e91-4828-8e50-8533a8896f6c"
        },
        "item": {
          "id": "0f6066d1-71b5-4fb7-a154-a2c8197641b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bcae890c-c233-47d8-b918-580a492eb976",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a50f4-99d9-417a-889d-9057c8100426",
        "cursor": {
          "ref": "d43dce39-6bd6-4ba0-aba9-46a2ce087875",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0fe7c421-d4c7-4644-9f6e-abc3c1f023b1"
        },
        "item": {
          "id": "8a1a50f4-99d9-417a-889d-9057c8100426",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b4b779ef-c51c-4cf3-a83e-6fbe70535b32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}