{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "40cd040b-9d6a-4188-893b-c075e2a6eac1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0e3904e3-93c5-4d99-8462-f038cce00d1d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14208e3a-373f-4c9b-b4d5-8c0de6565c02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c416f1f5-c329-4eee-b39c-012b1e79c9c5"
                }
              }
            ]
          },
          {
            "id": "ba8163d6-ca1a-4945-ada3-33275c2f696a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b0d3adf-399f-4b4f-a4bb-38f57ee87cec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dfc78563-a87e-468c-8bc6-c1b84ffb8c2e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2f0939df-3aed-4310-82ed-4e13c1ddebda",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ab93b72-6bb9-49bd-abb0-023c1bbe5446",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7704444e-ee39-4315-a614-b1bc81551b1a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdb64fea-c09a-42c0-95b0-2e626a30a58c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f140f26-d64c-4686-8073-77d9b8e7eef1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df28e0ae-014a-4a55-b646-8f61a96165b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55273fd1-8f79-4c11-8867-aabed35f2960"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "422716dd-6e37-4464-833e-cb203765afcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67347780-beb0-43a5-83ed-f711c1e2fee8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a9e1015-be98-453f-8fdd-228119f14736",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b5354c2d-8425-4fdc-98a9-0836e5cd67db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a824f327-f269-446a-bbcb-fa23f9afc5c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2602d24a-8874-4f66-b7e8-d918ac12955a"
            }
          }
        ]
      },
      {
        "id": "476df4ab-e882-4189-87b5-fa0f0337ef17",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0310d5f6-12cf-49cb-b783-155047f60b1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c353e298-10c9-4b80-883c-e831bf19824d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "868def5c-3baf-443c-9584-ad0d4308157e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf877beb-5561-4970-8df1-e280453c17be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "896e8948-5f96-4e4d-a37d-f47adb460660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff848831-898d-485a-970a-ff52b8956660",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2ff37e-c881-4d53-8bc2-87483af8abff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d540423-9ab1-495d-bfe4-c73356b84ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a09f6a-0b8e-4ad8-affe-adc80b171e9f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3017f9fc-1d26-48cf-97f4-72209c1e1123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8633198-e229-4d31-8c19-5e2b60547ae3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b41b73ca-4d2e-4bd4-ab63-c53365269e8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd78cc87-a214-4710-a575-c146fe35a44d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83479d49-7614-4762-bae4-80d123814b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69597a91-93e3-4253-85fb-a5eb8c522577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8feca74-4d01-428b-8bf1-2bbde8fc26f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f016fbff-1f47-4180-9165-874babdefbdc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ab96f145-0e29-4409-acd5-9039b36d01aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40ea9e97-7c9e-4591-9341-2cf544e10a75",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea4deece-68a7-451e-b30b-d72dc70e6527",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9e96172b-f596-4b62-b325-8617600a1536"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cba605e-2467-4625-8252-1028043819e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "db99ed5b-5d3e-495f-84e5-de2e826e5624"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d193af7-3581-421b-9403-1bffe7e068b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86e0d09b-dba8-4e79-87c7-9ac0429f0bc6"
            }
          }
        ]
      },
      {
        "id": "c29ce8a9-e069-40c4-b94a-1774ce937707",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f1be3ac4-e9f8-45ec-a8cf-dec630235d5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c42f082c-e39a-4278-9468-427128d57dae",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f57a0e52-85f5-4842-a4d4-855236238a18",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2949599-4ec1-4662-af5e-2d90664c1550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636df2ac-f20b-4ab9-bc76-676a7e5684b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f257ef3a-ee91-4b94-927c-fcd4c762714e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05efc4ef-ca21-4f7b-881a-0de1ed546b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9ebb9f-877c-44f1-a8d0-7d237577c905",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ece9239-e765-48a1-828c-691fe7bfc8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b1be13-e8e2-458b-bc40-8b65434ed692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd358e77-3cfe-4b9b-9a73-6fa297930367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0611f17-40e8-4238-a83c-4abc199dddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3705d31-ab35-4e6d-8e06-c5f26cb31feb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878ddb14-cf28-4073-920b-1dcb3e9b4480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7008013-a141-4479-92f8-4e3a6cb11cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e28d7b7-2c9d-4f7b-9c03-1693737c0735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebd26574-1ca5-46fe-81c3-1aaa07f5cfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8064bf38-fc78-45ef-9003-4367f698c375",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29503a1-7aaf-4532-9b9e-17b68869d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16a4c18-1bd1-49c5-bdd6-bb1685e025bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b866c0c6-921d-4bef-ba6b-49bac21f9592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ef2053b-690a-4da1-9df0-b84c2dfd2da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f757712-fe4a-4c73-af0e-dc8114d6078c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37660e4-5831-49f5-bb2a-38a5ef533ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2da7b0-508a-4fc4-b147-b721033809fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfd2196-a7d9-4617-9680-7dca508eb80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e3be69b-af21-4e9c-a7df-2f0eead34dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5889319-4fc7-4ff3-b0b9-bee7b2ca0af1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c413c1-c6c2-469d-8197-ee5aefd51f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d44eeb-eeb9-444e-8905-251c50e4129b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77af660-e269-4de4-8b5b-fa7eb5a653fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76b0d976-5fcc-4bbc-afff-b117f7cf1875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf03ac7-7583-4799-adb7-3a2242ad2ab2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb543955-daff-459b-add9-d5e2c91ba33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390f54b5-eef8-47f9-965b-fae2e3ac7448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7097a6c6-b14b-4b36-a515-f2ae113d201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e571697-4f76-46a4-bccc-50445dcfc7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b41b799-b5bc-4fb3-bb40-6410fdb29004",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec5dc7-d5c4-4d8f-8920-ac8606032c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a67d8d9-4543-4695-abc9-02645af009de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690574f3-b74c-4f25-9cb4-6e29d8530964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1841a5af-1e58-4ebd-8783-89065e5ae6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06e9117-8192-424c-ab05-4b31a48b8b12",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5b6f91-3ade-4493-a169-a778994e81d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13836cab-ddac-41ae-9096-a95956dd4a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbb79ea-77c3-4129-b527-e4270a4b2194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9495e865-bf44-49bc-b7c6-f643f8d07a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da67910d-092b-43b7-8c00-d4d82786127a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488c9410-c6c9-4dcb-92e2-9c3a51a8d5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bc1e11-a10e-4aae-a8fc-a20df6e6b5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fb6899-2c0c-4b5e-b8dd-db7ec716d3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "350a4f7f-74d5-4009-93f2-81581e8cfa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536ce416-568a-46a8-843f-4fac9e212e55",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db416f-ea70-4e1f-a223-bf00be70a456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6f565d-5fea-49aa-b8e9-50ca9f245c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c7b100-ccb5-4bdf-965b-878264759e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b90c41f-26c3-4bb8-8f42-0bbdb87b73d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7c35a-afb8-4d2c-94cf-607fc1cb33a7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b43d72-d611-4222-bd18-e755903e7849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be86366-86a8-4b8e-9f4c-5cc19d2f67ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ea3b34-0032-4f17-a61c-61514fc4d876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1746642c-8d37-4b34-b971-b44b8d619c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b956b6-cc9f-49f2-9276-3283d4e55282",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b09236-2c57-4edf-a890-864a8b372a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724418d4-8f9d-4916-ac95-bc611218b5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676d472d-bebc-4403-a81a-4437f68c40cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5a52b46-eb52-4c53-808d-011a403c5ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8f14c-11b9-4c6f-a971-907368505ae3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4d66a6-a4ec-4dce-a11c-fae67405d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cced742-ba26-4f29-9dd1-7c1bb16b946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834b8525-078a-4ab5-84eb-246eb9890950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea674a9-4015-4c9d-a308-b93069243a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4defdd6-bded-427b-a541-6dcc0dc0fd7f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e007ad0f-34e2-473b-9f9e-9a77ad17a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e028815a-bb01-4eb8-b112-b95f20c57608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ac613c-77a7-49bd-9e24-8ea48f9b8132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecedec83-930f-4d11-8660-600eb8988b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f242686d-772b-42df-b1ec-e70634525755",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db7cac9-de2d-4314-8756-30665ed8c6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5997b16-5799-4a47-8f85-5d89dd4b28f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f684713-17a7-4f8e-bf5c-815677530c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a9018a0-895b-419d-bb17-08fa0d4041ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf78f0a6-5411-4037-8738-d7474ce09f3a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5b1fb6-c75a-4d51-9a6b-05e549c51e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a39be1-11ed-4f33-a9e8-c22fd7b78c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3451c6a6-8930-4ec7-84e8-d943e611bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8b777fd-b0f2-44c3-aeb3-0cd340e7348f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0022c934-2806-4504-a2d8-fe3d54106c66",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77f621e-7329-43c5-af25-ad8ae0eebdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acdf698-3275-4438-8797-aa319d74ddd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d3526-2bd4-4126-b46a-f1887cc7684f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec68f30-e6c3-4ee3-b393-6c60e2562196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555c85e1-587c-4fd3-9e04-55f7ad2397c2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f05d4-bcce-4903-9502-9eab970a8809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34d2fe6-e00f-49ca-92f9-4394ebc56af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a30d1e-5c6c-4e35-9ad8-40f29c6b7808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f0e3ae-f885-41cf-8a04-15d1bd6e95e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cb074b-c646-43c5-b6b6-41927446d2d3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec6667-5cdb-4f8b-afa4-c76decf5efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444b3818-a15e-4988-9d30-b4ca1fa13a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6ff8b5-b786-4395-8e40-fcdd5171b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "219327b7-ff75-452d-8d14-5ce4a3a06a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4858f7b2-3210-4de3-b88b-a8e8aa51e0c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eae3bcb-d4d1-4b76-ab97-ae99e4d0b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e87822-a7fd-452d-b248-806543c21ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dc897d-165a-4bd8-b843-520bdf2646cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83dc36d6-f4fb-4968-9032-c7e190835d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061dc8fe-0c57-4402-b7bb-e3f8635f38a5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d45a39-7392-4778-91a7-6dc2eae6d466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79228851-b653-41bf-8274-ad7684295ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16b1ebd-a9cc-4b75-882a-16c6f51817e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cbff57-f311-424c-9f35-d73660bb5f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488ccab5-ecc2-4842-b21a-4a900351eda3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b74e29-8470-4c6e-bf87-ae237feb07d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cf67dc-2f3f-42dd-9258-b6edf8fba053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a2f0d4-a5b3-4d1d-a882-90bbff4550ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df8f702e-6838-4b40-85a3-a08e586ce67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8a8cf6-2544-481f-9d7c-9ddb857b2865",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c7d71-a7ea-4955-a0fe-ec4c290c516c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f81d5c-d655-425e-bea3-0578951ce6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81534e8d-9f47-401f-8a30-a0eb5557d4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1ff57d-3c96-469a-a191-f1a5c44cdd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490f7c4f-9b1f-4ec7-99a1-0b037a76c762",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdb6cd1-59a4-417e-a82d-144902f23545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a049033a-d945-46d9-b074-f2b4c67d66a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d39739-e5c8-47d6-849b-52ee87a4befa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f833314-40b0-4539-97b4-831a95528e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c9db63-c270-4ae7-b877-e7aa9e10b942",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db1e892-5631-48e4-9aab-7683dcd2f1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a065c05-a8da-4802-9008-3fc273d7d342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bee233-9256-43f4-968e-c3a385e6efbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2bf786-75c1-4362-a1ef-533931820fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32262a3b-d0b3-4d1d-b25e-251df35e177c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dad313-2398-4961-80c3-2987ac2ce0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374e4abd-c525-40c2-83c4-f322392f186c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e82e6e-3495-4220-845d-ca2066768fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44adb62-631b-493e-8bad-8c406e8d18bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda70c2b-a906-4186-ab48-2627e04f6dea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67861828-1e8d-4e26-a8ac-47bbd8598bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6224f957-cdfc-4ece-bf59-176535603abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9375a5bf-13e8-4cab-aef9-b4a917d89bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d061b6f4-9240-4161-a100-12c9f477014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b177093-33c2-4a54-bbe4-a0fb3bc84a10",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28dd5b4-85bb-4c08-9fd6-720aea14af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4d74ef-6566-426d-a814-268c18bd6e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8caa4b-d225-4bcc-bfe2-a02fa527927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba977b5e-73dc-4b85-b87b-1e422f3ae6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02d24b4-f03c-4d2f-b8da-f3f7c3a8f6ea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866ffee3-9e3b-4db1-aabc-64b6397de43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5dd64b-ed41-4cbc-b3c3-7518e62a5f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1c1cc7-7c96-49d3-9d30-58fe75af4c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c3535b-6ad8-4898-8b02-7cb6eeac8952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931cc23c-7baa-4a8c-b08b-e46cca0d754d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee631c0-001f-4964-aa29-186e61951cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ba867f-a168-42e0-addb-4447f91beea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cf9402-3555-470b-95e1-dcc9b6ebfcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c02ad26-8d13-46af-bb22-9a9417bc39e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8791b0c6-087b-45d1-b31d-99885c7241d4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b840735c-25ec-42ee-a7a6-bb647ad4568f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fe0554-6fc0-4a02-9da4-47a42784c62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8af209-9313-43ed-b73a-1246e72bbb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37488f29-af20-4024-aba8-db413a439f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c263d7-c410-44aa-9331-893b3c658a57",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801d73cf-5179-41a3-9ee2-c35bdbf4a730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d0adcb-9387-459a-bd65-d75149e4de18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b93a1-e60d-4540-aa8c-17fdcbec5310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c4eccb-768b-447f-a226-7e53fb8f4b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5515e16d-0693-4f5f-94aa-8efe078b83fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7c448b-32fc-4071-a74e-dbd74b1df506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3958e7-2c40-4841-92ed-ee4c903a4776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151475e-3daa-47f2-b6c8-57c6ef9504fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76db884a-b82c-4e23-9f65-90e2941a483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2126e539-2e73-4272-ae82-bc12d4aad574",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c9d2a0-6bfe-45ef-b452-99cddd522fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608b4a1f-67c8-46fb-a75a-b96042678637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8001ef6f-32d5-41a6-b61c-d87167f51743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e2844eaa-d686-403b-9173-2a741a151190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9977d56-f419-4c5a-8aa8-381ae40ce4c1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c481b7a3-9b15-4dda-9623-1cce44e441a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18ac6080-1c85-4eb0-8972-108189a07b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e343e1-5bd3-469f-800c-b10a3cf82518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d765b6-a040-409e-be10-bc9c18746198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0e6073-3615-46eb-a7f2-e9540bf3ae0b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943ddc11-4b0d-4f05-9340-ab1b6d1e9274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cfb088-4d71-4409-b12c-6d567cb02c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea380e5-4770-41c4-9449-ac3c7c7a1c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "446ed924-81e4-4c10-896e-274026e136c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acef95e5-5b75-4528-a395-c8682886acac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00404f53-ccbc-4c7c-9ed6-aacea4ae514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d671ff-2b0e-4f64-858b-2c81cfcecc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878315b3-fd68-4606-bb00-36890732675d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66c5d76e-337d-4fdc-b5d2-069b4d821518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ef8709-bca0-4a70-aa0d-bf5b27cd0201",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a1176c-73d2-4730-bfb7-31739a020bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44942da-77dd-4054-b0fe-930c7786a0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a9836e-2ddb-4895-9117-584e124ed074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63c5c3e2-a819-4313-a7e2-86d101460b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e822a1-2b6a-44c8-a54c-2842fc2778a3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235648df-d08f-4830-8af3-faba8edb6d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fe1f9d-5328-4b51-9aa5-8ffb745d39fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4617a9-f6e4-4403-be63-094ca4bf6a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "399ccee4-abf2-4e2c-8d95-ac125f8fcbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f6e81a-5778-4db7-a3ad-4e95ceb70fbf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb3251a-97b1-487e-8ed7-2d6eab881883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9a1291-e7b6-4981-9e36-edd03ec06016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c6aab8-6811-4447-a417-430f4e099d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f68597a5-4a52-4bae-9a34-2eee1826f86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ccc279-6a0f-4b3a-a230-72ad4a0fe867",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b66cb26-846c-440f-8eba-d850e73033a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b2d135-d5c6-4213-a355-96947bb57def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36a8930-e4dc-4363-b242-0357918a2690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb8570d-ee3c-400c-a750-c5b3226a40be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734e424c-64a7-4a76-8bc6-2419b24244be",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d61423-306b-47b5-99a2-576b459ce766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066c727c-37ea-4d8f-924d-776f5f631fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37082fd5-1e15-4efa-8218-cd78620a17f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b084f7a-6c74-4cec-b484-c6dc2b6b1263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb126cb-d858-4065-9a62-cfa1254e6aa0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481ec490-7784-4998-ae77-077953452c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b06963-342a-41c2-8f21-78a9f8e979ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15487605-5456-438c-b2c1-f21d1c8245e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "93404e42-8509-48bf-8376-f9f9d465c7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac798b9a-c8df-4e33-9a98-ef9e6595812b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f26d184-e3b8-43f9-a3cc-341fe590762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a45939-0734-4416-b9da-0a4b68bd20f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80ce8d9-1a40-4268-b9b4-d45f4c54b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c897073-f17f-46dc-88e7-9c70b7f6bfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d93beb0-86a0-4a4d-ac9d-5ac37cf88dfd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa74a28e-9169-441b-91c2-53349fd3b6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8889f8-3099-4587-8a48-0ea856d6f172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1fa2fa-0c27-458c-b268-0be682534b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e55648f-05af-4dfa-9e4d-964e3a04d020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cc6c8a-9774-4be2-be17-4f2823e8851f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536907f1-df74-41fa-8476-668b37e852b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053cf0d2-1e85-4dac-ae89-bce90f33e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15109334-38ad-4c69-a076-6556d132afe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc37eed9-e716-4c63-b016-a48fab2d09f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a1bd1a-0e42-431c-bf3d-907763fbd922",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dda5b33-3be7-44c4-b9bf-201ad5c96b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afeccdf-ed06-4ac2-9881-469e3b4b84ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef2668-caa5-4ee7-bcd6-7c60507c6309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cd2220-25de-4dc0-9ea8-8d04f8265a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a365d8-7b4a-4531-8351-b4732f235df5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b4e5e4-21cd-45ab-b039-160c19b07fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6065c920-fe1d-4a13-8ea9-ec224ff40876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25944875-07b3-43ee-88b8-297b1778562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b469fc7-1060-4ac3-925d-391b56eb4865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1698f-e4d0-4029-ade3-635927c48993",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a4510b-fce1-44a2-a0fd-d7553e3b354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76004371-89bf-431a-ab28-278c4214603e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab2449d-793a-40c1-b7b3-14fd616aaab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14f5af0b-88f5-4e9a-af05-263304f1cced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6060aba-7fa2-48b2-a41d-afef0579cc4d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a6aa8-8ba2-4e05-ad50-a2c524022aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5ec1e9-8e11-4cdc-942c-a191aceebad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d95010b-2545-41f7-b7dc-386eb8cbcb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "df9c68a5-bb4c-489a-a4af-26adb2148c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529df91b-eaec-4321-b315-434f9e7b20f9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a0f99e-9282-4977-8bcd-5db1a156df69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5cc68d-1cbb-4c96-beb1-fa49aaec98ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aed519-abe9-4ab2-8be6-0059dae9a30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "875b8758-a08e-44dc-853f-df81e394410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5589a4ed-9f67-4beb-a64c-9a030d4dc56e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4a42a6-d3a2-407d-9f2b-79e5727c2909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6d6f21-b496-4182-936b-c30970e5a723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745d252b-4804-44dd-bf54-f43b24b25e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6c55a0-dbe7-47e7-bda7-d6df33607188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eb1671-8e15-4ac5-8cdc-f4c857db782f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2aaadb-5376-4759-b7fc-29762ef0ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887629ab-ded1-485d-9041-2c74fc06d937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6ceeaf-f11e-4e60-9fa3-2898f3460eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "252d2aef-4ebf-4861-9080-a6eaa1d55fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0615a7a7-efd2-4d0f-b07b-21e9dfecaac2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18353a24-b550-47e4-be46-1c6ace8b5a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d4a534-3675-41d8-b802-e3b49fc332ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e79e3a-563a-443e-9dc1-025e2effc08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9f7de2-1204-4502-ac47-251eae33afda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f636a4-f0f5-4b42-a2ef-e1ba965f3472",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b818176b-c611-4fbd-a5f0-545d75de3477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2f8bbd-e70a-4ad2-b3eb-24ea3b66ba75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b488f27-285e-4542-899c-b871902c71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "357c306b-0b65-4885-b1e9-7074293319a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93c588d-29eb-436a-ac0d-1851c39d051e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd43880-0eae-44f2-836b-fd7c1236adeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13c187f-af6f-4c5d-98cc-35de29d51259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00353821-cab1-4b9e-9c6d-b32210220b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64ad0eb6-2d03-4cad-be13-c5a0ee96a410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04be2a4-6b97-4511-b353-99e9700378a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc5e1c4-4284-47a5-9400-79430fc8b401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7756af-b5d2-4a68-853f-b2cc29a0b47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8c3632-70f1-4942-9e68-4f9e03b0c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "532824fb-0ee6-4b1e-b138-e16b1dca1a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa37b1b-2ec1-44cb-9f6d-c48927be627f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a941a813-64bd-4d58-893c-7345a192af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d987c8-82a6-434a-868c-7c07b6eef420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46da3ddd-9da8-45c8-bd8d-7adf355d0be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6d2a61-c1da-4c78-9fa4-cba880605e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f3269-ae99-469c-93cf-7e79b65f8157",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2551bbe-54ac-4c1e-a2cf-f54c1f713c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bbfffe-39d1-45fb-a1eb-52a06f3f7c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bab2f2-2344-4ff1-b46c-51556ceaa052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c93f71-ab68-4a95-8b96-bea1f60c7a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730cce6f-50df-4375-b466-332db1147693",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88332fbb-c0bd-4b3b-a0bf-b25942910256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad76b8f-8444-4ec5-84b7-c3622df9f3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf7118-d794-4ccc-b415-f3d96abdddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebd1fab-04c9-4350-86a3-21347161ebf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f63ef1-18e4-4539-a6c5-0004937c605f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e03bfa-4113-449b-9c7c-9a3f595cc48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58671861-47b7-4865-912e-db853dd3917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7658002a-01f9-4da4-84b8-1da3fee45109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a45a0bfb-3d36-4044-922c-6b4abb4f671f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6616a803-3f55-4131-a109-7c0c8d9192da",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ef7674-b1fa-4f34-abe2-fd87dd226916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84f1a43-2758-4a72-81c1-047325827cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e39d40-50b7-4991-babe-e1eef86e21d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a33965-247f-4dd0-bb93-ed30e0f8031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad90309-af90-4816-ba27-f07e3d0a46dc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd13abf5-d81f-4bcd-a438-a327b50578ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0beb4fb-3cb4-405c-98dd-ac3bf073cc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8ae2e2-909c-4bc0-9de7-9fe4a4321bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db82e85e-9784-4685-bc79-86185da1a5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638ff852-92c6-41f5-bc4f-b9736d3b37b0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04621df-68fa-465b-a4c1-f74e21776dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474d8d9c-e8d6-4925-b65e-ca4d3b0a6c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918bb7f3-c090-475a-a55a-68a255cd99ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe07a96-d383-4bb3-be5c-97c176b2ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73a60f5-d059-4890-bbfc-6ff3a3ddf6fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8374f1-a7a7-4977-b3f8-c24d13cbaedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3775ec70-a8a8-4157-a6cf-c5caee70782c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea27f98-8080-41e6-b957-5b1170672038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5459e3-cf9e-4f31-a3ec-dd4b0f5f3176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61380917-81c9-4f91-a11c-68dc7f9e05a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae76fed-c693-48ac-a796-9ea3962682ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba87476-4dc7-4c75-9f58-00922f340563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c6c32b-a46f-44b1-9fcd-d994f495c137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d75c10-089b-4168-94e7-e38443397ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78739b69-e4d4-4c2c-8fc9-896c9e31e3d4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf50903-b7d2-484f-84b3-3c91528aff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc02ec1-ac62-44d6-bc1a-918078e6882a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15072f5-6aef-40c9-a725-dc7bbd3632f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee760280-6b9b-491b-8c15-6e553c1d1d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6d7fc3-e597-43c0-9329-7ab1d415dd48",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ad94b5-791a-40e1-8313-9410f27b452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c10f2c-4705-4294-8d9f-8eec6f9195bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b462e2ff-a06f-4d16-a238-353873f036d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a572400-f525-4f5f-bb5e-d00e3f4f3b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16834d3-a919-4ce0-af34-d233c77e7c5b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0beb1-4dac-43f7-bbef-258f14bc4d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0622da-5e23-4991-a377-0ba69161a08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12de0469-44f8-49ce-826f-cfd02c10b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f83d827-4bc7-416b-b5a3-8c105c3e04ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1052942-144c-49b4-9750-3ea85032791e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7855c2-4393-4f06-a711-6b842276645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b824d9bb-0da0-4e5a-a9a5-138c4aa51875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f461aa6c-7a91-462e-9c82-9bbbb713646a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "959e6082-90a5-4a26-a15c-ed23b80226d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac15427e-9972-4fb6-ba73-4ebb5c3a0fbb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c4e0ad-d74d-4df0-a3b7-2f73a31e95d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea8a124-1023-4e66-a48a-c7c028bc2076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf21d1b-c69e-41db-9286-feed73a78db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "967289d9-9444-47ba-8dfe-657573bbe546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a89173-05ea-4909-90d2-c91fde35c11d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4e1f13-1f22-4563-ad86-b79b04f4edcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1398f644-4601-40ca-b3ef-e69d86fa7789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4089c17c-907b-453f-92c2-9ffe3f8efde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39995067-8f05-411e-94d2-f04b50e79dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bf7faa-de2f-411c-8fca-6e6577eea7dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862df2f5-61d2-485f-8184-3494a4f68476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba08718-0415-4948-a480-97fc44ef9390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896052d7-4589-4999-a0a8-141ee9b89ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86142095-46c8-4728-a092-5c5587a381d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c2a756-8ab8-4ec4-849d-f6b22fb13557",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667ed24b-dc07-4d05-9182-8f61702623fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74503b8c-89ea-4b87-845e-564a6da1af08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b0c617-4269-45ee-b4fe-c49bc23455f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2ce419-9972-4711-97b1-573b9c2b9288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ec1cbe-11c5-4616-a8aa-bb1937408648",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36cd97a-d77c-40f5-9060-1516b92f8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438b9457-a2d6-4400-b152-1f518461312b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044f1650-0ef4-4f67-ab09-9f38fdfdae5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc28a04b-72bf-4873-bf20-c3ce0b2d60f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ee2e24-5308-4aa7-ad00-39a4f033a919",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc70a553-e8f6-4501-97b0-99ea1569b5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94981aaf-d8b5-4253-a789-a7c49c59af4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abda461-1fe6-4745-925e-39d676b18300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9f262c-b91e-45ee-bd6d-55c8cf35f14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976df4eb-5d5b-4289-9ba1-4f9f59cd40b5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ad6cbd-372c-47eb-a790-d4fb30f98d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb1bc4d-609e-4791-adad-20a2b886a735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e64c0af-fe87-4005-ae54-754eee40d6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7f1f60-ae32-4fe9-a302-66b68fb6e73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b1b1d-97aa-4d46-9b11-d62f9bfebad6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244942d-8b42-4b57-bff7-34a273106516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f88240-7406-4d67-b236-f87de32d8217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae248cc-5f48-4b93-811a-90d2e405102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1a0f7c-f914-445f-a24b-e63d332b494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4226d496-aa4d-4cc0-8600-44247ae89a72",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff93c88-4aa1-427a-9570-6ff3fb5bd3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d66b2d-67eb-464f-a280-980e98c830c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef698a6b-c4f4-4397-b786-98b56985fd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3a7fd7-9143-46ae-ace8-fffb57cebee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4777cfaf-bf9c-4461-a5db-71cd18a85551",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7439c6b-402c-4846-a1fe-a5cab7e7c300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a462725-d288-47c8-b2df-c0d730e3b4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3805ed-9576-4e26-a783-ac80a4d621dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7f0653-953f-4847-a4d2-0b24b94396d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdca53c4-fff4-448c-af1a-e51461816b41",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f32205-d3b9-4ef2-a38c-849733ddb91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72cf1ba-57d1-4314-beb4-6cc0347d569d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46265502-f4d9-43ec-ac4a-76704ecb6fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab617cf-b2d2-40fe-88ad-af09eb4a0bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000e14d0-52c5-4b8b-b68a-7ce511a4c17c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e44e48d-8eb2-4f3c-8056-882579fdc18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba8a890-0fea-4ae4-be49-fda6cf371d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0538dd0b-983c-4a46-b9f5-1fa404f532f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13eb0270-2ab9-448c-a5f8-16d825a4a688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71e0408-8d82-4eed-9c6f-b7e7b2a8ed57",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62feeb5-6edd-4384-9f9d-94a300ac8083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be75b41-cd33-4b24-b331-737c025e81e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47632391-9602-4ec4-b65e-0a20318c525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3c7839-f8ea-4dea-8485-684e7947a6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c287cae-0643-4c7e-a0a5-d1cdc20efae0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0351c3-8fde-4e1f-84e5-5a5156ec55ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fea92aa-b738-42da-86e3-fcbc894701ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8b8dd9-954b-43b4-b08d-c6a6d8c4612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "069bf69b-03e8-4237-8d7d-c88e2f5727cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcf6c6c-4c16-45b7-b33e-c34246520aaf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e83e2b-3edc-4474-9a3e-326a91800220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7437b37a-c8e7-49d1-9c3d-4fbaf0e6a24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b298c40-414a-4d23-9054-e982d548482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b61e70e-b019-48f3-ae33-ec74790685c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1ff9cb-86a2-41c7-bffa-1082c415af48",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67698c73-2bc3-493c-975e-0c5367257c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5192f48-bd04-4c28-b783-beb5db0e1a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a4975f-552a-48c0-89a3-15a32a94360f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b1a4ad-a616-4f5a-b886-8df061fefda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21286476-a215-4601-83c3-10ead0e19319",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebc4020-ff44-4da5-8da9-4a8d5640cc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1633e5-5e38-4551-bb24-cd7a7f3666d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45b0369-4ea7-41f9-8e95-1f085b056549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e0e1c6-2d4e-44f5-8a36-af4804f11ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071742da-ff61-47ee-9623-0dada8a55274",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0e330-651f-409a-8441-ec466267eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c7fe94-7f67-427e-b34d-a9f2e6950b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd05c0b-c7c8-4696-857a-c3007550022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9594189b-fe90-476e-a279-ba305bda6652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0178259-a1ae-4817-b409-138880a86840",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11db2f21-6a6f-4806-b581-96008b7c4dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1981f844-6d73-4ab4-802e-04261168266b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf9958b-1ec5-4e65-915a-75987e37ad60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4229b6a8-22c4-40e0-9c53-3df35886ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f666789-4b03-42c0-b5b2-3b4afa1a5c3b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd78e2d-eea2-44ea-9cfe-ddd131f8af39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999508a9-bd73-4007-8553-3346e4c4f68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b94cbef-435d-4caf-a481-bb19fcec2b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "983f5de8-4674-450f-8e0a-f0faaf776a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56c58d4-dc55-42be-93ac-316e98a035be",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5d359d-6240-4654-b732-cb973f5118d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1db98c6-6bff-461c-8085-bcbfd0e59935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e199b4-063f-4c05-a4b0-b6ef8f9ec71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc388542-8ad3-4564-a3bc-dc0d0581699e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b490c58f-2a2d-471a-b29a-151ce86e3e1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a6cf7b0-cfdc-4595-8112-77c8c82b4e06",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183382b9-7a40-4bf9-ab56-a0c3105129ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39b6b370-6068-4103-aeeb-aa5b329e409d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137406d-2499-4572-9698-a314c6e27b6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3701edc5-3b1b-4671-8760-18513bccbc2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16d052e4-8fb4-4b0d-bfae-a902f5e14b34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f648019c-3678-4bf9-910e-7fbe3fb38708"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1149d66-f1dd-40a3-93d5-e84f8ecc36f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f03ee507-5f3c-4c90-96b9-0cb00d3e91d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30824cc8-d298-4c13-973b-c4c0e04d5176",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7666901-db73-42b8-8e67-426794622f81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71230996-dd7a-4f32-8551-a2861fe31753",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df41e0bc-1de2-4824-b599-4b3565fb7be1"
                }
              }
            ]
          },
          {
            "id": "f3abaa33-4403-4f0d-b9a2-eaa03559adc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b5e3732-fd32-45ba-af04-32067c8411cb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a8aa44a5-9dbc-4238-a2ab-b40a6f5ac024",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897dcd1-4de7-410d-abc5-b2b8e57b9af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08d17f70-ecd1-4ebd-849f-ae458e3eded1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7707153d-6bba-472c-9617-f6fd4ce0c66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d28ba4c-0c39-415e-9b2a-fe1d99cad8aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6a11d83-c87f-4570-8479-963aa4bda868",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d83b2c81-46d4-4798-b0f3-b73a9f6603cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "832dc94a-d1e4-4724-b2fb-3ae5ce081606"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94c07509-8575-4cf2-bb24-66be3138d219",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc9c21c2-76c0-4545-ba2a-8cac5299ec0e"
                    }
                  }
                ]
              },
              {
                "id": "fcf31ab5-5004-4770-a189-7f7cf9719738",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a14e11e-86da-42f8-b943-31ef7bc2fdb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d0991a8-7471-4ecb-9fea-0bcfebb90db9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f1a0cc2-8f2b-4236-a3b9-fbad425d785a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7acdb35e-2707-4de8-ae2f-fc48809ffb0d"
                    }
                  }
                ]
              },
              {
                "id": "1ff8ccf9-2e7c-471e-bc0b-697ebb448c31",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "259ea175-1d80-42cc-b022-8261c40017e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8a2be56-6341-4560-8a1d-9b85923b4503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5dca104-a587-4398-b5af-a1ca09ff7c0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "265371e1-6f93-467e-8c39-b63ed17234b2"
                    }
                  }
                ]
              },
              {
                "id": "db1a21e3-30c8-4279-b618-229f21b2b34c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09acec96-8a32-48d8-8a4f-ce9b551370e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea9fb560-fdb3-4506-8222-06b0e0b923ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd60ca5c-9a5b-4e92-a66a-0ff1f692b1fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f7ac9121-50ba-4c42-a610-6b4071251812"
                    }
                  }
                ]
              },
              {
                "id": "5b5e6ed7-c503-407f-9a14-d9f050b01efc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07bfdc1d-4dce-4a26-8d60-d1da2b9b2a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "862455e5-c966-4f8d-9bd2-8a25293e22a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd4b09c8-01de-46fb-b273-7ae4894a1836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "120f9709-89e7-4de6-9d4f-7102e6d35e7e"
                    }
                  }
                ]
              },
              {
                "id": "88216d59-327e-4540-99c7-296e34708a98",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d589176-7c57-4495-9f26-8926135d8968",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fa0c97a-8dbf-400f-a68e-f3d25a671bd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f555b4cd-39e1-439b-88e2-cc62e637103d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b14f06d1-6dff-466b-8654-082233ff1a60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3367a453-aa5d-4c7b-8a6f-da6b4dc095aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06b2ec91-8b0b-472a-93e8-438f98f8099f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa45eb0b-5e2a-47e6-bdcd-19600fa5fa8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f07619ef-ec10-41c1-8f43-c940420eb514"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac7014b7-bece-4732-8522-69a84383b00f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2c9d9179-6454-40c3-9bc4-9a95ece7b8e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "269fa245-7fe5-461d-b2f2-c38c75fb0d08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dda45844-530d-43b7-9262-72b5da1a574f"
            }
          }
        ]
      },
      {
        "id": "29630725-7cdc-495c-8bff-64adc4ae7b1e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e98482ed-324a-4868-ae6a-d58000e19742",
            "name": "Negative Testing",
            "item": [
              {
                "id": "256bf0d1-44d8-43eb-b718-a1021a61981e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44b48822-29d4-4074-8655-ab04bae8d067",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c06558-ff82-4ba0-bbe4-1d8dbfb3fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b5a175-be59-4adb-80eb-7e22a2323d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d7b43a-3c09-48d1-a0ab-a8d0922ac980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5af93b-615e-40ef-812b-69eee65a40b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdcfb12-a93e-463b-a984-02b4854cc0fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c471841-0adc-44c6-8405-f93406316993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08467d27-12d1-413b-9d3a-3d1ce7f59214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd2a7bc-f451-4827-9370-b21dc19807a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a80c9e3-1abe-4133-a6b0-930c178b6303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b315dd-6804-4df6-9040-87a7c78a2bd7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748f9253-fcd5-43cd-bb86-1bb8aa5f5d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b003e2bb-8b04-4211-a161-26827a1f307f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8a9596-96b3-43a8-b276-722e75c1027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acaa5af0-f37d-4253-a3e8-64b08488c778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447eb70b-1c1d-471f-b02c-e01e8a3d2597",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4dd286-7385-46a9-bad6-c34ce479f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecef6d0b-838c-428d-a4d6-159dac5cf007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0260fb0e-7e22-4e6e-a358-66eb03bd8865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64cd32e-206d-49dc-93d7-c5bbdfa38c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9088ba7-9eea-490e-8899-82259354e53f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c00027d-bea3-4db1-a01d-3fcd0fb23d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc303db-a921-4ede-b35a-b8326a5ce5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c8bab8-8d13-49f9-b7af-6f406d3af1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "040aee3e-65f1-46ce-a10a-82dfefb413e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318f450f-b394-41a1-9ff4-44c2a401850f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b055c7-b8c2-4b26-9a70-3a018478a421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371f807b-7b02-4a0a-8d4c-66f1d3be817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe7af0c-6a08-4474-a702-9e044ae04863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9acb21-0b55-4a4a-b5e6-a2716e3026ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a310c5-2726-4319-ae55-74b3582a38dd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00685659-ae0d-465f-97c2-0735bd15d914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2513c98d-c310-4599-8bb7-714f6c12a488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f9bf2-4bf2-4754-bd69-d803e008bd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "17388050-29ae-47f9-bbc1-3d5098a715a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d2726-1b44-4386-bac1-74ba37769072",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83774123-e3e6-4785-8d41-ceb902997cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc42876-8fd8-4ebe-8e9c-c4f4e84992da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d508d03c-3bcc-4376-b896-5c83de0021db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee93ec6b-a8b3-4557-9269-453ff5fec23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c20ec-50f5-4ee7-9195-9761b2ec83cd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f10ce86-f607-4860-a7fd-45c4a448463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afe7653-c1aa-4633-9c9c-a969c6697259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2fa30b-63d3-42ab-b878-bd91f3c541fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6963c919-5f9b-4f9e-b1ac-212e5ac2acec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91769de-499f-40fc-8521-4786c8c7daa5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a01c529-e806-45a8-8faf-acafce748b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81785080-8403-4579-8e7c-6dc167455469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8a02e0-3b58-4d15-8675-8a644d992b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0787001b-9b75-4e85-b10d-f787e37d937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39060a79-b4a5-4763-a6ab-08aad852fc77",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71437e2a-b8c2-44ad-9b49-8a414ecb53af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c663ee1-2259-4c7a-a982-8d3309305f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a33ae48-2247-4318-80f6-e70855cbfc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a66343e4-ba6e-4d05-b4b2-6b85e6ce31ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8d6ef3-4b37-4f55-b39c-8233c005762e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a60e894-dfd1-426f-8a91-4eb3b302fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9816f673-63d8-4767-bf3a-4a60de5b7fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeaf0e2-6d3d-401c-9c2a-3fa33ef8bb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12d36734-67cf-491f-92ae-78d0952b2142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2134477d-1604-4f9b-afd7-54e99a915724",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576434e1-e30d-4264-a4a6-c1ad3389d144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b247ff-63b4-466e-99cd-f598d203ae6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62838b2a-45e5-420c-ae66-806216281e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78deb5c0-c5e5-42e7-99f7-50786e56c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0354a7-c3d1-45ff-bef4-7a9c1f1fd6cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e9a9dd-55bc-40e6-aa9a-713247a70545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a8536f-3746-4471-804e-a292dd395a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cea6db0-d1fa-4112-acad-7fa38727f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff415429-e1cf-44e7-987c-6f03d2ebf965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7934857-331e-4bdd-8137-76c06552b629",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfca763e-4c46-447f-888f-93d78e2180e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5754be50-e2f4-4fd4-98e4-6fd8ab3b9c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cee7e3-bb37-4cac-a4c0-6f2e20e04a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6160e8-7937-4d68-97f2-860229bc799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9ec89-7489-4f86-98e5-5719ccfbe5fb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029f92f8-94e0-4c79-9511-65e6741b2a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91b7674-796e-44e5-8fe7-55ae26d23886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea807a8-6680-4a0f-aa45-6fb52d534b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cd9ea6-8acf-4ea1-af02-986435f0bf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42927e2a-9974-421a-886a-01dd51979a6e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ae498f-7060-4020-9b5e-76b644bd5d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5077c2-9f4d-4d76-837b-8e7cc8c0879f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1a58a1-6f77-482e-8495-53e563a8c474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e056e56-aaa4-4ad5-bc49-b0860028680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08863fd0-f8cd-4d53-bc69-c81a3fcdab06",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe56d19-9764-41f1-9d5f-92b7de46549a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a773885-3be4-4d29-98d3-40477807f86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7fdafe-1c46-494b-ad24-f75b9f9684fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3f87d9-531a-4660-ac5f-81b0ad5472df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d19fd4-ad17-4756-b599-a41b2b391f31",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e6e6cc-7f44-4a71-8eff-28f70f535ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7494a468-e5f0-4499-b971-fb4dec2a4482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40f9306-95d6-40e3-a927-7934fb4566d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84df2037-307c-45b3-9829-3d18dc7e3213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6539eaaa-ef8c-4217-a6b7-e77b5a0be1c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f694996d-ee89-4ef9-a9b4-df6b8db7fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a478f-b134-4bf8-b66a-b300fd287aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf49319-a476-46da-869a-081cc974e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7552736d-3ffc-401a-82f0-e6462db688de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7c0d5c-b67a-42a9-8a15-a13f1c555f6b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168042a4-ce7a-43cc-820f-3cc7608e56ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f451da6-bb28-4348-808e-e7eceab4d924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ddfb28-f3c7-4660-a5d3-f91acb550cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0e708a-f898-4a84-a91d-57da4e4f154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ca064e-109b-4359-b993-eede164a3a73",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149de9dc-ad0c-4b23-a0e3-78553462a36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26414122-3c37-4e74-b9e3-c78d8153e890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a856ab0-cba5-4c8a-92d2-487ba46b57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9bf029-ea94-4e09-9ead-d54b2f446673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c10ff6-0e0f-4088-8d46-8f4114b7bb91",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396001ba-cd09-4183-939a-41f0bb450ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9085df10-fa9b-45ee-b163-ce5d97c47a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb436bd-f43a-4510-89d9-617297ab2cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b3dbb4-7e5b-463e-b87f-e23a5a6500a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd0eb9a-e2b7-40ca-bc64-4abb7da62651",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2099c811-850d-417b-a108-4593a7ca01f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a48ceb-deae-4603-9304-fad3878e4644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea76386-6352-48ba-8fc4-cf338ada3aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f610b9-7971-443e-a32c-f4282b58444b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b886777-b470-4195-ac37-16b3374e16c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ff56f2-7997-4fc9-ae82-01604c67056c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad76fcb1-ac01-4918-a8c8-c5a64b1ca011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b70613-6750-4b08-b67c-4d971165dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a5a40d-2309-419c-95da-079056a7e2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28ac285-dc10-4838-8af0-739ce750ac0d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9086d64-6c06-4c75-8d45-0f0817db5037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7101e016-d713-400c-bc59-b67a649122a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df099bd-8032-4fcf-8e4d-fabe88406040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d95c09c-b8ea-4b7b-ba05-ed40ee1a8677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d61b5ce-b5d6-420f-b822-dc8301dcdada",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dabe0cc-755f-430c-9d68-a43467a39222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a4087d-d826-4fc2-9edc-0a707d22a813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba111749-a9a4-4f50-8a43-0bde5f74a7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d31e6376-928d-497d-ac7c-deb55e6de9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71c5d1a-6bd1-4c9d-ab5c-fb2fbffeb47c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b08acef-d52b-4f5a-adc0-00fe948fb311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d31f2f-38b5-45a1-89bb-8ae049bb5f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c94aaf5-6092-45fd-a542-3d574ff0a5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cedb94ae-bbc8-47cb-b4f7-9504b0c1007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d502b5-384e-4219-bfc6-4a7013921cc5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f961726-a187-4dc1-a314-04ed6e8aa194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195aac74-594b-40d4-b88b-6eeb754f978f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c513110f-892a-415e-859c-1676872dc307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a10753-6cab-4d60-a305-266c4ee32711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a3ef6c-28a1-40db-9018-feaff2bf9039",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77579ebd-df41-4907-82b1-d7db0dbaba49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e82554b-7bf9-45e4-8bd5-774eb5ccb903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16460243-0347-47b5-aa72-0e7e3c6c9e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "139f6672-e828-4846-9f36-425d0159a5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2044f7-df09-40b1-a561-c3f20c898087",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb844610-08d3-46f2-b12a-3ba4d69b07d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e30d70b-5368-4cfd-b3ba-835f849c36d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97be215e-80c3-454a-a293-b0737f633a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2da6f68-d276-4161-9e68-2cfc88fcd066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e39125-8550-4daa-b679-904aa5ab3434",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb0f637-ec8f-425a-905d-579cb8e1c5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47698827-50b8-42e1-9e8b-0338627a97ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b2a079-dde9-4e82-be02-cb8bc932f68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2a2eb9-b77c-4923-bd5f-67c0ab619e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cecc9a-b174-4bb2-a391-51b3825db0cf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b302d39f-cd21-4182-b0aa-90af0d72edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16639670-3c8a-472b-a1ae-e08bbca51563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f75df97-411d-42d9-b5b3-2b27f0fe2289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5007a7c-c2a5-40ff-ad45-adad97c43a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5b52e8-6d60-4be9-b6b7-706db18c48b0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e7cd71-c58b-4c1c-850d-6b1b90bcd481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4deb2bf-9666-4632-b415-49a57d3b6748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6859016d-eaa4-4bd0-b98c-0ee0704b0232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52e93bb-d38e-4c9b-a486-1f31f13bcb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0b178f-78fb-40ce-888c-d1b354674153",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3486d630-46bc-4a1d-a45a-71f4112edfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a0cf5a-a37b-4bbc-bf51-339e6fbb3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5b95f6-7a46-4017-9294-65705d1285b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6848e2-1ccf-4df1-bd66-e8a7050fc69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5618a6-25df-48d3-930e-b4a8d694dc44",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b93c8b-431d-4500-9de5-a84cf441b44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ffa1d9-c9ea-48fe-89ec-18a5edd005e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4cd47c-bcdf-4597-88c3-2f39ee5c5eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb1b8f8-c758-475a-84ba-8300956539ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8e35f5-447b-4714-9c84-ecafb91fd714",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e51a97-2b3f-4735-b496-f4b9913ffa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a3e094-4b0d-45b4-9af0-9a252cd55030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbe1f36-a5c6-454d-8fdd-403096ffa7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2baa6022-53c6-446b-b0ce-27dbb93dd508"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f94767f1-a67e-4ea9-b9d3-bbdb3a343d41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ce6c98f-49ff-4230-8d54-347fb6f782a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490a610b-372e-40aa-b61c-d0402dcb1df7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd843d1-db47-44b7-b314-6cd63ba842de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637423a0-f1d1-4d16-bc74-ebeb67e63842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "725ef1cb-bb3d-42cf-b33a-e9415fb2e721"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0307f541-c3df-4f47-9412-120e4547c5f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd51ac85-0c8b-4e86-8f56-547ac97680bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1998bc81-83be-43fe-9d8a-e8bef0d12bc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca3f48c4-7a34-4fbc-bdf7-e815bd046191"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4751a3bf-1c24-4272-9742-4ce5b2b4d82c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfbc3b83-7324-4298-affb-c55f6ed19c78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d94bd5b5-0414-4dfc-b135-27dfa257fb86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edf11084-2555-44f7-9c8a-ab1047888dfe"
            }
          }
        ]
      },
      {
        "id": "67144d56-7dc6-4d24-913f-3a9f663da691",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fb3b4723-3c96-4abe-b9b2-884abfae49c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb0dd3dd-1d53-4dc9-ab20-bced46706deb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b703452-7c47-4cc6-8ed4-2d8b24017978",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b595600-d792-48a8-87f9-b02474eee6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f896e9-4c3e-4804-bfb3-8bdd3077173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6572ba-7262-4ce3-9ecb-afdc36bd66a6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e11ec5f-42c5-408d-8d9d-d2c75c07ed25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d327377-8549-44a9-b013-3e0ddff332a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342d9fd5-ff75-455c-8aba-cae4c8d58a74",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fec957-398c-4324-8664-69a45076000f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55304309-8ab7-4957-9cd7-af903d1aec04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aa6862-29eb-464b-bdb7-a147c14fdeb9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bb413a-65a7-46c8-8203-24f8d7c4f079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4e32fb-4d9e-4aee-8eee-149b448d6664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1181d64-294c-409f-9171-4138c4654411",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c348f50-30f1-4222-8bf6-fd61aaedd59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a6255a-0e2e-41f1-a5c3-4b565df7a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77007bab-2051-475d-a273-1216f846f486",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ae2512-a87d-4325-8576-746acc453fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836dd81b-25b7-47c5-99e8-4e4268de6a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2738e8-4ecd-4f7c-b472-7cd1fef63eb0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8bd4c-910e-4dec-8dfb-f91fab339ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6187d4f2-ab6a-4e59-9a38-dfda26a3b2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dc8b58-693d-4b04-9fc1-48e075bf5cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cd0e77-ba02-4f10-8cb2-cbc6a2332d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11d588d-a729-4ef7-b6a6-ce79063b67e0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b546115-96a6-45d6-a695-f37021ca7356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf31bb5-d0a0-4c04-b064-2d3ac08c6706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cf15d2-5d05-4f02-88ca-07077b08b2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9465c4f1-d9e7-48fa-b989-39536befd6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c568f316-a52e-4f85-9ebd-f481bc829624",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513eb85a-b89f-4db2-871f-cb287ab9add0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11981c3-b932-45fc-b555-8cc7b293fc3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b1ceb-502f-4137-bfbc-62fb8a4ad596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a719844-1e37-4312-8001-e3838d17bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f3cd9d-0cf7-42fd-bb0e-fb6d373dcf61",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3575286-9633-4c22-9063-0e1850166c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d91dd1-65bb-4fb7-bdf0-9a70b52ec438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba8dba0-5d19-465f-b578-7a3ca3659692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f8cf1a-a310-43c3-803a-ba4b33015e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67791250-1340-44ec-bc27-98d55d4ee37b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b0af20-b9ca-4e67-bd3c-ed1d644f1dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3e26be-49ef-423d-b8ff-56765f8976f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2b3e2-00a9-409f-9594-ebd605dff808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913330bc-8eab-404c-8028-ae4cb8fb0d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d5efa-3c94-4dee-ac4f-b283034ba360",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a23593-2d11-4a56-bc5a-126599290be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d639a2b2-85a4-47e9-bb19-f90915ec029e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec019c1-d924-4f6d-a7d0-28d6f1e300d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4709f804-d77c-4704-a2cd-e1b7f0da7454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe0a5b1-f09b-4cd6-b1f2-23712074ada4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b6f8ff-665f-48f0-977d-f970c5d6cc57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b12695d-8e49-4dfe-8899-2445e41ed6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e45c13-5472-4a4e-b499-13db0296ca8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a164276-cf42-44e0-b042-9d68bffa327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6293ab-7842-4bcb-b35a-cde8bcf9facc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df3819d-063d-475b-9c45-e8def73c5884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bea135-4bbc-4d0c-b33a-ba0672b3ed82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92212b88-5165-41cf-9d1d-6c87a4fb05bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3640350-582d-4315-b7f4-244a0ffbdbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617dc083-96f2-4f80-ab7a-9fe61204aad6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fa2d62-8811-4119-b55b-bf9b5cefa60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e58077-df36-40a9-8350-a3c3986d9f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d699f278-790e-43da-a049-4616a43f2cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0fef72-56dc-409b-93c7-da0ae99021e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb737de-0667-415e-84b0-5aa541d0b26a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3646acad-8080-453c-854e-b20496b56339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7980024d-44b9-4fa8-a11f-a03f053214ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4968ae2-a86b-4056-9664-cfe7fbb36d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a367d187-5e75-4444-a826-ef30037e243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f549c3d-eb03-413b-a89b-f01f8189aacc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eade33-1e60-479e-aa01-0625a21ff506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da01889-44f8-4354-8d8f-50c85f72fb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50efaef1-f0c6-42d5-ac39-50636378324a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cf3574-b775-4009-88fe-e54e4881077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682ca73c-da8b-4026-8fa6-ac02116529d8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57939b7d-e1e3-4344-8d20-6d098d861733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac6bee2-dad5-4bcc-9d71-fba5028a5646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d835bb6-f9d8-4212-9b1b-9d07cd466bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f79da6-f533-4137-a6f5-b45198f94350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd663cc4-1cd3-45d8-a626-b4132cb44c27",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ff6584-061c-4363-a963-43e53dacd8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3334bba2-e0ba-4ff4-ba7b-955a2110b875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33142667-dc1b-4b4f-8c85-2224b338dcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382e43ac-389f-4575-b630-83615e6c7317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c648acfa-747f-406f-ab81-28a07e73bd14",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3b64fa-42c4-49d9-9bcc-aad1c3faeb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84cb362-1cf1-4cec-ba39-5287c24fd9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb7b045-6a6f-44e1-b815-4d258bf92c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb17c48e-bb72-42b8-bfeb-55eaa501643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02eb593-9502-41e7-a358-afd4e0b01b21",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b411ee56-4e30-4887-b694-b43d8d67d311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1c1d5c-3c21-4993-b7e3-3ceb82abcdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa29f9e-7fed-46d0-8f53-0a27bdee6a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8bb73b-d29a-465f-8564-e35c6e66505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b4f008-201a-44c5-85ee-94825cdee396",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e73fb42-f212-4705-995f-b0b2fb81af71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd414136-6c75-49fe-9d7f-de6db0abba56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d064847-7c63-40d3-95dc-1b95541b7b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d47cd55-6cc6-4128-847a-095e038af168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ec9344-05d7-487b-9242-e012c4f09bc6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bd7cb2-ac4c-4510-811d-8a2cd9c0364c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b686fac-8eb4-48a6-aae8-e6569a1d83d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0be112-2a20-4bc4-83de-5df70bd95430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7110332c-9525-4d2c-a1f6-6951dcad2fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f24684-3795-448d-99a8-19b15188599b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c5ef9d-0d52-4366-9875-7091a36fe8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7d6c12-28eb-433b-9f0e-2907a57a3643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489838d9-240f-4ec1-84b7-880a1cc1293b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9ed574-e345-42b3-8e58-92ecf6669773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8f7b20-90bb-45e3-ab75-8167149b2eda",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e23a6-4472-4d96-ada2-80b42e92b185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7817369e-2c20-44da-bebf-7bef90c5d87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5494f26e-32bf-40d7-9a28-63cc5c48c1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2515d01d-8a69-4fe0-8991-fc71bc83ec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f419b2ee-070f-4599-9e89-584acb7f5417",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c4a557-f72c-4f78-b593-0374ea63a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f53fb7-57f9-4632-8b3f-08f48fa4aa9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5d7fb-1f01-4d4b-80d2-95b0bcd80257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b3303d-0920-4035-b65f-99703f4a0bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218601be-b6e3-4598-adde-49c1b95d0059",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5f0433-c82a-411d-9bf0-725b94b77347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6e074e-3994-4688-89e8-3e0b18aea999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ac55b-35f0-4489-bc5a-0608d922949d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f374d1c0-e78a-480a-ba48-16d0bf4b5cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795df2c9-0376-4c7f-83fc-17617e5f3c3a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ccb8d-9160-41a0-ae8e-1d503dbb3f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2950613d-3f5e-4bd9-86b3-448d78df7027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4ddf11-019a-4e0c-bc68-b12419acea81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b560669-9516-49f0-b9d6-3d902ca30532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd34fa44-80ad-432d-937b-2eddad1ae391",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c6c5e4-4b5f-422f-8aa4-a71e9979787c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ffbfe5-4ce7-4136-82a4-4d5ffce410c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb1f945-f24f-4057-a831-d9091b9e0d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6e3ad8-03ef-4e9f-9f06-b4457418f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc64b7c7-de00-4ea7-a25b-a38d9919d53e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7850d0c8-937d-4ace-afc0-a0354e5d4ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef359819-b100-4808-8c16-d10964af696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac57cc7-2d23-480f-970f-415495ac26a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3aaed8a-2c0f-4903-8211-57a6fd8c8cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413620f1-1a98-41fe-96c0-68d6387e4f05",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c43902-8ea3-4f4a-8289-0257301aeb03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d040dc-3f8e-49c0-a30e-211904390268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639dd87e-cc6b-45b1-8db2-2d4986aaba9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9cc60a-bcec-4c81-acab-7db3a3fc62fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b7df0d-afde-4946-829b-3d6ab6bf22f7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b9276f-e989-4373-858e-ddb34dfc9883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e98f5c-4946-4cc6-8f3a-5189b9126348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cf8d33-1c29-44b8-af51-21ac7e36f89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac9d525-42c2-40f1-b229-e41652ae569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164e2253-4e38-4de9-a2cf-9071d18f2d8c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671474ae-d2b5-429f-b9a1-eada0c40b85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc6bbb7-9946-491a-8aa0-296c58c01ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aad6ca-1f70-4539-8e51-0256eb6bed84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980c78db-5e13-4419-970c-a7ee3da9278f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b8dbb6-0893-4cb6-a6dc-4a190c26180c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8e9648-526e-44f6-8704-54f280db371c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02c4692-c249-4033-821c-2af3b5821309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91b078c-aed1-454d-9146-8d50415af845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c8585d-f513-4d9a-9e08-c3d8d5b7504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d86e99-489c-4640-809b-9c12335b0027",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02fbc5f-1ad5-45bb-9bae-f645669791fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e156e1-66ff-4477-bbf4-aead9cb6b71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a39bdb-ba4c-4754-9596-7949780c0655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44433e1c-097e-4880-865b-80794da2fd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5899d8ce-1185-4053-a252-d70ae06119eb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e626fb65-957c-4522-9148-ff175ef52a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b13df50-2130-4fc0-aaff-3efb3bb65aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe77e41a-efec-4f9b-884c-4cfb5b5dd818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4d0568-d415-45fd-bc40-355c391943d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d51693d-2ac0-4c09-9b89-82bbf810d9a7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f47d011-821b-4315-bd84-2edb3bb89511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca13d1fd-ad17-4b2d-a353-338acadccd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d1d11a-699f-4083-9958-e6a90d13b36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d251be93-d280-4311-a696-ff3a34146312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f716a95a-393e-459f-b8ef-bd6b5d0676f9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc09e127-8f37-49e2-bc3d-f6ad2ea9271e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c52436e-32e1-4ae9-81d0-07b061dc6df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2335a6c-dc0a-4212-94ab-67784d8a33f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e5165d-b0b5-42bc-8a7e-b7a489345049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a946df-faa9-46c6-a0ff-4451e2d26b44",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427b3ea5-32ab-4954-9e04-cf901796b1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ab9353-eb03-4959-b7c7-c17935f36499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a710d2-d3ad-4216-808a-a20fe63e0719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37593e9-d5cc-4ade-b499-88d342a693b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea829dc-341a-4cdd-b172-490b2f712476",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11d0812-e0b8-41de-a61e-a0a24984c033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59ad5f8-ef9c-46e7-a1b7-3dc95290c0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2599f27f-7f4c-402b-b7c0-54e1d912ea01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5eaa558-e92f-4caf-9291-f34d203295c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3afaba-ef76-4c99-a790-79e7d277f018",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d053e1eb-a6d4-475d-ac68-00b2f8176b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69b0304-5fb4-405e-894d-28e71067f985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff0cdaf-a047-4519-b92f-b1713f0730b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e0e15f-757d-4cdf-8416-6356b43f5db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1a0bbe-6062-4169-8b75-b932d6370b05",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274a3b4a-5b5d-4d37-8b91-95b469f172bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508e7539-4afc-42bd-be0c-d9c316d44f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb55ef38-b019-41bb-84d4-16b83ab7d438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9407ab29-8803-469b-818e-862877efa13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a5ae4f-e834-4be3-a396-dda0e63fca2d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121c116e-9a5f-4f3f-8d40-f0f9996e35de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ef5741-7a7e-4122-bf6c-b1acf26f46dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27fbe03-5cf8-4339-90ad-af3cf2408dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4552f4a-fb25-4ec8-a541-cde209c954f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8401dbb8-f44c-4e8e-a7a8-1f53927eccfd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d73aa-ba1e-4483-8b6a-91510b403456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffafa09-21df-4e41-83de-7e13c625ca9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4d027f-b395-4aa8-b636-2f83b35622f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155c1b03-f8cf-4608-a711-1d857460689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d4ddc8-2ef4-4bc6-b103-a47141cb17cd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee32435-6f7d-4b65-8aab-f63986cf9d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebffa2b3-21b0-445b-bb49-7394e5caf9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db72242-ea6a-4450-a6ce-4133d688a192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7db4f4e-6c24-4bd4-ac89-404b5880265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31fe2e2-81f7-4650-b5a2-21c3ed0ff509",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b32ef3e-8de9-4229-9401-96e62098b628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fff471-1474-49da-8a64-250529de2d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f08b557-aa29-4288-8a52-585b7f587a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563aeb38-2f3e-4209-8000-eff9cf8bb1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0c5720-383c-4ee1-9b7d-31b213f739d2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a99f21-6255-4b4d-a138-0c1f824317d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d709f6-0705-497d-83e9-08d11a70f27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07b3a2f-040c-4c57-8d0e-5a1ed00be43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd394564-4da4-4aef-abc9-e218bb14e083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98684c5a-cafa-48fc-a130-66766468dc16",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3420c8d6-7e75-439d-988e-17e1d85010ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995750d6-e94f-4471-a42f-21965df75432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166f4e78-dd17-4673-a52e-22c57a347e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb41047-5696-4a0a-bf38-91ac4e24bbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c546d162-4ab0-49df-9ba6-fee1f8bb2308",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4061e9c-9226-4843-8d0b-df73e5e499da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a527d9-c4d4-4d86-8180-a3e7dd5d47b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5430d41c-2e91-4184-9e2d-09c2d0eda40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473adf03-1621-4098-9e07-13993a16b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a54649c-20e8-4c1d-8423-c8d2c5b76a8c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7b59f6-a108-427e-b587-ad965f921f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f828df-165e-4f5c-8675-1b85ea69e09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f5d198-bb74-4bb1-a02c-edb651d0664a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e4a4d3-734b-4447-bb3f-2d446f699e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d3a22c-69b9-4909-a518-f00817a3f629",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892dbab3-c26c-44cf-888e-83e52cb81144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5f3621-1833-4fbc-aa04-effeba2268c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2d5755-d404-44da-aa3c-bc1f4dc89900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0eb96d-81cb-4c68-93d6-565b4bf93391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38a0fd5-db43-4323-bd00-1ea7ddf35aba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077db350-8f4e-4943-b7df-dd82112fdba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e82571-3f90-4981-a9e1-8324b612fdd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0556d245-b709-42b7-8eb7-fd05590c034d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1318d86e-5dc0-4145-bbc4-ca398a0cbb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fd09c-92bc-4782-b022-173047149c84",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa1dee2-e885-4538-96f1-952f26fd6185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1075629-1f4f-4fb4-a321-0b6277519559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d224b5cf-a273-4868-a831-a37eb04f3e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea49ace-6c42-4637-b541-0ef96008113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24936cd-7984-44c3-b3f5-79d9cc1c3ddf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852839a0-1ea6-4d2f-a00d-5539b527e544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2054a9a-663d-4559-a010-dce457385afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef4f635-062f-4e8c-aa2c-5dae94c3feea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c183b06-7472-487f-b02f-51a25c53320e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc010af-60ab-4815-8e82-f07b8de90c2b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958eb446-0ea5-42a5-b323-6b4369c55572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd972644-6dee-43b5-b9bb-c2d6c5692b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1331e306-671d-45eb-a2c7-d218efaeec71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8baaff-6961-4926-81cb-5a2c9b5a754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b39744a-09a2-44ec-825e-0228513278a8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a799cd-71ea-4f3e-974b-131dc71e373a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3ed3c9-731e-4648-a1c5-c2f92a52856c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316d65e-f0b0-43e1-9146-8561663a7483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1087050f-efec-403b-9ba3-ff0ca4150ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633d195b-9e95-46cf-9617-c4b8c96b461f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab1c4d4-c90f-4a0a-9536-0d13fdcdaea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3143245-2918-4c66-89ce-1435497d53fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed7ddb1-9640-4bef-9d44-45530e93e37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8869f6c-61e6-4c0e-b0f7-33e105583cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bed378f-45d4-44e8-b6fe-117b716b33e8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0ff01f-8094-4f5d-b919-8d959fd1e81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9e273e-b349-47fa-b36a-0b722ceae92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5501c947-4c1c-4666-b9ce-3b18315862dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccfd92e-dcbb-469b-8fee-955c7916f1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f794751-091d-4b60-a3fd-9aa4534e8511",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9238c7ef-2b3d-4299-9aa8-024424c23cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ce8a07-6b10-4d22-bf0d-7f332a4506ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4330139-a9e6-4389-9821-a8d4d8561a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc032e1-f796-45e2-908c-9fcf29a75b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784a6ae-7595-4623-a0b3-141b50c65bce",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4398bcc8-1fbc-40a2-981a-c05eea175627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5100b92e-f6ad-4c07-9f04-83729ec4b084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996bfbfc-dea2-4c1c-8493-55589b6c2399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946291f5-726c-4c30-bd77-0872f24d275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b923b655-2b40-4d9e-88c5-7309346de1d1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bca74e-dd5e-49f4-bcb5-adb4b0d16022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff6e2b0-2dca-44d2-b2e7-122b1bfa675b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c56758-aa68-4cd8-9352-3b189e1ee72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e82c8e-b021-4c34-a5e1-1334306d5f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95433329-0c32-45b2-83ec-fd9419553c57",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6743f4-245c-4b75-b2da-5a2893948772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4049f193-1360-4999-8e35-df6bb7d3e856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3579e2c-101d-49b5-a3ab-ed7725e90be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904c9f7f-50ed-4737-909a-db321ca23041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2989ae-1ae1-4272-87ca-080881f5deed",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db23ac5-a363-4200-b45d-e6e2cd2be0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bc3d3a-d294-4352-9f50-64782d6d2e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c05494-fc7c-4464-b704-f00352af2f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5187626-c081-461e-8ba5-b575acb9fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d93784-be6c-4896-9199-d6cfa399c223",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f75b0e-9e77-4997-93fc-ab816a0b85fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76cc8918-293c-4376-b66f-66c072043569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96558f3-2424-4533-a4ae-362a66697873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e598dea7-e0a5-48bb-8413-10f640480a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac78952-83e3-449e-9f04-d81f417ea317",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8c8113-b85e-4c07-a93e-bfdcfdbae0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a8affe-c828-4013-a098-97468f866127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89bac2d-59fc-4121-a23e-a94b8c1f321c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86bd541-dbdb-4915-bf11-f26db3819334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505f5f51-de02-4ab3-8500-62ce40044b38",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced9be88-7968-4ae0-90b9-5388d52f04bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e494275-e769-41d7-8e0a-99473d8736cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174570e1-78fd-4afa-ae7b-d82cdac710fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da8215f-0970-42c5-91e1-770affd3a2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764b518f-8629-43d0-a6c0-9842d67561b6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a755a3-1640-4502-9f8e-baf8ae887842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe41ffc-d4f3-4c08-94ed-cb2c8616c348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5569071-22e8-483d-b7d1-ac394b735535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9ccd91-00e2-4386-a8a5-ea175a7e83a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeb3b28-9257-4a1c-af4f-0d3e4e3b9235",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9d6df5-66dd-42d3-9b0e-bac49ec2601c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f531e4-ae57-41f9-a4d8-db9c18196a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84dea04-b462-4b02-a5bd-ead01165c3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83efa317-e135-458d-9a09-739bcf19f6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcbd98a-2c05-4e4d-a9a7-638fcddfb8b3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd87137-0586-4d95-ad0f-99bc8d745840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98815794-7e84-4ea5-8b2a-391de5085c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a65a33-e5a7-4ee4-9ede-3ef1ae9498e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77e9d24-928e-4e1d-a5d9-66b47ea1435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4a82e8-cf55-4bb6-986b-78ae2922da0f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faeb4b6-2a4b-4d33-a272-76c00e0c03b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea4aca6-eaec-4c4c-8bcc-f67aebeaa2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423abc2c-c04b-4ad4-b841-907fd9055582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c677415c-addb-46d7-a205-e9cdd79a53dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2c799c-b220-47ea-9200-61df52c4cb7c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15c3df3-49f8-4852-bec3-456a1feebeda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda7b524-afde-43df-8d29-9dc713cf3eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb351415-20e9-46ab-b968-43aa9f6633c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eda966c-53b0-4b1e-8ad4-74918b7d441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d3505d-64c8-488a-857b-7244588e0a89",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e5121-c2e9-40c7-aea5-bed14dffb0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55b901b-9b0d-42af-9b53-75b4562098ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e021e12-4d00-4320-8a2d-8d11803f0f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36862a71-79e4-4e36-bd0b-0d60276b767f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99bcf4a-e380-4032-bfa5-773a2b72b39f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da4b384-94b2-4d48-9df9-4151f462242f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5ec404-3e66-4129-a748-41e87bcb6a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bc5342-a909-4bee-b9dd-037770f23e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11d7569-44e1-4d9a-8c60-a97c2be94102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b89a3e9-051c-43d3-a1a6-9477b851d173",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8efee9d-ad67-477d-911a-25bf2d7e1b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212a5f02-b8fa-4b97-ab3a-9f089bbbd34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5eca81-be10-46d4-94a0-f36f86268df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf96e4e-6ba5-4965-a269-709e446e6316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d54f701-0228-42fe-8a7a-6caf63530df0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cfdf3d-7ed8-4abf-b6c3-4a611e3196e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03b523d-ff9b-47a8-b722-758868063aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71585595-a4ee-474e-9b7c-4d987682cae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec951f79-2dda-4098-9986-d6f28f3eee95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720f66af-23d8-47cd-a107-fb54cf33c983",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38de117b-6f9f-4dc3-9e12-888046c08139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc09d1c6-bfe8-4b05-9f0b-e389d8336936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662fda44-996a-4274-a3ba-0afc5e46c42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1baed76-d4c6-412b-b2da-25ca1a137232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88836960-3a4b-4a4c-97e3-909573442fe1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbb6786-5bb4-4ff4-856a-83ab6114098b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e221fb53-fac6-4466-82cd-37c4e295ff84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba317576-f215-43f9-ba52-3b8c9975acbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726882b5-b46f-4f26-96fc-551850a49fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a2a4ae-32a6-4c93-81a9-5b03a3d9ed8c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e451f50-c24f-46fb-ae5b-e6e2413e8436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7163eb1b-591f-4ad6-b3db-8047ac21df12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8534ac72-ff15-45e6-bbaf-99d79f79759d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b49577-cfc1-41c6-8455-10ba15505d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8cefc4-5852-498d-a1d8-1a66189aabdf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1894e2-cb5b-4757-a6bb-d0e925e414cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a51fff8-8f95-4ddf-858e-03fee442900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ee59b5-2c23-41bb-982b-c944a86eaa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5a333e-67b8-4f77-984c-9e97abb38b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba71a3b6-5644-4565-b4bf-897490a64b34",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a29b1b2-7f40-4a61-bbb6-08e09f1b0783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d26cadf-0957-4e14-a419-18f58bea875e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc51f98e-7be5-4783-a128-8a545ae657ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d00da3-6236-41a3-92e6-a7c87e847585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96f4d97-1246-4830-a9d5-7e29751fba8a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c64c99d-8645-41eb-a038-24b5b0c611b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf1737f-09be-42d6-b45c-2cd60ba9ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36810fa6-10eb-4c24-998a-1d6a6a338533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0fa600-a418-4605-9756-5b64689d4287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784ec49c-9ca8-42fe-9ae8-1d83b60898bc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055602f4-b815-48e1-b7b3-3d9f6432f649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2167cbd8-0385-4c08-9680-dede42483199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86368ffe-22f0-41d7-86e7-cd93d0ed3b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d582a54-b43c-474a-9622-72da9d5c2b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e4571d-3da8-4f72-9bf1-a26968057e21",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94852ca0-745f-47db-9886-16ef1cca547b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52fcfa79-0d85-437b-9a40-18bc871d0017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded50b9e-fee7-4a82-b63d-42fb09bd7a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce63a87-f2b4-4d02-a8fe-a9f62e91e4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8962e3d1-c61a-47e6-ae44-bf1a22b261aa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c6e5d-763d-482d-b79c-d021c136405f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fd1712-2488-49fc-b39e-49749877abdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4164de73-9c5c-46e3-8c81-ab777915e09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faab941e-e9c1-46d9-808f-be620b6f0a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5f0c63-0f35-4034-8f7f-cf0e1895b0ee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c08bf36-b764-4991-9c0a-2f27ee6a86a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d78e935-55e8-4844-aea7-865c653adfd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772216bd-b66e-4c64-a176-c0f8c2fca158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662803c0-9dd1-435b-91ba-4c8626fc5ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ca9ed0-9aa5-4b1b-8b1d-ce34e808cb95",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4a023d-8264-4384-bada-1c9cc6515751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75ef705-cf14-459d-a806-52b189457ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53f5083-4fe8-4264-a2cd-457ef26e0a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ce370b-3c78-4ded-b077-8108ca45f5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efdd4b3-6c8b-4a74-a716-bc84d41e84fd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b96194-3c4a-43c8-a39f-d7972e5e63c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4433f466-9feb-44f1-879c-8b3c9e4a3a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f8fc5f-7063-4a9f-9ef0-f223b4adb7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2075660d-9089-491c-8ad0-5fb927cc3a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bd07e1-c518-45ad-a56c-dc9d23f3a863",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b505fa3-5a82-441e-b97d-337d5f8e7628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7702d472-0b94-431f-9467-e40f9387a1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e477f605-c5e4-4257-aa76-690e98be4324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e6c4b0-e9f3-4076-95c0-0600b152e27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8072cc6-747f-4484-917b-1da8a3963f26",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42011a6-bde0-472b-8915-629a400ea489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02633ac5-383f-422a-9723-7083bb6d33ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03532b4f-1992-41c2-961f-8f18517e8be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c5f331-205f-48c8-8772-072a9e71277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb4251d-e915-46aa-a13e-65e46cbc3f8d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04069ad-0872-41b6-a339-7065bbf2da6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6a13b5-3cfe-4f66-ab88-0fb041398a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907b82ee-d364-40ce-87f8-0dae49dad41c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d13e1ea-6efc-4a2c-b1d8-0f3268649e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f270edd2-c4ff-4421-b747-e0b6ea50715a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9638e65f-60b2-443e-800e-bf7211b67bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9645163-de63-4ea5-98ca-087b69f4797f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92fbb75-2574-47e6-94a3-66b69b89bb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489d06ae-d7e3-4646-8d83-8603537c630c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf21f419-f9df-467f-9f3b-c45606e33a75",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feba6c00-512d-4401-bf58-cedb98e27d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bdd0a65-912d-46da-8715-9afa08275510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf60582-bcc1-4720-872c-388e67af4d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16859323-9c7f-4787-86a3-28713f02e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306de540-565d-47b4-a4e1-fe12b53b99db",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2709111c-9dd9-4d6a-8e92-ecfa53539ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9204c7b-0598-428b-bfe8-ba0ebb4896da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c8aa95-4c6c-41d7-918a-a7ab5a5f30cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b592ce0-176f-4772-b6e5-d021112a48fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ed8832-7639-446c-9c54-71c044eca3f5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885d88af-eacb-4523-9d20-8df32b71a24a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04bfc8c-eb00-43c4-900a-f02d121d5da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4514874e-cb61-4438-b4e8-49f9661d8255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd73c22-5dfe-4510-9b10-97200ba99fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f32097-9de3-43c1-acf9-0af958d8fd30",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5491680-0ede-4887-835f-0fed56842fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5853107d-9b0e-4032-b2b7-4eecc86f7263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2967b6b-4f30-4229-9b89-7fbc97d4769a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cda13d-0086-4887-be26-552f1b69956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb19b36-9df9-45d2-b3c7-e83f325faa60",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01136914-c69a-4b52-b923-98009eb8ff55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d258ca4-5630-40cd-9093-876dabfade1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf5645a-63b8-4ad9-b456-46815bc9d003",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b28b13-7b34-4d71-a05f-784fbef84631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64a208c-e135-477f-80e4-c48a0a495904",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248b4bd3-7d22-4164-ba95-2f803cd88ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c27c20-a601-49e3-a57a-f8c7d2171ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a80464e-eb1d-4222-9e5c-39f5697d5c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36ef700-c9fb-4ffb-a301-be6cb94302bf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8663f8b3-d110-46e4-8ada-8c7f5a4ba84b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70782887-d7e0-4a01-bbca-e2c8e5a880ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1339a7e1-04df-4304-ae45-3cdbb867cc17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11953e79-0d34-4472-abe0-53df5db8d078"
                    }
                  }
                ]
              },
              {
                "id": "d56070d1-c080-4476-91ca-60dd6242908a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d82d7a5-d36e-434a-9d95-3a778b03718b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d980fb-0db7-40c9-8b79-f80a042ef9ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d6fb548d-8205-4f53-afc6-16cf6e1a26ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d505077-24ec-4ba3-83f2-a0a720a45420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4101eb1c-1e91-4dc2-b787-1f7802d0f913"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38798261-0622-4498-b843-4ceb1f7a79ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b6f370a-6381-401c-b31a-68c55e171a2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9bfafb2-800a-42a3-851e-ee35ef7c1e79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b72c42e9-497e-4fdd-bb80-c52fcf29f42c"
                    }
                  }
                ]
              },
              {
                "id": "7cd0626a-677e-40c1-9027-4d2fa6a7fac2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8bb628f5-f8cb-4744-b1d5-5a90da387d73",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6c2983-93dd-4140-85b3-ba9663863db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "58bcf93d-a754-45ea-8171-0073f0aaa580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba58055e-5725-4cc6-9d6a-67b4cfd9e9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93eccd02-bb6e-41a3-9cc0-2f8b6f735fea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d8bd77d7-c4f7-441a-8f94-5973a52a738f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "011029e7-97b9-434d-be6c-dbeb534aec29",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eafca551-9c73-4219-a4c2-4221f43b406e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0c10a1d5-7f00-49af-aae8-4bf48369125b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ec9698-810e-436c-98f7-40e7356888ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c9c11c0-8898-479a-b8e4-57b7b22d76b6"
                    }
                  }
                ]
              },
              {
                "id": "1e8d07f3-8bd0-4596-9651-6a31078eb566",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d43a5fba-0ea8-4655-bee5-93667c9ac9c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c41441cc-0602-4766-bee6-0d1c362beb0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f13f3eb-ca0b-4e53-a022-dde5c98e4e43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "340ab868-8d02-48a2-8275-8317a0629f95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6df7cfde-bf2f-48c6-9424-02cbc7aa1f18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2217aa30-7fad-45ba-b1cf-0c671cd15824"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19597c33-e6d2-42cd-9540-f20697ec7ead",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71da897f-38c4-432d-aaa4-9f8d453a2ab8"
            }
          }
        ]
      },
      {
        "id": "5d47b735-0a22-4270-8894-eaa2966d1b66",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ce08ac64-23d9-438c-b63f-aebe378e34fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fabb8f9e-03e9-402f-8f1e-1bd5b7210321",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be47155d-0ef0-4d42-8d45-d1ca5cc963e6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fda91fb-a954-45c9-aa59-1a8a85c2ce92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bfb0db86-e992-40fa-8c06-32b8d2367818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fafb381-aa26-4afc-8374-6d6814e3512f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeacb311-daff-45ce-b143-95112da7ce06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29a63679-ea1a-4be5-8bc9-afa3ce25ae2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63928ca6-37ae-4790-978c-4ca3b0abc26c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1815ecd8-7a8d-4d2e-8772-c89e10993d82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89f7b556-9732-4daf-ac60-8d71bd444856"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90a1abc0-8b1c-4cd3-9167-4e9e690f5e35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "65adcd13-4b30-4555-9ce5-a97ea3e4cfc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "794ee472-3c25-4b51-b85d-4bd07eb81927",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32329bca-42b7-489a-a008-54c02fc82b69"
            }
          }
        ]
      },
      {
        "id": "6fc7f40c-cb07-434e-a8fd-4eeb6ab6982e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9bb87e2a-7276-4068-9317-32bcef7e955c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fea71cb-fc76-47ea-8928-0da15cd24c5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbd446d9-c9bb-4b88-8229-dae4f6686500",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a463c909-9bd3-46b2-a0f7-58b9fe99996d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b3be5fa-f75c-4f6d-9d1c-261ab12778c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815b4752-b1da-4686-bf50-c71bc435e032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62009c2b-9c07-466e-a7a3-ba3a60b8b441"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdec362f-a14e-4c15-a4d6-587b14e53ae8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f3f9a3f-60f8-4117-a469-42b1d15ca61f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a0397b6-8a8d-467e-ae41-54a320417552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8353449-93fe-43d7-97cf-4232281ce884"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49a12bc8-9560-4154-a911-64e5437430a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df617a28-dbf7-40fa-9b0a-de9e298257c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6503dac6-c7fd-49bd-b9b7-892339034457",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49de43ce-cbed-448e-9374-68c0beae2bbe"
            }
          }
        ]
      },
      {
        "id": "2fffd8f8-730c-4d4f-9791-ec0b938e934e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "84b30dab-b0a7-48e7-84b3-bbbe5b5133b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4d2d896-2990-4ab5-97fd-77b2d3da2d30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9133f839-c132-4d6d-8656-49cb54ebbdd6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a4a09-8549-4a3b-a68f-b3f0764356ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09af2fcd-d87e-4ebb-904a-a1930dcc1f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374ae355-4dc5-4917-b184-1b6ae1e9c715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e7bc8f1-5bd9-431c-b3ae-b080f0826e77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bc41b2e-6eb9-47ec-96fd-f9d3cba2b9f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d047ed16-18a5-4a74-84d2-0e88da6b20e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc564bcf-f7ef-4b05-b262-5dbcb0a73211",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13f6b38b-6ec9-41f7-96a1-c59bb6c1562c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "202355c5-0a5b-42a2-9ce9-9c70c0623b17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fb52abd2-1635-4f13-9a05-3d118d01a376"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e899565-8453-4e26-8096-46b416eb96b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53bca7e5-8a1c-4361-a387-72bffcf94aae"
            }
          }
        ]
      },
      {
        "id": "b0a2987f-2079-4b94-90e8-0e864f46c86b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8895457-ab63-4d2d-8d8d-7c44d5af1e8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "023f0149-1737-4ef2-9b2b-19deaf7f3fc9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f2269932-569e-49ef-a8f0-4a9a311dedef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0edadaa-4af7-458d-8483-a1ee6316ec60",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38cd954c-059a-49c4-aa1d-da07ea165d7f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.924603174603185,
      "responseMin": 7,
      "responseMax": 632,
      "responseSd": 41.85545646571836,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728348309961,
      "completed": 1728348325686
    },
    "executions": [
      {
        "id": "0e3904e3-93c5-4d99-8462-f038cce00d1d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "766fb29e-95fd-47bf-abe6-bbac42e89e57",
          "httpRequestId": "7cac68c7-8de0-4d5e-b804-a0dc702b78d9"
        },
        "item": {
          "id": "0e3904e3-93c5-4d99-8462-f038cce00d1d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d98e1732-591d-4aed-a710-fffb4d7f6152",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "ba8163d6-ca1a-4945-ada3-33275c2f696a",
        "cursor": {
          "ref": "e952105a-31d1-445f-a316-7a0b60eab132",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1d43e752-e608-4899-ac91-6d6a8062e424"
        },
        "item": {
          "id": "ba8163d6-ca1a-4945-ada3-33275c2f696a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a5f72da3-3a4a-404b-9825-e8df0410f1df",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7704444e-ee39-4315-a614-b1bc81551b1a",
        "cursor": {
          "ref": "c77440b3-58d3-4b7f-a673-7c4017c386bb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d7a8ccad-b9a7-4c41-bcd6-b0f965d0eff9"
        },
        "item": {
          "id": "7704444e-ee39-4315-a614-b1bc81551b1a",
          "name": "did_json"
        },
        "response": {
          "id": "e6340293-7f24-4692-bb82-502a9f506f33",
          "status": "OK",
          "code": 200,
          "responseTime": 250,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868def5c-3baf-443c-9584-ad0d4308157e",
        "cursor": {
          "ref": "aced1af7-02bd-4942-83b4-2d7260b28625",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12dd8b8b-e81f-42b9-a3a8-f68c1c7fba25"
        },
        "item": {
          "id": "868def5c-3baf-443c-9584-ad0d4308157e",
          "name": "did:invalid"
        },
        "response": {
          "id": "fde46add-6d8f-433a-ae24-d31099720764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868def5c-3baf-443c-9584-ad0d4308157e",
        "cursor": {
          "ref": "aced1af7-02bd-4942-83b4-2d7260b28625",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12dd8b8b-e81f-42b9-a3a8-f68c1c7fba25"
        },
        "item": {
          "id": "868def5c-3baf-443c-9584-ad0d4308157e",
          "name": "did:invalid"
        },
        "response": {
          "id": "fde46add-6d8f-433a-ae24-d31099720764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff848831-898d-485a-970a-ff52b8956660",
        "cursor": {
          "ref": "bb8ee856-cc43-42d5-8b55-d574a5522533",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9537ed8e-0cb4-4b92-9ee8-6d6423faa6ad"
        },
        "item": {
          "id": "ff848831-898d-485a-970a-ff52b8956660",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8b5300e3-f7c2-4767-b9e3-02eafb03149d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a09f6a-0b8e-4ad8-affe-adc80b171e9f",
        "cursor": {
          "ref": "a6c761ef-d45b-4072-a508-fbaf43b6b1d1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6fb00ed-b6f2-4b8f-8515-f548c1a51a2c"
        },
        "item": {
          "id": "d7a09f6a-0b8e-4ad8-affe-adc80b171e9f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "191eecbd-2647-43b5-b92f-a3eff0fdeedd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd78cc87-a214-4710-a575-c146fe35a44d",
        "cursor": {
          "ref": "bc857977-c7aa-4a93-8671-c15c25fddfcc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a127c8df-6f23-4297-b3e6-f5389e2032a5"
        },
        "item": {
          "id": "cd78cc87-a214-4710-a575-c146fe35a44d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "468ba208-1339-4de1-ac64-3d1375007ac2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ea9e97-7c9e-4591-9341-2cf544e10a75",
        "cursor": {
          "ref": "3d62bdc9-b633-445c-b72d-62ccb1efe375",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c684822a-e6ae-4e1f-8ec3-c7af525299d1"
        },
        "item": {
          "id": "40ea9e97-7c9e-4591-9341-2cf544e10a75",
          "name": "identifiers"
        },
        "response": {
          "id": "5b4822b0-f23f-4361-ada8-08b1d6b85741",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57a0e52-85f5-4842-a4d4-855236238a18",
        "cursor": {
          "ref": "0f03cbda-8844-4ff2-a3bb-18a6e370900c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fcf54aa2-1c04-4874-b75a-60a545efa181"
        },
        "item": {
          "id": "f57a0e52-85f5-4842-a4d4-855236238a18",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "81379be6-67c1-4a60-ab26-ea5f8c601f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9ebb9f-877c-44f1-a8d0-7d237577c905",
        "cursor": {
          "ref": "7f2bcca6-f4bf-4156-a44e-309dec656994",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "78c339a3-e3c4-4527-aa49-ce4e902a7d03"
        },
        "item": {
          "id": "dd9ebb9f-877c-44f1-a8d0-7d237577c905",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "17ead35f-eea6-4072-8fea-237ea4ec9a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3705d31-ab35-4e6d-8e06-c5f26cb31feb",
        "cursor": {
          "ref": "0fe2ba76-995a-4b89-a325-9f91502686d9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "096da794-3cc0-49ec-992d-a24027727d2e"
        },
        "item": {
          "id": "f3705d31-ab35-4e6d-8e06-c5f26cb31feb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d291e37a-99d8-40e7-afaf-d5e51a7ebf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8064bf38-fc78-45ef-9003-4367f698c375",
        "cursor": {
          "ref": "ba90c980-96d8-4838-882f-7aa85de8c704",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f990d11c-5641-450d-8cb9-f17375421b42"
        },
        "item": {
          "id": "8064bf38-fc78-45ef-9003-4367f698c375",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1fcf3576-e79f-4b18-b9ec-93004d8fc298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f757712-fe4a-4c73-af0e-dc8114d6078c",
        "cursor": {
          "ref": "782b0480-4524-415a-b46a-285ea468b752",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "54ed64ae-fb82-438a-a9cf-45afb718eb17"
        },
        "item": {
          "id": "6f757712-fe4a-4c73-af0e-dc8114d6078c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6e0a309c-61fe-4e68-bdb3-0cac8e5913d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5889319-4fc7-4ff3-b0b9-bee7b2ca0af1",
        "cursor": {
          "ref": "756898ae-5b26-404a-b546-9faeca3273eb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c8bdfcc-0d60-4902-914b-7509a0175c69"
        },
        "item": {
          "id": "d5889319-4fc7-4ff3-b0b9-bee7b2ca0af1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ea9f9ea4-0fe9-4b4d-9f08-521199d52ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf03ac7-7583-4799-adb7-3a2242ad2ab2",
        "cursor": {
          "ref": "9318fb03-ada4-4841-b89b-9b753a1a3f5b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04bf114a-d63f-4ee9-9cd3-4d40a6a25901"
        },
        "item": {
          "id": "fbf03ac7-7583-4799-adb7-3a2242ad2ab2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "10afe008-cb03-4492-aff3-ab0cf0e7990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b41b799-b5bc-4fb3-bb40-6410fdb29004",
        "cursor": {
          "ref": "5a595e82-ca49-4e90-9f8e-f057d3b8bc9d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b40ea315-1e06-4759-80a8-2bb07b7d5b21"
        },
        "item": {
          "id": "9b41b799-b5bc-4fb3-bb40-6410fdb29004",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "01abe97f-1e28-4e5f-bb91-a365da8fbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06e9117-8192-424c-ab05-4b31a48b8b12",
        "cursor": {
          "ref": "c5217b69-4057-475c-b91c-81d025c34788",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2da9abc9-1d1e-4759-864f-2721abe4a375"
        },
        "item": {
          "id": "c06e9117-8192-424c-ab05-4b31a48b8b12",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0e2646e-a26b-4f5c-a74f-7916f092b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da67910d-092b-43b7-8c00-d4d82786127a",
        "cursor": {
          "ref": "d6341ec1-de8e-462f-9a8a-4e0d73c43cfb",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e925014a-b4f4-43d1-85ea-4998a40f461f"
        },
        "item": {
          "id": "da67910d-092b-43b7-8c00-d4d82786127a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1080a454-d095-4e7f-b0cb-5e077e1c4251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536ce416-568a-46a8-843f-4fac9e212e55",
        "cursor": {
          "ref": "d7b8cd16-cb88-44f7-99cb-b5104381a098",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c55e62f5-9518-40d5-99ec-c112ea868d58"
        },
        "item": {
          "id": "536ce416-568a-46a8-843f-4fac9e212e55",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "522e6b3d-6470-493d-9a0b-7afa3979b813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7c35a-afb8-4d2c-94cf-607fc1cb33a7",
        "cursor": {
          "ref": "c2a86563-0dae-4361-99c7-393b505c4a51",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4c16fa4c-35c8-4199-b8fa-fa24800e7fd7"
        },
        "item": {
          "id": "69f7c35a-afb8-4d2c-94cf-607fc1cb33a7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "095105fb-01bb-433a-92db-8c7249f70edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b956b6-cc9f-49f2-9276-3283d4e55282",
        "cursor": {
          "ref": "7f8dd962-92c6-41ae-8c24-03e2db17b8ca",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8a2cac58-4bca-4f95-87a2-e778b5f849f2"
        },
        "item": {
          "id": "13b956b6-cc9f-49f2-9276-3283d4e55282",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "95d9085b-94ca-40c5-9c23-6302c6edb9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8f14c-11b9-4c6f-a971-907368505ae3",
        "cursor": {
          "ref": "ea1bbc9b-e277-4e46-a3b6-cc63a88e0e0d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3fe8936e-d4c4-4d87-999e-ad02c01e186e"
        },
        "item": {
          "id": "7bb8f14c-11b9-4c6f-a971-907368505ae3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d5627e8a-f483-4916-b03f-48676b2ffa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4defdd6-bded-427b-a541-6dcc0dc0fd7f",
        "cursor": {
          "ref": "091863f0-d550-42c2-bf67-15f58d145c78",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1af150a2-91e3-47b2-ac73-0f57f4256f11"
        },
        "item": {
          "id": "d4defdd6-bded-427b-a541-6dcc0dc0fd7f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2290c0be-104e-4240-b190-9e568c564b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f242686d-772b-42df-b1ec-e70634525755",
        "cursor": {
          "ref": "c0f41029-2fa7-4f3c-b880-851ef6cb6f2c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1995b2b7-7b17-4b0b-8d98-270f03fd3e9f"
        },
        "item": {
          "id": "f242686d-772b-42df-b1ec-e70634525755",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6313b2fe-91b4-4734-a6ff-f684392c5d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf78f0a6-5411-4037-8738-d7474ce09f3a",
        "cursor": {
          "ref": "40443d35-fda3-4b37-9551-fbcfc046d4c6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a5ab603f-34e6-4a0c-997a-4186391cac32"
        },
        "item": {
          "id": "cf78f0a6-5411-4037-8738-d7474ce09f3a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d5edd89b-d02a-45ef-903d-d7b1e97cb006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0022c934-2806-4504-a2d8-fe3d54106c66",
        "cursor": {
          "ref": "245b42d9-138f-41de-a87b-feef50455fb5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "99494e12-c1d2-410a-9963-4b6dd99cd951"
        },
        "item": {
          "id": "0022c934-2806-4504-a2d8-fe3d54106c66",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "29abcd32-a47d-459d-b5e4-6a60f67556a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555c85e1-587c-4fd3-9e04-55f7ad2397c2",
        "cursor": {
          "ref": "f04c8057-baba-4971-8e84-240f7bbee9d4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f3b19931-7879-4b43-9b68-a323a9e67fac"
        },
        "item": {
          "id": "555c85e1-587c-4fd3-9e04-55f7ad2397c2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "84d7d817-6f3d-4dd5-a788-260cf7bad7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cb074b-c646-43c5-b6b6-41927446d2d3",
        "cursor": {
          "ref": "9d7a3164-da66-4ce3-8882-0a17d71edf67",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07352b93-1640-40ad-90d6-817e146681dc"
        },
        "item": {
          "id": "e8cb074b-c646-43c5-b6b6-41927446d2d3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e08c8cb5-85d8-4058-9b76-779b2a750475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4858f7b2-3210-4de3-b88b-a8e8aa51e0c6",
        "cursor": {
          "ref": "33e3e876-61b6-466d-b6ae-0524e3c939c8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "db05bf79-d7eb-49d5-81c6-7ab0573511d0"
        },
        "item": {
          "id": "4858f7b2-3210-4de3-b88b-a8e8aa51e0c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "61f7fe1e-ce0c-452d-b6b7-7d69ef22b535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061dc8fe-0c57-4402-b7bb-e3f8635f38a5",
        "cursor": {
          "ref": "4eeb6015-ac4d-4cec-afa1-01c65ef738c6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f6154c60-358d-4672-ac4b-b2587f9ebc77"
        },
        "item": {
          "id": "061dc8fe-0c57-4402-b7bb-e3f8635f38a5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f7c3ef06-d0b4-4934-9f06-7eae61c5936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488ccab5-ecc2-4842-b21a-4a900351eda3",
        "cursor": {
          "ref": "65bda4df-8c48-4447-ad5b-4706c2466e45",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6fb6663f-fdb5-47a0-b738-75ddc39dd043"
        },
        "item": {
          "id": "488ccab5-ecc2-4842-b21a-4a900351eda3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f546e6d-68dd-4e29-8f09-ed6b457e2065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a8cf6-2544-481f-9d7c-9ddb857b2865",
        "cursor": {
          "ref": "dc1b83cc-74e8-41af-9831-205ba3ad2aa7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1095e25b-35e6-430f-8e65-cf959d358f3a"
        },
        "item": {
          "id": "af8a8cf6-2544-481f-9d7c-9ddb857b2865",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "19ca88f9-e87f-4e5e-b874-fb63a03e329c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490f7c4f-9b1f-4ec7-99a1-0b037a76c762",
        "cursor": {
          "ref": "cf07efb7-c08b-4ecb-9f9d-1352da23f01d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29e6320e-762f-43b5-9f04-77ccdaf085f7"
        },
        "item": {
          "id": "490f7c4f-9b1f-4ec7-99a1-0b037a76c762",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "42aea377-0efa-44ef-8d4c-c603cc6c440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c9db63-c270-4ae7-b877-e7aa9e10b942",
        "cursor": {
          "ref": "8f3e0cfc-b7a9-4d6d-bd3d-57b5cd31cb53",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d6d5586-6829-4041-9e37-6e96e1876119"
        },
        "item": {
          "id": "66c9db63-c270-4ae7-b877-e7aa9e10b942",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0d4864c1-9093-4eca-812d-5a8558cde7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32262a3b-d0b3-4d1d-b25e-251df35e177c",
        "cursor": {
          "ref": "aedf5872-6cf9-4d19-8c8c-5e0ae0d95e44",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c7860bb7-15fa-4b44-a124-62e0d99163f2"
        },
        "item": {
          "id": "32262a3b-d0b3-4d1d-b25e-251df35e177c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "db0d2b83-8ead-42d1-86b2-8c1df678dd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda70c2b-a906-4186-ab48-2627e04f6dea",
        "cursor": {
          "ref": "4d309942-096b-4081-b222-6d5fa7b271f6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8511ea80-ac9b-40b6-aa85-27a0d56de110"
        },
        "item": {
          "id": "dda70c2b-a906-4186-ab48-2627e04f6dea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9f286eb-0652-4fe3-a918-b0becb83d09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b177093-33c2-4a54-bbe4-a0fb3bc84a10",
        "cursor": {
          "ref": "9b3040ec-7e13-46bc-895c-de3abc39ad54",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "61038f0a-4f34-44a5-982b-c77d991f515d"
        },
        "item": {
          "id": "5b177093-33c2-4a54-bbe4-a0fb3bc84a10",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "56662c58-d97d-4a21-9c4b-a8ab96b9e30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02d24b4-f03c-4d2f-b8da-f3f7c3a8f6ea",
        "cursor": {
          "ref": "3a2658fe-5ef1-4d0e-9970-d09776d815a9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "41082c15-ba77-4e49-ad66-9c1c109b737a"
        },
        "item": {
          "id": "a02d24b4-f03c-4d2f-b8da-f3f7c3a8f6ea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c5a2cdca-18d3-44fb-86b2-54b1ba83467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931cc23c-7baa-4a8c-b08b-e46cca0d754d",
        "cursor": {
          "ref": "7810c4d7-e61c-40d3-9b11-bdce788de13b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e12ac2a-9f43-4ac8-847a-84dfca025a67"
        },
        "item": {
          "id": "931cc23c-7baa-4a8c-b08b-e46cca0d754d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a178bea4-cc76-4169-857c-2e3cdce94cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8791b0c6-087b-45d1-b31d-99885c7241d4",
        "cursor": {
          "ref": "2a449673-e204-4d74-8af8-f6c7e84d5cc4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b988eab3-ab50-49e3-b07e-2fdce16f3656"
        },
        "item": {
          "id": "8791b0c6-087b-45d1-b31d-99885c7241d4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d430a91b-2ef8-4a43-8d27-bfea096f1b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c263d7-c410-44aa-9331-893b3c658a57",
        "cursor": {
          "ref": "a4ba2622-4f49-40d2-846c-3dbf65b1f2e4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c82a9135-6431-4f4c-b662-0601230ef003"
        },
        "item": {
          "id": "c5c263d7-c410-44aa-9331-893b3c658a57",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "03069518-39aa-4ad4-97d6-540af9f52b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5515e16d-0693-4f5f-94aa-8efe078b83fd",
        "cursor": {
          "ref": "33b93855-3b55-43a3-8672-6a8059e289e0",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "266de08a-c77f-4a2c-81f9-dca21a0cb540"
        },
        "item": {
          "id": "5515e16d-0693-4f5f-94aa-8efe078b83fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "08552bad-d9aa-4b3b-a63c-1aa34ef6b007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2126e539-2e73-4272-ae82-bc12d4aad574",
        "cursor": {
          "ref": "07b6b88f-87d7-41aa-ae4a-725ce0c67e10",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5495a1f3-b23a-44b7-b401-6761ad189c7d"
        },
        "item": {
          "id": "2126e539-2e73-4272-ae82-bc12d4aad574",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9ec2e43f-68b3-4797-bc5a-b37773326a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9977d56-f419-4c5a-8aa8-381ae40ce4c1",
        "cursor": {
          "ref": "fd36d817-d888-4551-9796-1bc55a9e8b72",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc2b790d-f672-4693-9e7d-f2b038d73ce1"
        },
        "item": {
          "id": "c9977d56-f419-4c5a-8aa8-381ae40ce4c1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c6cbaf8d-7e48-4e35-8a60-e00933d8652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0e6073-3615-46eb-a7f2-e9540bf3ae0b",
        "cursor": {
          "ref": "6ca2d317-70e3-4d11-9960-e796150b1c0d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9e253543-5bc4-41ba-86fb-c78564fd9bf3"
        },
        "item": {
          "id": "9f0e6073-3615-46eb-a7f2-e9540bf3ae0b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d861c73b-bdbc-4e1c-9d59-2c9476d3b620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acef95e5-5b75-4528-a395-c8682886acac",
        "cursor": {
          "ref": "7bbe65aa-1707-44e6-abb8-1d772dca5f0a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "523e0b36-7b5f-4f2c-a484-8d4fdfed3ddf"
        },
        "item": {
          "id": "acef95e5-5b75-4528-a395-c8682886acac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "02d4b872-0d1f-45fc-a684-845a739a0070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ef8709-bca0-4a70-aa0d-bf5b27cd0201",
        "cursor": {
          "ref": "c2349879-7195-4bfa-98ad-393d9063b7de",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2bd11e3e-64cd-4f01-917e-6f678f4d7a1b"
        },
        "item": {
          "id": "b1ef8709-bca0-4a70-aa0d-bf5b27cd0201",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e833d081-456b-406a-841d-cb733efb7abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e822a1-2b6a-44c8-a54c-2842fc2778a3",
        "cursor": {
          "ref": "dc7483cc-689a-465d-a16f-1e12ea58e30d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "17c722cf-0626-4eeb-bf35-2a57a71463d0"
        },
        "item": {
          "id": "02e822a1-2b6a-44c8-a54c-2842fc2778a3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "42d18e3f-b612-4d46-8a0a-3dfd53dd88d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f6e81a-5778-4db7-a3ad-4e95ceb70fbf",
        "cursor": {
          "ref": "e56301d3-44f4-432f-87b8-ce81172402d1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2f8f79d6-8f87-4ce9-ad3b-ae7fb6a537c4"
        },
        "item": {
          "id": "c9f6e81a-5778-4db7-a3ad-4e95ceb70fbf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5f27fa7f-c43a-40fa-a01b-0e2c29194c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ccc279-6a0f-4b3a-a230-72ad4a0fe867",
        "cursor": {
          "ref": "abe44105-b67e-4f01-8783-9820a6ea6e5d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1048e06f-6751-4fce-859b-256db327fed3"
        },
        "item": {
          "id": "70ccc279-6a0f-4b3a-a230-72ad4a0fe867",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "49a9996f-a7c5-4e47-9bc3-9f8634a676e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734e424c-64a7-4a76-8bc6-2419b24244be",
        "cursor": {
          "ref": "935fca8a-81ce-4185-b2de-ae1891091e50",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63154978-5ed3-419f-a57f-be5203ce266d"
        },
        "item": {
          "id": "734e424c-64a7-4a76-8bc6-2419b24244be",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "648fe21d-e00d-4617-88be-aac67fa91952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb126cb-d858-4065-9a62-cfa1254e6aa0",
        "cursor": {
          "ref": "651061ff-311c-4e3b-aa52-ae3d12f060a9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "70f477ff-171a-431f-999f-2687a1e989fa"
        },
        "item": {
          "id": "8bb126cb-d858-4065-9a62-cfa1254e6aa0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d1a55877-0a54-49e3-837a-ab144ce4d966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac798b9a-c8df-4e33-9a98-ef9e6595812b",
        "cursor": {
          "ref": "33a1c42e-1760-4287-b459-6237ab33d22c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "62518f32-cfb6-44ff-a58b-c0d65c5ee5b2"
        },
        "item": {
          "id": "ac798b9a-c8df-4e33-9a98-ef9e6595812b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6fb9e669-a4ef-425f-a807-77c90930f735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d93beb0-86a0-4a4d-ac9d-5ac37cf88dfd",
        "cursor": {
          "ref": "3980bfe4-bb46-4c2d-8a94-f5dc4243f828",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a85c23a5-4e2d-44e4-a988-68608b3da95b"
        },
        "item": {
          "id": "4d93beb0-86a0-4a4d-ac9d-5ac37cf88dfd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5a63a03c-f900-4ea6-ad2a-b5a21ab6673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cc6c8a-9774-4be2-be17-4f2823e8851f",
        "cursor": {
          "ref": "a05ab6e2-da1f-4aa1-bc42-0448ac11a706",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89456737-7ff9-4212-a0f8-87d47164dd0a"
        },
        "item": {
          "id": "01cc6c8a-9774-4be2-be17-4f2823e8851f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "42622055-cc4f-4a33-a314-6b7fdd11efa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a1bd1a-0e42-431c-bf3d-907763fbd922",
        "cursor": {
          "ref": "46fc3650-70e4-4cf0-bc43-e0855f1a36ee",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "58dba238-472a-4a17-8d23-7aa17c35ce6e"
        },
        "item": {
          "id": "48a1bd1a-0e42-431c-bf3d-907763fbd922",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e91f980d-e2d1-438c-b591-bbc6f32d499a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a365d8-7b4a-4531-8351-b4732f235df5",
        "cursor": {
          "ref": "3e452eb4-f981-43f0-aa9f-8cbeccc8b150",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "76bebf11-3f32-41f1-8dfc-e108c6466744"
        },
        "item": {
          "id": "f0a365d8-7b4a-4531-8351-b4732f235df5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9b8fda15-4817-48c9-92a1-aa917a7b45ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1698f-e4d0-4029-ade3-635927c48993",
        "cursor": {
          "ref": "fbb24731-d3df-4211-a46b-04ee5e20310b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "84940123-3ce6-432a-b4f0-5384d75bc875"
        },
        "item": {
          "id": "e1c1698f-e4d0-4029-ade3-635927c48993",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a1a89ded-b473-42a6-9978-864b61982e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6060aba-7fa2-48b2-a41d-afef0579cc4d",
        "cursor": {
          "ref": "c91d3885-68ed-4330-831a-37458f547af0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "655379ce-7d08-4d40-9a94-6851848bd231"
        },
        "item": {
          "id": "d6060aba-7fa2-48b2-a41d-afef0579cc4d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b990827c-ed5e-437e-b78c-712c4d15e6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529df91b-eaec-4321-b315-434f9e7b20f9",
        "cursor": {
          "ref": "389bc775-2464-442c-9564-a58b18710c47",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "66ed4fae-3969-412a-a936-d554f7443809"
        },
        "item": {
          "id": "529df91b-eaec-4321-b315-434f9e7b20f9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "aee02fcb-86f2-4282-b133-37d835c41eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5589a4ed-9f67-4beb-a64c-9a030d4dc56e",
        "cursor": {
          "ref": "40bc04c3-405c-4b7b-9046-89caad566aea",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "46960b88-52ef-4dcb-8e5e-aea48b62309f"
        },
        "item": {
          "id": "5589a4ed-9f67-4beb-a64c-9a030d4dc56e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7f0bf023-09fe-49ec-8483-02e589dadef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eb1671-8e15-4ac5-8cdc-f4c857db782f",
        "cursor": {
          "ref": "0865cb80-3bc7-4a32-9721-134592a21f28",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2eac88d5-5f5a-4b7b-8316-7075f1ed907a"
        },
        "item": {
          "id": "e7eb1671-8e15-4ac5-8cdc-f4c857db782f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "576f616d-dd27-4e63-90bb-009a429b5cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0615a7a7-efd2-4d0f-b07b-21e9dfecaac2",
        "cursor": {
          "ref": "32b263d2-5481-4183-8151-00c1fce8747e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fc2c28e8-1979-40d8-8ca4-7a7293ab8ed9"
        },
        "item": {
          "id": "0615a7a7-efd2-4d0f-b07b-21e9dfecaac2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b067e961-183e-4b78-9e2d-ccaeb8f3bc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f636a4-f0f5-4b42-a2ef-e1ba965f3472",
        "cursor": {
          "ref": "2ec0dc02-9933-4615-9fe9-26513eaf9d28",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6806b625-d239-4d83-beac-2bac8e08f4d0"
        },
        "item": {
          "id": "27f636a4-f0f5-4b42-a2ef-e1ba965f3472",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ac322835-ed35-4396-882d-a08e0c93fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93c588d-29eb-436a-ac0d-1851c39d051e",
        "cursor": {
          "ref": "a413541d-c858-4672-b49d-83b92d25638d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8c1a9b35-2b21-417f-b360-469b0c750ca5"
        },
        "item": {
          "id": "e93c588d-29eb-436a-ac0d-1851c39d051e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9b21a8f7-f2dd-4ff4-a1f9-319396a46b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04be2a4-6b97-4511-b353-99e9700378a6",
        "cursor": {
          "ref": "4e789d14-b473-4262-8734-2d49bd6f2868",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c433e29-2f0e-421c-987b-d3cf8d120743"
        },
        "item": {
          "id": "e04be2a4-6b97-4511-b353-99e9700378a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2a23f5e8-d9fc-4526-b22d-7a1d9652f6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa37b1b-2ec1-44cb-9f6d-c48927be627f",
        "cursor": {
          "ref": "444f36a1-dee3-448c-9089-3a8d3683595a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8e644eba-a2bd-4541-845d-dbd66001ec26"
        },
        "item": {
          "id": "0aa37b1b-2ec1-44cb-9f6d-c48927be627f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0c569a2d-38f6-4fe3-b14e-e9ab837307f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f3269-ae99-469c-93cf-7e79b65f8157",
        "cursor": {
          "ref": "0848419b-3c7d-4630-9d5a-bd667067b9ec",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ef70f15f-462e-4519-926f-97732a6ebfc2"
        },
        "item": {
          "id": "b44f3269-ae99-469c-93cf-7e79b65f8157",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98e3483d-84c3-4d9e-a42b-7af39088431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730cce6f-50df-4375-b466-332db1147693",
        "cursor": {
          "ref": "83e77581-5b09-4b19-acc6-c127f1140673",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "05dc0f4a-3808-482e-b9da-a50f0dda0fe2"
        },
        "item": {
          "id": "730cce6f-50df-4375-b466-332db1147693",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1671ce09-3841-4e20-82eb-30f580c434a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f63ef1-18e4-4539-a6c5-0004937c605f",
        "cursor": {
          "ref": "6114daab-0c68-4c96-b121-a2d3fffbac5e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "822295b4-5932-4c5b-9bd9-9fd211eaacda"
        },
        "item": {
          "id": "19f63ef1-18e4-4539-a6c5-0004937c605f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b7280b9-1075-4c5c-b8f8-1750c2bb3ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6616a803-3f55-4131-a109-7c0c8d9192da",
        "cursor": {
          "ref": "b33702fb-9a0c-46db-8fbb-2ff0841cc116",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "10434177-9fc8-4774-8a61-c546dac7c45f"
        },
        "item": {
          "id": "6616a803-3f55-4131-a109-7c0c8d9192da",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "12bf5bfb-f530-4820-9dd9-a8687382f7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad90309-af90-4816-ba27-f07e3d0a46dc",
        "cursor": {
          "ref": "d03520ca-58ee-4c04-8e58-16c1e5d9019b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c75c35a0-c8e6-4170-9e51-ef5a9a6c18de"
        },
        "item": {
          "id": "8ad90309-af90-4816-ba27-f07e3d0a46dc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "242d751b-d025-4191-9b87-3f12b34f8aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638ff852-92c6-41f5-bc4f-b9736d3b37b0",
        "cursor": {
          "ref": "68250a1b-0f5d-455f-90b5-259482e65dd6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "85be8199-17a0-44e7-be51-964c9990ebe9"
        },
        "item": {
          "id": "638ff852-92c6-41f5-bc4f-b9736d3b37b0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f8e86159-63af-4ae8-8e29-64772f6b7aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73a60f5-d059-4890-bbfc-6ff3a3ddf6fe",
        "cursor": {
          "ref": "f593a69a-16d6-4a87-af28-132fcd58dd56",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "640e4c72-8d44-4965-bea4-cb14f67d1062"
        },
        "item": {
          "id": "a73a60f5-d059-4890-bbfc-6ff3a3ddf6fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cd3fde72-9f72-413e-af3a-dde1758d7607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61380917-81c9-4f91-a11c-68dc7f9e05a9",
        "cursor": {
          "ref": "1fcf950d-3b4e-4035-ac53-416a67fb312b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4ccbdb34-3db8-4f1a-8f1c-e6b2332aa881"
        },
        "item": {
          "id": "61380917-81c9-4f91-a11c-68dc7f9e05a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4d57c6ba-f462-42d4-8923-2a39b249d2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78739b69-e4d4-4c2c-8fc9-896c9e31e3d4",
        "cursor": {
          "ref": "08aa83a3-4696-4a7d-9c8e-10d2678e2414",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c839df51-4801-4e13-9cfd-4f8f7a0d9fd4"
        },
        "item": {
          "id": "78739b69-e4d4-4c2c-8fc9-896c9e31e3d4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e26d4d1a-8acc-4fa7-9d7f-7d12e40cdea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6d7fc3-e597-43c0-9329-7ab1d415dd48",
        "cursor": {
          "ref": "5a24c702-dfdb-4b77-8d68-693437c45630",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8565afd2-4a51-4f27-87d0-8d3a539d73f1"
        },
        "item": {
          "id": "5b6d7fc3-e597-43c0-9329-7ab1d415dd48",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "61e5638c-c3c3-4420-9884-ca03742b80b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16834d3-a919-4ce0-af34-d233c77e7c5b",
        "cursor": {
          "ref": "11642471-27e3-40b0-bddd-ad06500e9d08",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "27f9788d-89b3-43fc-9e59-dfec2b1c46b3"
        },
        "item": {
          "id": "d16834d3-a919-4ce0-af34-d233c77e7c5b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7dcd1c0e-40e9-4b6e-b5b1-d553ae0125d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1052942-144c-49b4-9750-3ea85032791e",
        "cursor": {
          "ref": "8cb3b489-0a15-409c-9319-5eaf8e8dd1e6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b88f897c-ac3d-44c1-9446-f29f483d065f"
        },
        "item": {
          "id": "f1052942-144c-49b4-9750-3ea85032791e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "19b2ba46-dcc0-48f0-a9e5-bec3ce885425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac15427e-9972-4fb6-ba73-4ebb5c3a0fbb",
        "cursor": {
          "ref": "62b1681a-4e20-4fde-b07b-1c8264334099",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "31fb45a5-b287-4f88-bc0f-b6630bc67c79"
        },
        "item": {
          "id": "ac15427e-9972-4fb6-ba73-4ebb5c3a0fbb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "60db05d4-5c93-4a3e-9aca-53b94e31136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a89173-05ea-4909-90d2-c91fde35c11d",
        "cursor": {
          "ref": "bfe4335f-23dd-497c-a82d-4a5d73b2c7ce",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dd04d4d4-50f7-49aa-817b-3ca651fae159"
        },
        "item": {
          "id": "98a89173-05ea-4909-90d2-c91fde35c11d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "df688c9b-42d9-41f8-85a3-cd0c7287628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bf7faa-de2f-411c-8fca-6e6577eea7dc",
        "cursor": {
          "ref": "1868c8fe-53d1-4b8d-bd72-cd872e32601f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "68e7164b-7850-4cd1-8c31-c157691ba8a1"
        },
        "item": {
          "id": "45bf7faa-de2f-411c-8fca-6e6577eea7dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "97a4f517-8462-44a1-b66d-2cc02c73093c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c2a756-8ab8-4ec4-849d-f6b22fb13557",
        "cursor": {
          "ref": "5dde113a-7edd-4026-8e7c-4f9188433d95",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2e309853-afca-4e4a-9a7a-7f10d80a409e"
        },
        "item": {
          "id": "48c2a756-8ab8-4ec4-849d-f6b22fb13557",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a9591195-1d78-49cd-b571-e2a17a835b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ec1cbe-11c5-4616-a8aa-bb1937408648",
        "cursor": {
          "ref": "76eed70f-b7c5-478a-9e69-7459a2d8b62e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0f2a5b69-a9da-4d25-bf87-18e0b4efb0a7"
        },
        "item": {
          "id": "a1ec1cbe-11c5-4616-a8aa-bb1937408648",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b33f2586-26ca-4866-818f-848dddb0d7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ee2e24-5308-4aa7-ad00-39a4f033a919",
        "cursor": {
          "ref": "2470a107-30a9-4d74-87b6-d06c0113824f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bae1c777-4d9d-4b60-be6a-32c3b9411d1b"
        },
        "item": {
          "id": "34ee2e24-5308-4aa7-ad00-39a4f033a919",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cd4e3a12-86a2-46a1-8055-f154261a43c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976df4eb-5d5b-4289-9ba1-4f9f59cd40b5",
        "cursor": {
          "ref": "b9bbd46f-8cee-411b-8535-6e333278bd0f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f9defea4-5af9-4cc3-b0e1-a153147859f9"
        },
        "item": {
          "id": "976df4eb-5d5b-4289-9ba1-4f9f59cd40b5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "988690ac-f10a-402d-8ffc-ac0db64c4c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b1b1d-97aa-4d46-9b11-d62f9bfebad6",
        "cursor": {
          "ref": "d5a42aec-cab3-4a8a-ba7e-941dde356b83",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9197f7cf-8acb-4ade-b9c5-ec166df4cd81"
        },
        "item": {
          "id": "da3b1b1d-97aa-4d46-9b11-d62f9bfebad6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9945d2c5-da56-4299-8249-cb0f72091c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4226d496-aa4d-4cc0-8600-44247ae89a72",
        "cursor": {
          "ref": "ea516cec-e0a3-4db3-83b6-3a8073d9fd0e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7de96079-22ba-4b83-86e6-f044b8ec6f19"
        },
        "item": {
          "id": "4226d496-aa4d-4cc0-8600-44247ae89a72",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "48cf7097-2326-426e-91b5-d774d787a4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4777cfaf-bf9c-4461-a5db-71cd18a85551",
        "cursor": {
          "ref": "f0cf146e-5be5-4949-8912-3a22ed415544",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c6e919cb-14da-4b65-b722-f5e8048ebd81"
        },
        "item": {
          "id": "4777cfaf-bf9c-4461-a5db-71cd18a85551",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f15afa4d-4e5c-4458-aa1f-bad6959c872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdca53c4-fff4-448c-af1a-e51461816b41",
        "cursor": {
          "ref": "81981f37-bbfe-43a8-b3e7-cca9e71afd84",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9e6fd2b0-88a0-412f-a48f-280afa748728"
        },
        "item": {
          "id": "cdca53c4-fff4-448c-af1a-e51461816b41",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7ea5d638-6aa2-42ae-b57f-adf6ce62351b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000e14d0-52c5-4b8b-b68a-7ce511a4c17c",
        "cursor": {
          "ref": "bf7a0052-0f1c-4c13-ba00-5b0804601c0b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bbcca356-ad25-44fc-ac15-61d454a15b61"
        },
        "item": {
          "id": "000e14d0-52c5-4b8b-b68a-7ce511a4c17c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a363ad8d-2081-490d-ba31-5473867184ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71e0408-8d82-4eed-9c6f-b7e7b2a8ed57",
        "cursor": {
          "ref": "13c8c25d-0948-4784-9fed-7b6ee76c30c6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bcf5f840-587d-4342-9dcf-1e941225d5d2"
        },
        "item": {
          "id": "e71e0408-8d82-4eed-9c6f-b7e7b2a8ed57",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "90ff1564-cb1b-46ad-a94e-78783fea215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c287cae-0643-4c7e-a0a5-d1cdc20efae0",
        "cursor": {
          "ref": "40eb1bb9-d7b4-49cf-84fc-fcf29d0194c1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3678a3ee-0001-403a-b519-cc4834a875fb"
        },
        "item": {
          "id": "2c287cae-0643-4c7e-a0a5-d1cdc20efae0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "018d6656-70e5-49a2-9bd8-379c13331818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcf6c6c-4c16-45b7-b33e-c34246520aaf",
        "cursor": {
          "ref": "5ae7d1c6-3b2c-481a-a2ec-88105e7cd307",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0499687c-873b-4bab-a108-74a86c30e991"
        },
        "item": {
          "id": "cdcf6c6c-4c16-45b7-b33e-c34246520aaf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c007a004-8021-43b9-a3a9-7a4cfff8b04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1ff9cb-86a2-41c7-bffa-1082c415af48",
        "cursor": {
          "ref": "78ee6647-e098-4996-99b7-d26c9e2870b7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "85162e63-41bc-4860-ba4f-c7639900a0c6"
        },
        "item": {
          "id": "9c1ff9cb-86a2-41c7-bffa-1082c415af48",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0d576378-793c-4d90-8f64-20c50ee541b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21286476-a215-4601-83c3-10ead0e19319",
        "cursor": {
          "ref": "6ea620b4-e8d6-4b52-a610-6e765eb97aeb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3151e2ad-2c4c-4f6f-a33c-6af29bd126c5"
        },
        "item": {
          "id": "21286476-a215-4601-83c3-10ead0e19319",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f502041d-32c5-4563-ba2a-220c9914e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071742da-ff61-47ee-9623-0dada8a55274",
        "cursor": {
          "ref": "9001fd22-d373-4117-8b08-a2655aeca9b6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c122cd7-796c-4050-bd41-60e66cd29273"
        },
        "item": {
          "id": "071742da-ff61-47ee-9623-0dada8a55274",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "76b5139c-d1d3-4f4e-846d-019e0feb6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0178259-a1ae-4817-b409-138880a86840",
        "cursor": {
          "ref": "17bf8c06-860e-4daf-9be7-af75dfb5e14c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ddd55a3-f80c-413e-99ca-c530c21e7991"
        },
        "item": {
          "id": "d0178259-a1ae-4817-b409-138880a86840",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3c2c274d-7ba7-4041-854d-f2eba92dace3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f666789-4b03-42c0-b5b2-3b4afa1a5c3b",
        "cursor": {
          "ref": "06c15616-9ed6-4617-86c5-322784e195fd",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "863b518b-6ae9-42da-9ca8-0ee96d60678d"
        },
        "item": {
          "id": "0f666789-4b03-42c0-b5b2-3b4afa1a5c3b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1af54881-9db4-4e4f-a4c7-670351d39d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56c58d4-dc55-42be-93ac-316e98a035be",
        "cursor": {
          "ref": "3bd2f9d4-cfc0-4e45-9b19-f19feb03c67d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b8cc5595-5a2b-4074-b676-47e3a587daaa"
        },
        "item": {
          "id": "c56c58d4-dc55-42be-93ac-316e98a035be",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4731f8fa-0fa9-4ea7-ad8c-902a269953e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6cf7b0-cfdc-4595-8112-77c8c82b4e06",
        "cursor": {
          "ref": "a735fe7a-b509-4e0a-a06b-bf4c6b3cdb81",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "934c8893-2127-4442-9d64-0398969a8f78"
        },
        "item": {
          "id": "2a6cf7b0-cfdc-4595-8112-77c8c82b4e06",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f6d41fd4-4f94-4383-a3bc-3033408bef20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aa44a5-9dbc-4238-a2ab-b40a6f5ac024",
        "cursor": {
          "ref": "3e4a60d3-955a-4eb5-b123-12908a7a964c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "733cc0c6-7950-41f9-8e7b-e4318e2743b4"
        },
        "item": {
          "id": "a8aa44a5-9dbc-4238-a2ab-b40a6f5ac024",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1b53c986-3d8b-4ae3-848a-b41e406629bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f6a11d83-c87f-4570-8479-963aa4bda868",
        "cursor": {
          "ref": "c28295d0-fb44-414d-adf8-9e6ccc14a0a9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1d866caf-bbe6-4c52-8d06-da2dbca4277a"
        },
        "item": {
          "id": "f6a11d83-c87f-4570-8479-963aa4bda868",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3f8829c9-32b6-4a57-a014-1592c87329cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fcf31ab5-5004-4770-a189-7f7cf9719738",
        "cursor": {
          "ref": "d8b2b883-d57d-43ea-a4e5-a767537a7f50",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1f6db336-968a-4c8e-90dd-b23256302006"
        },
        "item": {
          "id": "fcf31ab5-5004-4770-a189-7f7cf9719738",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f481dd7c-4db3-4455-b5df-339e2976a66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1ff8ccf9-2e7c-471e-bc0b-697ebb448c31",
        "cursor": {
          "ref": "3a34fb53-07c4-488c-9ce0-5bb4d30172df",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "17781422-019e-4f5b-b58e-dcec95ed0b72"
        },
        "item": {
          "id": "1ff8ccf9-2e7c-471e-bc0b-697ebb448c31",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f072c5fb-d5a3-499d-b3d6-6740f1ca419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "db1a21e3-30c8-4279-b618-229f21b2b34c",
        "cursor": {
          "ref": "d20bdba7-c5f8-4840-bc68-ce77ad6149f7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e91295c-01a7-4089-810c-58530c46abf9"
        },
        "item": {
          "id": "db1a21e3-30c8-4279-b618-229f21b2b34c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1974ac5f-db9f-4917-a30c-dbb4eb653bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5b5e6ed7-c503-407f-9a14-d9f050b01efc",
        "cursor": {
          "ref": "8c4d5d56-2c90-4da9-8d20-a8f6c0f28712",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f43c7dc6-1291-4223-b225-34c22ee1d19b"
        },
        "item": {
          "id": "5b5e6ed7-c503-407f-9a14-d9f050b01efc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ef13f065-a780-40d9-9a1e-d168502b39c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "88216d59-327e-4540-99c7-296e34708a98",
        "cursor": {
          "ref": "852e80ff-4baa-4c28-99f9-9ad3fe3c1091",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6689e900-cdea-4811-84d2-1699bd8358db"
        },
        "item": {
          "id": "88216d59-327e-4540-99c7-296e34708a98",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7bdc905e-66ec-4dc4-aa17-b694c411370d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "44b48822-29d4-4074-8655-ab04bae8d067",
        "cursor": {
          "ref": "a0f22718-0127-4946-9578-f375b1ccde36",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a92a43b9-44eb-4ea5-b0cd-5f66173a281d"
        },
        "item": {
          "id": "44b48822-29d4-4074-8655-ab04bae8d067",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "79a2ccb5-bd3c-4463-8747-68a986e57ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdcfb12-a93e-463b-a984-02b4854cc0fa",
        "cursor": {
          "ref": "a9dda7ce-dbbf-4994-a24b-d0eaa075690b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5e7c558a-3d46-4fc8-804e-b0d8f6322312"
        },
        "item": {
          "id": "6fdcfb12-a93e-463b-a984-02b4854cc0fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83e7f50e-bfbb-40d4-a904-f0cdc48c8c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b315dd-6804-4df6-9040-87a7c78a2bd7",
        "cursor": {
          "ref": "9f85d83f-9a4a-4865-a3e5-b3e18026bb1f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bebfaf5a-5d9e-4622-b7ca-7cecc8d66e09"
        },
        "item": {
          "id": "27b315dd-6804-4df6-9040-87a7c78a2bd7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9acf0850-1635-4ad6-9a82-b8a3f09f810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447eb70b-1c1d-471f-b02c-e01e8a3d2597",
        "cursor": {
          "ref": "2bbf40f8-ec52-49a9-9478-5b203be72786",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6f6bd702-bc58-476f-8b98-da5fca6a151d"
        },
        "item": {
          "id": "447eb70b-1c1d-471f-b02c-e01e8a3d2597",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5ddf77a-c3c7-411a-a6a7-8f54737c2079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9088ba7-9eea-490e-8899-82259354e53f",
        "cursor": {
          "ref": "bbaedcd8-19aa-4b75-975d-76061eb23820",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b43b9bed-dc40-4eb4-99d2-90d5d4d33053"
        },
        "item": {
          "id": "e9088ba7-9eea-490e-8899-82259354e53f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "80b4eb32-0a82-4525-8b73-d2f6542ff394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318f450f-b394-41a1-9ff4-44c2a401850f",
        "cursor": {
          "ref": "e30a0097-f4c4-4bed-a8dc-4543cb262e61",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a592f3ea-b084-49ac-9631-32e695b1163d"
        },
        "item": {
          "id": "318f450f-b394-41a1-9ff4-44c2a401850f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b56d5ee4-a119-4405-88ed-dc58dfd60ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a310c5-2726-4319-ae55-74b3582a38dd",
        "cursor": {
          "ref": "75402eb7-f51d-4d6c-a893-185de0297713",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9c780711-8e55-4608-851c-21d619c440d0"
        },
        "item": {
          "id": "39a310c5-2726-4319-ae55-74b3582a38dd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4732aa6d-dbca-4f90-b392-728c6e9cbbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d2726-1b44-4386-bac1-74ba37769072",
        "cursor": {
          "ref": "ac62170f-0391-4cd2-8781-87bf7928c86a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b59217b-2fdc-4ba8-9d0e-3ccde739aedb"
        },
        "item": {
          "id": "fa4d2726-1b44-4386-bac1-74ba37769072",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d8ccac2d-cf7c-4626-ba11-0a1aa012ab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c20ec-50f5-4ee7-9195-9761b2ec83cd",
        "cursor": {
          "ref": "70a5ec57-b769-46c0-bda2-53bbb2e8a918",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6f6e83d7-eef2-4cca-90a1-28aad40f5156"
        },
        "item": {
          "id": "931c20ec-50f5-4ee7-9195-9761b2ec83cd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2cc4c0a9-5211-4504-9a8d-e675233ccaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91769de-499f-40fc-8521-4786c8c7daa5",
        "cursor": {
          "ref": "53a2ceec-ba8d-4111-b020-06cfbd303176",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f7f57023-6a5e-40bd-a3dd-7fc12f0f353e"
        },
        "item": {
          "id": "f91769de-499f-40fc-8521-4786c8c7daa5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa747046-79de-46ec-8085-2b6465f70fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39060a79-b4a5-4763-a6ab-08aad852fc77",
        "cursor": {
          "ref": "7b069cf1-5fe3-48aa-8963-8bb83fb57a2f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e3e17563-41ce-4aeb-8b6d-8ce8660858d4"
        },
        "item": {
          "id": "39060a79-b4a5-4763-a6ab-08aad852fc77",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1a37d52d-e8bf-4134-9236-d6bfcabba5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8d6ef3-4b37-4f55-b39c-8233c005762e",
        "cursor": {
          "ref": "0a5a8ae3-53ca-410f-9f97-fb72b6e76c5e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bdd84936-f75f-431e-8bb9-879adea03e09"
        },
        "item": {
          "id": "4e8d6ef3-4b37-4f55-b39c-8233c005762e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "77e092dd-7c85-48e8-b632-5e24efa02622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2134477d-1604-4f9b-afd7-54e99a915724",
        "cursor": {
          "ref": "43026028-0669-430c-a964-8688d01fd542",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3cbb9e6-2092-4008-a5f0-9e700317e59f"
        },
        "item": {
          "id": "2134477d-1604-4f9b-afd7-54e99a915724",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69f67df1-2e64-4a69-81ac-5ee329b99887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0354a7-c3d1-45ff-bef4-7a9c1f1fd6cb",
        "cursor": {
          "ref": "7fffe1c1-a136-460d-b508-379456b9c403",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f2fd94b1-ebae-459e-8bf6-feff9d04ee07"
        },
        "item": {
          "id": "0d0354a7-c3d1-45ff-bef4-7a9c1f1fd6cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8fe5143e-c779-4832-8921-d1d4ab89d2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7934857-331e-4bdd-8137-76c06552b629",
        "cursor": {
          "ref": "9416870a-59b4-4c59-9d61-76638de83d1a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b25421e0-ca49-4e89-9e08-d4f6362b0632"
        },
        "item": {
          "id": "e7934857-331e-4bdd-8137-76c06552b629",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c3ba005-5193-48e3-8d18-e86e6554f949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9ec89-7489-4f86-98e5-5719ccfbe5fb",
        "cursor": {
          "ref": "ecd9a437-4bf0-418a-9ab2-e607e032f210",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a1a2159b-59a2-43f4-b123-a67aecc96878"
        },
        "item": {
          "id": "82c9ec89-7489-4f86-98e5-5719ccfbe5fb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddc4e10d-675b-4289-a22c-196ad43ee9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42927e2a-9974-421a-886a-01dd51979a6e",
        "cursor": {
          "ref": "f35b2a32-7006-437b-b151-daa331784cde",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2425609e-182c-4fc7-abf9-34ed8c05d28f"
        },
        "item": {
          "id": "42927e2a-9974-421a-886a-01dd51979a6e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4c31c9b9-2cab-4816-9d2e-78285446a70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08863fd0-f8cd-4d53-bc69-c81a3fcdab06",
        "cursor": {
          "ref": "3e4da8ca-cad6-47a6-a7b6-e43c6289ee19",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "69d4d6f1-d04f-4e72-b7ba-e0fd3206a92a"
        },
        "item": {
          "id": "08863fd0-f8cd-4d53-bc69-c81a3fcdab06",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8367fa88-9283-4bfc-90b3-3a2f183e7655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d19fd4-ad17-4756-b599-a41b2b391f31",
        "cursor": {
          "ref": "84840ce2-8a58-4e1d-b3e1-22247a3edc13",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c47c2dc2-ecc5-4e66-a6f5-eb4d99b01d2b"
        },
        "item": {
          "id": "41d19fd4-ad17-4756-b599-a41b2b391f31",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "43cb4884-9e43-41b6-ba69-302530f788d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6539eaaa-ef8c-4217-a6b7-e77b5a0be1c8",
        "cursor": {
          "ref": "87e9c12b-4df1-4ffb-b65d-735205ac74ca",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6482218c-6832-4589-aa3f-db12c8d8e22f"
        },
        "item": {
          "id": "6539eaaa-ef8c-4217-a6b7-e77b5a0be1c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "91f2bfd5-951b-4409-9be9-d0d700991a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7c0d5c-b67a-42a9-8a15-a13f1c555f6b",
        "cursor": {
          "ref": "5844f849-ba7e-4e1c-862d-14afc459e910",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8f2411ab-1881-41e9-a253-7b7dc4ac78b3"
        },
        "item": {
          "id": "7f7c0d5c-b67a-42a9-8a15-a13f1c555f6b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dbd16482-9a00-40f2-a9f4-58c94c019d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ca064e-109b-4359-b993-eede164a3a73",
        "cursor": {
          "ref": "c2e15b02-75ec-40c1-9d69-72d83822323f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f13fe54-8eb1-4424-9f49-bcfba856f320"
        },
        "item": {
          "id": "c2ca064e-109b-4359-b993-eede164a3a73",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b871254-b7d7-46ab-98c1-99dd7a8d6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c10ff6-0e0f-4088-8d46-8f4114b7bb91",
        "cursor": {
          "ref": "3c54efdd-b5a7-4649-8e80-155f2872b4a3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "22979606-ab7f-4dde-8127-afa1a8ccbe60"
        },
        "item": {
          "id": "72c10ff6-0e0f-4088-8d46-8f4114b7bb91",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1e37c71c-d9d5-4f71-a0aa-2519033f2ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd0eb9a-e2b7-40ca-bc64-4abb7da62651",
        "cursor": {
          "ref": "9a5585bd-5313-4857-94e2-544f036f2e24",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bcb48f9f-0081-4889-9b19-80f0a13499b1"
        },
        "item": {
          "id": "4bd0eb9a-e2b7-40ca-bc64-4abb7da62651",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9a31bd7e-3bf6-4c2a-8b16-e73bc99ad7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b886777-b470-4195-ac37-16b3374e16c4",
        "cursor": {
          "ref": "31c7a017-3162-46ab-b831-73e41ef8621f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a46d59fe-62cd-486b-8df9-97bbbc7d4f32"
        },
        "item": {
          "id": "7b886777-b470-4195-ac37-16b3374e16c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "25a30a4f-9de9-473f-88e3-dea1af0a7387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28ac285-dc10-4838-8af0-739ce750ac0d",
        "cursor": {
          "ref": "483c458f-e132-4930-9e0f-d6753d7feea6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "41bb7879-6f8c-46c1-a533-4df651e89c0f"
        },
        "item": {
          "id": "e28ac285-dc10-4838-8af0-739ce750ac0d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "019331d0-ebf3-4fa1-a9fe-3870dc165cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d61b5ce-b5d6-420f-b822-dc8301dcdada",
        "cursor": {
          "ref": "ca70402f-24ad-4d21-872e-a57a92981f0a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "226eec5d-cff2-4faf-8798-04f9466f382a"
        },
        "item": {
          "id": "7d61b5ce-b5d6-420f-b822-dc8301dcdada",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7322ef1f-f9df-4344-9413-bf1612e0653a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71c5d1a-6bd1-4c9d-ab5c-fb2fbffeb47c",
        "cursor": {
          "ref": "490d561b-d9d3-471f-b3b6-6550eac8c68e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "393ec2f0-c6c9-40c5-828a-b81ecb676544"
        },
        "item": {
          "id": "c71c5d1a-6bd1-4c9d-ab5c-fb2fbffeb47c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "24463cf1-41ac-4dd6-9152-600079c98aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d502b5-384e-4219-bfc6-4a7013921cc5",
        "cursor": {
          "ref": "68feac25-27ff-4f72-8b0e-a35e66efe4db",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7bb32193-d211-400d-b740-1aad479df935"
        },
        "item": {
          "id": "05d502b5-384e-4219-bfc6-4a7013921cc5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d83ef6f0-648e-45be-a91c-cbab867eaf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a3ef6c-28a1-40db-9018-feaff2bf9039",
        "cursor": {
          "ref": "53d8e16a-e75b-4cbe-b186-9d05cc7bea11",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "851906ec-8a84-4506-82fc-01435edd7f18"
        },
        "item": {
          "id": "85a3ef6c-28a1-40db-9018-feaff2bf9039",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c49d6a77-73de-4f51-87b5-0d7422c29578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2044f7-df09-40b1-a561-c3f20c898087",
        "cursor": {
          "ref": "b11c38f0-d6ad-4a35-aa67-7bc092f7fae5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "46ab9906-5f5b-4dde-8059-d68d50c2b0ac"
        },
        "item": {
          "id": "be2044f7-df09-40b1-a561-c3f20c898087",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "28de7908-056e-496a-af25-2c6c2e765840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e39125-8550-4daa-b679-904aa5ab3434",
        "cursor": {
          "ref": "a865a373-bf32-4583-af20-cb586e66963f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9c0dceff-3105-49fa-84d8-844e52e75a2b"
        },
        "item": {
          "id": "71e39125-8550-4daa-b679-904aa5ab3434",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "072e3dc5-162f-4ead-934c-20e07d9d3d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cecc9a-b174-4bb2-a391-51b3825db0cf",
        "cursor": {
          "ref": "ec05f0eb-42d5-4661-be81-a22f61d1e975",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82ed1533-117d-4f52-ae70-f61ef8447431"
        },
        "item": {
          "id": "00cecc9a-b174-4bb2-a391-51b3825db0cf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b0ecd631-9b78-4021-a26b-4c498fab0c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5b52e8-6d60-4be9-b6b7-706db18c48b0",
        "cursor": {
          "ref": "0daf8211-ffce-4d71-8820-47cd24b92c8f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "59c34fcd-8e4e-4c9f-818d-9f6e86cdc87f"
        },
        "item": {
          "id": "ff5b52e8-6d60-4be9-b6b7-706db18c48b0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "383451ab-5561-4dd4-9109-94c6b997e6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0b178f-78fb-40ce-888c-d1b354674153",
        "cursor": {
          "ref": "cafa9c63-e89b-45d3-8547-231397e93d0b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6527fd21-05d5-44db-b185-d849c9d0137f"
        },
        "item": {
          "id": "ef0b178f-78fb-40ce-888c-d1b354674153",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d4e67f95-4171-48cf-85c8-c8426a557a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5618a6-25df-48d3-930e-b4a8d694dc44",
        "cursor": {
          "ref": "76aa2c75-7d29-4bf9-9ebd-c8c8956fa82c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3f5247d8-bb6a-4917-b647-bdb1a37e2ee6"
        },
        "item": {
          "id": "4b5618a6-25df-48d3-930e-b4a8d694dc44",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2bca5048-8bae-47fa-b6d8-07dccb46b941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8e35f5-447b-4714-9c84-ecafb91fd714",
        "cursor": {
          "ref": "886e0dba-d08f-4230-b4d0-ea0d3479f4e0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "92147243-240f-4ebb-b364-d87b039b8125"
        },
        "item": {
          "id": "5a8e35f5-447b-4714-9c84-ecafb91fd714",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a1dce172-0be1-4806-a487-f4e1e2c7efff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce6c98f-49ff-4230-8d54-347fb6f782a9",
        "cursor": {
          "ref": "fd46fc41-7fb7-482b-943f-a58153ddd81e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "60f59651-98ee-49aa-8589-cbd021076999"
        },
        "item": {
          "id": "4ce6c98f-49ff-4230-8d54-347fb6f782a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "67a6e153-5401-42b5-97a2-dcd50cf3275e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b703452-7c47-4cc6-8ed4-2d8b24017978",
        "cursor": {
          "ref": "dcf96687-84dc-4a6e-b9be-1d32bfda8e07",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1e0ccbe0-08bc-4069-9fab-c302fc675c68"
        },
        "item": {
          "id": "5b703452-7c47-4cc6-8ed4-2d8b24017978",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8682c8b2-0f31-4704-a91d-b811dab54121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6572ba-7262-4ce3-9ecb-afdc36bd66a6",
        "cursor": {
          "ref": "87b5fd7a-2671-4bca-88be-ca209727fd8f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4c42e060-fa2c-44cb-bf38-4b3b41474b30"
        },
        "item": {
          "id": "5e6572ba-7262-4ce3-9ecb-afdc36bd66a6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7a128e6a-fcfd-4266-9880-61f79861b691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342d9fd5-ff75-455c-8aba-cae4c8d58a74",
        "cursor": {
          "ref": "80f494be-b8dd-4309-a350-34ba36074409",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6e7cdaa2-3afc-437f-a5ca-26c0c89b2a3a"
        },
        "item": {
          "id": "342d9fd5-ff75-455c-8aba-cae4c8d58a74",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "94b5d208-a1cb-4e36-a571-501c30fe4338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aa6862-29eb-464b-bdb7-a147c14fdeb9",
        "cursor": {
          "ref": "2c23a4dd-eaca-48ac-9f3b-73c735c13b82",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9eb35572-1d39-4c93-94ca-b6224950b451"
        },
        "item": {
          "id": "d5aa6862-29eb-464b-bdb7-a147c14fdeb9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "be2be825-5c32-4317-9f1a-c6b4ef8edfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1181d64-294c-409f-9171-4138c4654411",
        "cursor": {
          "ref": "3587ced2-e3f6-4127-ba9d-ab7aca9587ef",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6f6b86b4-0613-43e8-bf3c-eb73fb6f8e23"
        },
        "item": {
          "id": "c1181d64-294c-409f-9171-4138c4654411",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bc5b2811-565b-43f5-9c78-6855973cf5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77007bab-2051-475d-a273-1216f846f486",
        "cursor": {
          "ref": "11f8d52c-8680-466b-b27d-8380ea5d7125",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c674653e-7aa2-433e-ad96-c5922d1e43de"
        },
        "item": {
          "id": "77007bab-2051-475d-a273-1216f846f486",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f4bf231b-863e-41cf-87f2-79fab4058f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2738e8-4ecd-4f7c-b472-7cd1fef63eb0",
        "cursor": {
          "ref": "12858791-d9d8-4aa1-8626-d138574effac",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "432cdd64-1595-4cfa-a2e9-f2d3b3120dfa"
        },
        "item": {
          "id": "8b2738e8-4ecd-4f7c-b472-7cd1fef63eb0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d22a4dfc-f78e-4d5a-ba7b-8c5b52f9a2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11d588d-a729-4ef7-b6a6-ce79063b67e0",
        "cursor": {
          "ref": "f57d14e0-904e-4714-8218-b7dd5120e3a1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "45d113c1-605b-4349-b448-a6aca0433162"
        },
        "item": {
          "id": "d11d588d-a729-4ef7-b6a6-ce79063b67e0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab0a8a4f-2416-4376-9ee4-4296a5f708bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c568f316-a52e-4f85-9ebd-f481bc829624",
        "cursor": {
          "ref": "11eb93ad-335a-44ee-beca-72c2eba92472",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5628ca65-3960-44f2-87a8-c97e26410b1e"
        },
        "item": {
          "id": "c568f316-a52e-4f85-9ebd-f481bc829624",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "692efc55-2033-4efb-90cb-fc2c0bd6eaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f3cd9d-0cf7-42fd-bb0e-fb6d373dcf61",
        "cursor": {
          "ref": "2f57b1cb-33c4-42f9-b822-ce1f89b0c92b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b9f11e52-c8e3-4582-a88c-13480563580a"
        },
        "item": {
          "id": "42f3cd9d-0cf7-42fd-bb0e-fb6d373dcf61",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ca375e31-1819-41ba-8129-b04f25fcd294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67791250-1340-44ec-bc27-98d55d4ee37b",
        "cursor": {
          "ref": "720f8089-7644-4c84-b9ca-c914c6b31f01",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "16c02f60-4da7-4a85-857c-9f445339c9b0"
        },
        "item": {
          "id": "67791250-1340-44ec-bc27-98d55d4ee37b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "71a2f44c-2264-4fe0-bae0-e21a21113ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d5efa-3c94-4dee-ac4f-b283034ba360",
        "cursor": {
          "ref": "f10e5406-d2d0-4403-9503-427b15b78811",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8daf4cdd-8700-4b60-8552-136f8a9e2578"
        },
        "item": {
          "id": "366d5efa-3c94-4dee-ac4f-b283034ba360",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4440276d-1418-465c-8a1e-47f7f45fcbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe0a5b1-f09b-4cd6-b1f2-23712074ada4",
        "cursor": {
          "ref": "cc1583f4-321e-48de-85d1-e61eb81a773f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a6bd8877-4a3e-4e8b-b63e-0fa844a970f7"
        },
        "item": {
          "id": "1fe0a5b1-f09b-4cd6-b1f2-23712074ada4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3922509c-7425-4d2f-bea0-6a16a07bd31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6293ab-7842-4bcb-b35a-cde8bcf9facc",
        "cursor": {
          "ref": "7351235d-88f1-4820-a404-0d0a432f59e4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "83a5e89d-6b3c-431d-abe7-8992723af046"
        },
        "item": {
          "id": "4f6293ab-7842-4bcb-b35a-cde8bcf9facc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c83041aa-fde5-4862-9413-107ef0b0321d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617dc083-96f2-4f80-ab7a-9fe61204aad6",
        "cursor": {
          "ref": "bc9224d0-b1c2-44b7-b3ad-5f365a1881cd",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "44f074b7-8cb7-4562-a703-aef129e946f6"
        },
        "item": {
          "id": "617dc083-96f2-4f80-ab7a-9fe61204aad6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "389ae8ff-2f68-4453-8d54-25c4a6c77a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb737de-0667-415e-84b0-5aa541d0b26a",
        "cursor": {
          "ref": "cd684ed3-ab81-46c3-8498-6d0cc12dc693",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "705135a0-4895-4d1c-9a40-d2a4a5fa693b"
        },
        "item": {
          "id": "2bb737de-0667-415e-84b0-5aa541d0b26a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d8811783-16cf-4182-afcb-3496ce7bcad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f549c3d-eb03-413b-a89b-f01f8189aacc",
        "cursor": {
          "ref": "443c9fab-8496-4aab-aa03-940088666665",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95c5a00f-7d31-4ced-98a6-b6573b967470"
        },
        "item": {
          "id": "7f549c3d-eb03-413b-a89b-f01f8189aacc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e9ecf3e3-f98c-4e2f-bbe7-3991265f3e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682ca73c-da8b-4026-8fa6-ac02116529d8",
        "cursor": {
          "ref": "f5a6d312-64c5-456c-846d-5f7caca46777",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "151eefb6-f745-4e58-9bab-0d1adab183f1"
        },
        "item": {
          "id": "682ca73c-da8b-4026-8fa6-ac02116529d8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c41e5bd2-b0f7-4686-a88d-5ee261113ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd663cc4-1cd3-45d8-a626-b4132cb44c27",
        "cursor": {
          "ref": "6c6b3135-e145-46a8-8c3b-69e01a477f8e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c2e8d01d-3b0c-4bf2-b7e0-5669dab8c08e"
        },
        "item": {
          "id": "fd663cc4-1cd3-45d8-a626-b4132cb44c27",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a360093e-fec5-41b7-8d2f-05a4c82398f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c648acfa-747f-406f-ab81-28a07e73bd14",
        "cursor": {
          "ref": "83a85ce9-02bd-4825-8e71-4441fb70e471",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6f24f1c6-f93f-436e-a8c7-36f66306addc"
        },
        "item": {
          "id": "c648acfa-747f-406f-ab81-28a07e73bd14",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "09922efc-1371-456f-a57e-e10aa22a9dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02eb593-9502-41e7-a358-afd4e0b01b21",
        "cursor": {
          "ref": "392d0fad-aa97-4a96-959b-2c69e9a4a642",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9197e89b-0141-4b3a-a61f-dadb738edeb6"
        },
        "item": {
          "id": "a02eb593-9502-41e7-a358-afd4e0b01b21",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "311ca147-70c7-440c-b2fc-b0b2bea48cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b4f008-201a-44c5-85ee-94825cdee396",
        "cursor": {
          "ref": "6d941636-23ab-4a5b-8bd9-41e28440565e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4895984c-ec64-47e5-826e-647be489fe2c"
        },
        "item": {
          "id": "19b4f008-201a-44c5-85ee-94825cdee396",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "55bab539-44f8-4af9-9066-9c0f41d50b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ec9344-05d7-487b-9242-e012c4f09bc6",
        "cursor": {
          "ref": "7596e179-cb19-4801-add1-a1c8c854c94e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "81c63609-ced2-4e0d-92fa-aa0e1628a67f"
        },
        "item": {
          "id": "83ec9344-05d7-487b-9242-e012c4f09bc6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "807113c8-5822-401f-8cd2-cad97841d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f24684-3795-448d-99a8-19b15188599b",
        "cursor": {
          "ref": "bba8d1c8-c5d5-4546-93bd-e7418a8f5797",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "de0bd2bf-761f-4435-ad2a-6819037b6d94"
        },
        "item": {
          "id": "e5f24684-3795-448d-99a8-19b15188599b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d3befc60-c133-435a-9121-9eea283ada4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8f7b20-90bb-45e3-ab75-8167149b2eda",
        "cursor": {
          "ref": "52e85223-affa-4111-bf8b-7952894b404c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "41c9a6b4-19ff-48a5-be5d-11c3c26d1d85"
        },
        "item": {
          "id": "4b8f7b20-90bb-45e3-ab75-8167149b2eda",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "856420c7-8b97-490a-9113-07580be7fce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f419b2ee-070f-4599-9e89-584acb7f5417",
        "cursor": {
          "ref": "00b64bce-9439-40f6-bb42-4d8aee249e19",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1f517562-28d9-4514-b083-222c3ff02ce3"
        },
        "item": {
          "id": "f419b2ee-070f-4599-9e89-584acb7f5417",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "54459966-4faf-484d-b1ed-fbea02db1c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218601be-b6e3-4598-adde-49c1b95d0059",
        "cursor": {
          "ref": "eb566826-85b2-4315-b276-7fffd6a6de67",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5ad672c5-2959-4492-863c-f02efbb07f07"
        },
        "item": {
          "id": "218601be-b6e3-4598-adde-49c1b95d0059",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fb49644f-015b-4c04-b000-977f677b6f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795df2c9-0376-4c7f-83fc-17617e5f3c3a",
        "cursor": {
          "ref": "d5302304-1148-4ddd-8af9-4a44ef836453",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "31152ca9-2071-42e9-a711-c1c946f1c3e1"
        },
        "item": {
          "id": "795df2c9-0376-4c7f-83fc-17617e5f3c3a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4f4eac9f-0c5e-4d26-b243-b9e2d70dd2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd34fa44-80ad-432d-937b-2eddad1ae391",
        "cursor": {
          "ref": "fc59b93f-7ca0-4a3d-8831-129eb95ad6bb",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6c613441-a802-4f8b-a9c0-2b8e03982d32"
        },
        "item": {
          "id": "bd34fa44-80ad-432d-937b-2eddad1ae391",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f877c355-290b-43c7-8932-10572bd62715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc64b7c7-de00-4ea7-a25b-a38d9919d53e",
        "cursor": {
          "ref": "042b1f61-b3ad-4f1b-9ee3-ca1e85b09f24",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "714e1b69-f45a-40f5-89e1-f729ed8e885d"
        },
        "item": {
          "id": "cc64b7c7-de00-4ea7-a25b-a38d9919d53e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bbbdf50e-f415-4005-bf35-d663e98e1a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413620f1-1a98-41fe-96c0-68d6387e4f05",
        "cursor": {
          "ref": "8885c101-b211-4178-8d63-d1fd68e1ea0d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f7e40f67-cae5-4d75-becb-a43e8a7cb272"
        },
        "item": {
          "id": "413620f1-1a98-41fe-96c0-68d6387e4f05",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eaaceaf6-cc28-45ab-b377-e9527842c386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b7df0d-afde-4946-829b-3d6ab6bf22f7",
        "cursor": {
          "ref": "e9d58de3-8273-49e2-a1bd-7647c1f28736",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e86693c1-9870-46c9-8672-981a8a1bfe46"
        },
        "item": {
          "id": "e1b7df0d-afde-4946-829b-3d6ab6bf22f7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1b79ae02-5dfe-4808-a718-a35048262e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164e2253-4e38-4de9-a2cf-9071d18f2d8c",
        "cursor": {
          "ref": "b5b95539-8457-4a0a-945f-f837d198c733",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ae78558-e6cc-4c1a-82cf-249797ee9ba1"
        },
        "item": {
          "id": "164e2253-4e38-4de9-a2cf-9071d18f2d8c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "34763f01-ed49-480b-920a-2290876cd0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b8dbb6-0893-4cb6-a6dc-4a190c26180c",
        "cursor": {
          "ref": "c363beeb-b54a-4ffa-8d30-55c13063c7df",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a7c4c8d2-3cb2-42d4-bf5c-16fe1ffc17bc"
        },
        "item": {
          "id": "69b8dbb6-0893-4cb6-a6dc-4a190c26180c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eab1f2be-f5c5-4519-b848-9c51e1393c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d86e99-489c-4640-809b-9c12335b0027",
        "cursor": {
          "ref": "f92b0f5a-e332-4cdc-b98d-59b106df8f43",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b820d266-e5ba-44e0-acd1-984e0bbcbd17"
        },
        "item": {
          "id": "f5d86e99-489c-4640-809b-9c12335b0027",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "292cdefe-bdc2-44c2-bd40-08968319c405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5899d8ce-1185-4053-a252-d70ae06119eb",
        "cursor": {
          "ref": "a6b903d3-0194-4800-be27-33a1c7abc75d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "59a35adf-b3c9-465e-99de-fa28d1b42a65"
        },
        "item": {
          "id": "5899d8ce-1185-4053-a252-d70ae06119eb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "418e9abc-38ef-4b96-934a-bb08f947766a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d51693d-2ac0-4c09-9b89-82bbf810d9a7",
        "cursor": {
          "ref": "10d1ed17-aeaf-4746-a4e1-6ac06a64cedb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9d1f3444-2ecb-4cf3-91a4-ae080d3c3199"
        },
        "item": {
          "id": "2d51693d-2ac0-4c09-9b89-82bbf810d9a7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f7398f63-b8fa-46d0-a0a8-5f163547271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f716a95a-393e-459f-b8ef-bd6b5d0676f9",
        "cursor": {
          "ref": "2c89e5e6-1ab5-4c99-bf59-28a304d3afd3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dea0faa1-2720-4c7b-bd4e-10cacff3db7e"
        },
        "item": {
          "id": "f716a95a-393e-459f-b8ef-bd6b5d0676f9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4cc5341f-a97f-462a-a5be-ff4dde2a4edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a946df-faa9-46c6-a0ff-4451e2d26b44",
        "cursor": {
          "ref": "5aa8dbfe-f238-4b8a-9c43-03a3fa4a7740",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bdc822b0-a1f7-45a9-bc96-bf0488584d8a"
        },
        "item": {
          "id": "88a946df-faa9-46c6-a0ff-4451e2d26b44",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b461dbf1-3736-46f6-8264-eb7f7d86d023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea829dc-341a-4cdd-b172-490b2f712476",
        "cursor": {
          "ref": "857befde-8cf4-4a31-8294-c8fecc4eee5e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1187b1ce-167c-4a14-839b-fb0343e85ad8"
        },
        "item": {
          "id": "5ea829dc-341a-4cdd-b172-490b2f712476",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7b6128de-330d-4bc2-9e1a-ebfca56d9ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3afaba-ef76-4c99-a790-79e7d277f018",
        "cursor": {
          "ref": "a9df1003-4baf-422f-b4d0-c2cde0899533",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8cf43ad2-6a19-4fa8-9977-db9c0ca539f2"
        },
        "item": {
          "id": "ca3afaba-ef76-4c99-a790-79e7d277f018",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6b9f709-1d06-42ee-87df-6a431c54e65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1a0bbe-6062-4169-8b75-b932d6370b05",
        "cursor": {
          "ref": "e635924f-0d53-46f0-a7c8-07b8c47c124b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bf5c6040-eff5-4369-99b7-d96c67345c83"
        },
        "item": {
          "id": "ae1a0bbe-6062-4169-8b75-b932d6370b05",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0738982-30f8-4e98-9903-ede52a0e0bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a5ae4f-e834-4be3-a396-dda0e63fca2d",
        "cursor": {
          "ref": "dcd9db3b-682b-40c7-b4f7-5b36289415b4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f1d69289-1aec-4e5b-80dd-ac194653f68a"
        },
        "item": {
          "id": "b5a5ae4f-e834-4be3-a396-dda0e63fca2d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "90eadf29-23a8-4cb6-b79c-c9cf4a9398be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8401dbb8-f44c-4e8e-a7a8-1f53927eccfd",
        "cursor": {
          "ref": "e4020344-61ef-49cc-9373-d78a8a8e9abd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4501554a-321a-47d9-83d1-c76975db839e"
        },
        "item": {
          "id": "8401dbb8-f44c-4e8e-a7a8-1f53927eccfd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fcce0cb4-bdac-4172-bcb3-b24743652935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d4ddc8-2ef4-4bc6-b103-a47141cb17cd",
        "cursor": {
          "ref": "31c68c9b-ffbc-4bdf-bc58-4698f3f35ecd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "89d8e34b-f357-4cbe-ab4e-6a9e8c76a73c"
        },
        "item": {
          "id": "06d4ddc8-2ef4-4bc6-b103-a47141cb17cd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "aa5472c0-cecf-4b25-a6c6-5f70774f614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31fe2e2-81f7-4650-b5a2-21c3ed0ff509",
        "cursor": {
          "ref": "98989d7d-ee86-4b55-a198-a7a1adb169b7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "30e1656b-bc4e-41fd-a725-e4e93d2f27a6"
        },
        "item": {
          "id": "d31fe2e2-81f7-4650-b5a2-21c3ed0ff509",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1dc3eb67-7719-41ac-8ecd-e7958dc05f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0c5720-383c-4ee1-9b7d-31b213f739d2",
        "cursor": {
          "ref": "25d5a3f5-3e20-423f-9750-f01cae584db5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "be6abe3a-8b91-4d22-b670-a05c44d93fe9"
        },
        "item": {
          "id": "bf0c5720-383c-4ee1-9b7d-31b213f739d2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e258d318-3e01-4ce8-abfb-b8174840d131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98684c5a-cafa-48fc-a130-66766468dc16",
        "cursor": {
          "ref": "8c030f88-b92a-4586-ac3c-7f703449ce7a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7507c5a2-8997-4f74-9dd0-fefdd3ed5dec"
        },
        "item": {
          "id": "98684c5a-cafa-48fc-a130-66766468dc16",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7cfebc76-3d6a-4f82-8a5e-7555895b6efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546d162-4ab0-49df-9ba6-fee1f8bb2308",
        "cursor": {
          "ref": "77d5da3b-f737-46bf-9f9b-ab80b8bb967b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "31cee400-1655-445e-b31a-67af4955f730"
        },
        "item": {
          "id": "c546d162-4ab0-49df-9ba6-fee1f8bb2308",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e18444fa-a794-44d2-ba14-6646fd211c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a54649c-20e8-4c1d-8423-c8d2c5b76a8c",
        "cursor": {
          "ref": "5bbeee79-4190-4c0a-9169-eaa7dae14498",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ff186639-7c8a-457b-9191-5936d010dbed"
        },
        "item": {
          "id": "4a54649c-20e8-4c1d-8423-c8d2c5b76a8c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eca5108d-341e-422d-8ba0-ed1bfeb4326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d3a22c-69b9-4909-a518-f00817a3f629",
        "cursor": {
          "ref": "30da71cc-5d35-496f-83ca-719527a92c7a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb3c80dc-b1a4-4f4c-8ed1-c8eb6f6a0e69"
        },
        "item": {
          "id": "a5d3a22c-69b9-4909-a518-f00817a3f629",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e685ceb7-4376-4dc1-abd4-867a85558dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38a0fd5-db43-4323-bd00-1ea7ddf35aba",
        "cursor": {
          "ref": "a212c43e-06b0-4c19-9428-fd5815b23485",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e66a7e72-fbd7-45ce-9aca-b547bce169c8"
        },
        "item": {
          "id": "e38a0fd5-db43-4323-bd00-1ea7ddf35aba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f60c3f05-2b9a-457d-84dc-a2e1ea8af62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fd09c-92bc-4782-b022-173047149c84",
        "cursor": {
          "ref": "a32ab40a-4ced-4108-ae2b-f29369b57edb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c5c2acad-131c-4975-885e-1ce243b84436"
        },
        "item": {
          "id": "670fd09c-92bc-4782-b022-173047149c84",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e0522ccf-0214-4f90-a30a-1c8c7ddbc2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24936cd-7984-44c3-b3f5-79d9cc1c3ddf",
        "cursor": {
          "ref": "7dc239e8-6a9e-4e89-bd17-40f53f6e0e0a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "396f03a7-a782-4fa5-bc7f-4e4351c5840d"
        },
        "item": {
          "id": "f24936cd-7984-44c3-b3f5-79d9cc1c3ddf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b8fe46aa-3d70-4915-8153-faca29d8e66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc010af-60ab-4815-8e82-f07b8de90c2b",
        "cursor": {
          "ref": "510809c5-7caa-4cef-b122-0d844aede472",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b7d255a9-6f98-4fbe-9e3f-081bd9f7cb15"
        },
        "item": {
          "id": "7dc010af-60ab-4815-8e82-f07b8de90c2b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3fd84d3c-4d43-46d8-99a7-2cff8411e998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b39744a-09a2-44ec-825e-0228513278a8",
        "cursor": {
          "ref": "79f04682-b895-45bf-a289-055932419f8d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b450d061-01b5-470b-a512-9e5d4dde89e1"
        },
        "item": {
          "id": "9b39744a-09a2-44ec-825e-0228513278a8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d2bbc71c-1acb-487c-9bd5-30b153eab95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633d195b-9e95-46cf-9617-c4b8c96b461f",
        "cursor": {
          "ref": "b748c3a2-6778-4581-b5fa-b2105b289d4d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d4fc65ec-19c1-42f4-bff3-a7cbab6b6069"
        },
        "item": {
          "id": "633d195b-9e95-46cf-9617-c4b8c96b461f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "75d72a85-fad1-4df9-bbcb-3cff3052cbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bed378f-45d4-44e8-b6fe-117b716b33e8",
        "cursor": {
          "ref": "c72a2ff6-66f6-455f-93a6-12cb3934df1c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3b8feec-c8ab-43ea-93c7-391736c2737f"
        },
        "item": {
          "id": "5bed378f-45d4-44e8-b6fe-117b716b33e8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "166b6376-43b0-4a63-9e67-9f523f368f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f794751-091d-4b60-a3fd-9aa4534e8511",
        "cursor": {
          "ref": "21a41e5a-483e-41db-bbf7-016bdaf3e924",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3a215540-e852-4d4b-b4ef-ccbb0c1ea576"
        },
        "item": {
          "id": "4f794751-091d-4b60-a3fd-9aa4534e8511",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7bf5aeda-27d6-43d4-a518-44157ae70fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784a6ae-7595-4623-a0b3-141b50c65bce",
        "cursor": {
          "ref": "cbe73e2f-4d0c-43a7-86f3-37e0338edb2c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58c1fbaa-2751-4655-9c36-eb3815affda0"
        },
        "item": {
          "id": "d784a6ae-7595-4623-a0b3-141b50c65bce",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4f1a4b63-ac84-4a4e-984e-fd7d262e571d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b923b655-2b40-4d9e-88c5-7309346de1d1",
        "cursor": {
          "ref": "72c6644a-12a4-4ea6-8440-e5ce8850b2a7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "76443a07-77a6-489a-a29c-029bdc41f6a9"
        },
        "item": {
          "id": "b923b655-2b40-4d9e-88c5-7309346de1d1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "00774eb8-380b-4131-8da9-07d3c3af875b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95433329-0c32-45b2-83ec-fd9419553c57",
        "cursor": {
          "ref": "3e3ff4b0-0d9a-453f-8eda-56ce51d61c77",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2c50fa20-ac22-4494-a082-3121e0411a1f"
        },
        "item": {
          "id": "95433329-0c32-45b2-83ec-fd9419553c57",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ea78234d-69d4-47e7-b7cf-2768dc0f5f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2989ae-1ae1-4272-87ca-080881f5deed",
        "cursor": {
          "ref": "8d67e059-a237-4058-9c58-97438d533497",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e8598698-eb13-4916-9b43-800295398257"
        },
        "item": {
          "id": "3e2989ae-1ae1-4272-87ca-080881f5deed",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6f08138e-db4c-4fa2-a3b3-c5f1df8a5173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d93784-be6c-4896-9199-d6cfa399c223",
        "cursor": {
          "ref": "fe3e0ca2-1fc7-4cc3-ac85-1e55deff08fa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eb9916c2-9d18-4ee8-b4dd-4bf46eabccbf"
        },
        "item": {
          "id": "10d93784-be6c-4896-9199-d6cfa399c223",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "65d0067e-ed42-4bd4-9949-c9753503f0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac78952-83e3-449e-9f04-d81f417ea317",
        "cursor": {
          "ref": "06d765b3-9d89-4daf-b939-078154af4ecf",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "97c4d322-ec8c-4005-9edb-e7f6d8b6f280"
        },
        "item": {
          "id": "8ac78952-83e3-449e-9f04-d81f417ea317",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3eb5327c-acb4-4581-a0cf-8bb1342fa9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505f5f51-de02-4ab3-8500-62ce40044b38",
        "cursor": {
          "ref": "ba4804f5-47f7-4781-b10b-d33a52d1c066",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b898dfa2-b8c0-4e1d-88fa-3f37b3302b61"
        },
        "item": {
          "id": "505f5f51-de02-4ab3-8500-62ce40044b38",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "43f3539d-d078-415f-83f3-b04786a835ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764b518f-8629-43d0-a6c0-9842d67561b6",
        "cursor": {
          "ref": "3e88a509-4f70-43ec-af15-cda21cac765b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "006f6e4f-eae8-4802-adda-b2a1923b4f36"
        },
        "item": {
          "id": "764b518f-8629-43d0-a6c0-9842d67561b6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b404a238-47b1-495e-a091-a24aef6dbd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeb3b28-9257-4a1c-af4f-0d3e4e3b9235",
        "cursor": {
          "ref": "d911af0e-f2c9-42bd-90cc-48b3995c93e9",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c2afafbc-cbc3-4e9c-a1a8-753100ebb385"
        },
        "item": {
          "id": "7eeb3b28-9257-4a1c-af4f-0d3e4e3b9235",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f32e6460-65f1-4a93-a21e-f08a3a61b1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcbd98a-2c05-4e4d-a9a7-638fcddfb8b3",
        "cursor": {
          "ref": "a5848644-be69-4982-bfab-d40b812ecfea",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4685ba0c-feda-4cfd-a96a-44218afb91b6"
        },
        "item": {
          "id": "6fcbd98a-2c05-4e4d-a9a7-638fcddfb8b3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "76d80fa2-7815-44c7-be5b-c8d7aa76c9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4a82e8-cf55-4bb6-986b-78ae2922da0f",
        "cursor": {
          "ref": "98e31bb6-47b0-40f2-8f75-3ca78f6eb12f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ba9e6261-81c2-4422-8779-30288305642b"
        },
        "item": {
          "id": "ef4a82e8-cf55-4bb6-986b-78ae2922da0f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "171ea303-fc79-4078-8eed-fda59b96d92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2c799c-b220-47ea-9200-61df52c4cb7c",
        "cursor": {
          "ref": "d79324aa-c9cc-4574-9b10-f91dd3ff0f66",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "00e2ac48-7936-4ad5-9a05-6e6434dbb5f1"
        },
        "item": {
          "id": "7b2c799c-b220-47ea-9200-61df52c4cb7c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f8ae04a-8eb7-489f-ab27-2a33ba69b73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d3505d-64c8-488a-857b-7244588e0a89",
        "cursor": {
          "ref": "9f3a1a70-e938-4ff7-9731-05b1d5c81b97",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d30b5cd5-f356-41a2-a442-1ce2d988b878"
        },
        "item": {
          "id": "24d3505d-64c8-488a-857b-7244588e0a89",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7595a7f0-bdc9-4f30-872a-f21a53690386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99bcf4a-e380-4032-bfa5-773a2b72b39f",
        "cursor": {
          "ref": "0ed5f775-73fa-4ced-b15a-45fb302a4390",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "02db927a-b2b9-4835-8aab-5f902b64f894"
        },
        "item": {
          "id": "f99bcf4a-e380-4032-bfa5-773a2b72b39f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "16deb62e-a337-4b7f-9003-30efed0d5b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b89a3e9-051c-43d3-a1a6-9477b851d173",
        "cursor": {
          "ref": "a4326974-a5f2-49b1-bb40-6d410f315306",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a9801e4f-3997-43d9-8c98-64e851c7b83c"
        },
        "item": {
          "id": "7b89a3e9-051c-43d3-a1a6-9477b851d173",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cee54560-2fd4-462b-983d-36635e8d798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d54f701-0228-42fe-8a7a-6caf63530df0",
        "cursor": {
          "ref": "7c3e35e4-2467-417a-b520-fb3b1aba7396",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ff587763-1376-422c-a3a5-32c0575b94c1"
        },
        "item": {
          "id": "5d54f701-0228-42fe-8a7a-6caf63530df0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "42c4ae3f-0006-438d-9783-4216f78f0d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720f66af-23d8-47cd-a107-fb54cf33c983",
        "cursor": {
          "ref": "b7573e07-0dbf-43e1-8873-b03b6b74978a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7c8eea11-45e5-4949-be58-f872d673076d"
        },
        "item": {
          "id": "720f66af-23d8-47cd-a107-fb54cf33c983",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c0c5e770-61c6-4b77-b7b1-254a3fa1dbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88836960-3a4b-4a4c-97e3-909573442fe1",
        "cursor": {
          "ref": "6dd86f44-d17b-4264-bcb0-387bdfa132ae",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5c8cd374-5868-4903-a8ce-c4ad702699c8"
        },
        "item": {
          "id": "88836960-3a4b-4a4c-97e3-909573442fe1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9bb51637-c802-497b-ae6c-8b3fbff239a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a2a4ae-32a6-4c93-81a9-5b03a3d9ed8c",
        "cursor": {
          "ref": "472f0884-9938-4907-be98-0387e0dfdb12",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d3130a51-5173-4b38-8c71-9f0c49777856"
        },
        "item": {
          "id": "67a2a4ae-32a6-4c93-81a9-5b03a3d9ed8c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "62f965e9-1270-4041-81da-0065d61daeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8cefc4-5852-498d-a1d8-1a66189aabdf",
        "cursor": {
          "ref": "f75ab77a-658b-4e55-9453-2553badbcaee",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1b3f16c0-60de-476a-b343-6f24ea785822"
        },
        "item": {
          "id": "2f8cefc4-5852-498d-a1d8-1a66189aabdf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7fd12246-e68f-49c9-ac71-9abe33a8a712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71a3b6-5644-4565-b4bf-897490a64b34",
        "cursor": {
          "ref": "a2a28edd-8d91-4587-b008-e94a7a531989",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dbff52a7-97ad-44e4-b8be-05d620e8cfe4"
        },
        "item": {
          "id": "ba71a3b6-5644-4565-b4bf-897490a64b34",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "de3bfbc9-9655-46e5-86f9-c40ecc90bcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96f4d97-1246-4830-a9d5-7e29751fba8a",
        "cursor": {
          "ref": "80ec6e4b-e7ed-4d11-b997-28a8c02f26c5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f76d5749-4087-48ae-b855-300488fda36e"
        },
        "item": {
          "id": "e96f4d97-1246-4830-a9d5-7e29751fba8a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9a8a8b50-10ad-42b7-af60-12214dd9c3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784ec49c-9ca8-42fe-9ae8-1d83b60898bc",
        "cursor": {
          "ref": "2bcba2f8-9d64-4e42-b9fa-21981d8cf901",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7c05903e-fcd4-44be-a23e-01a82633f26d"
        },
        "item": {
          "id": "784ec49c-9ca8-42fe-9ae8-1d83b60898bc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0089cd9b-98fd-46e0-abfd-9f659377a7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e4571d-3da8-4f72-9bf1-a26968057e21",
        "cursor": {
          "ref": "930db887-9c03-4794-a558-31c8141b57f4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "525099fe-c50a-4fc2-aadf-57fabfb92139"
        },
        "item": {
          "id": "d3e4571d-3da8-4f72-9bf1-a26968057e21",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "20e6b035-c728-43bf-9c3a-51d9488076ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8962e3d1-c61a-47e6-ae44-bf1a22b261aa",
        "cursor": {
          "ref": "5b898233-9ed9-47c1-82fc-6feaeca5b8af",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2f21fb40-21c8-4d18-a7c3-79cc1c17523c"
        },
        "item": {
          "id": "8962e3d1-c61a-47e6-ae44-bf1a22b261aa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "889c2e2b-bbc4-49b0-ab53-523efc4aeadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5f0c63-0f35-4034-8f7f-cf0e1895b0ee",
        "cursor": {
          "ref": "a262c6fc-d669-4e3a-ad21-69d328943839",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ad084c46-648d-4d5f-9888-f3ff378d2df3"
        },
        "item": {
          "id": "1f5f0c63-0f35-4034-8f7f-cf0e1895b0ee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b9e2ef5-f559-4512-b098-d12d79201d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ca9ed0-9aa5-4b1b-8b1d-ce34e808cb95",
        "cursor": {
          "ref": "54a285fa-1ef3-4906-b0a3-a53e6ebc9ea8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b76dfdf9-259e-4544-ac03-9ffdd2bb88b3"
        },
        "item": {
          "id": "75ca9ed0-9aa5-4b1b-8b1d-ce34e808cb95",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b82c859b-e8b5-4fc2-bfd9-ea3fce6557df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efdd4b3-6c8b-4a74-a716-bc84d41e84fd",
        "cursor": {
          "ref": "737b14d5-5df2-4358-abee-3dd14cce91b6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bcf09cb7-23e6-436d-b99a-f4c6fac50b8e"
        },
        "item": {
          "id": "8efdd4b3-6c8b-4a74-a716-bc84d41e84fd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e002e4d0-eb74-4edf-aaed-cd3a16b14a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd07e1-c518-45ad-a56c-dc9d23f3a863",
        "cursor": {
          "ref": "2118fb21-3f39-41ad-81b0-3cf59420d25b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "029c7515-223f-47d5-806f-bd3ed84fe829"
        },
        "item": {
          "id": "c2bd07e1-c518-45ad-a56c-dc9d23f3a863",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2396015d-3a82-479e-a98d-ea92d0eac5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8072cc6-747f-4484-917b-1da8a3963f26",
        "cursor": {
          "ref": "48f51f97-1b18-4898-aecb-b28ad29cc8de",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c8f8637a-3e6d-42c1-b1e7-435149b8c05a"
        },
        "item": {
          "id": "b8072cc6-747f-4484-917b-1da8a3963f26",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0b7387a9-12f2-4de6-9ac3-38d46c22cd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb4251d-e915-46aa-a13e-65e46cbc3f8d",
        "cursor": {
          "ref": "66bcce66-21db-4c04-b10c-364517742445",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "985c7619-3e44-431d-bb27-290b02a666e0"
        },
        "item": {
          "id": "5bb4251d-e915-46aa-a13e-65e46cbc3f8d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36c664c6-0897-4cd9-9605-6bc08603563f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f270edd2-c4ff-4421-b747-e0b6ea50715a",
        "cursor": {
          "ref": "e49e71b3-5133-4b26-8146-4be9187f4ef3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c8d2bbc2-219b-4eb7-a309-2490c505ccd1"
        },
        "item": {
          "id": "f270edd2-c4ff-4421-b747-e0b6ea50715a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "66e4031d-fb26-4688-b7bd-94e13d912a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf21f419-f9df-467f-9f3b-c45606e33a75",
        "cursor": {
          "ref": "b029302b-08ed-4a89-a5f1-6bd65b2c2a4a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a7e43ca7-73a1-49dc-b3ba-f733823a8428"
        },
        "item": {
          "id": "bf21f419-f9df-467f-9f3b-c45606e33a75",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7dd311dd-22be-4214-bfa2-35470a22f3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306de540-565d-47b4-a4e1-fe12b53b99db",
        "cursor": {
          "ref": "1a61e687-48aa-4929-998c-0a92616bf8ef",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "56f5eb65-5939-4952-962b-de3a8cec0b3f"
        },
        "item": {
          "id": "306de540-565d-47b4-a4e1-fe12b53b99db",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e65e30e-1aa1-4b0f-9771-7492bbe07369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ed8832-7639-446c-9c54-71c044eca3f5",
        "cursor": {
          "ref": "1883545d-b26b-44ce-8c70-0c19693858e4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d677595-d9d1-4391-bedb-9ee9f8942443"
        },
        "item": {
          "id": "21ed8832-7639-446c-9c54-71c044eca3f5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "521d1725-4916-4755-87a8-705b35ce3ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f32097-9de3-43c1-acf9-0af958d8fd30",
        "cursor": {
          "ref": "8a63cd7c-0260-4939-aa40-3a449d052949",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "035eb108-c167-46f8-afab-b433b12e46e5"
        },
        "item": {
          "id": "88f32097-9de3-43c1-acf9-0af958d8fd30",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "91ae9c2d-6344-4e55-a007-4b40d929f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb19b36-9df9-45d2-b3c7-e83f325faa60",
        "cursor": {
          "ref": "84984ced-336e-4182-85e7-5e47d6758614",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b21a88b9-8273-4273-9c8b-a9b60b626c02"
        },
        "item": {
          "id": "abb19b36-9df9-45d2-b3c7-e83f325faa60",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e0fd5000-f0a3-4999-8970-8cfd20cf6cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a208c-e135-477f-80e4-c48a0a495904",
        "cursor": {
          "ref": "759f4d47-0204-4e96-b954-e184ce23686a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "14c8af82-9cf0-4700-9b27-d9c47a41624b"
        },
        "item": {
          "id": "c64a208c-e135-477f-80e4-c48a0a495904",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f61c1c45-a6fb-40c4-8168-a1d50ccca2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d82d7a5-d36e-434a-9d95-3a778b03718b",
        "cursor": {
          "ref": "d9c660d0-1c8e-4d3f-ad33-045b99602b78",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7b52ecf1-08f0-4845-a59e-71ffc186c1c3"
        },
        "item": {
          "id": "5d82d7a5-d36e-434a-9d95-3a778b03718b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "780d8e02-b030-4149-b410-8913aa3962e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb628f5-f8cb-4744-b1d5-5a90da387d73",
        "cursor": {
          "ref": "23b5ab98-b816-4624-9ae5-de030c654705",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d09729c5-0e23-4c63-a8ba-8ca626f725e3"
        },
        "item": {
          "id": "8bb628f5-f8cb-4744-b1d5-5a90da387d73",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b1179082-274b-4eaf-8b09-eb32dc8618e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "011029e7-97b9-434d-be6c-dbeb534aec29",
        "cursor": {
          "ref": "17746fdb-24ae-4541-b386-2bc82ca8140c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8b7ed8a6-2448-4a54-bcbb-eab815755834"
        },
        "item": {
          "id": "011029e7-97b9-434d-be6c-dbeb534aec29",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8b02929c-e6e7-4257-99a6-291107ac4a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "1e8d07f3-8bd0-4596-9651-6a31078eb566",
        "cursor": {
          "ref": "852c5958-1aa3-4ee2-8f18-090445e1b5ed",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47ebb2b0-a655-4084-97b6-a27925fdf726"
        },
        "item": {
          "id": "1e8d07f3-8bd0-4596-9651-6a31078eb566",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02422dd8-996d-427e-bcb2-ff6d92970f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "be47155d-0ef0-4d42-8d45-d1ca5cc963e6",
        "cursor": {
          "ref": "c336f429-41d7-4dcd-8d8c-f341e44b6405",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "523d5279-f8a1-4ee5-847a-1c61e9c1387e"
        },
        "item": {
          "id": "be47155d-0ef0-4d42-8d45-d1ca5cc963e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3765a05d-1db9-4c9c-a254-dcdbf8a6c9de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be47155d-0ef0-4d42-8d45-d1ca5cc963e6",
        "cursor": {
          "ref": "c336f429-41d7-4dcd-8d8c-f341e44b6405",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "523d5279-f8a1-4ee5-847a-1c61e9c1387e"
        },
        "item": {
          "id": "be47155d-0ef0-4d42-8d45-d1ca5cc963e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3765a05d-1db9-4c9c-a254-dcdbf8a6c9de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd446d9-c9bb-4b88-8229-dae4f6686500",
        "cursor": {
          "ref": "f8cd8cb4-ddd7-4eca-be10-a775c1db03b2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6c176d69-a528-44d3-984a-58ce92f55c5b"
        },
        "item": {
          "id": "bbd446d9-c9bb-4b88-8229-dae4f6686500",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "08ddbf87-5c50-44df-981a-2a3432156402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9133f839-c132-4d6d-8656-49cb54ebbdd6",
        "cursor": {
          "ref": "a2cb8ec3-d272-4013-bd18-256503175063",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "12e98c43-d8b2-4ebc-8b70-6c7842de479c"
        },
        "item": {
          "id": "9133f839-c132-4d6d-8656-49cb54ebbdd6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8b700994-937e-4423-a4b9-15f595b702fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}